{
  "data": [
    {
      "title": "系统相关的基本概念",
      "paragraphs": [
        {
          "context": "操作系统（Operating System，OS）：是管理计算机硬件与软件资源的系统软件，同时也是计算机系统的内核与基石。操作系统需要处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。操作系统也提供一个让用户与系统交互的操作界面。",
          "qas": [
            {
              "id": "5-404-1",
              "question": "操作系统的主要功能是什么？",
              "answers": [
                {
                  "text": "管理计算机硬件与软件资源，处理内存管理与配置、资源调度、I/O设备控制、网络操作和文件系统管理",
                  "answer_start": 32
                }
              ]
            }
          ]
        },
        {
          "context": "操作系统（Operating System，OS）：是管理计算机硬件与软件资源的系统软件，同时也是计算机系统的内核与基石。操作系统需要处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。",
          "qas": [
            {
              "id": "5-404-2",
              "question": "操作系统的英文缩写是什么？",
              "answers": [
                {
                  "text": "OS",
                  "answer_start": 23
                }
              ]
            },
            {
              "id": "5-404-3",
              "question": "操作系统的核心属性是什么？",
              "answers": [
                {
                  "text": "管理计算机硬件与软件资源的系统软件，计算机系统的内核与基石",
                  "answer_start": 28
                }
              ]
            },
            {
              "id": "5-404-4",
              "question": "操作系统需处理的基本事务包含哪些？",
              "answers": [
                {
                  "text": "管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统",
                  "answer_start": 72
                }
              ]
            }
          ]
        },
        {
          "context": "shell：它是一个程序，可从键盘获取命令并将其提供给操作系统以执行。在过去，它是类似 Unix 的系统上唯一可用的用户界面。",
          "qas": [
            {
              "id": "5-404-5",
              "question": "Shell的主要作用是什么？",
              "answers": [
                {
                  "text": "从键盘获取命令并将其提供给操作系统以执行",
                  "answer_start": 11
                }
              ]
            }
          ]
        },
        {
          "context": "shell：它是一个程序，可从键盘获取命令并将其提供给操作系统以执行。在过去，它是类似 Unix 的系统上唯一可用的用户界面。如今，除了命令行界面（CLI）外，还具有图形用户界面（GUI）。",
          "qas": [
            {
              "id": "5-404-6",
              "question": "过去shell在类似Unix系统上的地位是什么？",
              "answers": [
                {
                  "text": "唯一可用的用户界面",
                  "answer_start": 45
                }
              ]
            },
            {
              "id": "5-404-7",
              "question": "如今除命令行界面（CLI）外，还有哪种用户界面？",
              "answers": [
                {
                  "text": "图形用户界面（GUI）",
                  "answer_start": 86
                }
              ]
            }
          ]
        },
        {
          "context": "GUI (Graphical User Interface)：是一种用户界面，允许用户通过图形图标和音频指示符与电子设备进行交互。",
          "qas": [
            {
              "id": "5-404-8",
              "question": "GUI的英文全称是什么？",
              "answers": [
                {
                  "text": "Graphical User Interface",
                  "answer_start": 6
                }
              ]
            },
            {
              "id": "5-404-9",
              "question": "用户通过GUI与电子设备交互的媒介是什么？",
              "answers": [
                {
                  "text": "图形图标和音频指示符",
                  "answer_start": 42
                }
              ]
            }
          ]
        },
        {
          "context": "内核模式（kernel mode）: 通常也被称为超级模式（supervisor mode），在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问。它可以执行任何CPU指令并引用任何内存地址。",
          "qas": [
            {
              "id": "5-404-10",
              "question": "内核模式下代码有什么特权？",
              "answers": [
                {
                  "text": "具有对底层硬件的完整且不受限制的访问，执行任何CPU指令并引用任何内存地址",
                  "answer_start": 66
                }
              ]
            }
          ]
        },
        {
          "context": "内核模式（kernel mode）: 通常也被称为超级模式（supervisor mode），在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问。用户模式（user node）：当操作系统运行用户应用程序时，系统处于用户模式；用户模式下，模式位设置为1。",
          "qas": [
            {
              "id": "5-404-11",
              "question": "内核模式的另一个名称是什么？",
              "answers": [
                {
                  "text": "超级模式（supervisor mode）",
                  "answer_start": 24
                }
              ]
            },
            {
              "id": "5-404-12",
              "question": "内核模式下代码对底层硬件的访问权限如何？",
              "answers": [
                {
                  "text": "完整且不受限制的访问",
                  "answer_start": 65
                }
              ]
            },
            {
              "id": "5-404-13",
              "question": "用户模式下模式位设置为多少？",
              "answers": [
                {
                  "text": "1",
                  "answer_start": 142
                }
              ]
            }
          ]
        },
        {
          "context": "用户模式（user node）：当操作系统运行用户应用程序时，系统处于用户模式。当应用程序请求操作系统的帮助或发生中断或系统调用时，就会发生从用户模式到内核模式的转换。",
          "qas": [
            {
              "id": "5-404-14",
              "question": "什么触发用户模式到内核模式的转换？",
              "answers": [
                {
                  "text": "应用程序请求操作系统的帮助或发生中断或系统调用",
                  "answer_start": 54
                }
              ]
            }
          ]
        },
        {
          "context": "计算机架构(computer architecture)：在计算机工程中，是描述计算机系统功能、组织和实现的一组规则和方法，主要包括指令集、内存管理、I/O 和总线结构。",
          "qas": [
            {
              "id": "5-404-15",
              "question": "计算机架构的核心定义是什么？",
              "answers": [
                {
                  "text": "描述计算机系统功能、组织和实现的一组规则和方法",
                  "answer_start": 28
                }
              ]
            },
            {
              "id": "5-404-16",
              "question": "计算机架构主要包含哪些内容？",
              "answers": [
                {
                  "text": "指令集、内存管理、I/O 和总线结构",
                  "answer_start": 68
                }
              ]
            }
          ]
        },
        {
          "context": "SATA(Serial ATA)：串行 ATA (Serial Advanced Technology Attachment)，是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。",
          "qas": [
            {
              "id": "5-404-17",
              "question": "SATA的英文全称是什么？",
              "answers": [
                {
                  "text": "Serial ATA（Serial Advanced Technology Attachment）",
                  "answer_start": 6
                }
              ]
            },
            {
              "id": "5-404-18",
              "question": "SATA负责传输数据的两端设备是什么？",
              "answers": [
                {
                  "text": "主板和大容量存储设备（如硬盘及光盘驱动器）",
                  "answer_start": 56
                }
              ]
            }
          ]
        },
        {
          "context": "批处理(batch system): 批处理操作系统的用户不直接与计算机交互，用户在打孔卡等脱机设备上准备工作并提交给操作员；具有类似需求的作业会被一起批处理并成组运行。",
          "qas": [
            {
              "id": "5-404-19",
              "question": "批处理系统中用户如何与计算机交互？",
              "answers": [
                {
                  "text": "不直接与计算机交互",
                  "answer_start": 26
                }
              ]
            },
            {
              "id": "5-404-20",
              "question": "批处理系统中作业如何被处理以加快速度？",
              "answers": [
                {
                  "text": "具有类似需求的作业一起批处理并成组运行",
                  "answer_start": 72
                }
              ]
            }
          ]
        },
        {
          "context": "OS/360：正式称为IBM System / 360操作系统，是IBM为1964年发布的System/360大型机开发的已停产的批处理操作系统。",
          "qas": [
            {
              "id": "5-404-21",
              "question": "OS/360是为哪款大型机开发的？",
              "answers": [
                {
                  "text": "IBM System/360",
                  "answer_start": 35
                }
              ]
            },
            {
              "id": "5-404-22",
              "question": "OS/360的当前状态是什么？",
              "answers": [
                {
                  "text": "已停产",
                  "answer_start": 67
                }
              ]
            }
          ]
        },
        {
          "context": "多处理系统(Computer multitasking)：是指计算机同时运行多个程序的能力，一般方法是运行程序代码段、保存工作环境，循环执行该过程。",
          "qas": [
            {
              "id": "5-404-23",
              "question": "多处理系统的核心能力是什么？",
              "answers": [
                {
                  "text": "计算机同时运行多个程序的能力",
                  "answer_start": 25
                }
              ]
            },
            {
              "id": "5-404-24",
              "question": "多处理系统实现多任务的一般方法是什么？",
              "answers": [
                {
                  "text": "运行第一个程序的一段代码，保存工作环境；再运行第二个程序的一段代码，保存环境；……恢复第一个程序的工作环境，执行下一段代码",
                  "answer_start": 45
                }
              ]
            }
          ]
        },
        {
          "context": "云计算(cloud computing)：是计算机系统资源（尤其是数据存储和计算能力）的按需可用性，无需用户直接主动管理；大型云通常从中央服务器分布在多个位置，近用户的连接点可指定为边缘服务器。",
          "qas": [
            {
              "id": "5-404-25",
              "question": "云计算的核心特征是什么？",
              "answers": [
                {
                  "text": "计算机系统资源（尤其是数据存储和计算能力）的按需可用性，无需用户直接主动管理",
                  "answer_start": 16
                }
              ]
            },
            {
              "id": "5-404-26",
              "question": "大型云中近用户的连接点被称为什么？",
              "answers": [
                {
                  "text": "边缘服务器",
                  "answer_start": 126
                }
              ]
            }
          ]
        },
        {
          "context": "UNIX 操作系统：是强大的多用户、多任务操作系统，支持多种处理器架构，属于分时操作系统。POSIX：是IEEE为在各种UNIX操作系统上运行软件而定义API的一系列互相关联的标准的总称。",
          "qas": [
            {
              "id": "5-404-27",
              "question": "UNIX操作系统的类型是什么？",
              "answers": [
                {
                  "text": "多用户、多任务操作系统，属于分时操作系统",
                  "answer_start": 13
                }
              ]
            },
            {
              "id": "5-404-28",
              "question": "POSIX的核心作用是什么？",
              "answers": [
                {
                  "text": "IEEE为要在各种UNIX操作系统上运行软件，而定义API的一系列互相关联的标准的总称",
                  "answer_start": 65
                }
              ]
            }
          ]
        },
        {
          "context": "Linux：是大名鼎鼎的操作系统，原文描述为“太强大了，不予以解释了，大家都懂”。MS-DOS(MicroSoft Disk Operating System)：是微软公司发展的操作系统，运行在Intel x86个人电脑上，是DOS家族中最著名的一个。",
          "qas": [
            {
              "id": "5-404-29",
              "question": "原文中对Linux操作系统的描述是什么？",
              "answers": [
                {
                  "text": "太强大了，不予以解释了，大家都懂",
                  "answer_start": 19
                }
              ]
            },
            {
              "id": "5-404-30",
              "question": "MS-DOS的运行硬件平台是什么？",
              "answers": [
                {
                  "text": "Intel x86个人电脑",
                  "answer_start": 79
                }
              ]
            }
          ]
        },
        {
          "context": "RAM(Random Access Memory)：随机存取存储器，也叫主存，是与CPU直接交换数据的内部存储器，特点是可随时读写、速度快，断电后数据丢失；ROM (Read Only Memory)：只读存储器，存储数据无法改变或删除，断电后内容不消失。",
          "qas": [
            {
              "id": "5-404-31",
              "question": "RAM的另一个名称是什么？",
              "answers": [
                {
                  "text": "主存",
                  "answer_start": 28
                }
              ]
            },
            {
              "id": "5-404-32",
              "question": "RAM与ROM在断电后数据保存上的区别是什么？",
              "answers": [
                {
                  "text": "RAM断电后数据丢失，ROM断电后内容不消失",
                  "answer_start": 72
                }
              ]
            }
          ]
        },
        {
          "context": "系统调用(system call): 指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务，提供用户程序与操作系统之间的接口，如设备IO操作或进程间通信需在内核态运行。",
          "qas": [
            {
              "id": "5-404-33",
              "question": "系统调用的发起方和接收方分别是什么？",
              "answers": [
                {
                  "text": "运行在用户空间的程序，操作系统内核",
                  "answer_start": 14
                }
              ]
            },
            {
              "id": "5-404-34",
              "question": "需要在内核态运行的系统调用示例有哪些？",
              "answers": [
                {
                  "text": "设备IO操作、进程间通信",
                  "answer_start": 101
                }
              ]
            }
          ]
        },
        {
          "context": "中断(Interrupt)：接收到外围硬件异步信号或软件同步信号后，处理器进行相应处理；硬件中断会保存CPU执行状态，软件中断是CPU指令集中的指令，导向中断处理代码。中断向量(interrupt vector)：位于中断向量表中，是中断处理程序的地址。",
          "qas": [
            {
              "id": "5-404-35",
              "question": "触发中断的信号来源有哪些？",
              "answers": [
                {
                  "text": "外围硬件的异步信号、软件的同步信号",
                  "answer_start": 12
                }
              ]
            },
            {
              "id": "5-404-36",
              "question": "中断向量的本质是什么？",
              "answers": [
                {
                  "text": "中断处理程序的地址",
                  "answer_start": 175
                }
              ]
            }
          ]
        },
        {
          "context": "DMA (Direct Memory Access)：直接内存访问，允许电脑内部硬件子系统（如外设）独立直接读写系统内存，无需CPU介入处理。总线(Bus)：是计算机组件间规范化的交换数据的方式，提供数据传送和控制逻辑。",
          "qas": [
            {
              "id": "5-404-37",
              "question": "DMA技术的核心优势是什么？",
              "answers": [
                {
                  "text": "允许电脑内部硬件子系统独立直接读写系统内存，无需CPU介入处理",
                  "answer_start": 22
                }
              ]
            },
            {
              "id": "5-404-38",
              "question": "总线的核心作用是什么？",
              "answers": [
                {
                  "text": "计算机组件间规范化的交换数据，提供数据传送和控制逻辑",
                  "answer_start": 89
                }
              ]
            }
          ]
        },
        {
          "context": "硬实时系统(hard real-time system)：必须绝对在每个截止日期前完成任务，如核系统、起搏器、航空电子设备；软实时系统(soft real-time system)：可能错过某些截止日期，错过过多会导致性能下降，如计算机声音系统。",
          "qas": [
            {
              "id": "5-404-39",
              "question": "硬实时系统的核心要求是什么？",
              "answers": [
                {
                  "text": "必须绝对在每个截止日期前完成任务",
                  "answer_start": 28
                }
              ]
            },
            {
              "id": "5-404-40",
              "question": "软实时系统的典型示例是什么？",
              "answers": [
                {
                  "text": "计算机中的声音系统",
                  "answer_start": 156
                }
              ]
            }
          ]
        },
        {
          "context": "进程(Process)：程序的真正运行实例，程序是指令、数据及组织形式的描述；一个程序可关联多个进程，进程可同步或异步独立运行。进程表(process table)：操作系统维护的数据结构，条目包含进程名称、状态、优先级、寄存器等信息。",
          "qas": [
            {
              "id": "5-404-41",
              "question": "进程与程序的关系是什么？",
              "answers": [
                {
                  "text": "进程是程序（指令和数据）的真正运行实例，一个程序可关联多个进程",
                  "answer_start": 10
                }
              ]
            },
            {
              "id": "5-404-42",
              "question": "进程表条目中包含哪些进程信息？",
              "answers": [
                {
                  "text": "进程名称和状态，优先级，寄存器以及它可能正在等待的信号灯",
                  "answer_start": 98
                }
              ]
            }
          ]
        },
        {
          "context": "根目录(root directory)：指计算机系统中的顶层目录，如Windows中的C盘和D盘，Linux中的/。工作目录(Working directory)：用户在操作系统内所在的目录，用户可在此目录用相对文件名访问文件。",
          "qas": [
            {
              "id": "5-404-43",
              "question": "Linux系统中的根目录符号是什么？",
              "answers": [
                {
                  "text": "/",
                  "answer_start": 73
                }
              ]
            },
            {
              "id": "5-404-44",
              "question": "用户在工作目录中如何访问文件？",
              "answers": [
                {
                  "text": "用相对文件名访问文件",
                  "answer_start": 133
                }
              ]
            }
          ]
        },
        {
          "context": "客户端(clients)：访问服务器提供的服务的计算机硬件或软件。服务端(servers)：为其他程序或设备提供功能的计算机程序或设备；主从架构(client-server)：区分客户端与服务器，客户端向服务器发出请求，如文件服务器、游戏服务器。",
          "qas": [
            {
              "id": "5-404-45",
              "question": "客户端的核心功能是什么？",
              "answers": [
                {
                  "text": "访问服务器提供的服务",
                  "answer_start": 12
                }
              ]
            },
            {
              "id": "5-404-46",
              "question": "主从架构（C/S架构）中客户端与服务器的交互方式是什么？",
              "answers": [
                {
                  "text": "客户端向服务器或应用程序服务器发出请求",
                  "answer_start": 110
                }
              ]
            }
          ]
        },
        {
          "context": "Java 虚拟机(Java virtual Machines)：有自己的硬件架构（如处理器、堆栈、寄存器）和指令系统；屏蔽与具体操作系统平台相关的信息，Java程序生成字节码即可在多平台运行。",
          "qas": [
            {
              "id": "5-404-47",
              "question": "Java虚拟机的硬件架构包含哪些组件？",
              "answers": [
                {
                  "text": "处理器、堆栈、寄存器",
                  "answer_start": 42
                }
              ]
            },
            {
              "id": "5-404-48",
              "question": "Java程序能在多平台运行的原因是什么？",
              "answers": [
                {
                  "text": "Java虚拟机屏蔽了与具体操作系统平台相关的信息，Java程序只需生成在Java虚拟机上运行的目标代码（字节码）",
                  "answer_start": 64
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}