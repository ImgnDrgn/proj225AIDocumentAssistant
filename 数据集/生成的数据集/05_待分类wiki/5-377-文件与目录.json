{
  "data": [
    {
      "title": "文件与目录",
      "paragraphs": [
        {
          "context": "文件是存储在某种长期储存设备或临时存储设备中的一段数据流，并且归属于计算机文件系统管理之下。文件类型可分为：文本文件，是由一些字符的串行组成的；二进制文件，一般是指除了文本文件以外的文件。文件扩展名是操作系统用来标志文件类型的一种机制，通常来说，一个扩展名是跟在主文件名后面的，由一个分隔符分隔。举例：“readme.txt”文件名中，readme是主文件名，txt为扩展名，表示这个文件被认为是一个纯文本文件。注意：在Linux中，带有扩展名的文件，只能代表程序的关联，并不能说明文件是可以执行，只要属性中有运行权限，那么就表示这个文件具有可以执行的权限，但最终能不能成功运行，还得看文件的内容。",
          "qas": [
            {
              "id": "5-377-1",
              "question": "Linux中的文件指的是什么？",
              "answers": [
                {
                  "text": "存储在某种长期储存设备或临时存储设备中的一段数据流，并且归属于计算机文件系统管理之下",
                  "answer_start": 0
                }
              ]
            },
            {
              "id": "5-377-2",
              "question": "文件类型分为哪两类？",
              "answers": [
                {
                  "text": "文本文件和二进制文件",
                  "answer_start": 68
                }
              ]
            },
            {
              "id": "5-377-3",
              "question": "文件扩展名的作用是什么？",
              "answers": [
                {
                  "text": "操作系统用来标志文件类型的一种机制",
                  "answer_start": 135
                }
              ]
            },
            {
              "id": "5-377-4",
              "question": "在Linux中，文件有扩展名能否说明它可以执行？",
              "answers": [
                {
                  "text": "不能，带有扩展名的文件只能代表程序的关联，只要属性中有运行权限，才表示具有可以执行的权限，但最终能不能成功运行还得看文件的内容",
                  "answer_start": 307
                }
              ]
            }
          ]
        },
        {
          "context": "在命名linux文件时，最好避免如下一些特殊字符：`*` `?` `<` `>` `;` `&` `!` `[` `]` `|` `\` `'` `\"` `(` `)` `{` `}`。Linux中，每一个文件或目录命名最长可以达到255个字符，加上完整路径，最长可达4096个字符。可以采用［TAB］命令、文件名补全键来减少键盘输入量及输入差错。文件名字前面有. 表示为隐藏文件，例如“.linux.txt”为隐藏文件。",
          "qas": [
            {
              "id": "5-377-5",
              "question": "命名Linux文件时应避免哪些特殊字符？",
              "answers": [
                {
                  "text": "`*` `?` `<` `>` `;` `&` `!` `[` `]` `|` `\\` `'` `\"` `(` `)` `{` `}`",
                  "answer_start": 31
                }
              ]
            },
            {
              "id": "5-377-6",
              "question": "Linux中文件或目录命名的最长字符数是多少？",
              "answers": [
                {
                  "text": "255个字符",
                  "answer_start": 103
                }
              ]
            },
            {
              "id": "5-377-7",
              "question": "如何表示隐藏文件？",
              "answers": [
                {
                  "text": "文件名字前面有.",
                  "answer_start": 184
                }
              ]
            }
          ]
        },
        {
          "context": "DEB是Debian软件包格式，文件扩展名为.deb，跟Debian的命名一样，DEB也是因Debra Murdock（Debian创始人Ian Murdock的前妻）而得名。Debian包是Unixar的标准归档，将包文件信息以及包内容，经过gzip和tar打包而成。处理这些包的经典程序是dpkg，经常是通过apt来运作。通过Alien工具，可以将deb包转换成其他形式的软件包。安装DEB包软件只需要双击即可，非常方便。DEB包为Debian系Linux系统软件安装包，Linux Deepin属于Debian系Linux。",
          "qas": [
            {
              "id": "5-377-8",
              "question": "DEB文件的扩展名是什么？",
              "answers": [
                {
                  "text": ".deb",
                  "answer_start": 32
                }
              ]
            },
            {
              "id": "5-377-9",
              "question": "DEB包得名于谁？",
              "answers": [
                {
                  "text": "Debra Murdock（Debian创始人Ian Murdock的前妻）",
                  "answer_start": 47
                }
              ]
            },
            {
              "id": "5-377-10",
              "question": "处理DEB包的经典程序是什么？",
              "answers": [
                {
                  "text": "dpkg",
                  "answer_start": 167
                }
              ]
            },
            {
              "id": "5-377-11",
              "question": "哪个工具可以将deb包转换成其他形式的软件包？",
              "answers": [
                {
                  "text": "Alien工具",
                  "answer_start": 192
                }
              ]
            }
          ]
        },
        {
          "context": "RPM包管理员（简称RPM，全称为The RPM Package Manager）是在Linux下广泛使用的软件包管理器。最早由Red Hat研制，现在也由开源社区开发。RPM通常随附于Linux发行版，但也有单独将RPM作为应用软件发行的发行版（例如Gentoo）。RPM仅适用于安装用RPM来打包的软件，目前是GNU/Linux下软件包资源最丰富的软件包类型。安装RPM包软件只需要双击即可，非常方便。RPM包为Red Hat系Linux系统软件安装包，只有属于Red Hat系的Linux系统才可以使用RPM包安装软件。",
          "qas": [
            {
              "id": "5-377-12",
              "question": "RPM的全称是什么？",
              "answers": [
                {
                  "text": "The RPM Package Manager",
                  "answer_start": 17
                }
              ]
            },
            {
              "id": "5-377-13",
              "question": "RPM最早由谁研制？",
              "answers": [
                {
                  "text": "Red Hat",
                  "answer_start": 65
                }
              ]
            },
            {
              "id": "5-377-14",
              "question": "RPM包适用于哪些Linux系统？",
              "answers": [
                {
                  "text": "Red Hat系Linux系统",
                  "answer_start": 310
                }
              ]
            }
          ]
        },
        {
          "context": "Linux下的库有两种：静态库(.a)和共享库(.so)。Linux下的静态库的名字一般为libxxxx.a，其中xxxx是该lib的名称。Linux下的动态库的名字一般为libxxxx.so.major.minor，xxxx是该lib的名称，major是主版本号，minor是副版本号。",
          "qas": [
            {
              "id": "5-377-15",
              "question": "Linux下的库有哪两种类型？",
              "answers": [
                {
                  "text": "静态库(.a)和共享库(.so)",
                  "answer_start": 19
                }
              ]
            },
            {
              "id": "5-377-16",
              "question": "静态库的文件名格式是什么？",
              "answers": [
                {
                  "text": "libxxxx.a，其中xxxx是该lib的名称",
                  "answer_start": 50
                }
              ]
            },
            {
              "id": "5-377-17",
              "question": "动态库的文件名格式是什么？",
              "answers": [
                {
                  "text": "libxxxx.so.major.minor，xxxx是该lib的名称，major是主版本号，minor是副版本号",
                  "answer_start": 100
                }
              ]
            }
          ]
        },
        {
          "context": "路径是用户在磁盘上寻找文件时，所历经的文件夹线路。路径分有两种：绝对路径：路径的写法一定由根目录 / 写起，例如： /usr/share/doc 这个目录。相对路径：路径的写法不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成：cd ../man，这就是相对路径的写法，相对路径意指相对于目前工作目录的路径。",
          "qas": [
            {
              "id": "5-377-18",
              "question": "什么是路径？",
              "answers": [
                {
                  "text": "用户在磁盘上寻找文件时，所历经的文件夹线路",
                  "answer_start": 0
                }
              ]
            },
            {
              "id": "5-377-19",
              "question": "路径分为哪两种类型？",
              "answers": [
                {
                  "text": "绝对路径和相对路径",
                  "answer_start": 36
                }
              ]
            },
            {
              "id": "5-377-20",
              "question": "绝对路径的写法有什么特点？",
              "answers": [
                {
                  "text": "一定由根目录 / 写起",
                  "answer_start": 53
                }
              ]
            },
            {
              "id": "5-377-21",
              "question": "相对路径的写法有什么特点？",
              "answers": [
                {
                  "text": "不是由 / 写起，相对于目前工作目录的路径",
                  "answer_start": 110
                }
              ]
            }
          ]
        },
        {
          "context": "目录是计算机系统中为便于对文件进行存取和管理而建立的文件索引，即文件名和文件物理位置之间的映射关系。在计算机或相关设备中，一个“目录”或“文件夹”就是一个装有数字文件系统的虚拟“容器”，里面保存着一组文件和其它一些目录。一个典型的文件系统可能会包含成千上万个目录。多个文件通过存储在一个目录中，可以达到有组织的存储文件的目的。在一个目录中的另一个目录被称作它的子目录，这些目录构成了层次或树形结构。文件目录表目至少要包含文件名、文件内部标识、文件的类型、文件存储地址、文件的长度、访问权限、建立时间和访问时间等内容。",
          "qas": [
            {
              "id": "5-377-22",
              "question": "什么是目录？",
              "answers": [
                {
                  "text": "计算机系统中为便于对文件进行存取和管理而建立的文件索引，即文件名和文件物理位置之间的映射关系",
                  "answer_start": 0
                }
              ]
            },
            {
              "id": "5-377-23",
              "question": "目录又被称为什么？",
              "answers": [
                {
                  "text": "文件夹",
                  "answer_start": 79
                }
              ]
            },
            {
              "id": "5-377-24",
              "question": "目录中的另一个目录被称为什么？",
              "answers": [
                {
                  "text": "子目录",
                  "answer_start": 246
                }
              ]
            }
          ]
        },
        {
          "context": "Linux下的文件名与目录严格区分大小写。例如：abc.txt与abC.txt是完全不同的文件。",
          "qas": [
            {
              "id": "5-377-25",
              "question": "Linux下的文件名与目录是否区分大小写？",
              "answers": [
                {
                  "text": "严格区分大小写",
                  "answer_start": 24
                }
              ]
            },
            {
              "id": "5-377-26",
              "question": "举例说明Linux下文件名的大小写区别？",
              "answers": [
                {
                  "text": "abc.txt与abC.txt是完全不同的文件",
                  "answer_start": 42
                }
              ]
            }
          ]
        },
        {
          "context": "使用系统自带的Nautilus文件管理器可以很便捷的实现我们日常的文件与目录管理。使用File_Roller归档管理器可以轻松的实现文件与目录的压缩、解压缩、打包管理。",
          "qas": [
            {
              "id": "5-377-27",
              "question": "哪个工具可以便捷实现日常的文件与目录管理？",
              "answers": [
                {
                  "text": "Nautilus文件管理器",
                  "answer_start": 7
                }
              ]
            },
            {
              "id": "5-377-28",
              "question": "哪个工具可以实现文件与目录的压缩、解压缩、打包管理？",
              "answers": [
                {
                  "text": "File_Roller归档管理器",
                  "answer_start": 68
                }
              ]
            }
          ]
        },
        {
          "context": "cd命令用于变换工作目录至DIR。其中dirName表示法可是绝对路径，如\"/home/sun/downloads\"，也可以是相对路径，如\"./downloads\"。若目录名称省略，则变换至使用者的home directory（也就是刚login时所在的目录）。~表示为home directory的意思，.则是表示目前所在的目录，..则表示目前目录位置的上一层目录。实例：cd /usr/bin 进入/usr/bin/；cd .. 返回当前目录的上一级目录；cd - 返回上一次所在的目录；cd ~ 进入当前用户的宿主目录。",
          "qas": [
            {
              "id": "5-377-29",
              "question": "cd命令的作用是什么？",
              "answers": [
                {
                  "text": "变换工作目录至DIR",
                  "answer_start": 3
                }
              ]
            },
            {
              "id": "5-377-30",
              "question": "cd命令中，~表示什么？",
              "answers": [
                {
                  "text": "home directory（宿主目录）",
                  "answer_start": 167
                }
              ]
            },
            {
              "id": "5-377-31",
              "question": "cd ..的作用是什么？",
              "answers": [
                {
                  "text": "返回当前目录的上一级目录",
                  "answer_start": 307
                }
              ]
            }
          ]
        },
        {
          "context": "pwd命令用于打印出当前/活动目录的绝对路径。实例：pwd 查看当前的工作目录。默认的工作目录在~下，~是您的“家目录”，默认在/home/USERNAME。",
          "qas": [
            {
              "id": "5-377-32",
              "question": "pwd命令的作用是什么？",
              "answers": [
                {
                  "text": "打印出当前/活动目录的绝对路径",
                  "answer_start": 3
                }
              ]
            },
            {
              "id": "5-377-33",
              "question": "默认的工作目录在哪里？",
              "answers": [
                {
                  "text": "~下，~是“家目录”，默认在/home/USERNAME",
                  "answer_start": 56
                }
              ]
            }
          ]
        },
        {
          "context": "rm命令用于移除文件或者目录。实例：rm <FILE> 删除当前目录下的“FILE”文件；rm -rf <DIR> 递归删除文件夹DIR，也就是删除DIR及其中的所有文件、文件夹。",
          "qas": [
            {
              "id": "5-377-34",
              "question": "rm命令的作用是什么？",
              "answers": [
                {
                  "text": "移除文件或者目录",
                  "answer_start": 3
                }
              ]
            },
            {
              "id": "5-377-35",
              "question": "rm -rf <DIR>的作用是什么？",
              "answers": [
                {
                  "text": "递归删除文件夹DIR，也就是删除DIR及其中的所有文件、文件夹",
                  "answer_start": 45
                }
              ]
            }
          ]
        },
        {
          "context": "文件：是存储在某种长期储存设备或临时存储设备中的一段数据流，并且归属于计算机文件系统管理之下。文件类型可分: 文本文件，是由一些字符的串行组成的。 二进制文件,一般是指除了文本文件以外的文件。 文件扩展名是操作系统用来标志文类型的一种机制。通常来说，一个扩展名是跟在主文件名后面的，由一个分隔符分隔。 举例：“readme.txt”文件名中，readme是主文件名，txt为扩展名，表示这个文件被认为是一个纯文本文件。 注意：在Linux中，带有扩展名的文件，只能代表程序的关联，并不能说明文件是可以执行，从这方面来说，Linux的扩展名没有太大的意义。只要属性中有运行权限，那么就表示这个文件具有可以执行的权限,但是最终能不能成功运行,还得看文件的内容。",
          "qas": [
            {
              "id": "5-377-36",
              "question": "文件扩展名在Linux系统中的特点是什么？",
              "answers": [
                {
                  "text": "只能代表程序的关联，并不能说明文件是可以执行",
                  "answer_start": 290
                }
              ]
            }
          ]
        },
        {
          "context": "路径：用户在磁盘上寻找文件时，所历经的文件夹线路叫路径。路径分有两种: 绝对路径：路径的写法一定由根目录 / 写起，例如： /usr/share/doc 这个目录。 相对路径：路径的写法不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： cd ../man 这就是相对路径的写法，相对路径意指相对于目前工作目录的路径。 目录：一个计算机系统中有成千上万个文件，为了便于对文件进行存取和管理，计算机系统建立文件的索引，即文件名和文件物理位置之间的映射关系，这种文件的索引称为文件目录。 在计算机或相关设备中，一个“目录”或“文件夹”就是一个装有数字文件系统的虚拟“容器”。在它里面保存着一组文件和其它一些目录。 一个典型的文件系统可能会包含成千上万个目录。多个文件通过存储在一个目录中，可以达到有组织的存储文件的目的。在一个目录中的另一个目录被称作它的子目录。这样，这些目录就构成了层次，或树形结构。 文件目录(file directory）为每个文件设立一个表目。文件目录表目至少要包含文件名、文件内部标识、文件的类型、文件存储地址、文件的长度、访问权限、建立时间和访问时间等内容。",
          "qas": [
            {
              "id": "5-377-37",
              "question": "相对路径的典型写法示例是什么？",
              "answers": [
                {
                  "text": "cd ../man",
                  "answer_start": 206
                }
              ]
            },
            {
              "id": "5-377-38",
              "question": "文件目录的作用是什么？",
              "answers": [
                {
                  "text": "为了便于对文件进行存取和管理，计算机系统建立文件的索引",
                  "answer_start": 327
                }
              ]
            }
          ]
        },
        {
          "context": "DEB 是Debian软件包格式，文件扩展名为.deb，跟Debian的命名一样，DEB也是因Debra Murdock（Debian创始人Ian Murdock的前妻）而得名。 Debian包是Unixar的标准归档，将包文件信息以及包内容，经过gzip和tar打包而成。 处理这些包的经典程序是dpkg，经常是通过apt来运作。 通过Alien工具，可以将deb包转换成其他形式的软件包。 安装DEB包软件只需要双击即可，非常方便。 DEB包为Debian系Linux系统软件安装包，Linux Deepin属于Debian系Linux。 RPM包管理员（简称RPM，全称为The RPM Package Manager）是在Linux下广泛使用的软件包管理器。 最早由Red Hat研制，现在也由开源社区开发。RPM通常随附于Linux发行版，但也有单独将RPM作为应用软件发行的发行版（例如Gentoo）。RPM仅适用于安装用RPM来打包的软件，目前是GNU/Linux下软件包资源最丰富的软件包类型。 安装RPM包软件只需要双击即可，非常方便。 RPM包为Red Hat系Linux系统软件安装包，只有属于Red Hat系的Linux系统才可以使用RPM包安装软件。",
          "qas": [
            {
              "id": "5-377-39",
              "question": "DEB软件包格式的特点是什么？",
              "answers": [
                {
                  "text": "文件扩展名为.deb, 是Unixar的标准归档，将包文件信息以及包内容，经过gzip和tar打包而成",
                  "answer_start": 56
                }
              ]
            },
            {
              "id": "5-377-40",
              "question": "两种软件包格式的安装方式有什么共同点？",
              "answers": [
                {
                  "text": "只需要双击即可安装",
                  "answer_start": 216
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}