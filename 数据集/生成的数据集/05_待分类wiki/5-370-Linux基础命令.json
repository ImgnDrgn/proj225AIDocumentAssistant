{
  "title": "Linux基础命令",
  "paragraphs": [
    {
      "context": "黑色方块中的内容都是可以在命令行终端中执行的命令, 命令里面#(井号)开头的都是注释, 可以忽略。命令终端可以在指定目录或桌面右键打开终端开启, 也可以通过全局快捷键 `Ctrl+Alt+T` 来开启。",
      "qas": [
        {
          "question": "如何打开命令行终端？",
          "id": "5-370-1",
          "answers": [
            {
              "text": "可以在指定目录或桌面右键打开终端开启，也可以通过全局快捷键 Ctrl+Alt+T 来开启",
              "answer_start": 71
            }
          ]
        },
        {
          "question": "打开命令行终端的全局快捷键是什么？",
          "id": "5-370-2",
          "answers": [
            {
              "text": "Ctrl+Alt+T",
              "answer_start": 103
            }
          ]
        }
      ]
    },
    {
      "context": "`ls` 是英文单词 list 的简写，其功能为列出目录的内容，是用户最常用的命令之一。Linux 文件或者目录名称最长可以有 265 个字符。其中参数 `.` 代表当前目录，参数 `..` 代表上一级目录。而以 `.` 开头的文件名(比如 `.anyFile.txt` )为隐藏文件，需要用 `-a` 参数才能显示出来，默认不显示隐藏文件。",
      "qas": [
        {
          "question": "ls命令的英文全称是什么？",
          "id": "5-370-3",
          "answers": [
            {
              "text": "list",
              "answer_start": 13
            }
          ]
        },
        {
          "question": "ls命令的功能是什么？",
          "id": "5-370-4",
          "answers": [
            {
              "text": "列出目录的内容",
              "answer_start": 24
            }
          ]
        },
        {
          "question": "Linux中文件或目录名称的最大长度是多少？",
          "id": "5-370-5",
          "answers": [
            {
              "text": "265 个字符",
              "answer_start": 62
            }
          ]
        },
        {
          "question": "如何表示当前目录？",
          "id": "5-370-6",
          "answers": [
            {
              "text": ".",
              "answer_start": 95
            }
          ]
        },
        {
          "question": "如何表示上一级目录？",
          "id": "5-370-7",
          "answers": [
            {
              "text": "..",
              "answer_start": 114
            }
          ]
        },
        {
          "question": "什么是隐藏文件？",
          "id": "5-370-8",
          "answers": [
            {
              "text": "以 . 开头的文件名(比如 .anyFile.txt )",
              "answer_start": 135
            }
          ]
        },
        {
          "question": "如何显示隐藏文件？",
          "id": "5-370-9",
          "answers": [
            {
              "text": "用 -a 参数",
              "answer_start": 175
            }
          ]
        },
        {
          "question": "Linux隐藏文件有什么命名特征？",
          "id": "5-370-10",
          "answers": [
            {
              "text": "以.开头的文件名",
              "answer_start": 135
            }
          ]
        }
      ]
    },
    {
      "context": "列出当前目录下所有非隐藏文件和目录：`ls ./`。列出当前目录所在位置的上一级目录下所有非隐藏文件和目录：`ls ../`。显示指定目录下所有子目录与文件，包括隐藏文件：`ls -a`。以列表方式显示文件的详细信息：`ls -l`。`-h` 配合 `-l` 以人性化的方式显示文件大小：`ls -hl`。",
      "qas": [
        {
          "question": "ls ./命令的作用是什么？",
          "id": "5-370-11",
          "answers": [
            {
              "text": "列出当前目录下所有非隐藏文件和目录",
              "answer_start": 0
            }
          ]
        },
        {
          "question": "ls ../命令的作用是什么？",
          "id": "5-370-12",
          "answers": [
            {
              "text": "列出当前目录所在位置的上一级目录下所有非隐藏文件和目录",
              "answer_start": 32
            }
          ]
        },
        {
          "question": "如何显示指定目录下所有子目录与文件，包括隐藏文件？",
          "id": "5-370-13",
          "answers": [
            {
              "text": "ls -a",
              "answer_start": 95
            }
          ]
        },
        {
          "question": "如何以列表方式显示文件的详细信息？",
          "id": "5-370-14",
          "answers": [
            {
              "text": "ls -l",
              "answer_start": 143
            }
          ]
        },
        {
          "question": "-h参数配合-l的作用是什么？",
          "id": "5-370-15",
          "answers": [
            {
              "text": "以人性化的方式显示文件大小",
              "answer_start": 160
            }
          ]
        },
        {
          "question": "哪个参数可以人性化显示文件大小？",
          "id": "5-370-16",
          "answers": [
            {
              "text": "ls -hl",
              "answer_start": 174
            }
          ]
        }
      ]
    },
    {
      "context": "`*` 代表文件名中所有字符。查找以te开头的文件：`ls te*`。查找结尾为html的文件：`ls *html`。`？` 代表文件名中任意一个字符。只找第一个字符任意，后缀为.c的文件：`ls ?.c`。只找只有三个字符，前两个字符为 `a.` ，最后一个字符任意的文件：`ls a.?`。`[]` 使用中括号将字符组括起来，表示可以匹配字符组中的任意一个。匹配a、b、c中的任意一个开头的对应文件：`ls [abc]name.txt`。在中括号内, 字符 `-` 用于表示字符范围。匹配从a到f范围内的的任意一个字符：`ls [a-f].txt`。找到从a到f范围内的的任意一个字符开头的任意文件：`ls [a-f]*`。如果要使通配符作为普通字符使用，可以在其前面加上转义字符 `\\`。",
      "qas": [
        {
          "question": "*通配符代表什么？",
          "id": "5-370-17",
          "answers": [
            {
              "text": "文件名中所有字符",
              "answer_start": 5
            }
          ]
        },
        {
          "question": "如何查找以te开头的文件？",
          "id": "5-370-18",
          "answers": [
            {
              "text": "ls te*",
              "answer_start": 31
            }
          ]
        },
        {
          "question": "？通配符的作用是什么？",
          "id": "5-370-19",
          "answers": [
            {
              "text": "代表文件名中任意一个字符",
              "answer_start": 85
            }
          ]
        },
        {
          "question": "如何查找第一个字符任意，后缀为.c的文件？",
          "id": "5-370-20",
          "answers": [
            {
              "text": "ls ?.c",
              "answer_start": 127
            }
          ]
        },
        {
          "question": "[]通配符的作用是什么？",
          "id": "5-370-21",
          "answers": [
            {
              "text": "使用中括号将字符组括起来，表示可以匹配字符组中的任意一个",
              "answer_start": 200
            }
          ]
        },
        {
          "question": "中括号内的-有什么作用？",
          "id": "5-370-22",
          "answers": [
            {
              "text": "用于表示字符范围",
              "answer_start": 282
            }
          ]
        },
        {
          "question": "如何使通配符作为普通字符使用？",
          "id": "5-370-23",
          "answers": [
            {
              "text": "在其前面加上转义字符 \\",
              "answer_start": 439
            }
          ]
        },
        {
          "question": "通配符的主要作用是什么？",
          "id": "5-370-24",
          "answers": [
            {
              "text": "同时引用多个文件名",
              "answer_start": 0
            }
          ]
        }
      ]
    },
    {
      "context": "`clear`作用为清除终端上的显示(类似于DOS的cls清屏功能)，也可使用快捷键：`Ctrl + l` ( “l” 为字母 )。",
      "qas": [
        {
          "question": "clear命令的作用是什么？",
          "id": "5-370-25",
          "answers": [
            {
              "text": "清除终端上的显示(类似于DOS的cls清屏功能)",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "与clear命令功能相同的快捷键是什么？",
          "id": "5-370-26",
          "answers": [
            {
              "text": "Ctrl + l",
              "answer_start": 56
            }
          ]
        }
      ]
    },
    {
      "context": "`cd`命令可以帮助用户切换工作目录。Linux所有的目录和文件名大小写敏感。cd后面可跟绝对路径，也可以跟相对路径。如果省略目录，则默认切换到当前用户的主目录。`cd` 切换到当前用户的主目录(/home/用户目录)；`cd ~ `切换到当前用户的主目录(/home/用户目录)；`cd .` 切换到当前目录；`cd .. `切换到上级目录；`cd - `可进入上次所在的目录。",
      "qas": [
        {
          "question": "cd命令的作用是什么？",
          "id": "5-370-27",
          "answers": [
            {
              "text": "帮助用户切换工作目录",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "Linux的目录和文件名是否区分大小写？",
          "id": "5-370-28",
          "answers": [
            {
              "text": "是",
              "answer_start": 32
            }
          ]
        },
        {
          "question": "cd命令后可跟哪种类型的路径？",
          "id": "5-370-29",
          "answers": [
            {
              "text": "绝对路径，也可以跟相对路径",
              "answer_start": 55
            }
          ]
        },
        {
          "question": "如何切换到当前用户的主目录？",
          "id": "5-370-30",
          "answers": [
            {
              "text": "cd 或 cd ~",
              "answer_start": 90
            }
          ]
        },
        {
          "question": "cd ..的作用是什么？",
          "id": "5-370-31",
          "answers": [
            {
              "text": "切换到上级目录",
              "answer_start": 185
            }
          ]
        },
        {
          "question": "cd -的作用是什么？",
          "id": "5-370-32",
          "answers": [
            {
              "text": "可进入上次所在的目录",
              "answer_start": 204
            }
          ]
        },
        {
          "question": "如何切换到上级目录？",
          "id": "5-370-33",
          "answers": [
            {
              "text": "cd ..",
              "answer_start": 185
            }
          ]
        },
        {
          "question": "哪个命令可以返回上次访问的目录？",
          "id": "5-370-34",
          "answers": [
            {
              "text": "cd -",
              "answer_start": 204
            }
          ]
        }
      ]
    },
    {
      "context": "使用`pwd`命令可以显示当前的工作目录，该命令很简单，直接输入`pwd`即可，后面不带参数。",
      "qas": [
        {
          "question": "pwd命令的作用是什么？",
          "id": "5-370-35",
          "answers": [
            {
              "text": "显示当前的工作目录",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "使用pwd命令需要带参数吗？",
          "id": "5-370-36",
          "answers": [
            {
              "text": "不需要，直接输入pwd即可，后面不带参数",
              "answer_start": 34
            }
          ]
        }
      ]
    },
    {
      "context": "通过`mkdir`命令可以创建一个新的目录。参数`-p`可递归创建目录。需要注意的是新建目录的名称不能与当前目录中已有的目录或文件同名，并且目录创建者必须对当前目录具有写权限。",
      "qas": [
        {
          "question": "mkdir命令的作用是什么？",
          "id": "5-370-37",
          "answers": [
            {
              "text": "创建一个新的目录",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "如何递归创建目录？",
          "id": "5-370-38",
          "answers": [
            {
              "text": "使用参数 -p",
              "answer_start": 29
            }
          ]
        },
        {
          "question": "创建目录时需要注意什么？",
          "id": "5-370-39",
          "answers": [
            {
              "text": "新建目录的名称不能与当前目录中已有的目录或文件同名，并且目录创建者必须对当前目录具有写权限",
              "answer_start": 50
            }
          ]
        }
      ]
    },
    {
      "context": "可通过`rm`删除文件或目录。使用`rm`命令要小心，因为文件删除后不能恢复。为了防止文件误删，可以在`rm`后使用`-i`参数以逐个确认要删除的文件。`-i` 以进行交互式方式执行；`-f` 强制删除，忽略不存在的文件，无需提示；`-r `递归地删除目录下的内容，删除文件夹时必须加此参数。",
      "qas": [
        {
          "question": "rm命令的作用是什么？",
          "id": "5-370-40",
          "answers": [
            {
              "text": "删除文件或目录",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "使用rm命令为什么要小心？",
          "id": "5-370-41",
          "answers": [
            {
              "text": "因为文件删除后不能恢复",
              "answer_start": 25
            }
          ]
        },
        {
          "question": "删除文件夹时必须使用的参数是什么？",
          "id": "5-370-42",
          "answers": [
            {
              "text": "-r",
              "answer_start": 162
            }
          ]
        },
        {
          "question": "-i参数在rm命令中的作用是什么？",
          "id": "5-370-43",
          "answers": [
            {
              "text": "以进行交互式方式执行",
              "answer_start": 100
            }
          ]
        }
      ]
    },
    {
      "context": "`cp`命令的功能是将给出的文件或目录复制到另一个文件或目录中。`-a` 该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性；`-f` 已经存在的目标文件而不提示；`-i` 交互式复制，在覆盖目标文件之前将给出提示要求用户确认；`-r `若给出的源文件是目录文件，则`cp`将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名；`-v` 显示拷贝进度。",
      "qas": [
        {
          "question": "cp命令的功能是什么？",
          "id": "5-370-44",
          "answers": [
            {
              "text": "将给出的文件或目录复制到另一个文件或目录中",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "复制目录时，-a参数的作用是什么？",
          "id": "5-370-45",
          "answers": [
            {
              "text": "保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性",
              "answer_start": 53
            }
          ]
        },
        {
          "question": "复制目录文件时，需要使用哪个参数使cp递归复制该目录下的所有子目录和文件？",
          "id": "5-370-46",
          "answers": [
            {
              "text": "-r",
              "answer_start": 265
            }
          ]
        }
      ]
    },
    {
      "context": "用户可以使用`mv`命令来移动文件或目录，也可以给文件或目录重命名。`-f` 禁止交互式操作，如有覆盖也不会给出提示；`-i` 确认交互方式操作，如果`mv`操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件；`-v `显示移动进度。",
      "qas": [
        {
          "question": "mv命令可以用来做什么？",
          "id": "5-370-47",
          "answers": [
            {
              "text": "移动文件或目录，也可以给文件或目录重命名",
              "answer_start": 10
            }
          ]
        },
        {
          "question": "-f参数在mv命令中的作用是什么？",
          "id": "5-370-48",
          "answers": [
            {
              "text": "禁止交互式操作，如有覆盖也不会给出提示",
              "answer_start": 54
            }
          ]
        }
      ]
    },
    {
      "context": "用户可以通过`touch`来创建一个空的文件，demo如下：`touch hello.txt `。说明：在当前路径下创建名字为hello.txt的空文件。Linux系统中没有严格的后缀（格式），所以创建文件时可以命名为任意的文件名。",
      "qas": [
        {
          "question": "touch命令的作用是什么？",
          "id": "5-370-49",
          "answers": [
            {
              "text": "创建一个空的文件",
              "answer_start": 10
            }
          ]
        },
        {
          "question": "如何创建一个名为hello.txt的空文件？",
          "id": "5-370-50",
          "answers": [
            {
              "text": "touch hello.txt",
              "answer_start": 36
            }
          ]
        },
        {
          "question": "Linux系统中文件后缀有严格要求吗？",
          "id": "5-370-51",
          "answers": [
            {
              "text": "没有",
              "answer_start": 79
            }
          ]
        }
      ]
    },
    {
      "context": "Linux允许将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中。如：`ls > test.txt `( test.txt 如果不存在，则创建，存在则覆盖其内容 )。注意：`>`输出重定向会覆盖原来的内容；`>>`输出重定向则会追加到文件的尾部。",
      "qas": [
        {
          "question": ">命令的作用是什么？",
          "id": "5-370-52",
          "answers": [
            {
              "text": "将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中",
              "answer_start": 5
            }
          ]
        },
        {
          "question": ">和>>在输出重定向中的区别是什么？",
          "id": "5-370-53",
          "answers": [
            {
              "text": ">输出重定向会覆盖原来的内容；>>输出重定向则会追加到文件的尾部",
              "answer_start": 110
            }
          ]
        }
      ]
    },
    {
      "context": "查看内容时，在信息过长无法在一屏上显示时，会出现快速滚屏，使得用户无法看清文件的内容，此时可以使用`more`命令，每次只显示一页，按下空格键可以显示下一页，按下`q`键退出显示，按下`h`键可以获取帮助。`less # 功能和 more 类似, 用起来更方便`",
      "qas": [
        {
          "question": "more命令的作用是什么？",
          "id": "5-370-54",
          "answers": [
            {
              "text": "在信息过长无法在一屏上显示时，每次只显示一页",
              "answer_start": 59
            }
          ]
        },
        {
          "question": "在more命令中如何显示下一页？",
          "id": "5-370-55",
          "answers": [
            {
              "text": "按下空格键",
              "answer_start": 100
            }
          ]
        },
        {
          "question": "less命令与more命令有什么关系？",
          "id": "5-370-56",
          "answers": [
            {
              "text": "功能和 more 类似, 用起来更方便",
              "answer_start": 155
            }
          ]
        }
      ]
    },
    {
      "context": "管道：一个命令的输出可以通过管道做为另一个命令的输入。管道我们可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里`“ | ”`的左右分为两端，左端塞东西(写)，右端取东西(读)。",
      "qas": [
        {
          "question": "管道命令|的作用是什么？",
          "id": "5-370-57",
          "answers": [
            {
              "text": "一个命令的输出可以通过管道做为另一个命令的输入",
              "answer_start": 3
            }
          ]
        }
      ]
    },
    {
      "context": "Linux链接文件类似于Windows下的快捷方式。链接文件分为软链接和硬链接。软链接：软链接不占用磁盘空间，源文件删除则软链接失效。硬链接：硬链接只能链接普通文件，不能链接目录。使用格式：`ln `源文件 链接文件；`ln -s` 源文件 链接文件。如果没有`-s`选项代表建立一个硬链接文件，两个文件占用相同大小的硬盘空间，即使删除了源文件，链接文件还是存在，所以`-s`选项是更常见的形式。",
      "qas": [
        {
          "question": "ln命令的作用是什么？",
          "id": "5-370-58",
          "answers": [
            {
              "text": "建立链接文件（类似于Windows下的快捷方式）",
              "answer_start": 0
            }
          ]
        },
        {
          "question": "软链接的特点是什么？",
          "id": "5-370-59",
          "answers": [
            {
              "text": "不占用磁盘空间，源文件删除则软链接失效",
              "answer_start": 56
            }
          ]
        },
        {
          "question": "如何创建软链接？",
          "id": "5-370-60",
          "answers": [
            {
              "text": "ln -s 源文件 链接文件",
              "answer_start": 118
            }
          ]
        }
      ]
    },
    {
      "context": "Linux系统中`grep`命令是一种强大的文本搜索工具，`grep`允许对文本文件进行模式查找。如果找到匹配模式， `grep`打印包含模式的所有行。`grep`一般格式为：`grep [-选项] ‘搜索内容串’文件名 `。`-v` 显示不包含匹配文本的所有行（相当于求反）；`-n` 显示匹配行及行号；`-i` 忽略大小写。",
      "qas": [
        {
          "question": "grep命令的作用是什么？",
          "id": "5-370-61",
          "answers": [
            {
              "text": "一种强大的文本搜索工具，允许对文本文件进行模式查找，如果找到匹配模式，打印包含模式的所有行",
              "answer_start": 10
            }
          ]
        },
        {
          "question": "-n参数在grep命令中的作用是什么？",
          "id": "5-370-62",
          "answers": [
            {
              "text": "显示匹配行及行号",
              "answer_start": 181
            }
          ]
        },
        {
          "question": "哪个参数可以显示行号？",
          "id": "5-370-63",
          "answers": [
            {
              "text": "-n",
              "answer_start": 181
            }
          ]
        },
        {
          "question": "如何搜索以a开头的行？",
          "id": "5-370-64",
          "answers": [
            {
              "text": "grep -n '^a' 1.txt",
              "answer_start": 0
            }
          ]
        }
      ]
    },
    {
      "context": "`find`命令功能非常强大，通常用来在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件。常用用法：`find ./ -name test.sh `查找当前目录下所有名为test.sh的文件；`find ./ -name '*.sh' `查找当前目录下所有后缀为.sh的文件；`find /tmp -size +2M `查找在/tmp 目录下大于2M的文件。",
      "qas": [
        {
          "question": "find命令的主要功能是什么？",
          "id": "5-370-65",
          "answers": [
            {
              "text": "在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "如何查找当前目录下所有名为test.sh的文件？",
          "id": "5-370-66",
          "answers": [
            {
              "text": "find ./ -name test.sh",
              "answer_start": 79
            }
          ]
        },
        {
          "question": "如何查找后缀为.sh且文件名仅一个字符的文件？",
          "id": "5-370-67",
          "answers": [
            {
              "text": "ls ?.sh",
              "answer_start": 0
            }
          ]
        }
      ]
    },
    {
      "context": "`tar`是Unix/Linux中最常用的备份工具，此命令可以把一系列文件归档到一个大文件中，也可以把档案文件解开以恢复数据。`tar`使用格式 `tar [参数] 打包文件名 文件`。`-c `生成档案文件，创建打包文件；`-v `列出归档解档的详细过程，显示进度；`-f `指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后；`-t `列出档案中包含的文件；`-x` 解开档案文件。",
      "qas": [
        {
          "question": "tar命令的主要功能是什么？",
          "id": "5-370-68",
          "answers": [
            {
              "text": "把一系列文件归档到一个大文件中，也可以把档案文件解开以恢复数据",
              "answer_start": 10
            }
          ]
        },
        {
          "question": "-f参数在tar命令中的作用是什么，有什么注意事项？",
          "id": "5-370-69",
          "answers": [
            {
              "text": "指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后",
              "answer_start": 156
            }
          ]
        }
      ]
    },
    {
      "context": "`tar`与`gzip`命令结合使用实现文件打包、压缩。`tar`只负责打包文件，但不压缩，用`gzip`压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz。压缩用法：`tar cvzf 压缩包包名 文件1 文件2 ...`（-z指定格式为file.tar.gz）。解压用法：`tar zxvf 压缩包包名`；解压到指定目录：`-C `（大写字母“C”）。",
      "qas": [
        {
          "question": "gzip命令常与哪个命令结合使用？",
          "id": "5-370-70",
          "answers": [
            {
              "text": "tar",
              "answer_start": 5
            }
          ]
        },
        {
          "question": "如何压缩文件为.tar.gz格式？",
          "id": "5-370-71",
          "answers": [
            {
              "text": "tar cvzf 压缩包包名 文件1 文件2 ...",
              "answer_start": 85
            }
          ]
        },
        {
          "question": "如何将.tar.gz文件解压到指定目录？",
          "id": "5-370-72",
          "answers": [
            {
              "text": "tar zxvf 压缩包包名 -C 指定目录",
              "answer_start": 146
            }
          ]
        }
      ]
    },
    {
      "context": "`chmod` 修改文件权限有两种使用格式：字母法与数字法。字母法：`chmod` `u/g/o/a +/-/= rwx` 文件。u user（所有者）；g group（同组者）；o other（其他人）；a all（三者）。+增加权限；-撤销权限；=设定权限。r read（读取）；w write（写入）；x excute（执行）。数字法：r=4，w=2，x=1，-=0。如`chmod 751 file`表示所有者rwx，同组rx，其它x。参数`-R` 递归所有目录加上相同权限。",
      "qas": [
        {
          "question": "chmod命令的作用是什么？",
          "id": "5-370-73",
          "answers": [
            {
              "text": "修改文件权限",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "字母法中u、g、o、a分别代表什么？",
          "id": "5-370-74",
          "answers": [
            {
              "text": "u user（所有者）；g group（同组者）；o other（其他人）；a all（三者）",
              "answer_start": 45
            }
          ]
        },
        {
          "question": "r、w、x权限的数字代号各是多少？",
          "id": "5-370-75",
          "answers": [
            {
              "text": "r=4，w=2，x=1",
              "answer_start": 165
            }
          ]
        },
        {
          "question": "如何递归修改目录下所有文件的权限？",
          "id": "5-370-76",
          "answers": [
            {
              "text": "使用参数 -R",
              "answer_start": 245
            }
          ]
        }
      ]
    },
    {
      "context": "**更新仓库列表：** `sudo apt update`。**更新系统及应用：** `sudo apt dist-upgrade`。**安装依赖：** `sudo apt build-dep 应用名`。**下载源码:** `apt source 软件名`。**搜索依赖库或程序名:** `sudo apt-cache search 依赖名或者软件名`。**查看所有已安装软件名:** `apt list`。",
      "qas": [
        {
          "question": "如何更新仓库列表？",
          "id": "5-370-77",
          "answers": [
            {
              "text": "sudo apt update",
              "answer_start": 6
            }
          ]
        },
        {
          "question": "如何更新系统及应用？",
          "id": "5-370-78",
          "answers": [
            {
              "text": "sudo apt dist-upgrade",
              "answer_start": 32
            }
          ]
        },
        {
          "question": "如何搜索依赖库或程序名？",
          "id": "5-370-79",
          "answers": [
            {
              "text": "sudo apt-cache search 依赖名或者软件名",
              "answer_start": 105
            }
          ]
        }
      ]
    }
  ]
}