{
  "title": "常见文件系统简介",
  "paragraphs": [
    {
      "context": "文件系统是对一个存储设备上的数据和元数据进行组织的机制。它的最终目的是把大量数据有组织的放入持久性(persistant)的存储设备中，比如硬盘和磁盘。文件系统(file system)是就是文件在逻辑上组织形式，它以一种更加清晰的方式来存放各个文件。数据被存入到某个分区中。",
      "qas": [
        {
          "id": "5-386-1",
          "question": "文件系统的定义是什么？",
          "answers": [
            {
              "text": "对一个存储设备上的数据和元数据进行组织的机制",
              "answer_start": 5
            }
          ]
        },
        {
          "id": "5-386-2",
          "question": "文件系统的最终目的是什么？",
          "answers": [
            {
              "text": "把大量数据有组织的放入持久性(persistant)的存储设备中，比如硬盘和磁盘",
              "answer_start": 36
            }
          ]
        },
        {
          "id": "5-386-3",
          "question": "文件系统中数据存放在哪里？",
          "answers": [
            {
              "text": "某个分区中",
              "answer_start": 197
            }
          ]
        }
      ]
    },
    {
      "context": "Windows当前的默认文件系统，NTFS文件系统是一个基于安全性的文件系统，是Windows NT所采用的独特的文件系统结构，它是建立在保护文件和目录数据基础上，同时照顾节省存储资源、减少磁盘占用量的一种先进的文件系统。",
      "qas": [
        {
          "id": "5-386-4",
          "question": "Windows当前的默认文件系统是什么？",
          "answers": [
            {
              "text": "NTFS",
              "answer_start": 13
            }
          ]
        },
        {
          "id": "5-386-5",
          "question": "NTFS文件系统建立的基础是什么？",
          "answers": [
            {
              "text": "保护文件和目录数据",
              "answer_start": 67
            }
          ]
        }
      ]
    },
    {
      "context": "NTFS是Windows当前的默认文件系统，NTFS文件系统是一个基于安全性的文件系统，是Windows NT所采用的独特的文件系统结构，它是建立在保护文件和目录数据基础上，同时照顾节省存储资源、减少磁盘占用量的一种先进的文件系统。",
      "qas": [
        {
          "id": "5-386-6",
          "question": "Windows当前默认使用什么文件系统？",
          "answers": [
            {
              "text": "NTFS",
              "answer_start": 0
            }
          ]
        },
        {
          "id": "5-386-7",
          "question": "NTFS文件系统的主要设计基础是什么？",
          "answers": [
            {
              "text": "建立在保护文件和目录数据基础上",
              "answer_start": 72
            }
          ]
        }
      ]
    },
    {
      "context": "Ext系列是Linux的老牌文件系统了，一直是Linux的主打，从Ext3开始支持日志，Ext4更加完善了很多功能。由于其组织形式的限制，很难将很多现代文件系统的功能加进去，所以Linux才会出Btrfs项目企图重头开发一个功能强劲的文件系统。",
      "qas": [
        {
          "id": "5-386-8",
          "question": "Linux的老牌文件系统是什么系列？",
          "answers": [
            {
              "text": "Ext系列",
              "answer_start": 0
            }
          ]
        },
        {
          "id": "5-386-9",
          "question": "Ext3开始支持什么功能？",
          "answers": [
            {
              "text": "日志",
              "answer_start": 41
            }
          ]
        },
        {
          "id": "5-386-10",
          "question": "为什么Linux开发Btrfs项目？",
          "answers": [
            {
              "text": "由于Ext系列组织形式的限制，很难将很多现代文件系统的功能加进去，企图重头开发一个功能强劲的文件系统",
              "answer_start": 63
            }
          ]
        }
      ]
    },
    {
      "context": "Ext系列是Linux的老牌文件系统了，一直是Linux的主打，从Ext3开始支持日志，Ext4更加完善了很多功能。",
      "qas": [
        {
          "id": "5-386-11",
          "question": "Linux系统中长期使用的主流文件系统是什么？",
          "answers": [
            {
              "text": "Ext系列",
              "answer_start": 0
            }
          ]
        },
        {
          "id": "5-386-12",
          "question": "从哪个版本开始Ext文件系统支持日志功能？",
          "answers": [
            {
              "text": "从Ext3开始支持日志",
              "answer_start": 27
            }
          ]
        }
      ]
    },
    {
      "context": "BTRFS（通常念成Butter FS），由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标是取代Linux ext3文件系统，改善ext3的限制，特别是单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性。加入ext3/4未支持的一些功能，例如可写的磁盘快照(snapshots)，以及支持递归的快照(snapshots of snapshots)，内建磁盘阵列（RAID）支持，支持子卷(Subvolumes)的概念，允许在线调整文件系统大小。",
      "qas": [
        {
          "id": "5-386-13",
          "question": "BTRFS通常怎么念？",
          "answers": [
            {
              "text": "Butter FS",
              "answer_start": 12
            }
          ]
        },
        {
          "id": "5-386-14",
          "question": "BTRFS是由哪家公司宣布的？",
          "answers": [
            {
              "text": "Oracle",
              "answer_start": 25
            }
          ]
        },
        {
          "id": "5-386-15",
          "question": "BTRFS的目标是什么？",
          "answers": [
            {
              "text": "取代Linux ext3文件系统，改善ext3的限制，特别是单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性",
              "answer_start": 54
            }
          ]
        },
        {
          "id": "5-386-16",
          "question": "BTRFS加入了哪些ext3/4未支持的功能？",
          "answers": [
            {
              "text": "可写的磁盘快照(snapshots)，以及支持递归的快照(snapshots of snapshots)，内建磁盘阵列（RAID）支持，支持子卷(Subvolumes)的概念，允许在线调整文件系统大小",
              "answer_start": 165
            }
          ]
        }
      ]
    },
    {
      "context": "BTRFS由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标是取代Linux ext3文件系统，改善ext3的限制，特别是单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性。",
      "qas": [
        {
          "id": "5-386-17",
          "question": "BTRFS的开发目标是什么？",
          "answers": [
            {
              "text": "取代Linux ext3文件系统，改善ext3的限制",
              "answer_start": 41
            }
          ]
        },
        {
          "id": "5-386-18",
          "question": "BTRFS解决了ext3的哪些具体限制？",
          "answers": [
            {
              "text": "单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性",
              "answer_start": 64
            }
          ]
        }
      ]
    },
    {
      "context": "被称为真正的下一代文件系统，ZFS 提供卷管理（能够在单个文件系统中处理多个单独的存储设备），块级加密校验和（允许以极高的准确率检测数据损坏），自动损坏修复（其中冗余或奇偶校验存储可用），快速异步增量复制，内联压缩等，以及更多。",
      "qas": [
        {
          "id": "5-386-19",
          "question": "被称为真正的下一代文件系统的是什么？",
          "answers": [
            {
              "text": "ZFS",
              "answer_start": 17
            }
          ]
        },
        {
          "id": "5-386-20",
          "question": "ZFS提供的卷管理功能有什么特点？",
          "answers": [
            {
              "text": "能够在单个文件系统中处理多个单独的存储设备",
              "answer_start": 30
            }
          ]
        },
        {
          "id": "5-386-21",
          "question": "ZFS的块级加密校验和有什么作用？",
          "answers": [
            {
              "text": "允许以极高的准确率检测数据损坏",
              "answer_start": 82
            }
          ]
        }
      ]
    },
    {
      "context": "linux 可以实现在一个根系统下，挂载多个文件系统。比如：双系统中 /media 目录下挂载 NTFS文件系统，/mnt 目录下，挂载U盘的文件系统。",
      "qas": [
        {
          "id": "5-386-22",
          "question": "linux能否在一个根系统下挂载多个文件系统？",
          "answers": [
            {
              "text": "可以",
              "answer_start": 6
            }
          ]
        },
        {
          "id": "5-386-23",
          "question": "双系统中，NTFS文件系统通常挂载在哪个目录下？",
          "answers": [
            {
              "text": "/media 目录",
              "answer_start": 40
            }
          ]
        },
        {
          "id": "5-386-24",
          "question": "U盘的文件系统在linux中通常挂载在哪个目录下？",
          "answers": [
            {
              "text": "/mnt 目录",
              "answer_start": 68
            }
          ]
        }
      ]
    },
    {
      "context": "Linux支持的 文件系统有上百种，难道Linux内核需要对上百种一一适配吗？不需要。为了支持各种不同的文件系统，Linux 内核在用户进程和文件系统的中间，又引入了一个抽象层，也就是虚拟文件系统 VFS（Virtual File System）。VFS 定义了一组所有文件系统都支持的数据结构和标准接口。这样，用户进程和内核中的其他子系统，只需要跟 VFS 提供的统一接口进行交互就可以了，而不需要再关心底层各种文件系统的实现细节。",
      "qas": [
        {
          "id": "5-386-25",
          "question": "Linux内核需要对其支持的上百种文件系统一一适配吗？",
          "answers": [
            {
              "text": "不需要",
              "answer_start": 45
            }
          ]
        },
        {
          "id": "5-386-26",
          "question": "为了支持各种文件系统，Linux内核引入了什么抽象层？",
          "answers": [
            {
              "text": "虚拟文件系统 VFS（Virtual File System）",
              "answer_start": 99
            }
          ]
        },
        {
          "id": "5-386-27",
          "question": "VFS的作用是什么？",
          "answers": [
            {
              "text": "定义了一组所有文件系统都支持的数据结构和标准接口，使得用户进程和内核中的其他子系统只需跟VFS提供的统一接口交互，不需要关心底层各种文件系统的实现细节",
              "answer_start": 151
            }
          ]
        }
      ]
    },
    {
      "context": "根文件系统首先是一种文件系统，相对于普通的文件系统，它的特殊之处在于，它是内核启动时所挂载（mount）的第一个文件系统，内核代码的映像文件保存在根文件系统中，系统引导启动程序会在根文件系统挂载之后从中把一些初始化脚本（如rcS,inittab）和服务加载到内存中去运行。",
      "qas": [
        {
          "id": "5-386-28",
          "question": "根文件系统的特殊之处是什么？",
          "answers": [
            {
              "text": "它是内核启动时所挂载（mount）的第一个文件系统",
              "answer_start": 46
            }
          ]
        },
        {
          "id": "5-386-29",
          "question": "内核代码的映像文件保存在哪里？",
          "answers": [
            {
              "text": "根文件系统中",
              "answer_start": 92
            }
          ]
        },
        {
          "id": "5-386-30",
          "question": "系统引导启动程序在根文件系统挂载后会加载什么？",
          "answers": [
            {
              "text": "一些初始化脚本（如rcS,inittab）和服务",
              "answer_start": 121
            }
          ]
        }
      ]
    },
    {
      "context": "在 Linux 中将一个文件系统与一个存储设备关联起来的过程称为挂载（mount）。使用 mount 命令将一个文件系统附着到当前文件系统层次结构中（根）。在 Linux 系统启动阶段的最初阶段，root 文件系统就会被挂载到 root 目录下（/）。其它文件系统在之后通过 SystemV 下的 rc 或更新一些的 Linux 发行版中的 systemd 等 Linux 启动程序挂载。在启动进程中文件系统的挂载是由 /etc/fstab 配置文件管理的。",
      "qas": [
        {
          "id": "5-386-31",
          "question": "Linux中挂载的定义是什么？",
          "answers": [
            {
              "text": "将一个文件系统与一个存储设备关联起来的过程",
              "answer_start": 10
            }
          ]
        },
        {
          "id": "5-386-32",
          "question": "root文件系统在系统启动阶段的最初阶段被挂载到哪个目录？",
          "answers": [
            {
              "text": "root 目录下（/）",
              "answer_start": 114
            }
          ]
        },
        {
          "id": "5-386-33",
          "question": "Linux中其他文件系统通过什么程序挂载？",
          "answers": [
            {
              "text": "SystemV 下的 rc 或更新一些的 Linux 发行版中的 systemd 等 Linux 启动程序",
              "answer_start": 145
            }
          ]
        },
        {
          "id": "5-386-34",
          "question": "启动进程中文件系统的挂载由哪个配置文件管理？",
          "answers": [
            {
              "text": "/etc/fstab 配置文件",
              "answer_start": 236
            }
          ]
        }
      ]
    },
    {
      "context": "首先，在Linux下谈分区并不准确。与Windows分区，一个分区一个盘符不同。Linux是一整个目录树，Linux先划分固定大小的磁盘空间，设置好文件系统后，将磁盘空间挂载到固定目录下。",
      "qas": [
        {
          "id": "5-386-35",
          "question": "Linux的分区与Windows的分区有什么不同？",
          "answers": [
            {
              "text": "Windows是一个分区一个盘符，而Linux是一整个目录树，先划分磁盘空间，设置文件系统后挂载到固定目录下",
              "answer_start": 25
            }
          ]
        },
        {
          "id": "5-386-36",
          "question": "Linux如何处理磁盘空间？",
          "answers": [
            {
              "text": "先划分固定大小的磁盘空间，设置好文件系统后，将磁盘空间挂载到固定目录下",
              "answer_start": 62
            }
          ]
        }
      ]
    },
    {
      "context": "为什么要分区？数据安全：在不损失数据的情况下重装系统，比如独立设置 /home 挂载点，重装系统的时候直接标记回 /home，数据不会有任何损失。效率（机械硬盘）：将数据集中在某个分区，读取数据时，硬盘只会搜索相应区段，提升读取速度。",
      "qas": [
        {
          "id": "5-386-37",
          "question": "为什么要进行分区？",
          "answers": [
            {
              "text": "保障数据安全，在不损失数据的情况下重装系统；提升机械硬盘效率，将数据集中在某个分区，提升读取速度",
              "answer_start": 7
            }
          ]
        },
        {
          "id": "5-386-38",
          "question": "分区如何保障数据安全？",
          "answers": [
            {
              "text": "独立设置 /home 挂载点，重装系统的时候直接标记回 /home，数据不会有任何损失",
              "answer_start": 18
            }
          ]
        },
        {
          "id": "5-386-39",
          "question": "分区如何提升机械硬盘的效率？",
          "answers": [
            {
              "text": "将数据集中在某个分区，读取数据时，硬盘只会搜索相应区段，提升读取速度",
              "answer_start": 100
            }
          ]
        }
      ]
    },
    {
      "context": "关于/usr分区，多说一句，因为我经常搞机，重装比较多，如果单独划分 /usr分区，装完系统，直接挂载就可以使用以前的数据啦。如果你是普通用户，可以不分此目录。但 建议把 根目录 分得大一点，其他的空间给 /home 分区。",
      "qas": [
        {
          "id": "5-386-40",
          "question": "对于普通用户，关于/usr分区有什么建议？",
          "answers": [
            {
              "text": "可以不分此目录",
              "answer_start": 87
            }
          ]
        },
        {
          "id": "5-386-41",
          "question": "建议普通用户如何分配根目录和/home分区的空间？",
          "answers": [
            {
              "text": "把根目录分得大一点，其他的空间给 /home 分区",
              "answer_start": 104
            }
          ]
        }
      ]
    }
  ]
}