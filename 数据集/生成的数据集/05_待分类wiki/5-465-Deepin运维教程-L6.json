{
  "data": [
    {
      "title": "Deepin运维教程-L6",
      "paragraphs": [
        {
          "context": "逻辑卷的删除不允许联机操作，需要先卸载，再执行删除。执行删除操作时，首先删除LV逻辑卷，再删除VG卷组，最后删除PV物理卷。删除命令：lvremove。",
          "qas": [
            {
              "question": "删除逻辑卷是否允许联机操作？",
              "id": "5-465-1",
              "answers": [
                {
                  "text": "不允许联机操作，需要先卸载，再执行删除。",
                  "answer_start": 0
                }
              ]
            },
            {
              "question": "删除逻辑卷的正确顺序是什么？",
              "id": "5-465-2",
              "answers": [
                {
                  "text": "首先删除LV逻辑卷，再删除VG卷组，最后删除PV物理卷。",
                  "answer_start": 27
                }
              ]
            },
            {
              "question": "删除逻辑卷的命令是什么？",
              "id": "5-465-3",
              "answers": [
                {
                  "text": "lvremove",
                  "answer_start": 71
                }
              ]
            }
          ]
        },
        {
          "context": "逻辑卷的缩减使用命令lvreduce，不允许联机缩减，需先缩减文件系统的空间，再缩减逻辑卷的空间。",
          "qas": [
            {
              "question": "逻辑卷缩减的命令是什么？",
              "id": "5-465-4",
              "answers": [
                {
                  "text": "lvreduce",
                  "answer_start": 11
                }
              ]
            },
            {
              "question": "逻辑卷缩减是否允许联机操作？",
              "id": "5-465-5",
              "answers": [
                {
                  "text": "不允许联机缩减",
                  "answer_start": 21
                }
              ]
            },
            {
              "question": "逻辑卷缩减的步骤是什么？",
              "id": "5-465-6",
              "answers": [
                {
                  "text": "先缩减文件系统的空间，再缩减逻辑卷的空间。",
                  "answer_start": 33
                }
              ]
            }
          ]
        },
        {
          "context": "RAID中文全称：独立磁盘冗余阵列，简称磁盘阵列。可通过软件/硬件技术将多个独立磁盘整合成一个逻辑磁盘，提高数据I/O速度和冗余功能。",
          "qas": [
            {
              "question": "RAID的中文全称是什么？",
              "id": "5-465-7",
              "answers": [
                {
                  "text": "独立磁盘冗余阵列",
                  "answer_start": 5
                }
              ]
            },
            {
              "question": "RAID的作用是什么？",
              "id": "5-465-8",
              "answers": [
                {
                  "text": "提高数据I/O（读写）速度，和冗余数据的功能。",
                  "answer_start": 62
                }
              ]
            }
          ]
        },
        {
          "context": "RAID0：等量存储，至少由2块磁盘组成，同一个文档等量存放在不同的磁盘并行写入数据来提高效率，无冗余功能，一块盘故障数据丢失，不适合重要数据。",
          "qas": [
            {
              "question": "RAID0至少需要几块磁盘？",
              "id": "5-465-9",
              "answers": [
                {
                  "text": "2块磁盘",
                  "answer_start": 11
                }
              ]
            },
            {
              "question": "RAID0的缺点是什么？",
              "id": "5-465-10",
              "answers": [
                {
                  "text": "没有冗余功能，如果其中一块盘故障，数据会丢失，不适合存放重要数据。",
                  "answer_start": 59
                }
              ]
            }
          ]
        },
        {
          "context": "RAID1：完整备份，至少由2块磁盘组成，同一个文档复制成多份存储到不同磁盘提高可靠性，读写速度没有提升，适合存储重要的数据。",
          "qas": [
            {
              "question": "RAID1的特点是什么？",
              "id": "5-465-11",
              "answers": [
                {
                  "text": "完整备份，至少由2块磁盘组成，同一个文档复制成多份存储到不同磁盘提高可靠性，读写速度没有提升，适合存储重要的数据。",
                  "answer_start": 5
                }
              ]
            }
          ]
        },
        {
          "context": "RAID5：至少由3块磁盘组成，同一份文档分散写入不同磁盘，每个硬盘都有校验数据，校验数据占用磁盘三分之一空间，三分之二存原始数据，允许同时坏一块磁盘，可通过其他磁盘和校验信息恢复数据。",
          "qas": [
            {
              "question": "RAID5至少需要几块磁盘？",
              "id": "5-465-12",
              "answers": [
                {
                  "text": "3块磁盘",
                  "answer_start": 7
                }
              ]
            },
            {
              "question": "RAID5允许同时坏几块磁盘？",
              "id": "5-465-13",
              "answers": [
                {
                  "text": "1块磁盘",
                  "answer_start": 114
                }
              ]
            }
          ]
        },
        {
          "context": "RAID10=RAID1+RAID0，最少需要4块磁盘，先组成两组RAID1，再组成RAID0，提高读写速度和数据安全性，可用容量是总容量的一半。",
          "qas": [
            {
              "question": "RAID10由哪两种RAID组合而成？",
              "id": "5-465-14",
              "answers": [
                {
                  "text": "RAID1+RAID0",
                  "answer_start": 7
                }
              ]
            },
            {
              "question": "RAID10最少需要几块磁盘？",
              "id": "5-465-15",
              "answers": [
                {
                  "text": "4块磁盘",
                  "answer_start": 20
                }
              ]
            }
          ]
        },
        {
          "context": "实现RAID的三种方式：软件技术实现（软RAID）；外接式磁盘阵列柜（大型服务器，昂贵）；RAID磁盘阵列卡（硬RAID，更安全稳定，带缓存和电池）。",
          "qas": [
            {
              "question": "实现RAID的方式有哪些？",
              "id": "5-465-16",
              "answers": [
                {
                  "text": "通过软件技术实现RAID功能（软RAID）；外接式磁盘阵列柜；RAID磁盘阵列卡。",
                  "answer_start": 5
                }
              ]
            },
            {
              "question": "硬RAID相比软RAID有什么优势？",
              "id": "5-465-17",
              "answers": [
                {
                  "text": "更安全稳定，RAID卡带有缓存功能可实现数据自动恢复，RAID卡有电池。",
                  "answer_start": 66
                }
              ]
            }
          ]
        },
        {
          "context": "程序：计算机语言编写的命令序列集合，实现特定目标，占用磁盘空间，静态永久。进程：运行中的程序，占用内存，动态有生命周期，有PID，有父进程，分前后台。线程：轻量级进程，进程的子集，共享内存，切换快开销小。",
          "qas": [
            {
              "question": "什么是程序？",
              "id": "5-465-18",
              "answers": [
                {
                  "text": "用计算机语言编写的命令序列集合，用来实现特定的目标或解决特定的问题，程序占用磁盘空间，程序是静态并且是永久的。",
                  "answer_start": 0
                }
              ]
            },
            {
              "question": "什么是进程？",
              "id": "5-465-19",
              "answers": [
                {
                  "text": "正在运行中的程序叫进程，占用内存空间，进程是动态的，进程是有生命周期的，进程有自己的独立内存空间，每启动一个进程，系统就会为它分配内存空间并分配一个PID号，每个进程都会对应一个父进程，而父进程可以复制多个子进程，每种进程都有两种方式存在，前台与后台，一般进程都是以后台方式运。",
                  "answer_start": 45
                }
              ]
            },
            {
              "question": "线程的特点是什么？",
              "id": "5-465-20",
              "answers": [
                {
                  "text": "线程也被称为轻量级进程，被包含在进程中，是进程的一个子集，是进程中的实际运作单位，一个进程中可以并发多个线程，每条线程并行执行不同的任务，每个线程都是独立的，线程之间共享进程的内存空间，在多线程的程序中，由于线程很“轻”，故线程的切换非常迅速且开销小（在同一进程中）。",
                  "answer_start": 209
                }
              ]
            }
          ]
        },
        {
          "context": "pstree以树状结构显示进程信息及进程间关系，常用选项：-p显示PID，-a显示完整命令行，-u列出所属账号。",
          "qas": [
            {
              "question": "pstree命令的作用是什么？",
              "id": "5-465-21",
              "answers": [
                {
                  "text": "以树状结构显示进程信息，包括进程之间的关系。",
                  "answer_start": 7
                }
              ]
            },
            {
              "question": "pstree -p选项的作用是什么？",
              "id": "5-465-22",
              "answers": [
                {
                  "text": "显示进程PID",
                  "answer_start": 41
                }
              ]
            }
          ]
        },
        {
          "context": "ps aux：unix格式静态查看所有进程，a显示当前终端进程，u用户格式，x当前用户所有终端进程。ps -ef：Linux格式静态查看所有进程，e显示所有进程，l长格式，f完整信息。",
          "qas": [
            {
              "question": "ps aux的作用是什么？",
              "id": "5-465-23",
              "answers": [
                {
                  "text": "unix格式静态查看系统进程，查看系统所有进程信息。",
                  "answer_start": 0
                }
              ]
            },
            {
              "question": "ps -ef中-e选项的作用是什么？",
              "id": "5-465-24",
              "answers": [
                {
                  "text": "显示系统所有进程",
                  "answer_start": 115
                }
              ]
            }
          ]
        },
        {
          "context": "top动态查看系统性能，-d指定刷新秒数。交互指令：P按CPU排序，M按内存排序，q退出。",
          "qas": [
            {
              "question": "top命令的作用是什么？",
              "id": "5-465-25",
              "answers": [
                {
                  "text": "动态来查看系统运行性能及状态信息。",
                  "answer_start": 3
                }
              ]
            },
            {
              "question": "在top交互界面如何按CPU使用排序？",
              "id": "5-465-26",
              "answers": [
                {
                  "text": "按P(大写)",
                  "answer_start": 33
                }
              ]
            }
          ]
        },
        {
          "context": "pgrep通过程序名匹配进程，选项：-l输出进程名与PID，-U检索指定用户进程，-t检索指定终端进程，-x精确匹配。",
          "qas": [
            {
              "question": "pgrep命令的作用是什么？",
              "id": "5-465-27",
              "answers": [
                {
                  "text": "通过匹配其程序名，找到匹配的进程。",
                  "answer_start": 5
                }
              ]
            },
            {
              "question": "pgrep -U选项的作用是什么？",
              "id": "5-465-28",
              "answers": [
                {
                  "text": "检索指定用户进程",
                  "answer_start": 35
                }
              ]
            }
          ]
        },
        {
          "context": "进程前后台调度：&将进程放入后台；jobs -l查看后台进程；fg 进程编号调至前台；ctrl+z挂起至后台；bg 进程编号激活后台挂起进程。",
          "qas": [
            {
              "question": "如何将进程放入后台运行？",
              "id": "5-465-29",
              "answers": [
                {
                  "text": "使用&将进程放入后台运行",
                  "answer_start": 13
                }
              ]
            },
            {
              "question": "jobs -l的作用是什么？",
              "id": "5-465-30",
              "answers": [
                {
                  "text": "查看后台进程列表",
                  "answer_start": 20
                }
              ]
            }
          ]
        },
        {
          "context": "杀死进程方式：ctrl+c结束当前程序；kill -9强制杀死进程；killall -9 进程名强制杀死进程；pkill -9 进程名强制杀死进程。",
          "qas": [
            {
              "question": "如何强制杀死一个进程（使用kill命令）？",
              "id": "5-465-31",
              "answers": [
                {
                  "text": "kill -9 + PID",
                  "answer_start": 22
                }
              ]
            },
            {
              "question": "killall -9 进程名的作用是什么？",
              "id": "5-465-32",
              "answers": [
                {
                  "text": "强制杀死进程",
                  "answer_start": 35
                }
              ]
            }
          ]
        },
        {
          "context": "用户登录分析：users、who、w查看登录用户（详细度不同）；last显示登录成功用户；lastb显示登录失败用户。",
          "qas": [
            {
              "question": "哪个命令用于显示登录成功的用户信息？",
              "id": "5-465-33",
              "answers": [
                {
                  "text": "last",
                  "answer_start": 45
                }
              ]
            },
            {
              "question": "lastb的作用是什么？",
              "id": "5-465-34",
              "answers": [
                {
                  "text": "显示登录失败的用户信息",
                  "answer_start": 55
                }
              ]
            }
          ]
        },
        {
          "context": "Linux软件包分为源码包和二进制包（RPM包）。",
          "qas": [
            {
              "question": "Linux软件包分为哪几类？",
              "id": "5-465-35",
              "answers": [
                {
                  "text": "源码包和二进制包（RPM包）。",
                  "answer_start": 13
                }
              ]
            }
          ]
        },
        {
          "context": "源码包缺点：安装麻烦，需手动编译，解决依赖；优点：源代码开放，可二次开发，安装灵活，卸载方便。",
          "qas": [
            {
              "question": "源码包的优点是什么？",
              "id": "5-465-36",
              "answers": [
                {
                  "text": "软件源代码开放，允许用户二次开发，安装灵活，可以自定义安装路径与安装功能，卸载方便。",
                  "answer_start": 30
                }
              ]
            }
          ]
        },
        {
          "context": "RPM包缺点：功能不可自定义，安装不灵活，不可见源码；优点：已编译，安装简单快速。命名规则包含名称、版本、补丁次数、适合系统、CPU架构、扩展名。",
          "qas": [
            {
              "question": "RPM包的优点是什么？",
              "id": "5-465-37",
              "answers": [
                {
                  "text": "由于已经提前被编译过，所以安装简单，安装速度快。",
                  "answer_start": 42
                }
              ]
            },
            {
              "question": "RPM包命名包含哪些部分？",
              "id": "5-465-38",
              "answers": [
                {
                  "text": "软件包名称、版本、补丁次数、适合的系统、适合的CPU架构、rpm包扩展名。",
                  "answer_start": 67
                }
              ]
            }
          ]
        },
        {
          "context": "rpm命令管理软件包，常用选项：-q查询是否安装，-qa列出所有安装软件，-ivh安装，-e卸载，--import导入签名。",
          "qas": [
            {
              "question": "rpm -ivh的作用是什么？",
              "id": "5-465-39",
              "answers": [
                {
                  "text": "安装软件包，v显示详细信息，h显示软件安装进度。",
                  "answer_start": 53
                }
              ]
            },
            {
              "question": "如何查询一个软件是否安装（使用rpm命令）？",
              "id": "5-465-40",
              "answers": [
                {
                  "text": "rpm -q 软件包全名",
                  "answer_start": 31
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}