{
  "data": [
    {
      "title": "程序员必知的89个操作系统核心概念",
      "paragraphs": [
        {
          "context": "操作系统（Operating System，OS）是管理计算机硬件与软件资源的系统软件，是计算机系统的内核与基石，处理管理与配置内存、决定系统资源供需优先次序等事务，提供用户与系统交互界面。",
          "qas": [
            {
              "question": "什么是操作系统？",
              "id": "3-163-1",
              "answers": [
                {
                  "text": "管理计算机硬件与软件资源的系统软件，是计算机系统的内核与基石。",
                  "answer_start": 0
                }
              ]
            },
            {
              "question": "操作系统的作用有哪些？",
              "id": "3-163-2",
              "answers": [
                {
                  "text": "处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务，提供用户与系统交互的操作界面。",
                  "answer_start": 57
                }
              ]
            }
          ]
        },
        {
          "context": "shell是一个程序，可从键盘获取命令并提供给操作系统执行，过去是类Unix系统唯一用户界面，如今除CLI外还有GUI。",
          "qas": [
            {
              "question": "什么是shell？",
              "id": "3-163-3",
              "answers": [
                {
                  "text": "一个可从键盘获取命令并将其提供给操作系统以执行的程序。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "GUI (Graphical User Interface)是允许用户通过图形图标和音频指示符与电子设备交互的用户界面。",
          "qas": [
            {
              "question": "GUI是什么？",
              "id": "3-163-4",
              "answers": [
                {
                  "text": "一种允许用户通过图形图标和音频指示符与电子设备进行交互的用户界面。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "内核模式（kernel mode）也称超级模式，执行的代码可完整不受限制访问底层硬件，能执行任何CPU指令并引用任何内存地址，保留给操作系统最低级别、最受信任功能，崩溃会停止整个计算机，是开机自动模式。",
          "qas": [
            {
              "question": "什么是内核模式？",
              "id": "3-163-5",
              "answers": [
                {
                  "text": "通常也被称为超级模式，在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问，可执行任何CPU指令并引用任何内存地址，通常保留给操作系统的最低级别、最受信任的功能。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "用户模式（user node）下操作系统运行用户应用程序，应用程序请求操作系统帮助或发生中断、系统调用时转换为内核模式，用户模式下模式位为1，切换时变为0。",
          "qas": [
            {
              "question": "什么是用户模式？",
              "id": "3-163-6",
              "answers": [
                {
                  "text": "当操作系统运行用户应用程序时，系统所处的模式，应用程序请求操作系统的帮助或发生中断或系统调用时，会转换为内核模式，在用户模式下，模式位设置为1。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "计算机架构是描述计算机系统功能、组织和实现的一组规则和方法，主要包括指令集、内存管理、I/O和总线结构。",
          "qas": [
            {
              "question": "什么是计算机架构？",
              "id": "3-163-7",
              "answers": [
                {
                  "text": "在计算机工程中，是描述计算机系统功能，组织和实现的一组规则和方法，主要包括指令集、内存管理、I/O 和总线结构。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "SATA(Serial ATA)是一种电脑总线，负责主板和大容量存储设备之间的数据传输，主要用于个人电脑。",
          "qas": [
            {
              "question": "SATA是什么？",
              "id": "3-163-8",
              "answers": [
                {
                  "text": "串行ATA，是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "复用（multiplexing）也称共享，在操作系统中主要指时间和空间的管理，不同程序或用户轮流使用资源。",
          "qas": [
            {
              "question": "什么是复用？",
              "id": "3-163-9",
              "answers": [
                {
                  "text": "也称为共享，在操作系统中主要指示了时间和空间的管理，对资源进行复用时，不同的程序或用户轮流使用它。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "大型机（mainframes）是一类计算机，以大尺寸、存储量大、处理能力强和高度可靠性著称，被大型组织用于关键任务应用程序的数据处理。",
          "qas": [
            {
              "question": "什么是大型机？",
              "id": "3-163-10",
              "answers": [
                {
                  "text": "是一类计算机，通常以其大尺寸，存储量，处理能力和高度的可靠性而著称，主要由大型组织用于需要大量数据处理的关键任务应用程序。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "批处理（batch system）操作系统中用户不直接与计算机交互，在脱机设备上准备工作提交给操作员，将类似需求作业一起批处理成组运行。",
          "qas": [
            {
              "question": "什么是批处理系统？",
              "id": "3-163-11",
              "answers": [
                {
                  "text": "批处理操作系统的用户不直接与计算机进行交互，每个用户在打孔卡等脱机设备上准备工作并提交给计算机操作员，为加快处理速度，将具有类似需求的作业一起批处理并成组运行。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "OS/360是IBM为1964年发布的System/360大型机开发的已停产批处理操作系统。",
          "qas": [
            {
              "question": "OS/360是什么？",
              "id": "3-163-12",
              "answers": [
                {
                  "text": "正式称为IBM System / 360操作系统，是由IBM为1964年发布的其当时新的System/360大型机开发的已停产的批处理操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "多处理系统（Computer multitasking）指计算机同时运行多个程序的能力，通过轮流运行程序代码段、保存工作环境实现。",
          "qas": [
            {
              "question": "什么是多处理系统？",
              "id": "3-163-13",
              "answers": [
                {
                  "text": "是指计算机同时运行多个程序的能力，多任务的一般方法是运行第一个程序的一段代码，保存工作环境；再运行第二个程序的一段代码，保存环境等。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "分时系统（Time-sharing）是通过多程序和多任务同时在许多用户之间共享计算资源的系统。",
          "qas": [
            {
              "question": "什么是分时系统？",
              "id": "3-163-14",
              "answers": [
                {
                  "text": "在计算中，是通过多程序和多任务同时在许多用户之间共享计算资源的一种系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "相容分时系统（Compatible Time-Sharing System）是最早的分时操作系统，由美国麻省理工学院计算机中心设计与实作。",
          "qas": [
            {
              "question": "什么是相容分时系统？",
              "id": "3-163-15",
              "answers": [
                {
                  "text": "最早的分时操作系统，由美国麻省理工学院计算机中心设计与实作。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "云计算（cloud computing）是计算机系统资源按需可用，无需用户直接主动管理，术语常指Internet上供多用户使用的数据中心，大型云功能多分布在多个位置，近用户连接的为边缘服务器。",
          "qas": [
            {
              "question": "什么是云计算？",
              "id": "3-163-16",
              "answers": [
                {
                  "text": "是计算机系统资源（尤其是数据存储和计算能力）的按需可用性，而无需用户直接进行主动管理，这个术语通常用于描述Internet上可供许多用户使用的数据中心。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "UNIX操作系统是强大的多用户、多任务操作系统，支持多种处理器架构，属于分时操作系统。",
          "qas": [
            {
              "question": "UNIX操作系统有什么特点？",
              "id": "3-163-17",
              "answers": [
                {
                  "text": "是一个强大的多用户、多任务操作系统，支持多种处理器架构，属于分时操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "UNIX System V是UNIX操作系统的一个分支。",
          "qas": [
            {
              "question": "UNIX System V是什么？",
              "id": "3-163-18",
              "answers": [
                {
                  "text": "是UNIX操作系统的一个分支。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "BSD(Berkeley Software Distribution)是UNIX的衍生系统。",
          "qas": [
            {
              "question": "BSD是什么？",
              "id": "3-163-19",
              "answers": [
                {
                  "text": "是UNIX的衍生系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "POSIX是IEEE为使软件在各种UNIX操作系统上运行而定义API的一系列互相关联的标准的总称。",
          "qas": [
            {
              "question": "POSIX是什么？",
              "id": "3-163-20",
              "answers": [
                {
                  "text": "可移植操作系统接口，是IEEE为要在各种UNIX操作系统上运行软件，而定义API的一系列互相关联的标准的总称。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "MINIX是一个迷你版本的类UNIX操作系统。",
          "qas": [
            {
              "question": "MINIX是什么？",
              "id": "3-163-21",
              "answers": [
                {
                  "text": "是一个迷你版本的类UNIX操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "DOS (Disk Operating System)是可以使用磁盘存储设备的计算机操作系统。",
          "qas": [
            {
              "question": "DOS是什么？",
              "id": "3-163-22",
              "answers": [
                {
                  "text": "磁盘操作系统，是可以使用磁盘存储设备（例如软盘，硬盘驱动器或光盘）的计算机操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "MS-DOS是微软公司发展的运行在Intel x86个人电脑上的DOS操作系统，是DOS家族中最著名的，Windows 95前是IBM PC及兼容机基本配备，是个人电脑中最普遍使用的DOS操作系统。",
          "qas": [
            {
              "question": "MS-DOS是什么？",
              "id": "3-163-23",
              "answers": [
                {
                  "text": "一个由美国微软公司发展的操作系统，运行在Intel x86个人电脑上，是DOS操作系统家族中最著名的一个。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "MacOS X是苹果公司推出的基于图形用户界面的操作系统，为Macintosh的主操作系统。",
          "qas": [
            {
              "question": "MacOS X是什么？",
              "id": "3-163-24",
              "answers": [
                {
                  "text": "是苹果公司推出的基于图形用户界面操作系统，为Macintosh的主操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "Windows NT是微软公司1993年推出的纯32位操作系统核心。",
          "qas": [
            {
              "question": "Windows NT是什么？",
              "id": "3-163-25",
              "answers": [
                {
                  "text": "是美国微软公司1993年推出的纯32位操作系统核心。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "Service Pack(SP)是程序的更新、修复和（或）增强的集合，以独立安装包形式发布，公司在修补程序达一定数量时发布。",
          "qas": [
            {
              "question": "Service Pack(SP)是什么？",
              "id": "3-163-26",
              "answers": [
                {
                  "text": "是程序的更新、修复和（或）增强的集合，以一个独立的安装包的形式发布，许多公司在为某一程序而做的修补程序达到一定数量时，就发布一个Service Pack。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "数字版权管理（DRM）是工具或技术保护措施（TPM），是一组访问控制技术，用于限制对专有硬件和受版权保护的作品的使用。",
          "qas": [
            {
              "question": "数字版权管理（DRM）是什么？",
              "id": "3-163-27",
              "answers": [
                {
                  "text": "他是工具或技术保护措施（TPM）是一组访问控制技术，用于限制对专有硬件和受版权保护的作品的使用。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "x86是一整套指令集体系结构，由Intel最初基于Intel 8086微处理器及其8088变体开发，采用内存分段处理更多内存，32位是默认位数，x86-64位是64位拓展，向后兼容16位及32位x86架构。",
          "qas": [
            {
              "question": "x86是什么？",
              "id": "3-163-28",
              "answers": [
                {
                  "text": "是一整套指令集体系结构，由Intel最初基于Intel 8086微处理器及其8088变体开发，采用内存分段作为解决方案，用于处理比普通16位地址可以覆盖的更多内存。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "FreeBSD是一个类UNIX的操作系统，是FreeBSD项目的发展成果。",
          "qas": [
            {
              "question": "FreeBSD是什么？",
              "id": "3-163-29",
              "answers": [
                {
                  "text": "是一个类UNIX的操作系统，也是FreeBSD项目的发展成果。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "X Window System（X11，或简称X）是用于位图显示的窗口系统，在类UNIX操作系统上很常见。",
          "qas": [
            {
              "question": "X Window System是什么？",
              "id": "3-163-30",
              "answers": [
                {
                  "text": "是用于位图显示的窗口系统，在类UNIX操作系统上很常见。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "Gnome是完全由自由软件组成的桌面环境，目标操作系统是Linux，大部分BSD系统亦支持。",
          "qas": [
            {
              "question": "Gnome是什么？",
              "id": "3-163-31",
              "answers": [
                {
                  "text": "是一个完全由自由软件组成的桌面环境，其目标操作系统是Linux，但是大部分的BSD系统亦支持GNOME。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "网络操作系统是用于网络设备（如路由器，交换机或防火墙）的专用操作系统。",
          "qas": [
            {
              "question": "什么是网络操作系统？",
              "id": "3-163-32",
              "answers": [
                {
                  "text": "是用于网络设备（如路由器，交换机或防火墙）的专用操作系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "分布式网络系统是在独立、网络、通信和物理上独立计算节点的集合上的软件，处理由多个CPU服务的作业，每个节点拥有全局集合操作系统特定软件的一部分。",
          "qas": [
            {
              "question": "什么是分布式网络系统？",
              "id": "3-163-33",
              "answers": [
                {
                  "text": "是在独立，网络，通信和物理上独立计算节点的集合上的软件，它们处理由多个CPU服务的作业，每个单独的节点都拥有全局集合操作系统的特定软件的一部分。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "程序计数器是CPU中的寄存器，用于指示计算机在其程序序列中的位置。",
          "qas": [
            {
              "question": "什么是程序计数器？",
              "id": "3-163-34",
              "answers": [
                {
                  "text": "是一个CPU中的寄存器，用于指示计算机在其程序序列中的位置。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "堆栈寄存器是计算机CPU中的寄存器，目的是跟踪调用堆栈。",
          "qas": [
            {
              "question": "什么是堆栈寄存器？",
              "id": "3-163-35",
              "answers": [
                {
                  "text": "是计算机CPU中的寄存器，其目的是跟踪调用堆栈。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "程序状态字是由操作系统维护的8个字节（或64位）长的数据的集合，跟踪系统的当前状态。",
          "qas": [
            {
              "question": "什么是程序状态字？",
              "id": "3-163-36",
              "answers": [
                {
                  "text": "是由操作系统维护的8个字节（或64位）长的数据的集合，它跟踪系统的当前状态。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "流水线是一组串联连接的数据处理元素，一个元素的输出是下一个元素的输入，元素通常并行或按时间分割执行，元素间常插入缓冲区存储。",
          "qas": [
            {
              "question": "什么是流水线？",
              "id": "3-163-37",
              "answers": [
                {
                  "text": "在计算世界中，是一组串联连接的数据处理元素，其中一个元素的输出是下一个元素的输入，流水线的元素通常以并行或按时间分割的方式执行，通常在元素之间插入一定数量的缓冲区存储。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "超标量CPU架构是指在一颗处理器内核中实行了指令级并发的一类并发运算，能在相同CPU主频下实现更高CPU流量。",
          "qas": [
            {
              "question": "什么是超标量？",
              "id": "3-163-38",
              "answers": [
                {
                  "text": "超标量CPU架构是指在一颗处理器内核中实行了指令级并发的一类并发运算，这种技术能够在相同的CPU主频下实现更高的CPU流量。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "系统调用指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务，提供用户程序与操作系统之间的接口，大多数系统交互式操作需求在内核态运行。",
          "qas": [
            {
              "question": "什么是系统调用？",
              "id": "3-163-39",
              "answers": [
                {
                  "text": "指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务，系统调用提供用户程序与操作系统之间的接口，大多数系统交互式操作需求在内核态运行。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "多线程是指从软件或者硬件上实现多个线程并发执行的技术，具有多线程能力的计算机因硬件支持能同时执行多个线程，提升整体处理性能。",
          "qas": [
            {
              "question": "什么是多线程？",
              "id": "3-163-40",
              "answers": [
                {
                  "text": "是指从软件或者硬件上实现多个线程并发执行的技术，具有多线程能力的计算机因为有硬件支持而能够在同一时间执行多个线程，进而提升整体处理性能。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "CPU核心是CPU的大脑，接收指令，执行计算或运算以满足指令，一个CPU可以有多个内核。",
          "qas": [
            {
              "question": "什么是CPU核心？",
              "id": "3-163-41",
              "answers": [
                {
                  "text": "它是CPU的大脑，它接收指令，并执行计算或运算以满足这些指令，一个CPU可以有多个内核。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "图形处理器（Graphics Processing Unit）是专门在个人电脑、工作站、游戏机和一些移动设备上运行绘图运算工作的微处理器。",
          "qas": [
            {
              "question": "什么是图形处理器？",
              "id": "3-163-42",
              "answers": [
                {
                  "text": "又称显示核心、视觉处理器、显示芯片或绘图芯片，是一种专门在个人电脑、工作站、游戏机和一些移动设备（如平板电脑、智能手机等）上运行绘图运算工作的微处理器。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "存储体系结构中顶层存储器速度最高、容量最小、成本高，层级越向下，访问效率越慢、容量越大、造价越便宜。",
          "qas": [
            {
              "question": "存储体系结构有什么特点？",
              "id": "3-163-43",
              "answers": [
                {
                  "text": "顶层的存储器速度最高，但是容量最小，成本非常高，层级结构越向下，其访问效率越慢，容量越大，但是造价也就越便宜。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "高速缓存行是把高速缓存分割成的固定大小的块，大小以突发读或者突发写周期的大小为基础。",
          "qas": [
            {
              "question": "什么是高速缓存行？",
              "id": "3-163-44",
              "answers": [
                {
                  "text": "其实就是把高速缓存分割成了固定大小的块，其大小是以突发读或者突发写周期的大小为基础的。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "缓存命中是当应用程序或软件请求数据时，CPU首先在最近的内存位置（通常是主缓存）中查找数据，若找到则视为缓存命中。",
          "qas": [
            {
              "question": "什么是缓存命中？",
              "id": "3-163-45",
              "answers": [
                {
                  "text": "当应用程序或软件请求数据时，会首先发生缓存命中，首先，中央处理单元（CPU）在其最近的内存位置（通常是主缓存）中查找数据，如果在缓存中找到请求的数据，则将其视为缓存命中。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "L1 cache是CPU芯片中内置的存储库，也称为主缓存，是计算机中最快的内存，最接近处理器。",
          "qas": [
            {
              "question": "什么是L1 cache？",
              "id": "3-163-46",
              "answers": [
                {
                  "text": "一级缓存是CPU芯片中内置的存储库，L1缓存也称为主缓存，是计算机中最快的内存，并且最接近处理器。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "L2 cache是内置在CPU芯片中、包装在同一模块中或建在主板上的存储库，为L1缓存提供数据，比L1内存慢。",
          "qas": [
            {
              "question": "什么是L2 cache？",
              "id": "3-163-47",
              "answers": [
                {
                  "text": "二级缓存存储库，内置在CPU芯片中，包装在同一模块中，或者建在主板上，L2高速缓存提供给L1高速缓存，后者提供给处理器，L2内存比L1内存慢。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "L3 cache是内置在主板上或CPU模块内的存储库，为L2缓存提供数据，内存比L2慢但比主内存快，依次提供给L2、L1缓存再到处理器。",
          "qas": [
            {
              "question": "什么是L3 cache？",
              "id": "3-163-48",
              "answers": [
                {
                  "text": "三级缓存内置在主板上或CPU模块内的存储库，L3高速缓存为L2高速缓存提供数据，其内存通常比L2内存慢，但比主内存快，L3高速缓存提供给L2高速缓存，后者又提供给L1高速缓存，后者又提供给处理器。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "RAM（Random Access Memory）是与CPU直接交换数据的内部存储器，可随时读写，速度快，作为操作系统或运行中程序的临时数据存储介质，断电数据丢失。",
          "qas": [
            {
              "question": "什么是RAM？",
              "id": "3-163-49",
              "answers": [
                {
                  "text": "随机存取存储器，也叫主存，是与CPU直接交换数据的内部存储器，它可以随时读写，而且速度很快，通常作为操作系统或其他正在运行中的程序的临时数据存储介质，与ROM的最大区别是数据的易失性，即一旦断电所存储的数据将随之丢失。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "ROM (Read Only Memory)是半导体存储器，一旦存储数据无法改变或删除，内容不因电源关闭而消失，用于存储不需经常变更的程序或数据。",
          "qas": [
            {
              "question": "什么是ROM？",
              "id": "3-163-50",
              "answers": [
                {
                  "text": "只读存储器是一种半导体存储器，其特性是一旦存储数据就无法改变或删除，且内容不会因为电源关闭而消失，在电子或电脑系统中，通常用以存储不需经常变更的程序或数据。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "EEPROM (Electrically Erasable PROM)是可通过电子方式多次复写的半导体存储设备。",
          "qas": [
            {
              "question": "什么是EEPROM？",
              "id": "3-163-51",
              "answers": [
                {
                  "text": "电可擦除可编程只读存储器，是一种可以通过电子方式多次复写的半导体存储设备。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "闪存是电子式可清除程序化只读存储器的形式，允许在操作中被多次擦或写，用于一般性数据存储及电脑与数字产品间数据交换。",
          "qas": [
            {
              "question": "什么是闪存？",
              "id": "3-163-52",
              "answers": [
                {
                  "text": "是一种电子式可清除程序化只读存储器的形式，允许在操作中被多次擦或写的存储器，这种科技主要用于一般性数据存储，以及在电脑与其他数字产品间交换传输数据。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "SSD(Solid State Disks)是主要以闪存作为永久性存储器的电脑存储设备。",
          "qas": [
            {
              "question": "什么是SSD？",
              "id": "3-163-53",
              "answers": [
                {
                  "text": "固态硬盘，是一种主要以闪存作为永久性存储器的电脑存储设备。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "虚拟地址是计算机系统内存管理机制，使应用程序认为有连续可用内存，实际被分隔成多个物理内存碎片，部分暂存外部磁盘，需时交换数据，方便编写大型程序，有效使用物理内存。",
          "qas": [
            {
              "question": "什么是虚拟地址？",
              "id": "3-163-54",
              "answers": [
                {
                  "text": "虚拟内存是计算机系统内存管理的一种机制，它使得应用程序认为它拥有连续可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "MMU (Memory Management Unit)是处理CPU内存访问请求的计算机硬件，功能包括虚拟地址到物理地址的转换、内存保护、CPU高速缓存控制等。",
          "qas": [
            {
              "question": "什么是MMU？",
              "id": "3-163-55",
              "answers": [
                {
                  "text": "内存管理单元，有时称作分页内存管理单元，它是一种负责处理中央处理器（CPU）的内存访问请求的计算机硬件，它的功能包括虚拟地址到物理地址的转换（即虚拟内存管理）、内存保护、中央处理器高速缓存的控制等。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "context switch（上下文切换）是存储和重建CPU状态的机制，交换CPU上的进程时需先存储当前进程状态，再将进程状态读回CPU。",
          "qas": [
            {
              "question": "什么是context switch？",
              "id": "3-163-56",
              "answers": [
                {
                  "text": "上下文切换，又称环境切换，是一个存储和重建CPU状态的机制，要交换CPU上的进程时，必需先行存储当前进程的状态，然后再将进程状态读回CPU中。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "驱动程序（device driver）是允许高级别电脑软件与硬件交互的程序，创建硬件与硬件或硬件与软件沟通的接口，使硬件设备数据交换成为可能。",
          "qas": [
            {
              "question": "什么是驱动程序？",
              "id": "3-163-57",
              "answers": [
                {
                  "text": "设备驱动程序，简称驱动程序（driver），是一个允许高级别电脑软件与硬件交互的程序，这种程序创建了一个硬件与硬件，或硬件与软件沟通的接口，经由主板上的总线或其它沟通子系统与硬件形成连接的机制，这样使得硬件设备上的数据交换成为可能。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "忙等（busy waiting）也称自旋，是进程反复检查一个条件是否为真的机制，如检查键盘输入或某个锁是否可用。",
          "qas": [
            {
              "question": "什么是忙等？",
              "id": "3-163-58",
              "answers": [
                {
                  "text": "在软件工程中，忙碌等待也称自旋，是一种以进程反复检查一个条件是否为真的条件，这种机制可能为检查键盘输入或某个锁是否可用。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "中断（Interrupt）是处理器接收到外围硬件异步信号或软件同步信号后进行相应处理，硬件中断导致处理器保存执行状态，软件中断是CPU指令集中的指令指示运行信息切换并导向中断处理代码，在多任务处理尤其是即时系统中有用。",
          "qas": [
            {
              "question": "什么是中断？",
              "id": "3-163-59",
              "answers": [
                {
                  "text": "通常，在接收到来自外围硬件（相对于中央处理器和内存）的异步信号，或来自软件的同步信号之后，处理器将会进行相应的硬件／软件处理，发出这样的信号称为进行中断请求（interrupt request，IRQ）。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "中断向量位于中断向量表中，中断向量表（IVT）是将中断处理程序列表与中断请求列表相关联的数据结构，每个条目是中断处理程序的地址。",
          "qas": [
            {
              "question": "什么是中断向量？",
              "id": "3-163-60",
              "answers": [
                {
                  "text": "中断向量位于中断向量表中，中断向量表（IVT）是将中断处理程序列表与中断向量表中的中断请求列表相关联的数据结构，中断向量表的每个条目（称为中断向量）都是中断处理程序的地址。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "DMA (Direct Memory Access)是计算机科学中的内存访问技术，允许某些电脑内部硬件子系统独立直接读写系统内存，不需CPU介入处理。",
          "qas": [
            {
              "question": "什么是DMA？",
              "id": "3-163-61",
              "answers": [
                {
                  "text": "直接内存访问，是计算机科学中的一种内存访问技术，它允许某些电脑内部的硬件子系统（电脑外设），可以独立地直接读写系统内存，而不需中央处理器（CPU）介入处理 。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "总线（Bus）是计算机组件间规范化的交换数据的方式，以通用方式为各组件提供数据传送和控制逻辑。",
          "qas": [
            {
              "question": "什么是总线？",
              "id": "3-163-62",
              "answers": [
                {
                  "text": "总线（Bus）是指计算机组件间规范化的交换数据的方式，即以一种通用的方式为各组件提供数据传送和控制逻辑。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "PCIe (Peripheral Component Interconnect Express)是计算机总线的重要分支，沿用PCI编程概念及信号标准，构建更高速的串行通信系统标准。",
          "qas": [
            {
              "question": "什么是PCIe？",
              "id": "3-163-63",
              "answers": [
                {
                  "text": "官方简称PCIe，是计算机总线的一个重要分支，它沿用现有的PCI编程概念及信号标准，并且构建了更加高速的串行通信系统标准。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "DMI (Direct Media Interface)是英特尔专用的总线，用于电脑主板上南桥芯片和北桥芯片之间的连接。",
          "qas": [
            {
              "question": "什么是DMI？",
              "id": "3-163-64",
              "answers": [
                {
                  "text": "直接媒体接口，是英特尔专用的总线，用于电脑主板上南桥芯片和北桥芯片之间的连接。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "USB(Universal Serial Bus)是连接计算机系统与外部设备的串口总线标准，也是输入输出接口技术规范，应用于个人电脑、移动设备等，扩展至摄影器材等领域。",
          "qas": [
            {
              "question": "什么是USB？",
              "id": "3-163-65",
              "answers": [
                {
                  "text": "是连接计算机系统与外部设备的一种串口总线标准，也是一种输入输出接口的技术规范，被广泛地应用于个人电脑和移动设备等信息通讯产品，并扩展至摄影器材、数字电视（机顶盒）、游戏机等其它相关领域。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "BIOS(Basic Input Output System)是通电引导阶段运行硬件初始化及为操作系统提供运行时服务的固件，是开机时运行的第一个软件。",
          "qas": [
            {
              "question": "什么是BIOS？",
              "id": "3-163-66",
              "answers": [
                {
                  "text": "是在通电引导阶段运行硬件初始化，以及为操作系统提供运行时服务的固件，它是开机时运行的第一个软件。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "硬实时系统（hard real-time system）要求必须绝对在每个截止日期前完成任务，如核系统、一些医疗应用、国防应用、航空电子设备等。",
          "qas": [
            {
              "question": "什么是硬实时系统？",
              "id": "3-163-67",
              "answers": [
                {
                  "text": "硬实时性意味着你必须绝对在每个截止日期前完成任务，很少有系统有此要求，例如核系统，一些医疗应用（例如起搏器），大量国防应用，航空电子设备等。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "软实时系统（soft real-time system）可能会错过某些截止日期，错过太多会导致性能下降，如计算机中的声音系统。",
          "qas": [
            {
              "question": "什么是软实时系统？",
              "id": "3-163-68",
              "answers": [
                {
                  "text": "软实时系统可能会错过某些截止日期，但是如果错过太多，最终性能将下降，一个很好的例子是计算机中的声音系统。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "进程（Process）是程序（指令和数据）的真正运行实例，可能与同一个程序相关，每个进程可同步或异步独立运行。",
          "qas": [
            {
              "question": "什么是进程？",
              "id": "3-163-69",
              "answers": [
                {
                  "text": "程序本身只是指令、数据及其组织形式的描述，进程才是程序（那些指令和数据）的真正运行实例，若进程有可能与同一个程序相关系，且每个进程皆可以同步（循序）或异步的方式独立运行。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "地址空间是内存中可供程序或进程使用的有效地址范围，即程序或进程可访问的内存，可为物理或虚拟内存，用于执行指令和存储数据。",
          "qas": [
            {
              "question": "什么是地址空间？",
              "id": "3-163-70",
              "answers": [
                {
                  "text": "地址空间是内存中可供程序或进程使用的有效地址范围，也就是说，它是程序或进程可以访问的内存，存储器可以是物理的也可以是虚拟的，用于执行指令和存储数据。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "进程表是操作系统维护的数据结构，每个条目（上下文块）包含进程信息，如名称、状态、优先级、寄存器、等待的信号灯等。",
          "qas": [
            {
              "question": "什么是进程表？",
              "id": "3-163-71",
              "answers": [
                {
                  "text": "进程表是操作系统维护的数据结构，该表中的每个条目（通常称为上下文块）均包含有关进程的信息，例如进程名称和状态，优先级，寄存器以及它可能正在等待的信号灯。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "命令行界面（command-line interpreter）是图形用户界面普及前广泛使用的用户界面，不支持鼠标，用户通过键盘输入指令，计算机执行。",
          "qas": [
            {
              "question": "什么是命令行界面？",
              "id": "3-163-72",
              "answers": [
                {
                  "text": "是在图形用户界面得到普及之前使用最为广泛的用户界面，它通常不支持鼠标，用户通过键盘输入指令，计算机接收到指令后，予以执行。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "进程间通信（interprocess communication）是至少两个进程或线程间传送数据或信号的技术或方法。",
          "qas": [
            {
              "question": "什么是进程间通信？",
              "id": "3-163-73",
              "answers": [
                {
                  "text": "指至少两个进程或线程间传送数据或信号的一些技术或方法。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "超级用户（superuser）也称管理员帐户，是用于系统管理的特殊用户，实际名称因系统而异，如root、administrator与supervisor。",
          "qas": [
            {
              "question": "什么是超级用户？",
              "id": "3-163-74",
              "answers": [
                {
                  "text": "也被称为管理员帐户，在计算机操作系统领域中指一种用于进行系统管理的特殊用户，其在系统中的实际名称也因系统而异，如root、administrator与supervisor。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "目录（directory）是装有数字文件系统的虚拟容器，里面保存一组文件和其它目录。",
          "qas": [
            {
              "question": "什么是目录？",
              "id": "3-163-75",
              "answers": [
                {
                  "text": "在计算机或相关设备中，一个目录或文件夹就是一个装有数字文件系统的虚拟容器，在它里面保存着一组文件和其它一些目录。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "路径（path name）是电脑文件或目录名称的通用表现形式，指向文件系统上的唯一位置。",
          "qas": [
            {
              "question": "什么是路径？",
              "id": "3-163-76",
              "answers": [
                {
                  "text": "路径是一种电脑文件或目录的名称的通用表现形式，它指向文件系统上的一个唯一位置。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "根目录（root directory）是计算机系统中的顶层目录，如Windows中的C盘和D盘，Linux中的“/”。",
          "qas": [
            {
              "question": "什么是根目录？",
              "id": "3-163-77",
              "answers": [
                {
                  "text": "根目录指的就是计算机系统中的顶层目录，比如Windows中的C盘和D盘，Linux中的 `/`。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "工作目录（Working directory）是用户在操作系统内所在的目录，用户可在此用相对文件名访问文件。",
          "qas": [
            {
              "question": "什么是工作目录？",
              "id": "3-163-78",
              "answers": [
                {
                  "text": "它是一个计算机用语，用户在操作系统内所在的目录，用户可在此目录之下，用相对文件名访问文件。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "文件描述符（file descriptor）是表述指向文件的引用的抽象化概念。",
          "qas": [
            {
              "question": "什么是文件描述符？",
              "id": "3-163-79",
              "answers": [
                {
                  "text": "是计算机科学中的一个术语，是一个用于表述指向文件的引用的抽象化概念。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "inode是UNIX系统中包含每个文件详细信息的索引节点，如节点、所有者、文件、文件位置等。",
          "qas": [
            {
              "question": "什么是inode？",
              "id": "3-163-80",
              "answers": [
                {
                  "text": "索引节点的缩写，索引节点是UNIX系统中包含的信息，其中包含有关每个文件的详细信息，例如节点，所有者，文件，文件位置等。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "共享库（shared library）是包含目标代码的文件，执行过程中多个a.out文件可能同时使用该目标代码。",
          "qas": [
            {
              "question": "什么是共享库？",
              "id": "3-163-81",
              "answers": [
                {
                  "text": "共享库是一个包含目标代码的文件，执行过程中多个a.out文件可能会同时使用该目标代码。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "DLLs (Dynamic-Link Libraries)是微软公司在操作系统中实现共享函数库概念的方式，库函数扩展名是.DLL、.OCX或.DRV。",
          "qas": [
            {
              "question": "什么是DLLs？",
              "id": "3-163-82",
              "answers": [
                {
                  "text": "动态链接库，它是微软公司在操作系统中实现共享函数库概念的一种实现方式，这些库函数的扩展名是.DLL、.OCX（包含ActiveX控制的库）或者.DRV（旧式的系统驱动程序）。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "客户端（clients）是访问服务器提供的服务的计算机硬件或软件。",
          "qas": [
            {
              "question": "什么是客户端？",
              "id": "3-163-83",
              "answers": [
                {
                  "text": "客户端是访问服务器提供的服务的计算机硬件或软件。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "服务端（servers）是为其他程序或设备提供功能的计算机程序或设备。",
          "qas": [
            {
              "question": "什么是服务端？",
              "id": "3-163-84",
              "answers": [
                {
                  "text": "在计算中，服务器是为其他程序或设备提供功能的计算机程序或设备，称为服务端。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "主从架构（client-server）也称客户端/服务器架构、C/S架构，是区分客户端与服务器的网络架构，客户端实例可向服务器或应用程序服务器发出请求，有多种服务器类型。",
          "qas": [
            {
              "question": "什么是主从架构？",
              "id": "3-163-85",
              "answers": [
                {
                  "text": "主从式架构也称客户端/服务器架构、C/S架构，是一种网络架构，它把客户端与服务器区分开来，每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求，有很多不同类型的服务器，例如文件服务器、游戏服务器等。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "虚拟机（Virtual Machines）是特殊软件，在计算机平台和终端用户间创建环境，终端用户基于此环境操作其它软件。",
          "qas": [
            {
              "question": "什么是虚拟机？",
              "id": "3-163-86",
              "answers": [
                {
                  "text": "在计算机科学中的体系结构里，是指一种特殊的软件，可以在计算机平台和终端用户之间创建一种环境，而终端用户则是基于虚拟机这个软件所创建的环境来操作其它软件。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "Java虚拟机（Jaav virtual Machines）有完善的硬体架构，如处理器、堆栈、寄存器等，有相应指令系统，屏蔽与具体操作系统平台相关信息，使Java程序生成字节码可在多平台运行。",
          "qas": [
            {
              "question": "什么是Java虚拟机？",
              "id": "3-163-87",
              "answers": [
                {
                  "text": "Java虚拟机有自己完善的硬体架构，如处理器、堆栈、寄存器等，还具有相应的指令系统，JVM屏蔽了与具体操作系统平台相关的信息，使得Java程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "目标文件（object file）是包含目标代码的文件，是通常无法直接执行的可重定位格式的机器代码，有多种格式，可像共享库一样工作。",
          "qas": [
            {
              "question": "什么是目标文件？",
              "id": "3-163-88",
              "answers": [
                {
                  "text": "目标文件是包含目标代码的文件，这意味着通常无法直接执行的可重定位格式的机器代码，目标文件有多种格式，相同的目标代码可以打包在不同的目标文件中，目标文件也可以像共享库一样工作。",
                  "answer_start": 0
                }
              ]
            }
          ]
        },
        {
          "context": "C preprocessor是C语言、C++语言的预处理器，用于编译器处理程序前预扫描源代码，完成头文件包含、宏扩展、条件编译、行控制等操作。",
          "qas": [
            {
              "question": "什么是C preprocessor？",
              "id": "3-163-89",
              "answers": [
                {
                  "text": "C预处理器是C语言、C++语言的预处理器，用于在编译器处理程序之前预扫描源代码，完成头文件的包含, 宏扩展, 条件编译, 行控制等操作。",
                  "answer_start": 0
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}